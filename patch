diff --git a/.circleci/config.yml b/.circleci/config.yml
deleted file mode 100644
index d939463c7..000000000
--- a/.circleci/config.yml
+++ /dev/null
@@ -1,687 +0,0 @@
-version: 2.1
-
-orbs:
-  aws-s3: circleci/aws-s3@2.0.0
-  owasp: entur/owasp@0.0.10
-
-executors:
-  ubuntu:
-    working_directory: ~/mattermost/
-    resource_class: xlarge
-    machine:
-      image: "ubuntu-2004:202201-02"
-    environment:
-      COMPOSE_PROJECT_NAME: "circleci"
-
-jobs:
-  setup:
-    working_directory: ~/mattermost/mattermost-server
-    docker:
-      - image: mattermost/mattermost-build-webapp:20210524_node-16
-    resource_class: xlarge
-    # Use `--retry-all-errors` instead of `until` after curl version >= 7.71.0; `retry` will not work, since it only retries on transient errors, 403 is not one of them.
-    steps:
-      - checkout
-      - run: |
-          cd ../
-          git clone --depth=1 --no-single-branch https://github.com/mattermost/mattermost-webapp.git
-          cd mattermost-webapp
-          git checkout $CIRCLE_BRANCH || git checkout release-6.6
-          export WEBAPP_GIT_COMMIT=$(git rev-parse HEAD)
-          echo "$WEBAPP_GIT_COMMIT"
-
-          FILE_DIST=dist.tar.gz
-          curl --version
-
-          runtime="2 minute"
-          endtime=$(date -ud "$runtime" +%s)
-          while [[ $(date -u +%s) -le $endtime ]]; do
-              if curl --max-time 30 -f -o $FILE_DIST https://pr-builds.mattermost.com/mattermost-webapp/commit/$WEBAPP_GIT_COMMIT/mattermost-webapp.tar.gz; then
-                break
-              fi
-              echo "Waiting for webapp git commit $WEBAPP_GIT_COMMIT with sleep 5: `date +%H:%M:%S`"
-              sleep 5
-          done
-          ls -al
-          if tar -tzf $FILE_DIST >/dev/null; then
-            mkdir dist && tar -xvf $FILE_DIST -C dist --strip-components=1
-          else
-            npm ci && make build
-          fi
-          cd -
-      - persist_to_workspace:
-          root: ~/mattermost
-          paths:
-            - mattermost-webapp
-            - mattermost-server
-
-  check-deps:
-    parameters:
-      cve_data_directory:
-        type: string
-        default: "~/.owasp/dependency-check-data"
-    working_directory: ~/mattermost/mattermost-server
-    executor: owasp/default
-    environment:
-      version_url: "https://jeremylong.github.io/DependencyCheck/current.txt"
-      executable_url: "https://dl.bintray.com/jeremy-long/owasp/dependency-check-VERSION-release.zip"
-    steps:
-      - attach_workspace:
-          at: ~/mattermost/
-      - run:
-          name: Checkout config
-          command: cd .. && git clone --depth=1 https://github.com/mattermost/security-automation-config
-      - run:
-          name: Install Go
-          command: sudo apt-get update && sudo apt-get install golang
-      - owasp/with_commandline:
-          steps:
-            # Taken from https://github.com/entur/owasp-orb/blob/master/src/%40orb.yml#L349-L361
-            - owasp/generate_cache_keys:
-                cache_key: commmandline-default-cache-key-v7
-            - owasp/restore_owasp_cache
-            - run:
-                name: Update OWASP Dependency-Check Database
-                command: |
-                  if ! ~/.owasp/dependency-check/bin/dependency-check.sh --data << parameters.cve_data_directory >> --updateonly; then
-                    # Update failed, probably due to a bad DB version; delete cached DB and try again
-                    rm -rv ~/.owasp/dependency-check-data/*.db
-                    ~/.owasp/dependency-check/bin/dependency-check.sh --data << parameters.cve_data_directory >> --updateonly
-                  fi
-            - owasp/store_owasp_cache:
-                cve_data_directory: <<parameters.cve_data_directory>>
-            - run:
-                name: Run OWASP Dependency-Check Analyzer
-                command: |
-                  ~/.owasp/dependency-check/bin/dependency-check.sh \
-                    --data << parameters.cve_data_directory >> --format ALL --noupdate --enableExperimental \
-                    --propertyfile ../security-automation-config/dependency-check/dependencycheck.properties \
-                    --suppression ../security-automation-config/dependency-check/suppression.xml \
-                    --suppression ../security-automation-config/dependency-check/suppression.$CIRCLE_PROJECT_REPONAME.xml \
-                    --scan './**/*' || true
-            - owasp/collect_reports:
-                persist_to_workspace: false
-      - run:
-          name: Post results to Mattermost
-          command: go run ../security-automation-config/dependency-check/post_results.go
-
-  # TODO: enable this step when the i18n-extract works with mattermost-server only
-  # and not depend on both mm-server/enterprise
-  # check-i18n:
-  #   docker:
-  #   - image: circleci/golang:1.12
-  #   working_directory: ~/mattermost/
-  #   steps:
-  #     - attach_workspace:
-  #         at: ~/mattermost/
-  #     - run:
-  #         command: |
-  #           cd mattermost-server
-  #           cp i18n/en.json /tmp/en.json
-  #           make i18n-extract
-  #           diff /tmp/en.json i18n/en.json
-
-  check-app-layers:
-    docker:
-      - image: mattermost/mattermost-build-server:20210810_golang-1.16.7
-    working_directory: ~/mattermost
-    steps:
-      - attach_workspace:
-          at: ~/mattermost/
-      - run:
-          command: |
-            cd mattermost-server
-            make app-layers
-            if [[ -n $(git status --porcelain) ]]; then echo "Please update the app layers using make app-layers"; exit 1; fi
-
-  check-store-layers:
-    docker:
-      - image: mattermost/mattermost-build-server:20210810_golang-1.16.7
-    working_directory: ~/mattermost
-    steps:
-      - attach_workspace:
-          at: ~/mattermost/
-      - run:
-          command: |
-            cd mattermost-server
-            make store-layers
-            if [[ -n $(git status --porcelain) ]]; then echo "Please update the store layers using make store-layers"; exit 1; fi
-
-  check-mocks:
-    docker:
-      - image: mattermost/mattermost-build-server:20210810_golang-1.16.7
-    working_directory: ~/mattermost
-    steps:
-      - attach_workspace:
-          at: ~/mattermost/
-      - run:
-          command: |
-            cd mattermost-server
-            make einterfaces-mocks store-mocks
-            if [[ -n $(git status --porcelain) ]]; then echo "Please update the mocks using `make einterfaces-mocks store-mocks`"; exit 1; fi
-
-  check-email-templates:
-    docker:
-      - image: cimg/go:1.17-node
-    working_directory: ~/mattermost
-    steps:
-      - attach_workspace:
-          at: ~/mattermost/
-      - run:
-          command: |
-            cd mattermost-server
-            sudo npm install -g mjml@4.9.0
-            make build-templates
-            if [[ -n $(git status --porcelain) ]]; then echo "Please update the email templates using `make build-templates`"; exit 1; fi
-
-  check-gen-serialized:
-    docker:
-      - image: cimg/go:1.17
-    working_directory: ~/mattermost
-    steps:
-      - attach_workspace:
-          at: ~/mattermost/
-      - run:
-          command: |
-            cd mattermost-server
-            make gen-serialized
-            if [[ -n $(git status --porcelain) ]]; then echo "Please update the serialized files using 'make gen-serialized'"; exit 1; fi
-
-  # Dedicated job for golangci-lint it does not need anything only the server code for that
-  # and to make more clear when the job fails
-  check-golangci-lint:
-    docker:
-      # Keep the version in sync with the command in Makefile
-      - image: golangci/golangci-lint:v1.39.0
-    steps:
-      - checkout
-      - run:
-          command: make golangci-lint
-
-  # Dedicate job for mattermost-vet to make more clear when the job fails
-  check-mattermost-vet:
-    docker:
-      - image: mattermost/mattermost-build-server:20210810_golang-1.16.7
-    working_directory: ~/mattermost
-    steps:
-      - attach_workspace:
-          at: ~/mattermost/
-      - run:
-          command: |
-            export GOBIN=${PWD}/mattermost-server/bin
-            export PATH=$PATH:$GOBIN
-            cd mattermost-server
-            make config-reset
-            make plugin-checker
-            make vet BUILD_NUMBER='${CIRCLE_BRANCH}-${CIRCLE_BUILD_NUM}' MM_NO_ENTERPRISE_LINT=true MM_VET_OPENSPEC_PATH='${PWD}/../mattermost-api-reference/v4/html/static/mattermost-openapi-v4.yaml'
-
-  # Dedicate job for sentry it does not need anything only the server code for that
-  # and to make more clear when the job fails
-  sentry:
-    docker:
-      - image: getsentry/sentry-cli:1.64.1
-    steps:
-      - checkout
-      - run:
-          command: apk add git
-      - run:
-          command: |
-            sentry-cli --log-level=debug releases new  --finalize -p mattermost-server `git rev-parse HEAD`
-            sentry-cli --log-level=debug releases set-commits --auto `git rev-parse HEAD`
-
-  build-api-spec:
-    docker:
-      - image: circleci/node:lts
-    working_directory: ~/mattermost
-    steps:
-      - attach_workspace:
-          at: ~/mattermost/
-      - run:
-          command: |
-            git clone --depth=1 --no-single-branch https://github.com/mattermost/mattermost-api-reference.git
-            cd mattermost-api-reference
-            echo "Trying to checkout the same branch on mattermost-api-reference as mattermost-server"
-            git checkout ${CIRCLE_BRANCH} || true
-            make build
-      - persist_to_workspace:
-          root: ~/mattermost
-          paths:
-            - mattermost-api-reference
-
-  build:
-    docker:
-      - image: mattermost/mattermost-build-server:20210810_golang-1.16.7
-    resource_class: xlarge
-    working_directory: ~/mattermost
-    steps:
-      - attach_workspace:
-          at: ~/mattermost/
-      - run:
-          command: |
-            cd mattermost-server
-            make config-reset
-            make build-cmd BUILD_NUMBER='${CIRCLE_BRANCH}-${CIRCLE_BUILD_NUM}'
-            make package BUILD_NUMBER='${CIRCLE_BRANCH}-${CIRCLE_BUILD_NUM}'
-      - store_artifacts:
-          path: ~/mattermost/mattermost-server/dist/mattermost-team-linux-amd64.tar.gz
-      - store_artifacts:
-          path: ~/mattermost/mattermost-server/dist/mattermost-team-osx-amd64.tar.gz
-      - store_artifacts:
-          path: ~/mattermost/mattermost-server/dist/mattermost-team-linux-arm64.tar.gz
-      - store_artifacts:
-          path: ~/mattermost/mattermost-server/dist/mattermost-team-osx-arm64.tar.gz
-      - store_artifacts:
-          path: ~/mattermost/mattermost-server/dist/mattermost-team-windows-amd64.zip
-      - persist_to_workspace:
-          root: ~/mattermost
-          paths:
-            - mattermost-server
-            - mattermost-webapp
-
-  test:
-    executor:
-      name: ubuntu
-    parameters:
-      dbdriver:
-        type: string
-      dbsource:
-        type: string
-      racemode:
-        type: string
-    steps:
-      - attach_workspace:
-          at: ~/mattermost
-      - run:
-          name: Run Docker compose
-          command: |
-            cd mattermost-server/build
-            docker-compose --no-ansi run --rm start_dependencies
-            cat ../tests/test-data.ldif | docker-compose --no-ansi exec -T openldap bash -c 'ldapadd -x -D "cn=admin,dc=mm,dc=test,dc=com" -w mostest';
-            docker-compose --no-ansi exec -T minio sh -c 'mkdir -p /data/mattermost-test';
-            docker-compose --no-ansi ps
-          background: true
-      - run:
-          name: Wait for docker compose
-          command: |
-            until docker network inspect circleci_mm-test; do echo "Waiting for Docker Compose Network..."; sleep 1; done;
-            docker run --net circleci_mm-test appropriate/curl:latest sh -c "until curl --max-time 5 --output - http://mysql:3306; do echo waiting for mysql; sleep 5; done;"
-            docker run --net circleci_mm-test appropriate/curl:latest sh -c "until curl --max-time 5 --output - http://elasticsearch:9200; do echo waiting for elasticsearch; sleep 5; done;"
-      - run:
-          name: Run Tests
-          command: |
-            mkdir -p mattermost-server/client/plugins
-            cd mattermost-server/build
-            docker run -it --net circleci_mm-test \
-              --env-file=dotenv/test.env \
-              --env MM_SQLSETTINGS_DATASOURCE="<<parameters.dbsource>>" \
-              --env MM_SQLSETTINGS_DRIVERNAME=<<parameters.dbdriver>> \
-              -v ~/mattermost:/mattermost \
-              -w /mattermost/mattermost-server \
-              mattermost/mattermost-build-server:20210810_golang-1.16.7 \
-              bash -c "ulimit -n 8096; make test-server<< parameters.racemode >> BUILD_NUMBER=$CIRCLE_BRANCH-$CIRCLE_PREVIOUS_BUILD_NUM TESTFLAGS= TESTFLAGSEE=" \
-              bash -c scripts/diff-email-templates.sh
-          no_output_timeout: 2h
-      - run:
-          name: Capture docker logs
-          when: always
-          command: |
-            cd mattermost-server/build
-            # Capture docker logs
-            mkdir -p logs
-            docker-compose logs --tail="all" -t --no-color > logs/docker-compose_logs
-            docker ps -a --no-trunc > logs/docker_ps
-            docker stats -a --no-stream > logs/docker_stats
-            tar -czvf logs/docker_logs.tar.gz logs/docker-compose_logs logs/docker_ps logs/docker_stats
-      - store_artifacts:
-          path: ~/mattermost/mattermost-server/build/logs
-      - run:
-          when: always
-          command: |
-            cd mattermost-server
-            mkdir -p test-results
-            cp report.xml test-results
-      - store_test_results:
-          path: ~/mattermost/mattermost-server/test-results/
-      - store_artifacts:
-          path: ~/mattermost/mattermost-server/test-results/
-
-  test-schema:
-    executor:
-      name: ubuntu
-    steps:
-      - attach_workspace:
-          at: ~/mattermost
-      - run:
-          name: Run Docker compose
-          command: |
-            cd mattermost-server/build
-            docker-compose --no-ansi run --rm start_dependencies
-            cat ../tests/test-data.ldif | docker-compose --no-ansi exec -T openldap bash -c 'ldapadd -x -D "cn=admin,dc=mm,dc=test,dc=com" -w mostest';
-            docker-compose --no-ansi exec -T minio sh -c 'mkdir -p /data/mattermost-test';
-            docker-compose --no-ansi ps
-          background: true
-      - run:
-          name: Wait for docker compose
-          command: |
-            until docker network inspect circleci_mm-test; do echo "Waiting for Docker Compose Network..."; sleep 1; done;
-            docker run --net circleci_mm-test appropriate/curl:latest sh -c "until curl --max-time 5 --output - http://mysql:3306; do echo waiting for mysql; sleep 5; done;"
-            docker run --net circleci_mm-test appropriate/curl:latest sh -c "until curl --max-time 5 --output - http://elasticsearch:9200; do echo waiting for elasticsearch; sleep 5; done;"
-      - run:
-          name: Postgres schema migration validation
-          command: |
-            cd mattermost-server/build
-            mkdir -p mattermost-server/client/plugins
-            echo "Creating databases"
-            docker-compose --no-ansi exec -T postgres sh -c 'exec echo "CREATE DATABASE migrated; CREATE DATABASE latest;" | exec psql -U mmuser mattermost_test'
-            echo "Importing postgres dump from version 6.0.0"
-            docker-compose --no-ansi exec -T postgres psql -U mmuser -d migrated < ../scripts/mattermost-postgresql-6.0.0.sql
-            docker-compose --no-ansi exec -T postgres psql -U mmuser -d migrated -c "INSERT INTO Systems (Name, Value) VALUES ('Version', '6.0.0')"
-            docker run -it --net circleci_mm-test \
-              --env-file="dotenv/test-schema-validation.env" \
-              --env MM_SQLSETTINGS_DATASOURCE="postgres://mmuser:mostest@postgres:5432/migrated?sslmode=disable&connect_timeout=10" \
-              --env MM_SQLSETTINGS_DRIVERNAME=postgres \
-              -v ~/mattermost:/mattermost \
-              -w /mattermost/mattermost-server \
-              mattermost/mattermost-build-server:20210810_golang-1.16.7 \
-              bash -c "ulimit -n 8096; make ARGS='db migrate' run-cli && make MM_SQLSETTINGS_DATASOURCE='postgres://mmuser:mostest@postgres:5432/latest?sslmode=disable&connect_timeout=10' ARGS='db migrate' run-cli"
-
-            echo "Generating dump"
-            docker-compose --no-ansi exec -T postgres pg_dump --schema-only -d migrated -U mmuser > migrated.sql
-            docker-compose --no-ansi exec -T postgres pg_dump --schema-only -d latest -U mmuser > latest.sql
-            echo "Removing databases created for db comparison"
-            docker-compose --no-ansi exec -T postgres sh -c 'exec echo "DROP DATABASE migrated; DROP DATABASE latest;" | exec psql -U mmuser mattermost_test'
-
-            echo "Generating diff"
-            diff migrated.sql latest.sql > diff.txt && echo "Both schemas are same" || (echo "Schema mismatch" && cat diff.txt && exit 1)
-          no_output_timeout: 1h
-      - run:
-          name: MySQL schema migration validation
-          command: |
-            cd mattermost-server/build
-            mkdir -p mattermost-server/client/plugins
-            echo "Creating databases"
-            docker-compose --no-ansi exec -T mysql mysql -uroot -pmostest -e "CREATE DATABASE migrated; CREATE DATABASE latest; GRANT ALL PRIVILEGES ON migrated.* TO mmuser; GRANT ALL PRIVILEGES ON latest.* TO mmuser"
-            echo "Importing mysql dump from version 6.0.0"
-            docker-compose --no-ansi exec -T mysql mysql -D migrated -uroot -pmostest < ../scripts/mattermost-mysql-6.0.0.sql
-            docker-compose --no-ansi exec -T mysql mysql -D migrated -uroot -pmostest -e "INSERT INTO Systems (Name, Value) VALUES ('Version', '6.0.0')"
-
-            docker run -it --net circleci_mm-test \
-              --env-file="dotenv/test-schema-validation.env" \
-              --env MM_SQLSETTINGS_DATASOURCE="mmuser:mostest@tcp(mysql:3306)/migrated?charset=utf8mb4,utf8&readTimeout=30s&writeTimeout=30s" \
-              --env MM_SQLSETTINGS_DRIVERNAME=mysql \
-              -v ~/mattermost:/mattermost \
-              -w /mattermost/mattermost-server \
-              mattermost/mattermost-build-server:20210810_golang-1.16.7 \
-              bash -c "ulimit -n 8096; make ARGS='db migrate' run-cli && make MM_SQLSETTINGS_DATASOURCE='mmuser:mostest@tcp(mysql:3306)/latest?charset=utf8mb4,utf8&readTimeout=30s&writeTimeout=30s' ARGS='db migrate' run-cli"
-
-            echo "Generating dump"
-            docker-compose --no-ansi exec -T mysql mysqldump --skip-opt --no-data --compact -u root -pmostest migrated > migrated.sql
-            docker-compose --no-ansi exec -T mysql mysqldump --skip-opt --no-data --compact -u root -pmostest latest > latest.sql
-
-            echo "Removing databases created for db comparison"
-            docker-compose --no-ansi exec -T mysql mysql -uroot -pmostest -e 'DROP DATABASE migrated; DROP DATABASE latest'
-
-            echo "Generating diff"
-            diff migrated.sql latest.sql > diff.txt && echo "Both schemas are same" || (echo "Schema mismatch" && cat diff.txt && exit 1)
-          no_output_timeout: 1h
-
-  upload-s3-sha:
-    docker:
-      - image: circleci/python:3.6
-    working_directory: ~/mattermost/enterprise
-    steps:
-      - attach_workspace:
-          at: ~/mattermost/
-      - run:
-          command: |
-            cd ~/mattermost/mattermost-server/dist/
-            rm -rf mattermost
-      - aws-s3/copy:
-          from: ~/mattermost/mattermost-server/dist/
-          to: "s3://pr-builds.mattermost.com/mattermost-server/commit/${CIRCLE_SHA1}/"
-          arguments: --acl public-read --cache-control "no-cache" --recursive
-
-  upload-s3:
-    docker:
-      - image: circleci/python:3.6
-    working_directory: ~/mattermost/enterprise
-    steps:
-      - attach_workspace:
-          at: ~/mattermost/
-      - run:
-          command: |
-            cd ~/mattermost/mattermost-server/dist/
-            rm -rf mattermost
-      - aws-s3/copy:
-          from: ~/mattermost/mattermost-server/dist/
-          to: s3://pr-builds.mattermost.com/mattermost-server/$(echo "${CIRCLE_BRANCH}" | sed 's/pull\//PR-/g')/
-          arguments: --acl public-read --cache-control "no-cache" --recursive
-
-  build-docker:
-    working_directory: ~/
-    docker:
-      - image: cimg/base:stable
-    steps:
-      - attach_workspace:
-          at: .
-      - setup_remote_docker:
-          version: 20.10.7
-      - run:
-          command: |
-            export TAG="${CIRCLE_SHA1:0:7}"
-
-            cd mattermost-server
-
-            export DOCKER_CLI_EXPERIMENTAL=enabled
-            echo $DOCKER_PASSWORD | docker login --username $DOCKER_USERNAME --password-stdin
-            export MM_PACKAGE=https://pr-builds.mattermost.com/mattermost-server/commit/${CIRCLE_SHA1}/mattermost-team-linux-amd64.tar.gz
-            docker buildx build --push --build-arg MM_PACKAGE=$MM_PACKAGE -t mattermost/mm-te-test:${TAG} build
-
-workflows:
-  version: 2
-  untagged-build:
-    jobs:
-      - setup:
-          filters:
-            branches:
-              ignore:
-                - master
-                - /^release-.*/
-      # Disabling check-deps since the new version is not on bintray and all builds will fail
-      # we've are on top of this, and it's going to be temporary.
-      #- check-deps:
-      #     context: sast-webhook
-      #    requires:
-      #      - setup
-      # - check-i18n:
-      #     requires:
-      #       - setup
-      - check-golangci-lint:
-          filters:
-            branches:
-              ignore:
-                - master
-                - /^release-.*/
-      - check-app-layers:
-          requires:
-            - setup
-      - check-store-layers:
-          requires:
-            - setup
-      - check-mocks:
-          requires:
-            - setup
-      - check-email-templates:
-          requires:
-            - setup
-      - check-gen-serialized:
-          requires:
-            - setup
-      - check-mattermost-vet:
-          requires:
-            - setup
-      - build-api-spec:
-          requires:
-            - setup
-      - build:
-          requires:
-            - check-app-layers
-            - check-store-layers
-            - check-mocks
-            - check-email-templates
-            - check-gen-serialized
-            - check-mattermost-vet
-            - check-golangci-lint
-            - build-api-spec
-      - upload-s3-sha:
-          context: mattermost-ci-pr-builds-s3
-          requires:
-            - build
-      - upload-s3:
-          context: mattermost-ci-pr-builds-s3
-          requires:
-            - build
-      - build-docker:
-          context: matterbuild-docker
-          requires:
-            - upload-s3-sha
-      - test:
-          name: test-mysql
-          dbdriver: mysql
-          dbsource: mmuser:mostest@tcp(mysql:3306)/mattermost_test?charset=utf8mb4,utf8&multiStatements=true
-          racemode: ""
-          requires:
-            - check-app-layers
-            - check-store-layers
-            - check-mocks
-            - check-email-templates
-            - check-gen-serialized
-      - test:
-          name: test-postgres-normal
-          dbdriver: postgres
-          dbsource: postgres://mmuser:mostest@postgres:5432/mattermost_test?sslmode=disable&connect_timeout=10
-          racemode: ""
-          requires:
-            - check-app-layers
-            - check-store-layers
-            - check-mocks
-            - check-email-templates
-            - check-gen-serialized
-      - test:
-          name: test-postgres-binary
-          dbdriver: postgres
-          dbsource: postgres://mmuser:mostest@postgres:5432/mattermost_test?sslmode=disable&connect_timeout=10&binary_parameters=yes
-          racemode: ""
-          requires:
-            - check-app-layers
-            - check-store-layers
-            - check-mocks
-            - check-email-templates
-            - check-gen-serialized
-      - test-schema:
-          requires:
-            - check-app-layers
-            - check-store-layers
-            - check-mocks
-            - check-email-templates
-            - check-gen-serialized
-  release-build:
-    jobs:
-      - setup:
-          filters:
-            branches:
-              only:
-                - master
-                - /^release-.*/
-                - cloud
-      # Disabling check-deps since the new version is not on bintray and all builds will fail
-      # we've are on top of this, and it's going to be temporary.
-      #- check-deps:
-      #    context: sast-webhook
-      #    requires:
-      #      - setup
-      # - check-i18n:
-      #     requires:
-      #       - setup
-      - check-golangci-lint:
-          filters:
-            branches:
-              only:
-                - master
-                - /^release-.*/
-                - cloud
-      - check-app-layers:
-          requires:
-            - setup
-      - check-store-layers:
-          requires:
-            - setup
-      - build-api-spec:
-          requires:
-            - setup
-      - check-mocks:
-          requires:
-            - setup
-      - check-email-templates:
-          requires:
-            - setup
-      - check-gen-serialized:
-          requires:
-            - setup
-      - check-mattermost-vet:
-          requires:
-            - setup
-      - sentry:
-          context: matterbuild-sentry
-          requires:
-            - check-app-layers
-            - check-store-layers
-            - check-mocks
-            - check-email-templates
-            - check-gen-serialized
-            - check-mattermost-vet
-            - check-golangci-lint
-            - build-api-spec
-      - build:
-          requires:
-            - check-app-layers
-            - check-store-layers
-            - check-mocks
-            - check-email-templates
-            - check-gen-serialized
-            - check-mattermost-vet
-            - build-api-spec
-      - test:
-          name: test-mysql
-          dbdriver: mysql
-          dbsource: mmuser:mostest@tcp(mysql:3306)/mattermost_test?charset=utf8mb4,utf8&multiStatements=true
-          racemode: "-race"
-          requires:
-            - check-app-layers
-            - check-store-layers
-            - check-mocks
-            - check-email-templates
-            - check-gen-serialized
-      - test:
-          name: test-postgres-normal
-          dbdriver: postgres
-          dbsource: postgres://mmuser:mostest@postgres:5432/mattermost_test?sslmode=disable&connect_timeout=10
-          racemode: "-race"
-          requires:
-            - check-app-layers
-            - check-store-layers
-            - check-mocks
-            - check-email-templates
-            - check-gen-serialized
-      - test:
-          name: test-postgres-binary
-          dbdriver: postgres
-          dbsource: postgres://mmuser:mostest@postgres:5432/mattermost_test?sslmode=disable&connect_timeout=10&binary_parameters=yes
-          racemode: ""
-          requires:
-            - check-app-layers
-            - check-store-layers
-            - check-mocks
-            - check-email-templates
-            - check-gen-serialized
-      # test-schema for master run in .gitlab-ci.yml
diff --git a/.codecov.yml b/.codecov.yml
deleted file mode 100644
index 4eb6df603..000000000
--- a/.codecov.yml
+++ /dev/null
@@ -1,7 +0,0 @@
-comment:
-  layout: "diff, flags, files"
-  require_changes: true
-  branches: "!release*"
-
-ignore:
-  - store/storetest
diff --git a/.github/ISSUE_TEMPLATE.md b/.github/ISSUE_TEMPLATE.md
deleted file mode 100644
index eeec0cb2f..000000000
--- a/.github/ISSUE_TEMPLATE.md
+++ /dev/null
@@ -1,25 +0,0 @@
-Per Mattermost guidelines, GitHub issues are for bug reports: <https://handbook.mattermost.com/contributors/contributors/ways-to-contribute/>.
-
-For troubleshooting see: https://forum.mattermost.com/.
-For feature proposals see: https://www.mattermost.com/feature-ideas/
-
-If you've found a bug--something appears unintentional--please follow these steps:
-
-1. Confirm you’re filing a new issue. [Search existing tickets in Jira](https://mattermost.atlassian.net/jira/software/c/projects/MM/issues/) to ensure that the ticket does not already exist.
-2. Confirm your issue does not involve security. Otherwise, please see our [Responsible Disclosure Policy](https://mattermost.com/security-vulnerability-report/).
-3. [File a new issue](https://github.com/mattermost/mattermost-server/issues/new) using the format below. Mattermost will confirm steps to reproduce and file in Jira, or ask for more details if there is trouble reproducing it. If there's already an existing bug in Jira, it will be linked back to the GitHub issue so you can track when it gets fixed. 
-
-#### Summary
-Bug report in one concise sentence
-
-#### Steps to reproduce
-How can we reproduce the issue (what version are you using?)
-
-#### Expected behavior
-Describe your issue in detail
-
-#### Observed behavior (that appears unintentional) 
-What did you see happen? Please include relevant error messages and/or screenshots.
-
-#### Possible fixes
-If you can, link to the line of code that might be responsible for the problem
diff --git a/.github/PULL_REQUEST_TEMPLATE.md b/.github/PULL_REQUEST_TEMPLATE.md
deleted file mode 100644
index 09cd0f7cb..000000000
--- a/.github/PULL_REQUEST_TEMPLATE.md
+++ /dev/null
@@ -1,53 +0,0 @@
-<!-- Thank you for contributing a pull request! Here are a few tips to help you:
-
-1. If this is your first contribution, make sure you've read the Contribution Checklist https://developers.mattermost.com/contribute/getting-started/contribution-checklist/
-2. Read our blog post about "Submitting Great PRs" https://developers.mattermost.com/blog/2019-01-24-submitting-great-prs
-3. Take a look at other repository specific documentation at https://developers.mattermost.com/contribute
--->
-
-#### Summary
-<!--
-A description of what this pull request does, as well as QA test steps (if applicable and if not already added to the Jira ticket).
--->
-
-#### Ticket Link
-<!--
-If this pull request addresses a Help Wanted ticket, please link the relevant GitHub issue, e.g.
-
-  Fixes https://github.com/mattermost/mattermost-server/issues/XXXXX
-
-Otherwise, link the JIRA ticket.
--->
-
-#### Release Note
-<!--
-Add a release note for each of the following conditions:
-
-* Config changes (additions, deletions, updates)
-* API additions—new endpoint, new response fields, or newly accepted request parameters
-* Database changes (any)
-* Websocket additions or changes
-* Anything noteworthy to a Mattermost instance administrator (err on the side of over-communicating)
-* New features and improvements, including behavioural changes, UI changes and CLI changes
-* Bug fixes and fixes of previous known issues
-* Deprecation warnings, breaking changes, or compatibility notes
-
-If no release notes are required write NONE. Use past-tense. Newlines are stripped.
-
-Examples:
-
-```
-Added new API endpoints POST /api/v4/foo, GET api/v4/foo, and GET api/v4/foo/:foo_id.
-```
-
-```
-Added a new config setting ServiceSettings.FooBar. Added a new column Foo to the Users table.
-```
-
-```
-NONE
-```
--->
-```release-note
-
-```
diff --git a/.github/workflows/codeql-analysis.yml b/.github/workflows/codeql-analysis.yml
deleted file mode 100644
index 4322d631d..000000000
--- a/.github/workflows/codeql-analysis.yml
+++ /dev/null
@@ -1,32 +0,0 @@
-name: "CodeQL"
-
-on:
-  push:
-    branches: [ master ]
-  pull_request:
-    # The branches below must be a subset of the branches above
-    branches: [ master ]
-  schedule:
-    - cron: '0 0 * * 0'
-
-jobs:
-  analyze:
-    name: Analyze
-    runs-on: ubuntu-latest
-
-    strategy:
-      fail-fast: false
-      matrix:
-        language: [ 'go', 'javascript' ]
-
-    steps:
-    - name: Checkout repository
-      uses: actions/checkout@v2
-    - name: Initialize CodeQL
-      uses: github/codeql-action/init@v1
-      with:
-        languages: ${{ matrix.language }}
-    - name: Autobuild
-      uses: github/codeql-action/autobuild@v1
-    - name: Perform CodeQL Analysis
-      uses: github/codeql-action/analyze@v1
diff --git a/.gitignore b/.gitignore
index 65069767d..5482aca78 100644
--- a/.gitignore
+++ b/.gitignore
@@ -8,8 +8,8 @@ node_modules
 jobserver
 npm-debug.log
 webapp/yarn-error.log
-mattermost.mattermost-license
-config/mattermost.mattermost-license
+matterfoss.matterfoss-license
+config/matterfoss.matterfoss-license
 config/config.json
 config/*.crt
 
@@ -27,7 +27,7 @@ imports/imports.go
 
 #license files
 *.license
-*.mattermost-license
+*.matterfoss-license
 
 # Build Targets
 .prebuild
@@ -84,7 +84,7 @@ Session.vim
 *.code-workspace
 
 # Gogland project files
-mattermost-server.iml
+matterfoss-server.iml
 
 # Build files
 *bundle.js
diff --git a/.gitlab-ci.yml b/.gitlab-ci.yml
deleted file mode 100644
index 64cf2e579..000000000
--- a/.gitlab-ci.yml
+++ /dev/null
@@ -1,159 +0,0 @@
-stages:
-  - test
-  - build
-  - publish
-  - create-vars
-  - trigger-build-ee
-
-include:
-  - project: mattermost/ci/mattermost-server
-    ref: release-6.6
-    file: private.yml
-
-variables:
-  BUILD: "yes"
-  IMAGE_BUILD_SERVER: $CI_REGISTRY/mattermost/ci/images/mattermost-build-server:20210810_golang-1.16.7
-  IMAGE_BUILD_DOCKER: $CI_REGISTRY/mattermost/ci/images/mattermost-build-docker:19.03.14-1
-  IMAGE_DIND: $CI_REGISTRY/mattermost/ci/images/docker-dind:19.03.14-1
-
-empty:
-  stage: create-vars
-  script:
-    - echo "empty"
-
-.lint: # Commenting this job, because it is run in CircleCI
-  image: $CI_REGISTRY/mattermost/ci/images/golangci-lint:v1.39.0-1
-  stage: test
-  script:
-    - make config-reset
-    - make check-style #todo MM_VET_OPENSPEC_PATH='$CI_PROJECT_DIR/mattermost-api-reference/v4/html/static/mattermost-openapi-v4.yaml'
-  timeout: 60 mins
-  rules:
-    - if: '$CI_COMMIT_REF_NAME == "master"'
-
-.layers: # Commenting this job, because it is run in CircleCI
-  image: $IMAGE_BUILD_SERVER
-  stage: test
-  script:
-    - make store-layers
-    - if [[ -n $(git status --porcelain) ]]; then echo "Please update the store layers using make store-layers"; exit 1; fi
-    - git reset --hard
-    - make app-layers
-    - if [[ -n $(git status --porcelain) ]]; then echo "Please update the app layers using make app-layers"; exit 1; fi
-    - git reset --hard
-  rules:
-    - if: '$CI_COMMIT_REF_NAME == "master"'
-
-.test-mysql: # Commenting this job, because it is run in CircleCI
-  stage: test
-  image: $IMAGE_BUILD_DOCKER
-  services:
-    - name: $IMAGE_DIND
-      alias: docker
-  variables:
-    DOCKER_TLS_CERTDIR: ""
-    DOCKER_HOST: tcp://docker:2375
-    DOCKER_DRIVER: overlay2
-    DOCKER_CONTENT_TRUST: 0
-    DOCKER_CONTENT_TRUST_REPOSITORY_PASSPHRASE: ""
-  before_script:
-    - docker login ${CI_REGISTRY} --username ${CI_REGISTRY_USER} --password ${CI_REGISTRY_PASSWORD}
-  script:
-    - export COMPOSE_PROJECT_NAME="${CI_PIPELINE_IID}mysql"
-    - export RACE_MODE=""
-    - time cat .gitlab-ci/scripts/test/mysql.sh | /bin/bash
-  artifacts:
-    when: always
-    reports:
-      junit: report.xml
-    paths:
-      - build/logs
-  timeout: 2 hours
-  tags:
-    - k8s-memory
-  rules:
-    - if: '$CI_COMMIT_REF_NAME == "master"'
-
-.test-postgres: # Commenting this job, because it is run in CircleCI
-  stage: test
-  image: $IMAGE_BUILD_DOCKER
-  services:
-    - name: $IMAGE_DIND
-      alias: docker
-  variables:
-    DOCKER_TLS_CERTDIR: ""
-    DOCKER_HOST: tcp://docker:2375
-    DOCKER_DRIVER: overlay2
-    DOCKER_CONTENT_TRUST: 0
-    DOCKER_CONTENT_TRUST_REPOSITORY_PASSPHRASE: ""
-  before_script:
-    - docker login ${CI_REGISTRY} --username ${CI_REGISTRY_USER} --password ${CI_REGISTRY_PASSWORD}
-  script:
-    - export COMPOSE_PROJECT_NAME="${CI_PIPELINE_IID}postgres"
-    - export RACE_MODE=""
-    - time cat .gitlab-ci/scripts/test/postgres.sh | /bin/bash
-  artifacts:
-    when: always
-    reports:
-      junit: report.xml
-    paths:
-      - build/logs
-  timeout: 2 hours
-  tags:
-    - k8s-memory
-  rules:
-    - if: '$CI_COMMIT_REF_NAME == "master"'
-
-test-schema-mysql:
-  stage: test
-  image: $IMAGE_BUILD_DOCKER
-  services:
-    - name: $IMAGE_DIND
-      alias: docker
-  variables:
-    DOCKER_TLS_CERTDIR: ""
-    DOCKER_HOST: tcp://docker:2375
-    DOCKER_DRIVER: overlay2
-    DOCKER_CONTENT_TRUST: 0
-    DOCKER_CONTENT_TRUST_REPOSITORY_PASSPHRASE: ""
-  before_script:
-    - docker login ${CI_REGISTRY} --username ${CI_REGISTRY_USER} --password ${CI_REGISTRY_PASSWORD}
-  script:
-    - export COMPOSE_PROJECT_NAME="${CI_PIPELINE_IID}schemamysql"
-    - time cat .gitlab-ci/scripts/test-schema/mysql.sh | /bin/bash
-  artifacts:
-    paths:
-      - build/logs
-  tags:
-    - k8s-memory
-  rules:
-    - if: '$CI_COMMIT_REF_NAME == "master"'
-    - if: '$CI_COMMIT_REF_NAME == "cloud"'
-    - if: '$CI_COMMIT_REF_NAME =~ /^release-/'
-
-test-schema-postgres:
-  stage: test
-  image: $IMAGE_BUILD_DOCKER
-  services:
-    - name: $IMAGE_DIND
-      alias: docker
-  variables:
-    DOCKER_TLS_CERTDIR: ""
-    DOCKER_HOST: tcp://docker:2375
-    DOCKER_DRIVER: overlay2
-    DOCKER_CONTENT_TRUST: 0
-    DOCKER_CONTENT_TRUST_REPOSITORY_PASSPHRASE: ""
-  before_script:
-    - docker login ${CI_REGISTRY} --username ${CI_REGISTRY_USER} --password ${CI_REGISTRY_PASSWORD}
-  script:
-    - export COMPOSE_PROJECT_NAME="${CI_PIPELINE_IID}schemapostgres"
-    - time cat .gitlab-ci/scripts/test-schema/postgres.sh | /bin/bash
-  artifacts:
-    paths:
-      - build/logs
-  tags:
-    - k8s-memory
-  rules:
-    - if: '$CI_COMMIT_REF_NAME == "master"'
-    - if: '$CI_COMMIT_REF_NAME == "cloud"'
-    - if: '$CI_COMMIT_REF_NAME =~ /^release-/'
diff --git a/.golangci.yml b/.golangci.yml
deleted file mode 100644
index f87c7ce49..000000000
--- a/.golangci.yml
+++ /dev/null
@@ -1,50 +0,0 @@
-run:
-  timeout: 5m
-  modules-download-mode: vendor
-  skip-dirs:
-    - store/storetest/mocks
-
-linters-settings:
-  gofmt:
-    simplify: true
-  govet:
-    check-shadowing: true
-    enable-all: true
-    disable:
-      - fieldalignment
-
-linters:
-  disable-all: true
-  enable:
-    - deadcode
-    - gofmt
-    - golint
-    - gosimple
-    - govet
-    - ineffassign
-    - exportloopref
-    - structcheck
-    - staticcheck
-    - unconvert
-    - unused
-    - varcheck
-    - misspell
-    - goimports
-    # TODO: enable this later
-    # - errcheck
-
-issues:
-  exclude-rules:
-    - linters:
-      # ignore unused warnings from enterprise code
-      # add more as required.
-      - unused
-      text: "SetupEnterprise"
-
-    - linters:
-      - golint
-      text: "should have|should be|should replace|stutters|underscore|annoying|error strings should not be capitalized"
-
-    - linters:
-      - misspell
-      path: "shared/markdown/html_entities.go"
diff --git a/CHANGELOG.md b/CHANGELOG.md
deleted file mode 100644
index b8b904efe..000000000
--- a/CHANGELOG.md
+++ /dev/null
@@ -1,3 +0,0 @@
-# Mattermost Changelog
-
-Please see [Mattermost Changelog](http://docs.mattermost.com/administration/changelog.html) in product documentation.
diff --git a/CODEOWNERS b/CODEOWNERS
deleted file mode 100644
index 39d5e668b..000000000
--- a/CODEOWNERS
+++ /dev/null
@@ -1 +0,0 @@
-/plugin/ @mattermost/toolkit
diff --git a/CONTRIBUTING.md b/CONTRIBUTING.md
deleted file mode 100644
index 4b614781f..000000000
--- a/CONTRIBUTING.md
+++ /dev/null
@@ -1,5 +0,0 @@
-# Code Contribution Guidelines
-
-Thank you for your interest in contributing! Please see the [Mattermost Contribution Guide](https://developers.mattermost.com/contribute/getting-started/) which describes the process for making code contributions across Mattermost projects and [join our "Contributors" community channel](https://community.mattermost.com/core/channels/tickets) to ask questions from community members and the Mattermost core team.
-
-When you submit a pull request, it goes through a [code review process outlined here](https://developers.mattermost.com/contribute/getting-started/code-review/).
diff --git a/Makefile b/Makefile
index 099d595eb..c7194afe6 100644
--- a/Makefile
+++ b/Makefile
@@ -81,11 +81,11 @@ GOFLAGS ?= $(GOFLAGS:)
 export GOBIN ?= $(PWD)/bin
 GO=go
 DELVE=dlv
-LDFLAGS += -X "github.com/mattermost/mattermost-server/v6/model.BuildNumber=$(BUILD_NUMBER)"
-LDFLAGS += -X "github.com/mattermost/mattermost-server/v6/model.BuildDate=$(BUILD_DATE)"
-LDFLAGS += -X "github.com/mattermost/mattermost-server/v6/model.BuildHash=$(BUILD_HASH)"
-LDFLAGS += -X "github.com/mattermost/mattermost-server/v6/model.BuildHashEnterprise=$(BUILD_HASH_ENTERPRISE)"
-LDFLAGS += -X "github.com/mattermost/mattermost-server/v6/model.BuildEnterpriseReady=$(BUILD_ENTERPRISE_READY)"
+LDFLAGS += -X "github.com/cjdelisle/matterfoss-server/v6/model.BuildNumber=$(BUILD_NUMBER)"
+LDFLAGS += -X "github.com/cjdelisle/matterfoss-server/v6/model.BuildDate=$(BUILD_DATE)"
+LDFLAGS += -X "github.com/cjdelisle/matterfoss-server/v6/model.BuildHash=$(BUILD_HASH)"
+LDFLAGS += -X "github.com/cjdelisle/matterfoss-server/v6/model.BuildHashEnterprise=$(BUILD_HASH_ENTERPRISE)"
+LDFLAGS += -X "github.com/cjdelisle/matterfoss-server/v6/model.BuildEnterpriseReady=$(BUILD_ENTERPRISE_READY)"
 
 GO_MAJOR_VERSION = $(shell $(GO) version | cut -c 14- | cut -d' ' -f1 | cut -d'.' -f1)
 GO_MINOR_VERSION = $(shell $(GO) version | cut -c 14- | cut -d' ' -f1 | cut -d'.' -f2)
@@ -158,7 +158,7 @@ all: run ## Alias for 'run'.
 include config.mk
 include build/*.mk
 
-LDFLAGS += -X "github.com/mattermost/mattermost-server/v6/model.MockCWS=$(MM_ENABLE_CWS_MOCK)"
+LDFLAGS += -X "github.com/cjdelisle/matterfoss-server/v6/model.MockCWS=$(MM_ENABLE_CWS_MOCK)"
 
 RUN_IN_BACKGROUND ?=
 ifeq ($(RUN_SERVER_IN_BACKGROUND),true)
@@ -481,20 +481,20 @@ run-server: prepackaged-binaries validate-go-version start-docker ## Starts the
 debug-server: start-docker ## Compile and start server using delve.
 	mkdir -p $(BUILD_WEBAPP_DIR)/dist/files
 	$(DELVE) debug $(PLATFORM_FILES) --build-flags="-ldflags '\
-		-X github.com/mattermost/mattermost-server/v6/model.BuildNumber=$(BUILD_NUMBER)\
-		-X \"github.com/mattermost/mattermost-server/v6/model.BuildDate=$(BUILD_DATE)\"\
-		-X github.com/mattermost/mattermost-server/v6/model.BuildHash=$(BUILD_HASH)\
-		-X github.com/mattermost/mattermost-server/v6/model.BuildHashEnterprise=$(BUILD_HASH_ENTERPRISE)\
-		-X github.com/mattermost/mattermost-server/v6/model.BuildEnterpriseReady=$(BUILD_ENTERPRISE_READY)'"
+		-X github.com/cjdelisle/matterfoss-server/v6/model.BuildNumber=$(BUILD_NUMBER)\
+		-X \"github.com/cjdelisle/matterfoss-server/v6/model.BuildDate=$(BUILD_DATE)\"\
+		-X github.com/cjdelisle/matterfoss-server/v6/model.BuildHash=$(BUILD_HASH)\
+		-X github.com/cjdelisle/matterfoss-server/v6/model.BuildHashEnterprise=$(BUILD_HASH_ENTERPRISE)\
+		-X github.com/cjdelisle/matterfoss-server/v6/model.BuildEnterpriseReady=$(BUILD_ENTERPRISE_READY)'"
 
 debug-server-headless: start-docker ## Debug server from within an IDE like VSCode or IntelliJ.
 	mkdir -p $(BUILD_WEBAPP_DIR)/dist/files
 	$(DELVE) debug --headless --listen=:2345 --api-version=2 --accept-multiclient $(PLATFORM_FILES) --build-flags="-ldflags '\
-		-X github.com/mattermost/mattermost-server/v6/model.BuildNumber=$(BUILD_NUMBER)\
-		-X \"github.com/mattermost/mattermost-server/v6/model.BuildDate=$(BUILD_DATE)\"\
-		-X github.com/mattermost/mattermost-server/v6/model.BuildHash=$(BUILD_HASH)\
-		-X github.com/mattermost/mattermost-server/v6/model.BuildHashEnterprise=$(BUILD_HASH_ENTERPRISE)\
-		-X github.com/mattermost/mattermost-server/v6/model.BuildEnterpriseReady=$(BUILD_ENTERPRISE_READY)'"
+		-X github.com/cjdelisle/matterfoss-server/v6/model.BuildNumber=$(BUILD_NUMBER)\
+		-X \"github.com/cjdelisle/matterfoss-server/v6/model.BuildDate=$(BUILD_DATE)\"\
+		-X github.com/cjdelisle/matterfoss-server/v6/model.BuildHash=$(BUILD_HASH)\
+		-X github.com/cjdelisle/matterfoss-server/v6/model.BuildHashEnterprise=$(BUILD_HASH_ENTERPRISE)\
+		-X github.com/cjdelisle/matterfoss-server/v6/model.BuildEnterpriseReady=$(BUILD_ENTERPRISE_READY)'"
 
 run-cli: start-docker ## Runs CLI.
 	@echo Running mattermost for development
@@ -669,7 +669,7 @@ gen-serialized: ## Generates serialization methods for hot structs
 	@mv tmp.go ./model/team_member_serial_gen.go
 
 todo: ## Display TODO and FIXME items in the source code.
-	@! ag --ignore Makefile --ignore-dir vendor --ignore-dir runtime '(TODO|XXX|FIXME|"FIX ME")[: ]+' 
+	@! ag --ignore Makefile --ignore-dir vendor --ignore-dir runtime '(TODO|XXX|FIXME|"FIX ME")[: ]+'
 ifeq ($(BUILD_ENTERPRISE_READY),true)
 	@! ag --ignore Makefile --ignore-dir vendor --ignore-dir runtime '(TODO|XXX|FIXME|"FIX ME")[: ]+' enterprise/
 endif
diff --git a/README.md b/README.md
index d4ceb9cf3..8c5a110eb 100644
--- a/README.md
+++ b/README.md
@@ -1,90 +1,101 @@
-# [![Mattermost](https://user-images.githubusercontent.com/7205829/137170381-fe86eef0-bccc-4fdd-8e92-b258884ebdd7.png)](https://mattermost.com)
+# Matterfoss
 
-[Mattermost](https://mattermost.com) is an open source platform for secure collaboration across the entire software development lifecycle. This repo is the primary source for core development on the Mattermost platform; it's written in Go and React and runs as a single Linux binary with MySQL or PostgreSQL. A new compiled version is released under an MIT license every month on the 16th.
+Matterfoss is a community chat server based on code copied from the Mattermost™ project. It 
+adds the following important features:
 
-<img width="1006" alt="mattermost-hero" src="https://user-images.githubusercontent.com/7205829/136107976-7a894c9e-290a-490d-8501-e5fdbfc3785a.png">
+* **No trademarks**: Mattermost™ is a trademark of Mattermost Inc. In respect of their
+[trademark policy](https://mattermost.org/trademark-standards-of-use/), we find it
+inappropriate to use that name in a community free software project which can be changed and
+remixed by anybody. As far as we know, the Matterfoss name is not trademarked.
 
-Useful Resources:
+* **No CLAs**: When you make a contribution to Matterfoss, you don't need to sign your code
+over to anybody. There are no commercial licenses, everybody gets to copy this software under
+the terms of the AGPL.
 
-- [Deployment Guide](https://docs.mattermost.com/guides/deployment.html) - Install, setup, and configure your own Mattermost instance.
-- [Admin and User Documentation](https://docs.mattermost.com/) - Learn how to run a Mattermost instance and take advantage of all the features.
-- [Developer Documentation](https://developers.mattermost.com/) - Contribute code to Mattermost or build an integration via APIs, Webhooks, slash commands, Apps, and plugins.
+* **No DRM**: Every feature that is present in the open source software is fully unlocked, you
+don't need any "license" file in order to use them.
 
-Table of Contents
-=================
+* **No Tracking**: There is no telemetry, update-check or other "call home" feature which can
+be used to track you. Note that if you use a 3rd party push notification provider, they will
+have access to whatever data is sent to them.
 
-  * [Try out Mattermost](#try-out-mattermost)
-  * [Install Mattermost](#install-mattermost)
-  * [Native Mobile and Desktop Apps](#native-mobile-and-desktop-apps)
-  * [Get Security Bulletins](#get-security-bulletins)
-  * [Get Involved](#get-involved)
-  * [Learn More](#learn-more)
-  * [Get the Latest News](#get-the-latest-news)
-  * [Contributing](#contributing)
+## No warranties, no support
 
-## Try out Mattermost
+If you are considering using Matterfoss in a commercial setting, please note that this
+software comes with no warranty. As far as we know, there is no available commercial
+support.
 
-- [Join the Mattermost Contributor's server](https://community.mattermost.com/signup_user_complete/?id=codoy5s743rq5mk18i7u5ksz7e) to join community discussions about contributions, development and more
-- [Get started with Mattermost Cloud](https://customers.mattermost.com/cloud/signup) to try out Mattermost
+This is a volunteer community project and we cannot even promise to fix important security
+issues in a timely manner, so if you intend to use Matterfoss in a commercial setting, we
+highly recommend that you instead choose Mattermost™. That way, you will be supporting the 
+development of great open source software.
 
-[![Deploy a Preview](https://www.herokucdn.com/deploy/button.svg)](https://heroku.com/deploy?template=https://github.com/mattermost/mattermost-heroku)
+## Why?
 
-_Note: Heroku preview does not include email or persistent storage_
+Free communities need an alternative to closed proprietary systems like Slack. Unfortunately,
+Mattermost™ has two features which made it unsuitable for such use:
 
-## Install Mattermost
+1. Unless you buy an "enterprise license", even simple features like channel ownership are 
+disabled, meaning anyone can delete any channel. Similarly, without an enterprise license,
+you can't set a data retention policy, which can make GDPR compliance problematic.
 
-- [Quick Install Guide](https://docs.mattermost.com/getting-started/light-install.html) - Deploy in minutes via Mattermost Omnibus on Ubuntu.
-- [Run Mattermost via Docker](https://docs.mattermost.com/install/setting-up-local-machine-using-docker.html) - Launch a Mattermost server instantly to test functionality and build integrations.
-- [Developer Machine Setup](https://developers.mattermost.com/contribute/server/developer-setup) - Follow this guide if you want to write code for Mattermost.
+2. Enterprise licenses are sold per head, so anyone hoping to set up a public server faces
+potentially unlimited and significant license costs.
 
-Other Install Guides:
-- [Ubuntu 20.04 LTS](https://docs.mattermost.com/install/installing-ubuntu-2004-LTS.html)
-- [Kubernetes](https://docs.mattermost.com/install/install-kubernetes.html)
-- [Helm](https://docs.mattermost.com/install/install-kubernetes.html#installing-the-operators-via-helm)
-- [Debian Buster](https://docs.mattermost.com/install/install-debian.html)
-- [RHEL 8](https://docs.mattermost.com/install/install-rhel-8.html)
-- [More server install guides](https://docs.mattermost.com/guides/deployment.html)
+Attempts were made to engage with Mattermost Inc concerning these issues, but they were not
+interested.
 
-## Native Mobile and Desktop Apps
+## Installing
 
-In addition to the web interface, you can also download Mattermost clients for [Android](https://mattermost.com/mattermost-android-app/), [iOS](https://mattermost.com/mattermost-ios-app/), [Windows PC](https://docs.mattermost.com/install/desktop-app-install.html#windows-10-windows-8-1), [Mac OSX](https://docs.mattermost.com/install/desktop-app-install.html#macos-10-9), and [Linux](https://docs.mattermost.com/install/desktop-app-install.html#linux).
+We recommend that you compile Matterfoss on the server where you intend to use it, so that you
+can quickly and easily make any changes that you need to. To compile it you will need
+[golang](https://golang.org/dl/) and a database, either MariaDB or PostgreSQL.
 
-[![Google Play](https://user-images.githubusercontent.com/33878967/33095356-39b6fbf8-ceb8-11e7-8a61-c3a18fa5e658.png)](https://mattermost.com/mattermost-android-app/)  [![App Store](https://user-images.githubusercontent.com/33878967/33095353-397e69b4-ceb8-11e7-8175-f95a97d5274f.png)](https://itunes.apple.com/us/app/mattermost/id1257222717?mt=8)  [![Windows PC](https://user-images.githubusercontent.com/33878967/33095357-39cab8d2-ceb8-11e7-89a6-67dccc571ca3.png)](https://docs.mattermost.com/install/desktop.html#windows-10-windows-8-1-windows-7)  [![Mac OSX](https://user-images.githubusercontent.com/33878967/33095355-39a36f2a-ceb8-11e7-9b33-73d4f6d5d6c1.png)](https://docs.mattermost.com/install/desktop.html#macos-10-9)  [![Linux](https://user-images.githubusercontent.com/33878967/33095354-3990e256-ceb8-11e7-965d-b00a16e578de.png)](https://docs.mattermost.com/install/desktop.html#linux)
+```bash
+# Download this server and the frontend
+git clone https://github.com/cjdelisle/Matterfoss
+git clone https://github.com/cjdelisle/MatterfossWeb
 
-## Get Security Bulletins
+# Compile the frontend
+cd MatterfossWeb
+npm install
+npm run build
 
-Receive notifications of critical security updates. The sophistication of online attackers is perpetually increasing. If you are deploying Mattermost it is highly recommended you subscribe to the Mattermost Security Bulletin mailing list for updates on critical security releases.
+# Compile matterfoss
+cd ../Matterfoss
+go build -o ./bin ./...
 
-[Subscribe here](https://mattermost.com/security-updates/#sign-up)
+# Setup the database - note that mfuser and mfpass are defaults in the
+# configuration. If your MariaDB instance is on another server, you will
+# need to change 'mfuser'@'localhost' to 'mfuser'@'%' to allow outside
+# access and clearly you will need to use a strong password.
+echo "
+create user 'mfuser'@'localhost' identified by 'mfpass';
+create database matterfoss;
+grant all privileges on matterfoss.* to 'mfuser'@'localhost';
+" | mariadb
 
-## Get Involved
+# Move the frontend into the server so that it will be served
+mv ../MatterfossWeb/dist ./client
 
-- [Contribute to Mattermost](https://handbook.mattermost.com/contributors/contributors/ways-to-contribute)
-- [Find "Help Wanted" projects](https://github.com/mattermost/mattermost-server/issues?page=1&q=is%3Aissue+is%3Aopen+%22Help+Wanted%22&utf8=%E2%9C%93)
-- [Join Developer Discussion on a Mattermost Server for contributors](https://community.mattermost.com/signup_user_complete/?id=f1924a8db44ff3bb41c96424cdc20676)
-- [Get Help With Mattermost](https://docs.mattermost.com/guides/get-help.html)
+# Start matterfoss
+./bin/matterfoss
+```
 
-## Learn More
+## Customization
 
-- [API Options - webhooks, slash commands, drivers and web service](https://api.mattermost.com/)
-- [See who's using Mattermost](https://mattermost.com/blog/category/customer-stories/)
-- [Browse over 700 Mattermost integrations](https://integrations.mattermost.com/)
+If you just clicked on a link and found yourself here, it's probably because you or
+the admin of your Matterfoss instance did not configure the links for their instance
+properly. In order to avoid getting linked here, you need to edit your `config.json` file
+or go into the System Console and edit the following entries:
+
+* TermsOfServiceLink: url of your terms of service for your server
+* PrivacyPolicyLink: url of your privacy policy
+* AboutLink: url about the purpose of your server
+* HelpLink: url with a link to help and support
+* ReportAProblemLink: url where people can go to report problems with your service
 
 ## License
 
 See the [LICENSE file](LICENSE.txt) for license rights and limitations.
 
-## Get the Latest News
-
-- **Twitter** - Follow [Mattermost](https://twitter.com/mattermost).
-- **Blog** - Get the latest updates from the [Mattermost blog](https://mattermost.com/blog/).
-- **Facebook** - Follow [Mattermost](https://www.facebook.com/MattermostHQ).
-- **LinkedIn** - Follow [Mattermost](https://www.linkedin.com/company/mattermost/).
-- **Email** - Subscribe to our [newsletter](https://mattermost.us11.list-manage.com/subscribe?u=6cdba22349ae374e188e7ab8e&id=2add1c8034) (1 or 2 per month).
-- **Mattermost** - Join the ~contributors channel on [the Mattermost Community Server](https://community.mattermost.com). 
-- **IRC** - Join the #matterbridge channel on [Freenode](https://freenode.net/) (thanks to [matterircd](https://github.com/42wim/matterircd)).
-
-## Contributing
-Please see [CONTRIBUTING.md](./CONTRIBUTING.md).
-
-Any other questions, mail us at info@mattermost.com. We’d love to meet you!
diff --git a/SECURITY.md b/SECURITY.md
deleted file mode 100644
index eff1e6aa1..000000000
--- a/SECURITY.md
+++ /dev/null
@@ -1,25 +0,0 @@
-Security
-========
-
-Safety and data security is of the utmost priority for the Mattermost community. If you are a security researcher and have discovered a security vulnerability in our codebase, we would appreciate your help in disclosing it to us in a responsible manner.
-
-Reporting security issues
--------------------------
-
-**Please do not use GitHub issues for security-sensitive communication.**
-
-Security issues in the community test server, any of the open source codebases maintained by Mattermost, or any of our commercial offerings should be reported via email to [responsibledisclosure@mattermost.com](mailto:responsibledisclosure@mattermost.com). Mattermost is committed to working together with researchers and keeping them updated throughout the patching process. Researchers who responsibly report valid security issues will be publicly credited for their efforts (if they so choose).
-
-For a more detailed description of the disclosure process and a list of researchers who have previously contributed to the disclosure program, see [Report a Security Vulnerability](https://mattermost.com/security-vulnerability-report/) on the Mattermost website.
-
-Security updates
-----------------
-
-Mattermost has a mandatory upgrade policy, and updates are only provided for the latest 3 releases and the current Extended Support Release (ESR). Critical updates are delivered as dot releases. Details on security updates are announced 30 days after the availability of the update.
-
-For more details about the security content of past releases, see the [Security Updates](https://mattermost.com/security-updates/) page on the Mattermost website. For timely notifications about new security updates, subscribe to the [Security Bulletins Mailing List](https://mattermost.com/security-updates/#sign-up).
-
-Contributing to this policy
----------------------------
-
-If you have feedback or suggestions on improving this policy document, please [create an issue](https://github.com/mattermost/mattermost-server/issues/new).
diff --git a/api4/api.go b/api4/api.go
index 7285d79bd..25ffb15a6 100644
--- a/api4/api.go
+++ b/api4/api.go
@@ -10,9 +10,9 @@ import (
 	graphql "github.com/graph-gophers/graphql-go"
 	_ "github.com/mattermost/go-i18n/i18n"
 
-	"github.com/mattermost/mattermost-server/v6/app"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/web"
+	"github.com/cjdelisle/matterfoss-server/v6/app"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/web"
 )
 
 type Routes struct {
diff --git a/api4/apitestlib.go b/api4/apitestlib.go
index eb60ffab9..84f3ced98 100644
--- a/api4/apitestlib.go
+++ b/api4/apitestlib.go
@@ -27,19 +27,19 @@ import (
 	"github.com/minio/minio-go/v7/pkg/credentials"
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/app"
-	"github.com/mattermost/mattermost-server/v6/app/request"
-	"github.com/mattermost/mattermost-server/v6/config"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/plugin/plugintest/mock"
-	"github.com/mattermost/mattermost-server/v6/services/searchengine"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
-	"github.com/mattermost/mattermost-server/v6/store"
-	"github.com/mattermost/mattermost-server/v6/store/localcachelayer"
-	"github.com/mattermost/mattermost-server/v6/store/storetest/mocks"
-	"github.com/mattermost/mattermost-server/v6/testlib"
-	"github.com/mattermost/mattermost-server/v6/web"
-	"github.com/mattermost/mattermost-server/v6/wsapi"
+	"github.com/cjdelisle/matterfoss-server/v6/app"
+	"github.com/cjdelisle/matterfoss-server/v6/app/request"
+	"github.com/cjdelisle/matterfoss-server/v6/config"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/plugin/plugintest/mock"
+	"github.com/cjdelisle/matterfoss-server/v6/services/searchengine"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/store/localcachelayer"
+	"github.com/cjdelisle/matterfoss-server/v6/store/storetest/mocks"
+	"github.com/cjdelisle/matterfoss-server/v6/testlib"
+	"github.com/cjdelisle/matterfoss-server/v6/web"
+	"github.com/cjdelisle/matterfoss-server/v6/wsapi"
 )
 
 type TestHelper struct {
diff --git a/api4/bleve.go b/api4/bleve.go
index e6b43480d..275ad2bdb 100644
--- a/api4/bleve.go
+++ b/api4/bleve.go
@@ -6,8 +6,8 @@ package api4
 import (
 	"net/http"
 
-	"github.com/mattermost/mattermost-server/v6/audit"
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/audit"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 func (api *API) InitBleve() {
diff --git a/api4/bleve_test.go b/api4/bleve_test.go
index 9f6cc1723..0e33f73ab 100644
--- a/api4/bleve_test.go
+++ b/api4/bleve_test.go
@@ -6,7 +6,7 @@ package api4
 import (
 	"testing"
 
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 	"github.com/stretchr/testify/require"
 )
 
diff --git a/api4/bot.go b/api4/bot.go
index fc948af37..ee4281658 100644
--- a/api4/bot.go
+++ b/api4/bot.go
@@ -8,9 +8,9 @@ import (
 	"net/http"
 	"strconv"
 
-	"github.com/mattermost/mattermost-server/v6/audit"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/audit"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
 )
 
 func (api *API) InitBot() {
diff --git a/api4/bot_test.go b/api4/bot_test.go
index b01dca609..4291b9c2f 100644
--- a/api4/bot_test.go
+++ b/api4/bot_test.go
@@ -11,7 +11,7 @@ import (
 
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 func TestCreateBot(t *testing.T) {
diff --git a/api4/brand.go b/api4/brand.go
index 2903b5e28..da17be3ef 100644
--- a/api4/brand.go
+++ b/api4/brand.go
@@ -8,8 +8,8 @@ import (
 	"io/ioutil"
 	"net/http"
 
-	"github.com/mattermost/mattermost-server/v6/audit"
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/audit"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 func (api *API) InitBrand() {
diff --git a/api4/brand_test.go b/api4/brand_test.go
index 854b3c32f..999047fab 100644
--- a/api4/brand_test.go
+++ b/api4/brand_test.go
@@ -9,7 +9,7 @@ import (
 
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/utils/testutils"
+	"github.com/cjdelisle/matterfoss-server/v6/utils/testutils"
 )
 
 func TestGetBrandImage(t *testing.T) {
diff --git a/api4/channel.go b/api4/channel.go
index 1500465e2..b7aeb975f 100644
--- a/api4/channel.go
+++ b/api4/channel.go
@@ -10,10 +10,10 @@ import (
 	"strconv"
 	"strings"
 
-	"github.com/mattermost/mattermost-server/v6/app"
-	"github.com/mattermost/mattermost-server/v6/audit"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/app"
+	"github.com/cjdelisle/matterfoss-server/v6/audit"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
 )
 
 func (api *API) InitChannel() {
diff --git a/api4/channel_category.go b/api4/channel_category.go
index e14a0f13c..f66bcb5f8 100644
--- a/api4/channel_category.go
+++ b/api4/channel_category.go
@@ -7,9 +7,9 @@ import (
 	"encoding/json"
 	"net/http"
 
-	"github.com/mattermost/mattermost-server/v6/audit"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/audit"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
 )
 
 func getCategoriesForTeamForUser(c *Context, w http.ResponseWriter, r *http.Request) {
diff --git a/api4/channel_category_test.go b/api4/channel_category_test.go
index c877e3983..e314cce58 100644
--- a/api4/channel_category_test.go
+++ b/api4/channel_category_test.go
@@ -11,7 +11,7 @@ import (
 	"github.com/stretchr/testify/assert"
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 func TestCreateCategoryForTeamForUser(t *testing.T) {
diff --git a/api4/channel_local.go b/api4/channel_local.go
index 8fe5f2e9b..b3f5ec600 100644
--- a/api4/channel_local.go
+++ b/api4/channel_local.go
@@ -7,10 +7,10 @@ import (
 	"encoding/json"
 	"net/http"
 
-	"github.com/mattermost/mattermost-server/v6/app"
-	"github.com/mattermost/mattermost-server/v6/audit"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/app"
+	"github.com/cjdelisle/matterfoss-server/v6/audit"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
 )
 
 func (api *API) InitChannelLocal() {
diff --git a/api4/channel_test.go b/api4/channel_test.go
index 38c8a8389..8e4dd5f24 100644
--- a/api4/channel_test.go
+++ b/api4/channel_test.go
@@ -18,10 +18,10 @@ import (
 	"github.com/stretchr/testify/assert"
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/app"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/plugin/plugintest/mock"
-	"github.com/mattermost/mattermost-server/v6/store/storetest/mocks"
+	"github.com/cjdelisle/matterfoss-server/v6/app"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/plugin/plugintest/mock"
+	"github.com/cjdelisle/matterfoss-server/v6/store/storetest/mocks"
 )
 
 func TestCreateChannel(t *testing.T) {
diff --git a/api4/cloud.go b/api4/cloud.go
index 90f73e3bd..d555b5ab7 100644
--- a/api4/cloud.go
+++ b/api4/cloud.go
@@ -12,8 +12,8 @@ import (
 	"net/http"
 	"time"
 
-	"github.com/mattermost/mattermost-server/v6/audit"
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/audit"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 func (api *API) InitCloud() {
diff --git a/api4/cluster.go b/api4/cluster.go
index a51c7fbb0..1a5b9f472 100644
--- a/api4/cluster.go
+++ b/api4/cluster.go
@@ -7,7 +7,7 @@ import (
 	"encoding/json"
 	"net/http"
 
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 func (api *API) InitCluster() {
diff --git a/api4/cluster_test.go b/api4/cluster_test.go
index 8fe56ebbe..d273a0c67 100644
--- a/api4/cluster_test.go
+++ b/api4/cluster_test.go
@@ -8,7 +8,7 @@ import (
 
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 func TestGetClusterStatus(t *testing.T) {
diff --git a/api4/command.go b/api4/command.go
index 4db1ee886..03c977e04 100644
--- a/api4/command.go
+++ b/api4/command.go
@@ -9,9 +9,9 @@ import (
 	"strconv"
 	"strings"
 
-	"github.com/mattermost/mattermost-server/v6/audit"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/audit"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
 )
 
 func (api *API) InitCommand() {
diff --git a/api4/command_help_test.go b/api4/command_help_test.go
index 1f0bf0fbb..4bcaefaca 100644
--- a/api4/command_help_test.go
+++ b/api4/command_help_test.go
@@ -8,7 +8,7 @@ import (
 
 	"github.com/stretchr/testify/assert"
 
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 func TestHelpCommand(t *testing.T) {
diff --git a/api4/command_local.go b/api4/command_local.go
index d14d6a10e..5637d5af2 100644
--- a/api4/command_local.go
+++ b/api4/command_local.go
@@ -7,9 +7,9 @@ import (
 	"encoding/json"
 	"net/http"
 
-	"github.com/mattermost/mattermost-server/v6/audit"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/audit"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
 )
 
 func (api *API) InitCommandLocal() {
diff --git a/api4/command_test.go b/api4/command_test.go
index f8a5eb12e..b7976cd4f 100644
--- a/api4/command_test.go
+++ b/api4/command_test.go
@@ -14,8 +14,8 @@ import (
 	"github.com/stretchr/testify/assert"
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
 )
 
 func TestCreateCommand(t *testing.T) {
diff --git a/api4/commands_test.go b/api4/commands_test.go
index 24a2c2714..0462ac9f7 100644
--- a/api4/commands_test.go
+++ b/api4/commands_test.go
@@ -8,10 +8,10 @@ import (
 	"testing"
 	"time"
 
-	_ "github.com/mattermost/mattermost-server/v6/app/slashcommands"
+	_ "github.com/cjdelisle/matterfoss-server/v6/app/slashcommands"
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 func TestEchoCommand(t *testing.T) {
diff --git a/api4/compliance.go b/api4/compliance.go
index 32d1380ee..572026ffb 100644
--- a/api4/compliance.go
+++ b/api4/compliance.go
@@ -10,9 +10,9 @@ import (
 
 	"github.com/avct/uasurfer"
 
-	"github.com/mattermost/mattermost-server/v6/audit"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/audit"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
 )
 
 func (api *API) InitCompliance() {
diff --git a/api4/config.go b/api4/config.go
index 9eb9106d7..83dba034e 100644
--- a/api4/config.go
+++ b/api4/config.go
@@ -10,11 +10,11 @@ import (
 	"reflect"
 	"strings"
 
-	"github.com/mattermost/mattermost-server/v6/audit"
-	"github.com/mattermost/mattermost-server/v6/config"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
-	"github.com/mattermost/mattermost-server/v6/utils"
+	"github.com/cjdelisle/matterfoss-server/v6/audit"
+	"github.com/cjdelisle/matterfoss-server/v6/config"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/utils"
 )
 
 var writeFilter func(c *Context, structField reflect.StructField) bool
diff --git a/api4/config_local.go b/api4/config_local.go
index a6e4f0f68..4a330a75b 100644
--- a/api4/config_local.go
+++ b/api4/config_local.go
@@ -8,11 +8,11 @@ import (
 	"net/http"
 	"reflect"
 
-	"github.com/mattermost/mattermost-server/v6/audit"
-	"github.com/mattermost/mattermost-server/v6/config"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
-	"github.com/mattermost/mattermost-server/v6/utils"
+	"github.com/cjdelisle/matterfoss-server/v6/audit"
+	"github.com/cjdelisle/matterfoss-server/v6/config"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/utils"
 )
 
 func (api *API) InitConfigLocal() {
diff --git a/api4/config_test.go b/api4/config_test.go
index e0630598f..8a28c5f2d 100644
--- a/api4/config_test.go
+++ b/api4/config_test.go
@@ -15,9 +15,9 @@ import (
 	"github.com/stretchr/testify/assert"
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/app"
-	"github.com/mattermost/mattermost-server/v6/config"
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/app"
+	"github.com/cjdelisle/matterfoss-server/v6/config"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 func TestGetConfig(t *testing.T) {
diff --git a/api4/cors_test.go b/api4/cors_test.go
index 214cec9f0..d67398ce1 100644
--- a/api4/cors_test.go
+++ b/api4/cors_test.go
@@ -11,8 +11,8 @@ import (
 	"github.com/stretchr/testify/assert"
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/store/storetest/mocks"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/store/storetest/mocks"
 )
 
 const (
diff --git a/api4/data_retention.go b/api4/data_retention.go
index 824f8b8f7..2e1d3626c 100644
--- a/api4/data_retention.go
+++ b/api4/data_retention.go
@@ -7,8 +7,8 @@ import (
 	"encoding/json"
 	"net/http"
 
-	"github.com/mattermost/mattermost-server/v6/audit"
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/audit"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 func (api *API) InitDataRetention() {
diff --git a/api4/elasticsearch.go b/api4/elasticsearch.go
index 045b2034f..a3c62fe22 100644
--- a/api4/elasticsearch.go
+++ b/api4/elasticsearch.go
@@ -6,8 +6,8 @@ package api4
 import (
 	"net/http"
 
-	"github.com/mattermost/mattermost-server/v6/audit"
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/audit"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 func (api *API) InitElasticsearch() {
diff --git a/api4/elasticsearch_test.go b/api4/elasticsearch_test.go
index 1713080f0..733ccfff0 100644
--- a/api4/elasticsearch_test.go
+++ b/api4/elasticsearch_test.go
@@ -6,7 +6,7 @@ package api4
 import (
 	"testing"
 
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 	"github.com/stretchr/testify/require"
 )
 
diff --git a/api4/emoji.go b/api4/emoji.go
index 23bc5a98a..d9285623a 100644
--- a/api4/emoji.go
+++ b/api4/emoji.go
@@ -9,11 +9,11 @@ import (
 	"io/ioutil"
 	"net/http"
 
-	"github.com/mattermost/mattermost-server/v6/app"
-	"github.com/mattermost/mattermost-server/v6/audit"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
-	"github.com/mattermost/mattermost-server/v6/web"
+	"github.com/cjdelisle/matterfoss-server/v6/app"
+	"github.com/cjdelisle/matterfoss-server/v6/audit"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/web"
 )
 
 const (
diff --git a/api4/emoji_test.go b/api4/emoji_test.go
index 6762d090e..f7ad9140f 100644
--- a/api4/emoji_test.go
+++ b/api4/emoji_test.go
@@ -14,10 +14,10 @@ import (
 	"github.com/stretchr/testify/assert"
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/app"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/utils"
-	"github.com/mattermost/mattermost-server/v6/utils/fileutils"
+	"github.com/cjdelisle/matterfoss-server/v6/app"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/utils"
+	"github.com/cjdelisle/matterfoss-server/v6/utils/fileutils"
 )
 
 func TestCreateEmoji(t *testing.T) {
diff --git a/api4/export.go b/api4/export.go
index 823a8f4b2..ebdeb492c 100644
--- a/api4/export.go
+++ b/api4/export.go
@@ -9,8 +9,8 @@ import (
 	"path/filepath"
 	"time"
 
-	"github.com/mattermost/mattermost-server/v6/audit"
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/audit"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 func (api *API) InitExport() {
diff --git a/api4/export_test.go b/api4/export_test.go
index db3a96180..48d0b0032 100644
--- a/api4/export_test.go
+++ b/api4/export_test.go
@@ -11,8 +11,8 @@ import (
 	"path/filepath"
 	"testing"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/utils/fileutils"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/utils/fileutils"
 
 	"github.com/stretchr/testify/require"
 )
diff --git a/api4/file.go b/api4/file.go
index 72e50a0d6..d9df1bf1a 100644
--- a/api4/file.go
+++ b/api4/file.go
@@ -16,11 +16,11 @@ import (
 	"strings"
 	"time"
 
-	"github.com/mattermost/mattermost-server/v6/app"
-	"github.com/mattermost/mattermost-server/v6/audit"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
-	"github.com/mattermost/mattermost-server/v6/utils"
+	"github.com/cjdelisle/matterfoss-server/v6/app"
+	"github.com/cjdelisle/matterfoss-server/v6/audit"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/utils"
 )
 
 const (
diff --git a/api4/file_test.go b/api4/file_test.go
index a6f9d9c2c..4463c23e8 100644
--- a/api4/file_test.go
+++ b/api4/file_test.go
@@ -23,10 +23,10 @@ import (
 	"github.com/stretchr/testify/assert"
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/app"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/utils/fileutils"
-	"github.com/mattermost/mattermost-server/v6/utils/testutils"
+	"github.com/cjdelisle/matterfoss-server/v6/app"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/utils/fileutils"
+	"github.com/cjdelisle/matterfoss-server/v6/utils/testutils"
 )
 
 var testDir = ""
diff --git a/api4/graphql.go b/api4/graphql.go
index 7a8e366ba..2c7b6bc26 100644
--- a/api4/graphql.go
+++ b/api4/graphql.go
@@ -11,8 +11,8 @@ import (
 
 	graphql "github.com/graph-gophers/graphql-go"
 	gqlerrors "github.com/graph-gophers/graphql-go/errors"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
 )
 
 type graphQLInput struct {
diff --git a/api4/graphql_client.go b/api4/graphql_client.go
index 9a85e6a2f..fae3bbc1a 100644
--- a/api4/graphql_client.go
+++ b/api4/graphql_client.go
@@ -9,7 +9,7 @@ import (
 	"net/http"
 	"strings"
 
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 // graphQLClient is an internal test client to run the tests.
diff --git a/api4/group.go b/api4/group.go
index ff9c116a8..932a5d446 100644
--- a/api4/group.go
+++ b/api4/group.go
@@ -11,9 +11,9 @@ import (
 	"strconv"
 	"strings"
 
-	"github.com/mattermost/mattermost-server/v6/app"
-	"github.com/mattermost/mattermost-server/v6/audit"
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/app"
+	"github.com/cjdelisle/matterfoss-server/v6/audit"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 func (api *API) InitGroup() {
diff --git a/api4/group_test.go b/api4/group_test.go
index 14688fc47..943d2f3fd 100644
--- a/api4/group_test.go
+++ b/api4/group_test.go
@@ -13,7 +13,7 @@ import (
 	"github.com/stretchr/testify/assert"
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 func TestGetGroup(t *testing.T) {
diff --git a/api4/handlers.go b/api4/handlers.go
index a43fb1de7..f2ec82a98 100644
--- a/api4/handlers.go
+++ b/api4/handlers.go
@@ -8,8 +8,8 @@ import (
 
 	"github.com/mattermost/gziphandler"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/web"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/web"
 )
 
 type Context = web.Context
diff --git a/api4/handlers_test.go b/api4/handlers_test.go
index 9c2087cda..7c617423d 100644
--- a/api4/handlers_test.go
+++ b/api4/handlers_test.go
@@ -11,7 +11,7 @@ import (
 	"github.com/stretchr/testify/assert"
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 func handlerForGzip(c *Context, w http.ResponseWriter, r *http.Request) {
diff --git a/api4/image.go b/api4/image.go
index f6f67cd51..b76452a01 100644
--- a/api4/image.go
+++ b/api4/image.go
@@ -7,7 +7,7 @@ import (
 	"net/http"
 	"net/url"
 
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 func (api *API) InitImage() {
diff --git a/api4/image_test.go b/api4/image_test.go
index aead2b5bf..0cee1e334 100644
--- a/api4/image_test.go
+++ b/api4/image_test.go
@@ -14,7 +14,7 @@ import (
 	"github.com/stretchr/testify/assert"
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 func TestGetImage(t *testing.T) {
diff --git a/api4/import.go b/api4/import.go
index bbb7784f5..c2c26c707 100644
--- a/api4/import.go
+++ b/api4/import.go
@@ -7,7 +7,7 @@ import (
 	"encoding/json"
 	"net/http"
 
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 func (api *API) InitImport() {
diff --git a/api4/import_test.go b/api4/import_test.go
index 165703ada..7f0f3cae0 100644
--- a/api4/import_test.go
+++ b/api4/import_test.go
@@ -10,8 +10,8 @@ import (
 
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/utils/fileutils"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/utils/fileutils"
 )
 
 func TestListImports(t *testing.T) {
diff --git a/api4/integration_action.go b/api4/integration_action.go
index be19c4928..a54c20b10 100644
--- a/api4/integration_action.go
+++ b/api4/integration_action.go
@@ -7,7 +7,7 @@ import (
 	"encoding/json"
 	"net/http"
 
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 func (api *API) InitAction() {
diff --git a/api4/integration_action_test.go b/api4/integration_action_test.go
index a7c0714b8..4d0911add 100644
--- a/api4/integration_action_test.go
+++ b/api4/integration_action_test.go
@@ -13,7 +13,7 @@ import (
 	"github.com/stretchr/testify/assert"
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 type testHandler struct {
diff --git a/api4/job.go b/api4/job.go
index 5cac87a95..17db99fa2 100644
--- a/api4/job.go
+++ b/api4/job.go
@@ -10,9 +10,9 @@ import (
 	"strconv"
 	"time"
 
-	"github.com/mattermost/mattermost-server/v6/audit"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/audit"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
 )
 
 func (api *API) InitJob() {
diff --git a/api4/job_test.go b/api4/job_test.go
index e73d24732..05038acea 100644
--- a/api4/job_test.go
+++ b/api4/job_test.go
@@ -11,7 +11,7 @@ import (
 
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 func TestCreateJob(t *testing.T) {
diff --git a/api4/ldap.go b/api4/ldap.go
index 646689b97..929c99f7f 100644
--- a/api4/ldap.go
+++ b/api4/ldap.go
@@ -8,8 +8,8 @@ import (
 	"mime/multipart"
 	"net/http"
 
-	"github.com/mattermost/mattermost-server/v6/audit"
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/audit"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 type mixedUnlinkedGroup struct {
diff --git a/api4/ldap_test.go b/api4/ldap_test.go
index 82e9c0b31..516803b2e 100644
--- a/api4/ldap_test.go
+++ b/api4/ldap_test.go
@@ -8,9 +8,9 @@ import (
 
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/einterfaces/mocks"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/plugin/plugintest/mock"
+	"github.com/cjdelisle/matterfoss-server/v6/einterfaces/mocks"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/plugin/plugintest/mock"
 )
 
 var spPrivateKey = `-----BEGIN PRIVATE KEY-----
diff --git a/api4/license.go b/api4/license.go
index 2e8474c80..281db3a89 100644
--- a/api4/license.go
+++ b/api4/license.go
@@ -11,11 +11,11 @@ import (
 	"io/ioutil"
 	"net/http"
 
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
-	"github.com/mattermost/mattermost-server/v6/utils"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/utils"
 
-	"github.com/mattermost/mattermost-server/v6/audit"
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/audit"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 func (api *API) InitLicense() {
diff --git a/api4/license_local.go b/api4/license_local.go
index 1f61aaed5..1a73221eb 100644
--- a/api4/license_local.go
+++ b/api4/license_local.go
@@ -9,9 +9,9 @@ import (
 	"io"
 	"net/http"
 
-	"github.com/mattermost/mattermost-server/v6/audit"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/audit"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
 )
 
 func (api *API) InitLicenseLocal() {
diff --git a/api4/license_test.go b/api4/license_test.go
index ed1b78589..a26752f94 100644
--- a/api4/license_test.go
+++ b/api4/license_test.go
@@ -10,12 +10,12 @@ import (
 	"testing"
 	"time"
 
-	"github.com/mattermost/mattermost-server/v6/app"
-	"github.com/mattermost/mattermost-server/v6/einterfaces/mocks"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/utils"
-	mocks2 "github.com/mattermost/mattermost-server/v6/utils/mocks"
-	"github.com/mattermost/mattermost-server/v6/utils/testutils"
+	"github.com/cjdelisle/matterfoss-server/v6/app"
+	"github.com/cjdelisle/matterfoss-server/v6/einterfaces/mocks"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/utils"
+	mocks2 "github.com/cjdelisle/matterfoss-server/v6/utils/mocks"
+	"github.com/cjdelisle/matterfoss-server/v6/utils/testutils"
 
 	"github.com/stretchr/testify/mock"
 	"github.com/stretchr/testify/require"
diff --git a/api4/main_test.go b/api4/main_test.go
index 961db24f0..9540586d1 100644
--- a/api4/main_test.go
+++ b/api4/main_test.go
@@ -7,7 +7,7 @@ import (
 	"flag"
 	"testing"
 
-	"github.com/mattermost/mattermost-server/v6/testlib"
+	"github.com/cjdelisle/matterfoss-server/v6/testlib"
 )
 
 var replicaFlag bool
diff --git a/api4/oauth.go b/api4/oauth.go
index 78194a325..471c2e330 100644
--- a/api4/oauth.go
+++ b/api4/oauth.go
@@ -7,9 +7,9 @@ import (
 	"encoding/json"
 	"net/http"
 
-	"github.com/mattermost/mattermost-server/v6/audit"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/audit"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
 )
 
 func (api *API) InitOAuth() {
diff --git a/api4/oauth_test.go b/api4/oauth_test.go
index face6ca56..f03b193e8 100644
--- a/api4/oauth_test.go
+++ b/api4/oauth_test.go
@@ -10,7 +10,7 @@ import (
 	"github.com/stretchr/testify/assert"
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 func TestCreateOAuthApp(t *testing.T) {
diff --git a/api4/openGraph.go b/api4/openGraph.go
index 22f6dd3f6..36a0fe7b9 100644
--- a/api4/openGraph.go
+++ b/api4/openGraph.go
@@ -6,8 +6,8 @@ package api4
 import (
 	"net/http"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
 )
 
 func (api *API) InitOpenGraph() {
diff --git a/api4/openGraph_test.go b/api4/openGraph_test.go
index 41d8a3ae5..e88e7b53e 100644
--- a/api4/openGraph_test.go
+++ b/api4/openGraph_test.go
@@ -11,7 +11,7 @@ import (
 
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 func TestGetOpenGraphMetadata(t *testing.T) {
diff --git a/api4/permission.go b/api4/permission.go
index 0ed435107..a08c96612 100644
--- a/api4/permission.go
+++ b/api4/permission.go
@@ -8,7 +8,7 @@ import (
 	"net/http"
 	"strings"
 
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 func (api *API) InitPermissions() {
diff --git a/api4/permissions_test.go b/api4/permissions_test.go
index 1eb4b3d01..ed44a3844 100644
--- a/api4/permissions_test.go
+++ b/api4/permissions_test.go
@@ -9,7 +9,7 @@ import (
 	"github.com/stretchr/testify/assert"
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 func TestGetAncillaryPermissions(t *testing.T) {
diff --git a/api4/plugin.go b/api4/plugin.go
index 13bed4675..7b976c217 100644
--- a/api4/plugin.go
+++ b/api4/plugin.go
@@ -13,10 +13,10 @@ import (
 	"net/url"
 	"strconv"
 
-	"github.com/mattermost/mattermost-server/v6/audit"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
-	"github.com/mattermost/mattermost-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/audit"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
 	"github.com/pkg/errors"
 )
 
diff --git a/api4/plugin_test.go b/api4/plugin_test.go
index 5381be470..3283a60f9 100644
--- a/api4/plugin_test.go
+++ b/api4/plugin_test.go
@@ -22,10 +22,10 @@ import (
 	"github.com/stretchr/testify/assert"
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/plugin"
-	"github.com/mattermost/mattermost-server/v6/testlib"
-	"github.com/mattermost/mattermost-server/v6/utils/fileutils"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/plugin"
+	"github.com/cjdelisle/matterfoss-server/v6/testlib"
+	"github.com/cjdelisle/matterfoss-server/v6/utils/fileutils"
 )
 
 func TestPlugin(t *testing.T) {
diff --git a/api4/post.go b/api4/post.go
index d952408af..398ce1362 100644
--- a/api4/post.go
+++ b/api4/post.go
@@ -9,10 +9,10 @@ import (
 	"strconv"
 	"time"
 
-	"github.com/mattermost/mattermost-server/v6/app"
-	"github.com/mattermost/mattermost-server/v6/audit"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/app"
+	"github.com/cjdelisle/matterfoss-server/v6/audit"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
 )
 
 func (api *API) InitPost() {
diff --git a/api4/post_test.go b/api4/post_test.go
index 64a784bc8..2c70adc6c 100644
--- a/api4/post_test.go
+++ b/api4/post_test.go
@@ -22,12 +22,12 @@ import (
 	"github.com/stretchr/testify/assert"
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/app"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/plugin/plugintest/mock"
-	"github.com/mattermost/mattermost-server/v6/store/storetest/mocks"
-	"github.com/mattermost/mattermost-server/v6/utils"
-	"github.com/mattermost/mattermost-server/v6/utils/testutils"
+	"github.com/cjdelisle/matterfoss-server/v6/app"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/plugin/plugintest/mock"
+	"github.com/cjdelisle/matterfoss-server/v6/store/storetest/mocks"
+	"github.com/cjdelisle/matterfoss-server/v6/utils"
+	"github.com/cjdelisle/matterfoss-server/v6/utils/testutils"
 )
 
 func TestCreatePost(t *testing.T) {
diff --git a/api4/preference.go b/api4/preference.go
index c76d2febc..1fb5fa6c3 100644
--- a/api4/preference.go
+++ b/api4/preference.go
@@ -7,9 +7,9 @@ import (
 	"encoding/json"
 	"net/http"
 
-	"github.com/mattermost/mattermost-server/v6/audit"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/audit"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
 )
 
 func (api *API) InitPreference() {
diff --git a/api4/preference_test.go b/api4/preference_test.go
index d5b7ff156..e4b374d3c 100644
--- a/api4/preference_test.go
+++ b/api4/preference_test.go
@@ -11,7 +11,7 @@ import (
 	"github.com/stretchr/testify/assert"
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 func TestGetPreferences(t *testing.T) {
diff --git a/api4/reaction.go b/api4/reaction.go
index ac19502d9..ad3b9043f 100644
--- a/api4/reaction.go
+++ b/api4/reaction.go
@@ -7,8 +7,8 @@ import (
 	"encoding/json"
 	"net/http"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
 )
 
 func (api *API) InitReaction() {
diff --git a/api4/reaction_test.go b/api4/reaction_test.go
index 86044498d..40088e275 100644
--- a/api4/reaction_test.go
+++ b/api4/reaction_test.go
@@ -10,7 +10,7 @@ import (
 	"github.com/stretchr/testify/assert"
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 func TestSaveReaction(t *testing.T) {
diff --git a/api4/remote_cluster.go b/api4/remote_cluster.go
index 62565a20a..4be7c9468 100644
--- a/api4/remote_cluster.go
+++ b/api4/remote_cluster.go
@@ -10,10 +10,10 @@ import (
 	"net/http"
 	"time"
 
-	"github.com/mattermost/mattermost-server/v6/audit"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/services/remotecluster"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/audit"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/services/remotecluster"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
 )
 
 func (api *API) InitRemoteCluster() {
diff --git a/api4/resolver.go b/api4/resolver.go
index 54b9dcec7..d37f8e2a2 100644
--- a/api4/resolver.go
+++ b/api4/resolver.go
@@ -8,9 +8,9 @@ import (
 	"errors"
 	"fmt"
 
-	"github.com/mattermost/mattermost-server/v6/app"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/web"
+	"github.com/cjdelisle/matterfoss-server/v6/app"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/web"
 )
 
 // cursorPrefix is used to categorize objects
diff --git a/api4/resolver_channel.go b/api4/resolver_channel.go
index 4196dba23..08b2be09f 100644
--- a/api4/resolver_channel.go
+++ b/api4/resolver_channel.go
@@ -10,8 +10,8 @@ import (
 	"sort"
 	"strings"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/web"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/web"
 )
 
 // channel is an internal graphQL wrapper struct to add resolver methods.
diff --git a/api4/resolver_channel_member.go b/api4/resolver_channel_member.go
index b2a28c3eb..feed022ff 100644
--- a/api4/resolver_channel_member.go
+++ b/api4/resolver_channel_member.go
@@ -9,8 +9,8 @@ import (
 	"fmt"
 	"strings"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/web"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/web"
 )
 
 // channelMember is an internal graphQL wrapper struct to add resolver methods.
diff --git a/api4/resolver_channel_member_test.go b/api4/resolver_channel_member_test.go
index 848ad32e5..0de933a98 100644
--- a/api4/resolver_channel_member_test.go
+++ b/api4/resolver_channel_member_test.go
@@ -8,7 +8,7 @@ import (
 	"os"
 	"testing"
 
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 	"github.com/stretchr/testify/assert"
 	"github.com/stretchr/testify/require"
 )
diff --git a/api4/resolver_channel_test.go b/api4/resolver_channel_test.go
index 42e7a95ce..bd7a59558 100644
--- a/api4/resolver_channel_test.go
+++ b/api4/resolver_channel_test.go
@@ -8,7 +8,7 @@ import (
 	"os"
 	"testing"
 
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 	"github.com/stretchr/testify/assert"
 	"github.com/stretchr/testify/require"
 )
diff --git a/api4/resolver_team.go b/api4/resolver_team.go
index 83779f960..1afb89af5 100644
--- a/api4/resolver_team.go
+++ b/api4/resolver_team.go
@@ -6,7 +6,7 @@ package api4
 import (
 	"context"
 
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 func getGraphQLTeam(ctx context.Context, id string) (*model.Team, error) {
diff --git a/api4/resolver_team_member.go b/api4/resolver_team_member.go
index df1a2eb92..f2e600a66 100644
--- a/api4/resolver_team_member.go
+++ b/api4/resolver_team_member.go
@@ -7,7 +7,7 @@ import (
 	"context"
 	"strings"
 
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 // teamMember is an internal graphQL wrapper struct to add resolver methods.
diff --git a/api4/resolver_team_member_test.go b/api4/resolver_team_member_test.go
index de2aab8c0..5c7010ace 100644
--- a/api4/resolver_team_member_test.go
+++ b/api4/resolver_team_member_test.go
@@ -9,7 +9,7 @@ import (
 	"sort"
 	"testing"
 
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 	"github.com/stretchr/testify/assert"
 	"github.com/stretchr/testify/require"
 )
diff --git a/api4/resolver_test.go b/api4/resolver_test.go
index 30b755c33..a7f0b9e54 100644
--- a/api4/resolver_test.go
+++ b/api4/resolver_test.go
@@ -8,7 +8,7 @@ import (
 	"os"
 	"testing"
 
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 	"github.com/stretchr/testify/assert"
 	"github.com/stretchr/testify/require"
 )
diff --git a/api4/resolver_user.go b/api4/resolver_user.go
index 4572dc007..c1047613e 100644
--- a/api4/resolver_user.go
+++ b/api4/resolver_user.go
@@ -7,8 +7,8 @@ import (
 	"context"
 	"net/http"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/web"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/web"
 )
 
 // user is an internal graphQL wrapper struct to add resolver methods.
diff --git a/api4/resolver_user_test.go b/api4/resolver_user_test.go
index 1788da415..8d456e05a 100644
--- a/api4/resolver_user_test.go
+++ b/api4/resolver_user_test.go
@@ -10,7 +10,7 @@ import (
 	"testing"
 	"time"
 
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 	"github.com/stretchr/testify/assert"
 	"github.com/stretchr/testify/require"
 )
diff --git a/api4/role.go b/api4/role.go
index 523725642..142e9e732 100644
--- a/api4/role.go
+++ b/api4/role.go
@@ -7,9 +7,9 @@ import (
 	"encoding/json"
 	"net/http"
 
-	"github.com/mattermost/mattermost-server/v6/audit"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/audit"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
 )
 
 var notAllowedPermissions = []string{
diff --git a/api4/role_test.go b/api4/role_test.go
index 80cbcd522..f3b075410 100644
--- a/api4/role_test.go
+++ b/api4/role_test.go
@@ -12,7 +12,7 @@ import (
 	"github.com/stretchr/testify/assert"
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 func TestGetAllRoles(t *testing.T) {
diff --git a/api4/saml.go b/api4/saml.go
index 27a313e45..775b2afd7 100644
--- a/api4/saml.go
+++ b/api4/saml.go
@@ -10,9 +10,9 @@ import (
 	"mime/multipart"
 	"net/http"
 
-	"github.com/mattermost/mattermost-server/v6/audit"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/audit"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
 )
 
 func (api *API) InitSaml() {
diff --git a/api4/saml_test.go b/api4/saml_test.go
index 84d32fda6..85dcbfc58 100644
--- a/api4/saml_test.go
+++ b/api4/saml_test.go
@@ -9,8 +9,8 @@ import (
 
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/einterfaces/mocks"
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/einterfaces/mocks"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 func TestGetSamlMetadata(t *testing.T) {
diff --git a/api4/scheme.go b/api4/scheme.go
index 468e65d1b..37d65b80e 100644
--- a/api4/scheme.go
+++ b/api4/scheme.go
@@ -7,9 +7,9 @@ import (
 	"encoding/json"
 	"net/http"
 
-	"github.com/mattermost/mattermost-server/v6/audit"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/audit"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
 )
 
 func (api *API) InitScheme() {
diff --git a/api4/scheme_test.go b/api4/scheme_test.go
index 8f76e9998..6fd7e69a8 100644
--- a/api4/scheme_test.go
+++ b/api4/scheme_test.go
@@ -11,7 +11,7 @@ import (
 	"github.com/stretchr/testify/assert"
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 func TestCreateScheme(t *testing.T) {
diff --git a/api4/shared_channel.go b/api4/shared_channel.go
index b2fc386bc..1b2bf15d6 100644
--- a/api4/shared_channel.go
+++ b/api4/shared_channel.go
@@ -7,7 +7,7 @@ import (
 	"encoding/json"
 	"net/http"
 
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 func (api *API) InitSharedChannels() {
diff --git a/api4/shared_channel_test.go b/api4/shared_channel_test.go
index 7aa65872f..e83d75a63 100644
--- a/api4/shared_channel_test.go
+++ b/api4/shared_channel_test.go
@@ -13,8 +13,8 @@ import (
 	"github.com/stretchr/testify/assert"
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/app"
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/app"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 var (
diff --git a/api4/status.go b/api4/status.go
index e9fd83b2d..8f67e6c04 100644
--- a/api4/status.go
+++ b/api4/status.go
@@ -7,8 +7,8 @@ import (
 	"encoding/json"
 	"net/http"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
 )
 
 func (api *API) InitStatus() {
diff --git a/api4/status_test.go b/api4/status_test.go
index 61241a571..4164b10e2 100644
--- a/api4/status_test.go
+++ b/api4/status_test.go
@@ -10,7 +10,7 @@ import (
 	"github.com/stretchr/testify/assert"
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 func TestGetUserStatus(t *testing.T) {
diff --git a/api4/system.go b/api4/system.go
index 6bc62438c..f5743ef33 100644
--- a/api4/system.go
+++ b/api4/system.go
@@ -17,11 +17,11 @@ import (
 
 	"github.com/pkg/errors"
 
-	"github.com/mattermost/mattermost-server/v6/audit"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/services/cache"
-	"github.com/mattermost/mattermost-server/v6/services/upgrader"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/audit"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/services/cache"
+	"github.com/cjdelisle/matterfoss-server/v6/services/upgrader"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
 )
 
 const (
diff --git a/api4/system_local.go b/api4/system_local.go
index 3b316f0f5..942337a05 100644
--- a/api4/system_local.go
+++ b/api4/system_local.go
@@ -7,8 +7,8 @@ import (
 	"encoding/json"
 	"net/http"
 
-	"github.com/mattermost/mattermost-server/v6/audit"
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/audit"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 func (api *API) InitSystemLocal() {
diff --git a/api4/system_test.go b/api4/system_test.go
index 65bcbebde..dd794d531 100644
--- a/api4/system_test.go
+++ b/api4/system_test.go
@@ -21,9 +21,9 @@ import (
 	"github.com/stretchr/testify/assert"
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
-	"github.com/mattermost/mattermost-server/v6/utils/fileutils"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/utils/fileutils"
 )
 
 func TestGetPing(t *testing.T) {
diff --git a/api4/team.go b/api4/team.go
index 5eba9f195..50dca0b6a 100644
--- a/api4/team.go
+++ b/api4/team.go
@@ -15,9 +15,9 @@ import (
 	"strconv"
 	"strings"
 
-	"github.com/mattermost/mattermost-server/v6/audit"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/audit"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
 )
 
 const (
diff --git a/api4/team_local.go b/api4/team_local.go
index 296c8058b..3eb53eabc 100644
--- a/api4/team_local.go
+++ b/api4/team_local.go
@@ -11,11 +11,11 @@ import (
 
 	"github.com/pkg/errors"
 
-	"github.com/mattermost/mattermost-server/v6/app/email"
-	"github.com/mattermost/mattermost-server/v6/audit"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
-	"github.com/mattermost/mattermost-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/app/email"
+	"github.com/cjdelisle/matterfoss-server/v6/audit"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
 )
 
 func (api *API) InitTeamLocal() {
diff --git a/api4/team_test.go b/api4/team_test.go
index 8a3e0341e..b7fe86027 100644
--- a/api4/team_test.go
+++ b/api4/team_test.go
@@ -16,11 +16,11 @@ import (
 	"github.com/stretchr/testify/assert"
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/app"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/i18n"
-	"github.com/mattermost/mattermost-server/v6/shared/mail"
-	"github.com/mattermost/mattermost-server/v6/utils/testutils"
+	"github.com/cjdelisle/matterfoss-server/v6/app"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/i18n"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mail"
+	"github.com/cjdelisle/matterfoss-server/v6/utils/testutils"
 )
 
 func TestCreateTeam(t *testing.T) {
diff --git a/api4/terms_of_service.go b/api4/terms_of_service.go
index 2de763f0a..cd5f05bd6 100644
--- a/api4/terms_of_service.go
+++ b/api4/terms_of_service.go
@@ -7,10 +7,10 @@ import (
 	"encoding/json"
 	"net/http"
 
-	"github.com/mattermost/mattermost-server/v6/app"
-	"github.com/mattermost/mattermost-server/v6/audit"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/app"
+	"github.com/cjdelisle/matterfoss-server/v6/audit"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
 )
 
 func (api *API) InitTermsOfService() {
diff --git a/api4/terms_of_service_test.go b/api4/terms_of_service_test.go
index e3699d14a..63809f9ec 100644
--- a/api4/terms_of_service_test.go
+++ b/api4/terms_of_service_test.go
@@ -9,7 +9,7 @@ import (
 	"github.com/stretchr/testify/assert"
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 func TestGetTermsOfService(t *testing.T) {
diff --git a/api4/upload.go b/api4/upload.go
index bac31f279..50f737576 100644
--- a/api4/upload.go
+++ b/api4/upload.go
@@ -10,9 +10,9 @@ import (
 	"mime/multipart"
 	"net/http"
 
-	"github.com/mattermost/mattermost-server/v6/audit"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/audit"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
 )
 
 func (api *API) InitUpload() {
diff --git a/api4/upload_test.go b/api4/upload_test.go
index 19a786daf..07c415f36 100644
--- a/api4/upload_test.go
+++ b/api4/upload_test.go
@@ -14,8 +14,8 @@ import (
 
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/utils/fileutils"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/utils/fileutils"
 )
 
 func TestCreateUpload(t *testing.T) {
diff --git a/api4/user.go b/api4/user.go
index 585d314a7..bd83106cd 100644
--- a/api4/user.go
+++ b/api4/user.go
@@ -13,13 +13,13 @@ import (
 	"strings"
 	"time"
 
-	"github.com/mattermost/mattermost-server/v6/app"
-	"github.com/mattermost/mattermost-server/v6/audit"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
-	"github.com/mattermost/mattermost-server/v6/store"
-	"github.com/mattermost/mattermost-server/v6/utils"
-	"github.com/mattermost/mattermost-server/v6/web"
+	"github.com/cjdelisle/matterfoss-server/v6/app"
+	"github.com/cjdelisle/matterfoss-server/v6/audit"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/utils"
+	"github.com/cjdelisle/matterfoss-server/v6/web"
 )
 
 func (api *API) InitUser() {
diff --git a/api4/user_local.go b/api4/user_local.go
index a227fa137..8ba29cf3c 100644
--- a/api4/user_local.go
+++ b/api4/user_local.go
@@ -8,10 +8,10 @@ import (
 	"net/http"
 	"strconv"
 
-	"github.com/mattermost/mattermost-server/v6/audit"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
-	"github.com/mattermost/mattermost-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/audit"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
 )
 
 func (api *API) InitUserLocal() {
diff --git a/api4/user_test.go b/api4/user_test.go
index e15cfab08..6feb30731 100644
--- a/api4/user_test.go
+++ b/api4/user_test.go
@@ -18,13 +18,13 @@ import (
 	"github.com/stretchr/testify/mock"
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/app"
-	"github.com/mattermost/mattermost-server/v6/einterfaces/mocks"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/mail"
-	"github.com/mattermost/mattermost-server/v6/utils/testutils"
+	"github.com/cjdelisle/matterfoss-server/v6/app"
+	"github.com/cjdelisle/matterfoss-server/v6/einterfaces/mocks"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mail"
+	"github.com/cjdelisle/matterfoss-server/v6/utils/testutils"
 
-	_ "github.com/mattermost/mattermost-server/v6/model/gitlab"
+	_ "github.com/cjdelisle/matterfoss-server/v6/model/gitlab"
 )
 
 func TestCreateUser(t *testing.T) {
diff --git a/api4/user_viewmembers_test.go b/api4/user_viewmembers_test.go
index 135987386..511ea8222 100644
--- a/api4/user_viewmembers_test.go
+++ b/api4/user_viewmembers_test.go
@@ -8,7 +8,7 @@ import (
 
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 func TestAPIRestrictedViewMembers(t *testing.T) {
diff --git a/api4/webhook.go b/api4/webhook.go
index 784568480..5ed4c0bc8 100644
--- a/api4/webhook.go
+++ b/api4/webhook.go
@@ -7,9 +7,9 @@ import (
 	"encoding/json"
 	"net/http"
 
-	"github.com/mattermost/mattermost-server/v6/audit"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/audit"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
 )
 
 func (api *API) InitWebhook() {
diff --git a/api4/webhook_local.go b/api4/webhook_local.go
index b9a45a2d3..5744824fd 100644
--- a/api4/webhook_local.go
+++ b/api4/webhook_local.go
@@ -7,9 +7,9 @@ import (
 	"encoding/json"
 	"net/http"
 
-	"github.com/mattermost/mattermost-server/v6/audit"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/audit"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
 )
 
 func (api *API) InitWebhookLocal() {
diff --git a/api4/webhook_test.go b/api4/webhook_test.go
index 85335dbb3..57f1dfcd7 100644
--- a/api4/webhook_test.go
+++ b/api4/webhook_test.go
@@ -9,7 +9,7 @@ import (
 	"github.com/stretchr/testify/assert"
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 func TestCreateIncomingWebhook(t *testing.T) {
diff --git a/api4/websocket.go b/api4/websocket.go
index 63834e0a6..9e2a7ab3e 100644
--- a/api4/websocket.go
+++ b/api4/websocket.go
@@ -8,9 +8,9 @@ import (
 
 	"github.com/gorilla/websocket"
 
-	"github.com/mattermost/mattermost-server/v6/app"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/app"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
 )
 
 const (
diff --git a/api4/websocket_norace_test.go b/api4/websocket_norace_test.go
index 88d2a508c..83fec6715 100644
--- a/api4/websocket_norace_test.go
+++ b/api4/websocket_norace_test.go
@@ -12,7 +12,7 @@ import (
 
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 // TestWebSocket is intentionally made to skip -race mode
diff --git a/api4/websocket_test.go b/api4/websocket_test.go
index 7ff693330..d55ddbf20 100644
--- a/api4/websocket_test.go
+++ b/api4/websocket_test.go
@@ -14,7 +14,7 @@ import (
 	"github.com/gorilla/websocket"
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 func TestWebSocketTrailingSlash(t *testing.T) {
diff --git a/app/admin.go b/app/admin.go
index 722a5b436..8bc5f73e5 100644
--- a/app/admin.go
+++ b/app/admin.go
@@ -13,12 +13,12 @@ import (
 	"runtime/debug"
 	"time"
 
-	"github.com/mattermost/mattermost-server/v6/config"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/services/cache"
-	"github.com/mattermost/mattermost-server/v6/shared/i18n"
-	"github.com/mattermost/mattermost-server/v6/shared/mail"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/config"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/services/cache"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/i18n"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mail"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
 )
 
 var latestVersionCache = cache.NewLRU(cache.LRUOptions{
diff --git a/app/admin_advisor.go b/app/admin_advisor.go
index 918535bdf..5ca9d446f 100644
--- a/app/admin_advisor.go
+++ b/app/admin_advisor.go
@@ -7,11 +7,11 @@ import (
 	"net/http"
 	"strings"
 
-	"github.com/mattermost/mattermost-server/v6/app/request"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/i18n"
-	"github.com/mattermost/mattermost-server/v6/shared/mail"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/app/request"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/i18n"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mail"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
 )
 
 func (a *App) GetWarnMetricsStatus() (map[string]*model.WarnMetricStatus, *model.AppError) {
diff --git a/app/admin_test.go b/app/admin_test.go
index e6f32ae5b..70c9476ff 100644
--- a/app/admin_test.go
+++ b/app/admin_test.go
@@ -11,7 +11,7 @@ import (
 
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 func TestGetLatestVersion(t *testing.T) {
@@ -25,7 +25,7 @@ func TestGetLatestVersion(t *testing.T) {
 		CreatedAt:   "2022-01-13T14:19:44Z",
 		PublishedAt: "2022-01-14T13:45:09Z",
 		Body:        "Mattermost Platform Release v6.3.0",
-		Url:         "https://github.com/mattermost/mattermost-server/releases/tag/v6.3.0",
+		Url:         "https://github.com/cjdelisle/matterfoss-server/releases/tag/v6.3.0",
 	}
 
 	validJSON, jsonErr := json.Marshal(version)
@@ -55,7 +55,7 @@ func TestGetLatestVersion(t *testing.T) {
 			CreatedAt:   "2022-01-13T14:19:44Z",
 			PublishedAt: "2022-01-14T13:45:09Z",
 			Body:        "Mattermost Platform Release v6.3.0",
-			Url:         "https://github.com/mattermost/mattermost-server/releases/tag/v6.3.0",
+			Url:         "https://github.com/cjdelisle/matterfoss-server/releases/tag/v6.3.0",
 		}
 
 		updatedJSON, jsonErr := json.Marshal(v)
diff --git a/app/analytics.go b/app/analytics.go
index 747a7b80c..568ddc3bf 100644
--- a/app/analytics.go
+++ b/app/analytics.go
@@ -8,8 +8,8 @@ import (
 
 	"golang.org/x/sync/errgroup"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
 )
 
 const (
diff --git a/app/app.go b/app/app.go
index a85737e32..e8cb9bfe7 100644
--- a/app/app.go
+++ b/app/app.go
@@ -9,15 +9,15 @@ import (
 	"strconv"
 	"time"
 
-	"github.com/mattermost/mattermost-server/v6/einterfaces"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/services/httpservice"
-	"github.com/mattermost/mattermost-server/v6/services/imageproxy"
-	"github.com/mattermost/mattermost-server/v6/services/searchengine"
-	"github.com/mattermost/mattermost-server/v6/services/timezones"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
-	"github.com/mattermost/mattermost-server/v6/shared/templates"
-	"github.com/mattermost/mattermost-server/v6/utils"
+	"github.com/cjdelisle/matterfoss-server/v6/einterfaces"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/services/httpservice"
+	"github.com/cjdelisle/matterfoss-server/v6/services/imageproxy"
+	"github.com/cjdelisle/matterfoss-server/v6/services/searchengine"
+	"github.com/cjdelisle/matterfoss-server/v6/services/timezones"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/templates"
+	"github.com/cjdelisle/matterfoss-server/v6/utils"
 )
 
 // App is a pure functional component that does not have any fields, except Server.
diff --git a/app/app_iface.go b/app/app_iface.go
index a7d4f3106..4b4ac6757 100644
--- a/app/app_iface.go
+++ b/app/app_iface.go
@@ -18,20 +18,20 @@ import (
 	"reflect"
 	"time"
 
-	"github.com/mattermost/mattermost-server/v6/app/request"
-	"github.com/mattermost/mattermost-server/v6/audit"
-	"github.com/mattermost/mattermost-server/v6/einterfaces"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/plugin"
-	"github.com/mattermost/mattermost-server/v6/services/httpservice"
-	"github.com/mattermost/mattermost-server/v6/services/imageproxy"
-	"github.com/mattermost/mattermost-server/v6/services/remotecluster"
-	"github.com/mattermost/mattermost-server/v6/services/searchengine"
-	"github.com/mattermost/mattermost-server/v6/services/timezones"
-	"github.com/mattermost/mattermost-server/v6/shared/filestore"
-	"github.com/mattermost/mattermost-server/v6/shared/i18n"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
-	"github.com/mattermost/mattermost-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/app/request"
+	"github.com/cjdelisle/matterfoss-server/v6/audit"
+	"github.com/cjdelisle/matterfoss-server/v6/einterfaces"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/plugin"
+	"github.com/cjdelisle/matterfoss-server/v6/services/httpservice"
+	"github.com/cjdelisle/matterfoss-server/v6/services/imageproxy"
+	"github.com/cjdelisle/matterfoss-server/v6/services/remotecluster"
+	"github.com/cjdelisle/matterfoss-server/v6/services/searchengine"
+	"github.com/cjdelisle/matterfoss-server/v6/services/timezones"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/filestore"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/i18n"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
 )
 
 // AppIface is extracted from App struct and contains all it's exported methods. It's provided to allow partial interface passing and app layers creation.
diff --git a/app/app_test.go b/app/app_test.go
index 2a47e03b6..ad2f34db9 100644
--- a/app/app_test.go
+++ b/app/app_test.go
@@ -12,8 +12,8 @@ import (
 	"github.com/stretchr/testify/assert"
 	"github.com/stretchr/testify/mock"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/store/storetest/mocks"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/store/storetest/mocks"
 )
 
 /* Temporarily comment out until MM-11108
diff --git a/app/audit.go b/app/audit.go
index 1c1026c8d..a947af206 100644
--- a/app/audit.go
+++ b/app/audit.go
@@ -9,11 +9,11 @@ import (
 	"net/http"
 	"os/user"
 
-	"github.com/mattermost/mattermost-server/v6/audit"
-	"github.com/mattermost/mattermost-server/v6/config"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
-	"github.com/mattermost/mattermost-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/audit"
+	"github.com/cjdelisle/matterfoss-server/v6/config"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
 )
 
 const (
diff --git a/app/authentication.go b/app/authentication.go
index 899776b81..0e4836d19 100644
--- a/app/authentication.go
+++ b/app/authentication.go
@@ -8,10 +8,10 @@ import (
 	"net/http"
 	"strings"
 
-	"github.com/mattermost/mattermost-server/v6/app/request"
-	"github.com/mattermost/mattermost-server/v6/app/users"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/mfa"
+	"github.com/cjdelisle/matterfoss-server/v6/app/request"
+	"github.com/cjdelisle/matterfoss-server/v6/app/users"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mfa"
 )
 
 type TokenLocation int
diff --git a/app/authentication_test.go b/app/authentication_test.go
index dd314cb9f..4182d9c23 100644
--- a/app/authentication_test.go
+++ b/app/authentication_test.go
@@ -11,7 +11,7 @@ import (
 
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 func TestParseAuthTokenFromRequest(t *testing.T) {
diff --git a/app/authorization.go b/app/authorization.go
index a5064f93a..435ac5145 100644
--- a/app/authorization.go
+++ b/app/authorization.go
@@ -10,8 +10,8 @@ import (
 	"net/http"
 	"strings"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
 )
 
 func (a *App) MakePermissionError(s *model.Session, permissions []*model.Permission) *model.AppError {
diff --git a/app/authorization_test.go b/app/authorization_test.go
index 3c6f13286..058fef780 100644
--- a/app/authorization_test.go
+++ b/app/authorization_test.go
@@ -16,9 +16,9 @@ import (
 	"github.com/stretchr/testify/assert"
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/plugin/plugintest/mock"
-	"github.com/mattermost/mattermost-server/v6/store/storetest/mocks"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/plugin/plugintest/mock"
+	"github.com/cjdelisle/matterfoss-server/v6/store/storetest/mocks"
 )
 
 func TestCheckIfRolesGrantPermission(t *testing.T) {
diff --git a/app/auto_responder.go b/app/auto_responder.go
index 0fd819cec..0b1811ead 100644
--- a/app/auto_responder.go
+++ b/app/auto_responder.go
@@ -7,8 +7,8 @@ import (
 	"net/http"
 	"time"
 
-	"github.com/mattermost/mattermost-server/v6/app/request"
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/app/request"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 // check if there is any auto_response type post in channel by the user in a calender day
diff --git a/app/auto_responder_test.go b/app/auto_responder_test.go
index 5593d11c4..70ffd65f6 100644
--- a/app/auto_responder_test.go
+++ b/app/auto_responder_test.go
@@ -10,7 +10,7 @@ import (
 	"github.com/stretchr/testify/assert"
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 func TestSetAutoResponderStatus(t *testing.T) {
diff --git a/app/bot.go b/app/bot.go
index 99b53451e..fd89f314e 100644
--- a/app/bot.go
+++ b/app/bot.go
@@ -9,11 +9,11 @@ import (
 	"fmt"
 	"net/http"
 
-	"github.com/mattermost/mattermost-server/v6/app/request"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/i18n"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
-	"github.com/mattermost/mattermost-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/app/request"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/i18n"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
 )
 
 // CreateBot creates the given bot and corresponding user.
diff --git a/app/bot_test.go b/app/bot_test.go
index c491f9aca..e66283e66 100644
--- a/app/bot_test.go
+++ b/app/bot_test.go
@@ -11,7 +11,7 @@ import (
 	"github.com/stretchr/testify/assert"
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 func TestCreateBot(t *testing.T) {
diff --git a/app/brand.go b/app/brand.go
index a5ab57c9d..430c2468a 100644
--- a/app/brand.go
+++ b/app/brand.go
@@ -9,7 +9,7 @@ import (
 	"net/http"
 	"time"
 
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 const (
diff --git a/app/busy.go b/app/busy.go
index 8341b9107..d1a99c24e 100644
--- a/app/busy.go
+++ b/app/busy.go
@@ -10,8 +10,8 @@ import (
 	"sync/atomic"
 	"time"
 
-	"github.com/mattermost/mattermost-server/v6/einterfaces"
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/einterfaces"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 const (
diff --git a/app/busy_test.go b/app/busy_test.go
index 7d8fc638d..b0f0e10f3 100644
--- a/app/busy_test.go
+++ b/app/busy_test.go
@@ -10,8 +10,8 @@ import (
 
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/einterfaces"
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/einterfaces"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 func TestBusySet(t *testing.T) {
diff --git a/app/channel.go b/app/channel.go
index 905c5c61b..020089eb5 100644
--- a/app/channel.go
+++ b/app/channel.go
@@ -11,14 +11,14 @@ import (
 	"net/http"
 	"strings"
 
-	"github.com/mattermost/mattermost-server/v6/app/request"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/plugin"
-	"github.com/mattermost/mattermost-server/v6/shared/i18n"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
-	"github.com/mattermost/mattermost-server/v6/store"
-	"github.com/mattermost/mattermost-server/v6/store/sqlstore"
-	"github.com/mattermost/mattermost-server/v6/utils"
+	"github.com/cjdelisle/matterfoss-server/v6/app/request"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/plugin"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/i18n"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/store/sqlstore"
+	"github.com/cjdelisle/matterfoss-server/v6/utils"
 )
 
 // DefaultChannelNames returns the list of system-wide default channel names.
diff --git a/app/channel_category.go b/app/channel_category.go
index bc903e285..7a0e498c3 100644
--- a/app/channel_category.go
+++ b/app/channel_category.go
@@ -8,9 +8,9 @@ import (
 	"errors"
 	"net/http"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
-	"github.com/mattermost/mattermost-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
 )
 
 func (a *App) createInitialSidebarCategories(userID, teamID string) (*model.OrderedSidebarCategories, *model.AppError) {
diff --git a/app/channel_category_test.go b/app/channel_category_test.go
index 6f586ddfd..c5510ca75 100644
--- a/app/channel_category_test.go
+++ b/app/channel_category_test.go
@@ -10,7 +10,7 @@ import (
 	"github.com/stretchr/testify/assert"
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 func TestSidebarCategory(t *testing.T) {
diff --git a/app/channel_test.go b/app/channel_test.go
index 0153f723d..1895e90e5 100644
--- a/app/channel_test.go
+++ b/app/channel_test.go
@@ -18,9 +18,9 @@ import (
 	"github.com/stretchr/testify/mock"
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/app/users"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/store/storetest/mocks"
+	"github.com/cjdelisle/matterfoss-server/v6/app/users"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/store/storetest/mocks"
 )
 
 func TestPermanentDeleteChannel(t *testing.T) {
diff --git a/app/channels.go b/app/channels.go
index b8ae9a545..afb996b87 100644
--- a/app/channels.go
+++ b/app/channels.go
@@ -10,15 +10,15 @@ import (
 	"sync"
 	"sync/atomic"
 
-	"github.com/mattermost/mattermost-server/v6/app/imaging"
-	"github.com/mattermost/mattermost-server/v6/app/request"
-	"github.com/mattermost/mattermost-server/v6/config"
-	"github.com/mattermost/mattermost-server/v6/einterfaces"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/plugin"
-	"github.com/mattermost/mattermost-server/v6/services/imageproxy"
-	"github.com/mattermost/mattermost-server/v6/shared/filestore"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/app/imaging"
+	"github.com/cjdelisle/matterfoss-server/v6/app/request"
+	"github.com/cjdelisle/matterfoss-server/v6/config"
+	"github.com/cjdelisle/matterfoss-server/v6/einterfaces"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/plugin"
+	"github.com/cjdelisle/matterfoss-server/v6/services/imageproxy"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/filestore"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
 	"github.com/pkg/errors"
 )
 
diff --git a/app/cloud.go b/app/cloud.go
index 0011e0f83..200f4966a 100644
--- a/app/cloud.go
+++ b/app/cloud.go
@@ -8,9 +8,9 @@ import (
 	"net/http"
 	"time"
 
-	"github.com/mattermost/mattermost-server/v6/app/request"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/app/request"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
 )
 
 func (a *App) getSysAdminsEmailRecipients() ([]*model.User, *model.AppError) {
diff --git a/app/cluster.go b/app/cluster.go
index 4d0850f98..dcf64c342 100644
--- a/app/cluster.go
+++ b/app/cluster.go
@@ -6,8 +6,8 @@ package app
 import (
 	"fmt"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
 )
 
 type clusterWrapper struct {
diff --git a/app/cluster_discovery.go b/app/cluster_discovery.go
index 0a003e06a..6c10d8e9d 100644
--- a/app/cluster_discovery.go
+++ b/app/cluster_discovery.go
@@ -6,8 +6,8 @@ package app
 import (
 	"time"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
 )
 
 const (
diff --git a/app/cluster_discovery_test.go b/app/cluster_discovery_test.go
index 050f289c5..83bc86093 100644
--- a/app/cluster_discovery_test.go
+++ b/app/cluster_discovery_test.go
@@ -7,7 +7,7 @@ import (
 	"testing"
 	"time"
 
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 func TestClusterDiscoveryService(t *testing.T) {
diff --git a/app/cluster_handlers.go b/app/cluster_handlers.go
index 242875e9c..e1273084d 100644
--- a/app/cluster_handlers.go
+++ b/app/cluster_handlers.go
@@ -7,9 +7,9 @@ import (
 	"bytes"
 	"encoding/json"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/plugin"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/plugin"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
 )
 
 func (s *Server) clusterInstallPluginHandler(msg *model.ClusterMessage) {
diff --git a/app/command.go b/app/command.go
index 956c6013c..d6cce4083 100644
--- a/app/command.go
+++ b/app/command.go
@@ -15,11 +15,11 @@ import (
 	"sync"
 	"unicode"
 
-	"github.com/mattermost/mattermost-server/v6/app/request"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/i18n"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
-	"github.com/mattermost/mattermost-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/app/request"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/i18n"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
 )
 
 const (
diff --git a/app/command_autocomplete.go b/app/command_autocomplete.go
index 56fd45d6f..c780b72fe 100644
--- a/app/command_autocomplete.go
+++ b/app/command_autocomplete.go
@@ -11,9 +11,9 @@ import (
 	"sort"
 	"strings"
 
-	"github.com/mattermost/mattermost-server/v6/app/request"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/app/request"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
 )
 
 // AutocompleteDynamicArgProvider dynamically provides auto-completion args for built-in commands.
diff --git a/app/command_autocomplete_test.go b/app/command_autocomplete_test.go
index a8e2a5567..84fa9bf89 100644
--- a/app/command_autocomplete_test.go
+++ b/app/command_autocomplete_test.go
@@ -9,9 +9,9 @@ import (
 
 	"github.com/stretchr/testify/assert"
 
-	"github.com/mattermost/mattermost-server/v6/app/request"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/i18n"
+	"github.com/cjdelisle/matterfoss-server/v6/app/request"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/i18n"
 )
 
 func TestParseStaticListArgument(t *testing.T) {
diff --git a/app/compliance.go b/app/compliance.go
index c4e3be4d1..e2f3b81ac 100644
--- a/app/compliance.go
+++ b/app/compliance.go
@@ -8,9 +8,9 @@ import (
 	"io/ioutil"
 	"net/http"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
-	"github.com/mattermost/mattermost-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
 )
 
 func (a *App) GetComplianceReports(page, perPage int) (model.Compliances, *model.AppError) {
diff --git a/app/config.go b/app/config.go
index b86e4f5b9..52478a599 100644
--- a/app/config.go
+++ b/app/config.go
@@ -20,11 +20,11 @@ import (
 
 	"github.com/pkg/errors"
 
-	"github.com/mattermost/mattermost-server/v6/config"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/mail"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
-	"github.com/mattermost/mattermost-server/v6/utils"
+	"github.com/cjdelisle/matterfoss-server/v6/config"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mail"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/utils"
 )
 
 const (
diff --git a/app/config_test.go b/app/config_test.go
index fcca2889a..b01cec59e 100644
--- a/app/config_test.go
+++ b/app/config_test.go
@@ -11,9 +11,9 @@ import (
 	"github.com/stretchr/testify/assert"
 	"github.com/stretchr/testify/mock"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/store/storetest/mocks"
-	"github.com/mattermost/mattermost-server/v6/utils"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/store/storetest/mocks"
+	"github.com/cjdelisle/matterfoss-server/v6/utils"
 )
 
 func TestConfigListener(t *testing.T) {
diff --git a/app/context.go b/app/context.go
index 137a67507..a7843ebc2 100644
--- a/app/context.go
+++ b/app/context.go
@@ -6,9 +6,9 @@ package app
 import (
 	"context"
 
-	"github.com/mattermost/mattermost-server/v6/app/request"
-	"github.com/mattermost/mattermost-server/v6/plugin"
-	"github.com/mattermost/mattermost-server/v6/store/sqlstore"
+	"github.com/cjdelisle/matterfoss-server/v6/app/request"
+	"github.com/cjdelisle/matterfoss-server/v6/plugin"
+	"github.com/cjdelisle/matterfoss-server/v6/store/sqlstore"
 )
 
 // WithMaster adds the context value that master DB should be selected for this request.
diff --git a/app/data_retention.go b/app/data_retention.go
index e7b914e14..87c7c213a 100644
--- a/app/data_retention.go
+++ b/app/data_retention.go
@@ -6,7 +6,7 @@ package app
 import (
 	"net/http"
 
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 func (a *App) GetGlobalRetentionPolicy() (*model.GlobalRetentionPolicy, *model.AppError) {
diff --git a/app/download.go b/app/download.go
index e1a8ae0e5..99623e3b8 100644
--- a/app/download.go
+++ b/app/download.go
@@ -12,8 +12,8 @@ import (
 
 	"github.com/pkg/errors"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/utils"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/utils"
 )
 
 const (
diff --git a/app/download_test.go b/app/download_test.go
index 7830647d2..6975e7457 100644
--- a/app/download_test.go
+++ b/app/download_test.go
@@ -11,7 +11,7 @@ import (
 
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 func TestDownloadFromURL(t *testing.T) {
diff --git a/app/email/email.go b/app/email/email.go
index 5fd456745..af530c094 100644
--- a/app/email/email.go
+++ b/app/email/email.go
@@ -14,11 +14,11 @@ import (
 	"strings"
 	"time"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/i18n"
-	"github.com/mattermost/mattermost-server/v6/shared/mail"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
-	"github.com/mattermost/mattermost-server/v6/shared/templates"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/i18n"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mail"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/templates"
 	"github.com/pkg/errors"
 
 	"github.com/microcosm-cc/bluemonday"
diff --git a/app/email/email_batching.go b/app/email/email_batching.go
index ae7d3cc17..ad5db9e2f 100644
--- a/app/email/email_batching.go
+++ b/app/email/email_batching.go
@@ -14,9 +14,9 @@ import (
 	"sync"
 	"time"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/i18n"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/i18n"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
 )
 
 const (
diff --git a/app/email/email_batching_test.go b/app/email/email_batching_test.go
index 68b7b9451..76cc806c0 100644
--- a/app/email/email_batching_test.go
+++ b/app/email/email_batching_test.go
@@ -12,7 +12,7 @@ import (
 	"github.com/stretchr/testify/assert"
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 func TestHandleNewNotifications(t *testing.T) {
diff --git a/app/email/email_test.go b/app/email/email_test.go
index 37103f283..6bf35e6ad 100644
--- a/app/email/email_test.go
+++ b/app/email/email_test.go
@@ -10,8 +10,8 @@ import (
 
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/mail"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mail"
 )
 
 func TestCondenseSiteURL(t *testing.T) {
diff --git a/app/email/helper_test.go b/app/email/helper_test.go
index 2aabf04a3..ef6308b3f 100644
--- a/app/email/helper_test.go
+++ b/app/email/helper_test.go
@@ -10,15 +10,15 @@ import (
 	"path/filepath"
 	"testing"
 
-	"github.com/mattermost/mattermost-server/v6/app/users"
-	"github.com/mattermost/mattermost-server/v6/config"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/plugin/plugintest/mock"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
-	"github.com/mattermost/mattermost-server/v6/shared/templates"
-	"github.com/mattermost/mattermost-server/v6/store"
-	"github.com/mattermost/mattermost-server/v6/store/storetest/mocks"
-	"github.com/mattermost/mattermost-server/v6/testlib"
+	"github.com/cjdelisle/matterfoss-server/v6/app/users"
+	"github.com/cjdelisle/matterfoss-server/v6/config"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/plugin/plugintest/mock"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/templates"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/store/storetest/mocks"
+	"github.com/cjdelisle/matterfoss-server/v6/testlib"
 )
 
 type TestHelper struct {
diff --git a/app/email/main_test.go b/app/email/main_test.go
index ef8941c6d..d2d26b8b4 100644
--- a/app/email/main_test.go
+++ b/app/email/main_test.go
@@ -7,7 +7,7 @@ import (
 	"flag"
 	"testing"
 
-	"github.com/mattermost/mattermost-server/v6/testlib"
+	"github.com/cjdelisle/matterfoss-server/v6/testlib"
 )
 
 var mainHelper *testlib.MainHelper
diff --git a/app/email/mocks/ServiceInterface.go b/app/email/mocks/ServiceInterface.go
index f73a2841d..4a9833f9e 100644
--- a/app/email/mocks/ServiceInterface.go
+++ b/app/email/mocks/ServiceInterface.go
@@ -7,13 +7,13 @@ package mocks
 import (
 	io "io"
 
-	i18n "github.com/mattermost/mattermost-server/v6/shared/i18n"
+	i18n "github.com/cjdelisle/matterfoss-server/v6/shared/i18n"
 
 	mock "github.com/stretchr/testify/mock"
 
-	model "github.com/mattermost/mattermost-server/v6/model"
+	model "github.com/cjdelisle/matterfoss-server/v6/model"
 
-	templates "github.com/mattermost/mattermost-server/v6/shared/templates"
+	templates "github.com/cjdelisle/matterfoss-server/v6/shared/templates"
 
 	throttled "github.com/throttled/throttled"
 )
diff --git a/app/email/notification_email.go b/app/email/notification_email.go
index 32ab36bd5..f941c4455 100644
--- a/app/email/notification_email.go
+++ b/app/email/notification_email.go
@@ -8,9 +8,9 @@ import (
 	"path/filepath"
 	"strings"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/i18n"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/i18n"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
 )
 
 func (es *Service) GetMessageForNotification(post *model.Post, translateFunc i18n.TranslateFunc) string {
diff --git a/app/email/service.go b/app/email/service.go
index 5e79c0484..0c59d1ca5 100644
--- a/app/email/service.go
+++ b/app/email/service.go
@@ -12,11 +12,11 @@ import (
 	"github.com/throttled/throttled"
 	"github.com/throttled/throttled/store/memstore"
 
-	"github.com/mattermost/mattermost-server/v6/app/users"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/i18n"
-	"github.com/mattermost/mattermost-server/v6/shared/templates"
-	"github.com/mattermost/mattermost-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/app/users"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/i18n"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/templates"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
 )
 
 const (
diff --git a/app/email/utils.go b/app/email/utils.go
index cb7981eba..531159aa5 100644
--- a/app/email/utils.go
+++ b/app/email/utils.go
@@ -4,8 +4,8 @@
 package email
 
 import (
-	"github.com/mattermost/mattermost-server/v6/shared/mail"
-	"github.com/mattermost/mattermost-server/v6/utils"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mail"
+	"github.com/cjdelisle/matterfoss-server/v6/utils"
 )
 
 func (es *Service) mailServiceConfig() *mail.SMTPConfig {
diff --git a/app/email_test.go b/app/email_test.go
index ad3ab3842..55e3bd8a9 100644
--- a/app/email_test.go
+++ b/app/email_test.go
@@ -8,7 +8,7 @@ import (
 	"strconv"
 	"testing"
 
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 	"github.com/stretchr/testify/assert"
 	"github.com/stretchr/testify/require"
 )
diff --git a/app/emoji.go b/app/emoji.go
index f319e26bb..60d5ced56 100644
--- a/app/emoji.go
+++ b/app/emoji.go
@@ -22,10 +22,10 @@ import (
 
 	"github.com/disintegration/imaging"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
-	"github.com/mattermost/mattermost-server/v6/store"
-	"github.com/mattermost/mattermost-server/v6/utils"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/utils"
 )
 
 const (
diff --git a/app/enterprise.go b/app/enterprise.go
index e577ab476..3a41de6f4 100644
--- a/app/enterprise.go
+++ b/app/enterprise.go
@@ -4,9 +4,9 @@
 package app
 
 import (
-	"github.com/mattermost/mattermost-server/v6/einterfaces"
-	ejobs "github.com/mattermost/mattermost-server/v6/einterfaces/jobs"
-	"github.com/mattermost/mattermost-server/v6/services/searchengine"
+	"github.com/cjdelisle/matterfoss-server/v6/einterfaces"
+	ejobs "github.com/cjdelisle/matterfoss-server/v6/einterfaces/jobs"
+	"github.com/cjdelisle/matterfoss-server/v6/services/searchengine"
 )
 
 var accountMigrationInterface func(*App) einterfaces.AccountMigrationInterface
diff --git a/app/enterprise_test.go b/app/enterprise_test.go
index be2e6d87d..7650b6d1e 100644
--- a/app/enterprise_test.go
+++ b/app/enterprise_test.go
@@ -9,10 +9,10 @@ import (
 	"github.com/stretchr/testify/assert"
 	"github.com/stretchr/testify/mock"
 
-	"github.com/mattermost/mattermost-server/v6/einterfaces"
-	"github.com/mattermost/mattermost-server/v6/einterfaces/mocks"
-	"github.com/mattermost/mattermost-server/v6/model"
-	storemocks "github.com/mattermost/mattermost-server/v6/store/storetest/mocks"
+	"github.com/cjdelisle/matterfoss-server/v6/einterfaces"
+	"github.com/cjdelisle/matterfoss-server/v6/einterfaces/mocks"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	storemocks "github.com/cjdelisle/matterfoss-server/v6/store/storetest/mocks"
 )
 
 func TestSAMLSettings(t *testing.T) {
diff --git a/app/expirynotify.go b/app/expirynotify.go
index bf29a2126..293cb7711 100644
--- a/app/expirynotify.go
+++ b/app/expirynotify.go
@@ -6,9 +6,9 @@ package app
 import (
 	"net/http"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/i18n"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/i18n"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
 )
 
 const (
diff --git a/app/expirynotify_test.go b/app/expirynotify_test.go
index 42b74e802..6aaeaf755 100644
--- a/app/expirynotify_test.go
+++ b/app/expirynotify_test.go
@@ -10,7 +10,7 @@ import (
 
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 func TestNotifySessionsExpired(t *testing.T) {
diff --git a/app/export.go b/app/export.go
index 08fc6fd38..7eba7d5f7 100644
--- a/app/export.go
+++ b/app/export.go
@@ -15,9 +15,9 @@ import (
 
 	"github.com/pkg/errors"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
-	"github.com/mattermost/mattermost-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
 )
 
 // We use this map to identify the exportable preferences.
diff --git a/app/export_converters.go b/app/export_converters.go
index 42fa16449..babc03e85 100644
--- a/app/export_converters.go
+++ b/app/export_converters.go
@@ -6,7 +6,7 @@ package app
 import (
 	"strings"
 
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 func ImportLineFromTeam(team *model.TeamForExport) *LineImportData {
diff --git a/app/export_test.go b/app/export_test.go
index c097dd181..eac95a1b2 100644
--- a/app/export_test.go
+++ b/app/export_test.go
@@ -15,9 +15,9 @@ import (
 	"github.com/stretchr/testify/assert"
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/utils"
-	"github.com/mattermost/mattermost-server/v6/utils/fileutils"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/utils"
+	"github.com/cjdelisle/matterfoss-server/v6/utils/fileutils"
 )
 
 func TestReactionsOfPost(t *testing.T) {
diff --git a/app/extract_plugin_tar.go b/app/extract_plugin_tar.go
index 43c8344b3..c8d412945 100644
--- a/app/extract_plugin_tar.go
+++ b/app/extract_plugin_tar.go
@@ -13,7 +13,7 @@ import (
 
 	"github.com/pkg/errors"
 
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
 )
 
 // extractTarGz takes in an io.Reader containing the bytes for a .tar.gz file and
diff --git a/app/feature_flags.go b/app/feature_flags.go
index dcd888cb8..7f2fd61bb 100644
--- a/app/feature_flags.go
+++ b/app/feature_flags.go
@@ -8,8 +8,8 @@ import (
 	"os"
 	"time"
 
-	"github.com/mattermost/mattermost-server/v6/app/featureflag"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/app/featureflag"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
 )
 
 // setupFeatureFlags called on startup and when the cluster leader changes.
diff --git a/app/featureflag/feature_flags_sync.go b/app/featureflag/feature_flags_sync.go
index aa492ff9f..4dc4da023 100644
--- a/app/featureflag/feature_flags_sync.go
+++ b/app/featureflag/feature_flags_sync.go
@@ -13,8 +13,8 @@ import (
 	"github.com/splitio/go-client/v6/splitio/client"
 	"github.com/splitio/go-client/v6/splitio/conf"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
 )
 
 type SyncParams struct {
diff --git a/app/featureflag/feature_flags_sync_test.go b/app/featureflag/feature_flags_sync_test.go
index dc4f59a50..e0b22b815 100644
--- a/app/featureflag/feature_flags_sync_test.go
+++ b/app/featureflag/feature_flags_sync_test.go
@@ -8,7 +8,7 @@ import (
 
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 func TestGetStructFields(t *testing.T) {
diff --git a/app/featureflag/split_logger.go b/app/featureflag/split_logger.go
index 3b55283c1..552580bca 100644
--- a/app/featureflag/split_logger.go
+++ b/app/featureflag/split_logger.go
@@ -6,7 +6,7 @@ package featureflag
 import (
 	"fmt"
 
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
 )
 
 type splitLogger struct {
diff --git a/app/file.go b/app/file.go
index ccf486357..4e929baaa 100644
--- a/app/file.go
+++ b/app/file.go
@@ -23,15 +23,15 @@ import (
 	"sync"
 	"time"
 
-	"github.com/mattermost/mattermost-server/v6/app/imaging"
-	"github.com/mattermost/mattermost-server/v6/app/request"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/plugin"
-	"github.com/mattermost/mattermost-server/v6/services/docextractor"
-	"github.com/mattermost/mattermost-server/v6/shared/filestore"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
-	"github.com/mattermost/mattermost-server/v6/store"
-	"github.com/mattermost/mattermost-server/v6/utils"
+	"github.com/cjdelisle/matterfoss-server/v6/app/imaging"
+	"github.com/cjdelisle/matterfoss-server/v6/app/request"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/plugin"
+	"github.com/cjdelisle/matterfoss-server/v6/services/docextractor"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/filestore"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/utils"
 
 	"github.com/pkg/errors"
 )
diff --git a/app/file_bench_test.go b/app/file_bench_test.go
index 515f69cc0..b98cc94ed 100644
--- a/app/file_bench_test.go
+++ b/app/file_bench_test.go
@@ -15,7 +15,7 @@ import (
 	"testing"
 	"time"
 
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 var randomJPEG []byte
diff --git a/app/file_test.go b/app/file_test.go
index c5176ee3c..2305fd9d6 100644
--- a/app/file_test.go
+++ b/app/file_test.go
@@ -16,10 +16,10 @@ import (
 	"github.com/stretchr/testify/mock"
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/services/searchengine/mocks"
-	filesStoreMocks "github.com/mattermost/mattermost-server/v6/shared/filestore/mocks"
-	"github.com/mattermost/mattermost-server/v6/utils/fileutils"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/services/searchengine/mocks"
+	filesStoreMocks "github.com/cjdelisle/matterfoss-server/v6/shared/filestore/mocks"
+	"github.com/cjdelisle/matterfoss-server/v6/utils/fileutils"
 )
 
 func TestGeneratePublicLinkHash(t *testing.T) {
diff --git a/app/group.go b/app/group.go
index b00a017fa..b71d15368 100644
--- a/app/group.go
+++ b/app/group.go
@@ -8,9 +8,9 @@ import (
 	"errors"
 	"net/http"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
-	"github.com/mattermost/mattermost-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
 )
 
 func (a *App) GetGroup(id string, opts *model.GetGroupOpts) (*model.Group, *model.AppError) {
diff --git a/app/group_test.go b/app/group_test.go
index 90b6161c9..fb8e1f203 100644
--- a/app/group_test.go
+++ b/app/group_test.go
@@ -9,7 +9,7 @@ import (
 	"github.com/stretchr/testify/assert"
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 func TestGetGroup(t *testing.T) {
diff --git a/app/helper_test.go b/app/helper_test.go
index 58063b9a1..c0731a484 100644
--- a/app/helper_test.go
+++ b/app/helper_test.go
@@ -16,17 +16,17 @@ import (
 	"github.com/stretchr/testify/mock"
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/app/request"
-	"github.com/mattermost/mattermost-server/v6/config"
-	"github.com/mattermost/mattermost-server/v6/einterfaces"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/plugin"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
-	"github.com/mattermost/mattermost-server/v6/store"
-	"github.com/mattermost/mattermost-server/v6/store/localcachelayer"
-	"github.com/mattermost/mattermost-server/v6/store/sqlstore"
-	"github.com/mattermost/mattermost-server/v6/store/storetest/mocks"
-	"github.com/mattermost/mattermost-server/v6/testlib"
+	"github.com/cjdelisle/matterfoss-server/v6/app/request"
+	"github.com/cjdelisle/matterfoss-server/v6/config"
+	"github.com/cjdelisle/matterfoss-server/v6/einterfaces"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/plugin"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/store/localcachelayer"
+	"github.com/cjdelisle/matterfoss-server/v6/store/sqlstore"
+	"github.com/cjdelisle/matterfoss-server/v6/store/storetest/mocks"
+	"github.com/cjdelisle/matterfoss-server/v6/testlib"
 )
 
 type TestHelper struct {
diff --git a/app/image.go b/app/image.go
index 8ad2fc2ef..6d0358be8 100644
--- a/app/image.go
+++ b/app/image.go
@@ -7,7 +7,7 @@ import (
 	"fmt"
 	"io"
 
-	"github.com/mattermost/mattermost-server/v6/app/imaging"
+	"github.com/cjdelisle/matterfoss-server/v6/app/imaging"
 )
 
 func checkImageResolutionLimit(w, h int, maxRes int64) error {
diff --git a/app/imaging/decode_bench_test.go b/app/imaging/decode_bench_test.go
index e9c1dae04..12debb257 100644
--- a/app/imaging/decode_bench_test.go
+++ b/app/imaging/decode_bench_test.go
@@ -10,7 +10,7 @@ import (
 	"sync"
 	"testing"
 
-	"github.com/mattermost/mattermost-server/v6/utils/fileutils"
+	"github.com/cjdelisle/matterfoss-server/v6/utils/fileutils"
 
 	"github.com/stretchr/testify/require"
 )
diff --git a/app/imaging/decode_test.go b/app/imaging/decode_test.go
index 65866c6bc..3ad8508e6 100644
--- a/app/imaging/decode_test.go
+++ b/app/imaging/decode_test.go
@@ -9,7 +9,7 @@ import (
 	"sync"
 	"testing"
 
-	"github.com/mattermost/mattermost-server/v6/utils/fileutils"
+	"github.com/cjdelisle/matterfoss-server/v6/utils/fileutils"
 
 	"github.com/stretchr/testify/require"
 )
diff --git a/app/imaging/utils_test.go b/app/imaging/utils_test.go
index cdd81db44..1415512f0 100644
--- a/app/imaging/utils_test.go
+++ b/app/imaging/utils_test.go
@@ -10,7 +10,7 @@ import (
 	"os"
 	"testing"
 
-	"github.com/mattermost/mattermost-server/v6/utils/fileutils"
+	"github.com/cjdelisle/matterfoss-server/v6/utils/fileutils"
 
 	"github.com/stretchr/testify/require"
 )
diff --git a/app/import.go b/app/import.go
index 5a5c02e95..c1ce79670 100644
--- a/app/import.go
+++ b/app/import.go
@@ -15,9 +15,9 @@ import (
 	"strings"
 	"sync"
 
-	"github.com/mattermost/mattermost-server/v6/app/request"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/app/request"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
 )
 
 const (
diff --git a/app/import_functions.go b/app/import_functions.go
index cf1925330..961769e27 100644
--- a/app/import_functions.go
+++ b/app/import_functions.go
@@ -16,13 +16,13 @@ import (
 	"path"
 	"strings"
 
-	"github.com/mattermost/mattermost-server/v6/app/request"
-	"github.com/mattermost/mattermost-server/v6/app/teams"
-	"github.com/mattermost/mattermost-server/v6/app/users"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
-	"github.com/mattermost/mattermost-server/v6/store"
-	"github.com/mattermost/mattermost-server/v6/utils"
+	"github.com/cjdelisle/matterfoss-server/v6/app/request"
+	"github.com/cjdelisle/matterfoss-server/v6/app/teams"
+	"github.com/cjdelisle/matterfoss-server/v6/app/users"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/utils"
 )
 
 //
diff --git a/app/import_functions_test.go b/app/import_functions_test.go
index 6b3063108..0dde8432b 100644
--- a/app/import_functions_test.go
+++ b/app/import_functions_test.go
@@ -15,9 +15,9 @@ import (
 	"github.com/stretchr/testify/assert"
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/store"
-	"github.com/mattermost/mattermost-server/v6/utils/fileutils"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/utils/fileutils"
 )
 
 func TestImportImportScheme(t *testing.T) {
diff --git a/app/import_test.go b/app/import_test.go
index 919507bb0..c52eef207 100644
--- a/app/import_test.go
+++ b/app/import_test.go
@@ -17,9 +17,9 @@ import (
 	"github.com/stretchr/testify/assert"
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/utils"
-	"github.com/mattermost/mattermost-server/v6/utils/fileutils"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/utils"
+	"github.com/cjdelisle/matterfoss-server/v6/utils/fileutils"
 )
 
 func ptrStr(s string) *string {
diff --git a/app/import_types.go b/app/import_types.go
index d7e479557..d7e98e73d 100644
--- a/app/import_types.go
+++ b/app/import_types.go
@@ -6,7 +6,7 @@ package app
 import (
 	"archive/zip"
 
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 // Import Data Models
diff --git a/app/import_validators.go b/app/import_validators.go
index c22b782cd..69b6c4013 100644
--- a/app/import_validators.go
+++ b/app/import_validators.go
@@ -10,7 +10,7 @@ import (
 	"strings"
 	"unicode/utf8"
 
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 func validateSchemeImportData(data *SchemeImportData) *model.AppError {
diff --git a/app/import_validators_test.go b/app/import_validators_test.go
index ff0b1c435..03845397f 100644
--- a/app/import_validators_test.go
+++ b/app/import_validators_test.go
@@ -12,8 +12,8 @@ import (
 	"github.com/stretchr/testify/assert"
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/utils/fileutils"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/utils/fileutils"
 )
 
 func TestImportValidateSchemeImportData(t *testing.T) {
diff --git a/app/integration_action.go b/app/integration_action.go
index 7a9e4644b..9cf82c4a1 100644
--- a/app/integration_action.go
+++ b/app/integration_action.go
@@ -32,12 +32,12 @@ import (
 
 	"github.com/gorilla/mux"
 
-	"github.com/mattermost/mattermost-server/v6/app/request"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/i18n"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
-	"github.com/mattermost/mattermost-server/v6/store"
-	"github.com/mattermost/mattermost-server/v6/utils"
+	"github.com/cjdelisle/matterfoss-server/v6/app/request"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/i18n"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/utils"
 )
 
 func (a *App) DoPostAction(c *request.Context, postID, actionId, userID, selectedOption string) (string, *model.AppError) {
diff --git a/app/integration_action_test.go b/app/integration_action_test.go
index 7b2f04a34..4366f6ffd 100644
--- a/app/integration_action_test.go
+++ b/app/integration_action_test.go
@@ -16,7 +16,7 @@ import (
 	"github.com/stretchr/testify/assert"
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 // Test for MM-13598 where an invalid integration URL was causing a crash
@@ -541,8 +541,8 @@ func TestSubmitInteractiveDialog(t *testing.T) {
 			"net/http"
 			"encoding/json"
 
-			"github.com/mattermost/mattermost-server/v6/plugin"
-			"github.com/mattermost/mattermost-server/v6/model"
+			"github.com/cjdelisle/matterfoss-server/v6/plugin"
+			"github.com/cjdelisle/matterfoss-server/v6/model"
 		)
 
 		type MyPlugin struct {
@@ -831,10 +831,10 @@ func TestPostActionRelativePluginURL(t *testing.T) {
 
 		import (
 			"net/http"
-			"encoding/json" 
+			"encoding/json"
 
-			"github.com/mattermost/mattermost-server/v6/plugin"
-			"github.com/mattermost/mattermost-server/v6/model"
+			"github.com/cjdelisle/matterfoss-server/v6/plugin"
+			"github.com/cjdelisle/matterfoss-server/v6/model"
 		)
 
 		type MyPlugin struct {
@@ -1035,7 +1035,7 @@ func TestDoPluginRequest(t *testing.T) {
 			"reflect"
 			"sort"
 
-			"github.com/mattermost/mattermost-server/v6/plugin"
+			"github.com/cjdelisle/matterfoss-server/v6/plugin"
 		)
 
 		type MyPlugin struct {
diff --git a/app/job.go b/app/job.go
index 5ba697f3e..fba48e83c 100644
--- a/app/job.go
+++ b/app/job.go
@@ -7,8 +7,8 @@ import (
 	"errors"
 	"net/http"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
 )
 
 func (a *App) GetJob(id string) (*model.Job, *model.AppError) {
diff --git a/app/job_test.go b/app/job_test.go
index 55ddb6b97..fe7e7bca9 100644
--- a/app/job_test.go
+++ b/app/job_test.go
@@ -10,8 +10,8 @@ import (
 	"github.com/stretchr/testify/assert"
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/store/sqlstore"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/store/sqlstore"
 )
 
 func TestGetJob(t *testing.T) {
diff --git a/app/ldap.go b/app/ldap.go
index 2b7c9fdcd..8007830e5 100644
--- a/app/ldap.go
+++ b/app/ldap.go
@@ -8,9 +8,9 @@ import (
 	"mime/multipart"
 	"net/http"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/i18n"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/i18n"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
 )
 
 // SyncLdap starts an LDAP sync job.
diff --git a/app/license.go b/app/license.go
index 779728f91..edb20001d 100644
--- a/app/license.go
+++ b/app/license.go
@@ -14,11 +14,11 @@ import (
 	"github.com/dgrijalva/jwt-go"
 	"github.com/pkg/errors"
 
-	"github.com/mattermost/mattermost-server/v6/jobs"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
-	"github.com/mattermost/mattermost-server/v6/store"
-	"github.com/mattermost/mattermost-server/v6/utils"
+	"github.com/cjdelisle/matterfoss-server/v6/jobs"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/utils"
 )
 
 const (
diff --git a/app/license_test.go b/app/license_test.go
index 803a5d718..dc96d9019 100644
--- a/app/license_test.go
+++ b/app/license_test.go
@@ -12,7 +12,7 @@ import (
 	"github.com/stretchr/testify/assert"
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 func TestLoadLicense(t *testing.T) {
diff --git a/app/login.go b/app/login.go
index 255595d7c..d3fda919a 100644
--- a/app/login.go
+++ b/app/login.go
@@ -16,12 +16,12 @@ import (
 
 	"github.com/avct/uasurfer"
 
-	"github.com/mattermost/mattermost-server/v6/app/request"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/plugin"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
-	"github.com/mattermost/mattermost-server/v6/store"
-	"github.com/mattermost/mattermost-server/v6/utils"
+	"github.com/cjdelisle/matterfoss-server/v6/app/request"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/plugin"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/utils"
 )
 
 const cwsTokenEnv = "CWS_CLOUD_TOKEN"
diff --git a/app/login_test.go b/app/login_test.go
index 784ad43b5..6dd616a27 100644
--- a/app/login_test.go
+++ b/app/login_test.go
@@ -10,7 +10,7 @@ import (
 
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 func TestCheckForClientSideCert(t *testing.T) {
diff --git a/app/main_test.go b/app/main_test.go
index 10af131a6..22d067f2d 100644
--- a/app/main_test.go
+++ b/app/main_test.go
@@ -7,7 +7,7 @@ import (
 	"flag"
 	"testing"
 
-	"github.com/mattermost/mattermost-server/v6/testlib"
+	"github.com/cjdelisle/matterfoss-server/v6/testlib"
 )
 
 var mainHelper *testlib.MainHelper
diff --git a/app/migrations.go b/app/migrations.go
index 680687eb1..296ce60eb 100644
--- a/app/migrations.go
+++ b/app/migrations.go
@@ -8,8 +8,8 @@ import (
 	"fmt"
 	"reflect"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
 )
 
 const EmojisPermissionsMigrationKey = "EmojisPermissionsMigrationComplete"
diff --git a/app/notification.go b/app/notification.go
index 729e983b1..841c6abfe 100644
--- a/app/notification.go
+++ b/app/notification.go
@@ -15,11 +15,11 @@ import (
 
 	"github.com/pkg/errors"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/i18n"
-	"github.com/mattermost/mattermost-server/v6/shared/markdown"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
-	"github.com/mattermost/mattermost-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/i18n"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/markdown"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
 )
 
 func (a *App) SendNotifications(post *model.Post, team *model.Team, channel *model.Channel, sender *model.User, parentPostList *model.PostList, setOnline bool) ([]string, error) {
diff --git a/app/notification_email.go b/app/notification_email.go
index c347d995a..47fa82626 100644
--- a/app/notification_email.go
+++ b/app/notification_email.go
@@ -12,10 +12,10 @@ import (
 	"strings"
 	"time"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/i18n"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
-	"github.com/mattermost/mattermost-server/v6/utils"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/i18n"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/utils"
 	"github.com/pkg/errors"
 )
 
diff --git a/app/notification_email_test.go b/app/notification_email_test.go
index 41b58e71d..e6a05371a 100644
--- a/app/notification_email_test.go
+++ b/app/notification_email_test.go
@@ -14,10 +14,10 @@ import (
 	"github.com/stretchr/testify/assert"
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/services/timezones"
-	"github.com/mattermost/mattermost-server/v6/shared/i18n"
-	"github.com/mattermost/mattermost-server/v6/store/storetest/mocks"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/services/timezones"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/i18n"
+	"github.com/cjdelisle/matterfoss-server/v6/store/storetest/mocks"
 )
 
 func TestGetDirectMessageNotificationEmailSubject(t *testing.T) {
diff --git a/app/notification_push.go b/app/notification_push.go
index db349209e..5296b3e1d 100644
--- a/app/notification_push.go
+++ b/app/notification_push.go
@@ -15,10 +15,10 @@ import (
 
 	"github.com/pkg/errors"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/i18n"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
-	"github.com/mattermost/mattermost-server/v6/utils"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/i18n"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/utils"
 )
 
 type notificationType string
diff --git a/app/notification_push_test.go b/app/notification_push_test.go
index 92f570fb7..562d3bf9b 100644
--- a/app/notification_push_test.go
+++ b/app/notification_push_test.go
@@ -17,12 +17,12 @@ import (
 	"github.com/stretchr/testify/mock"
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/config"
-	"github.com/mattermost/mattermost-server/v6/model"
-	fmocks "github.com/mattermost/mattermost-server/v6/shared/filestore/mocks"
-	"github.com/mattermost/mattermost-server/v6/shared/i18n"
-	"github.com/mattermost/mattermost-server/v6/store/storetest/mocks"
-	"github.com/mattermost/mattermost-server/v6/testlib"
+	"github.com/cjdelisle/matterfoss-server/v6/config"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	fmocks "github.com/cjdelisle/matterfoss-server/v6/shared/filestore/mocks"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/i18n"
+	"github.com/cjdelisle/matterfoss-server/v6/store/storetest/mocks"
+	"github.com/cjdelisle/matterfoss-server/v6/testlib"
 )
 
 func TestDoesNotifyPropsAllowPushNotification(t *testing.T) {
diff --git a/app/notification_test.go b/app/notification_test.go
index be5666c65..ac4d81b2e 100644
--- a/app/notification_test.go
+++ b/app/notification_test.go
@@ -11,9 +11,9 @@ import (
 	"github.com/stretchr/testify/assert"
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/i18n"
-	"github.com/mattermost/mattermost-server/v6/utils"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/i18n"
+	"github.com/cjdelisle/matterfoss-server/v6/utils"
 )
 
 func getLicWithSkuShortName(skuShortName string) *model.License {
diff --git a/app/oauth.go b/app/oauth.go
index b1a565159..de3471fbf 100644
--- a/app/oauth.go
+++ b/app/oauth.go
@@ -18,14 +18,14 @@ import (
 	"strings"
 	"time"
 
-	"github.com/mattermost/mattermost-server/v6/app/request"
-	"github.com/mattermost/mattermost-server/v6/app/users"
-	"github.com/mattermost/mattermost-server/v6/einterfaces"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/i18n"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
-	"github.com/mattermost/mattermost-server/v6/store"
-	"github.com/mattermost/mattermost-server/v6/utils"
+	"github.com/cjdelisle/matterfoss-server/v6/app/request"
+	"github.com/cjdelisle/matterfoss-server/v6/app/users"
+	"github.com/cjdelisle/matterfoss-server/v6/einterfaces"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/i18n"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/utils"
 )
 
 const (
diff --git a/app/oauth_test.go b/app/oauth_test.go
index 35c2904b9..94e466532 100644
--- a/app/oauth_test.go
+++ b/app/oauth_test.go
@@ -15,10 +15,10 @@ import (
 	"github.com/stretchr/testify/assert"
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/einterfaces"
-	"github.com/mattermost/mattermost-server/v6/einterfaces/mocks"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/plugin/plugintest/mock"
+	"github.com/cjdelisle/matterfoss-server/v6/einterfaces"
+	"github.com/cjdelisle/matterfoss-server/v6/einterfaces/mocks"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/plugin/plugintest/mock"
 )
 
 func TestGetOAuthAccessTokenForImplicitFlow(t *testing.T) {
diff --git a/app/onboarding.go b/app/onboarding.go
index 6c4f315c7..ccc34e892 100644
--- a/app/onboarding.go
+++ b/app/onboarding.go
@@ -8,10 +8,10 @@ import (
 
 	"github.com/pkg/errors"
 
-	"github.com/mattermost/mattermost-server/v6/app/request"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
-	"github.com/mattermost/mattermost-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/app/request"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
 )
 
 func (a *App) markAdminOnboardingComplete(c *request.Context) *model.AppError {
diff --git a/app/opengraph.go b/app/opengraph.go
index 7ea39fe0b..08cc778d9 100644
--- a/app/opengraph.go
+++ b/app/opengraph.go
@@ -12,7 +12,7 @@ import (
 	"github.com/dyatlov/go-opengraph/opengraph"
 	"golang.org/x/net/html/charset"
 
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
 )
 
 const (
diff --git a/app/opengraph_test.go b/app/opengraph_test.go
index 3f42f60af..814cd013f 100644
--- a/app/opengraph_test.go
+++ b/app/opengraph_test.go
@@ -16,7 +16,7 @@ func BenchmarkForceHTMLEncodingToUTF8(b *testing.B) {
 	HTML := `
 		<html>
 			<head>
-				<meta property="og:url" content="https://example.com/apps/mattermost">
+				<meta property="og:url" content="https://example.com/apps/matterfoss">
 				<meta property="og:image" content="https://images.example.com/image.png">
 			</head>
 		</html>
@@ -51,47 +51,47 @@ func TestMakeOpenGraphURLsAbsolute(t *testing.T) {
 			HTML: `
 				<html>
 					<head>
-						<meta property="og:url" content="https://example.com/apps/mattermost">
+						<meta property="og:url" content="https://example.com/apps/matterfoss">
 						<meta property="og:image" content="https://images.example.com/image.png">
 					</head>
 				</html>`,
 			RequestURL: "https://example.com",
-			URL:        "https://example.com/apps/mattermost",
+			URL:        "https://example.com/apps/matterfoss",
 			ImageURL:   "https://images.example.com/image.png",
 		},
 		"URLs starting with /": {
 			HTML: `
 				<html>
 					<head>
-						<meta property="og:url" content="/apps/mattermost">
+						<meta property="og:url" content="/apps/matterfoss">
 						<meta property="og:image" content="/image.png">
 					</head>
 				</html>`,
 			RequestURL: "http://example.com",
-			URL:        "http://example.com/apps/mattermost",
+			URL:        "http://example.com/apps/matterfoss",
 			ImageURL:   "http://example.com/image.png",
 		},
 		"HTTPS URLs starting with /": {
 			HTML: `
 				<html>
 					<head>
-						<meta property="og:url" content="/apps/mattermost">
+						<meta property="og:url" content="/apps/matterfoss">
 						<meta property="og:image" content="/image.png">
 					</head>
 				</html>`,
 			RequestURL: "https://example.com",
-			URL:        "https://example.com/apps/mattermost",
+			URL:        "https://example.com/apps/matterfoss",
 			ImageURL:   "https://example.com/image.png",
 		},
 		"missing image URL": {
 			HTML: `
 				<html>
 					<head>
-						<meta property="og:url" content="/apps/mattermost">
+						<meta property="og:url" content="/apps/matterfoss">
 					</head>
 				</html>`,
 			RequestURL: "http://example.com",
-			URL:        "http://example.com/apps/mattermost",
+			URL:        "http://example.com/apps/matterfoss",
 			ImageURL:   "",
 		},
 		"relative URLs": {
diff --git a/app/opentracing/opentracing_layer.go b/app/opentracing/opentracing_layer.go
index 47fa37d67..e4079f77b 100644
--- a/app/opentracing/opentracing_layer.go
+++ b/app/opentracing/opentracing_layer.go
@@ -18,22 +18,22 @@ import (
 	"reflect"
 	"time"
 
-	"github.com/mattermost/mattermost-server/v6/app"
-	"github.com/mattermost/mattermost-server/v6/app/request"
-	"github.com/mattermost/mattermost-server/v6/audit"
-	"github.com/mattermost/mattermost-server/v6/einterfaces"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/plugin"
-	"github.com/mattermost/mattermost-server/v6/services/httpservice"
-	"github.com/mattermost/mattermost-server/v6/services/imageproxy"
-	"github.com/mattermost/mattermost-server/v6/services/remotecluster"
-	"github.com/mattermost/mattermost-server/v6/services/searchengine"
-	"github.com/mattermost/mattermost-server/v6/services/timezones"
-	"github.com/mattermost/mattermost-server/v6/services/tracing"
-	"github.com/mattermost/mattermost-server/v6/shared/filestore"
-	"github.com/mattermost/mattermost-server/v6/shared/i18n"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
-	"github.com/mattermost/mattermost-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/app"
+	"github.com/cjdelisle/matterfoss-server/v6/app/request"
+	"github.com/cjdelisle/matterfoss-server/v6/audit"
+	"github.com/cjdelisle/matterfoss-server/v6/einterfaces"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/plugin"
+	"github.com/cjdelisle/matterfoss-server/v6/services/httpservice"
+	"github.com/cjdelisle/matterfoss-server/v6/services/imageproxy"
+	"github.com/cjdelisle/matterfoss-server/v6/services/remotecluster"
+	"github.com/cjdelisle/matterfoss-server/v6/services/searchengine"
+	"github.com/cjdelisle/matterfoss-server/v6/services/timezones"
+	"github.com/cjdelisle/matterfoss-server/v6/services/tracing"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/filestore"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/i18n"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
 	"github.com/opentracing/opentracing-go/ext"
 	spanlog "github.com/opentracing/opentracing-go/log"
 )
diff --git a/app/options.go b/app/options.go
index d4ff13e9d..9d5fb68be 100644
--- a/app/options.go
+++ b/app/options.go
@@ -6,12 +6,12 @@ package app
 import (
 	"github.com/pkg/errors"
 
-	"github.com/mattermost/mattermost-server/v6/config"
-	"github.com/mattermost/mattermost-server/v6/einterfaces"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/filestore"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
-	"github.com/mattermost/mattermost-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/config"
+	"github.com/cjdelisle/matterfoss-server/v6/einterfaces"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/filestore"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
 )
 
 type Option func(s *Server) error
diff --git a/app/permissions.go b/app/permissions.go
index 8abc4ea71..7185ba390 100644
--- a/app/permissions.go
+++ b/app/permissions.go
@@ -13,7 +13,7 @@ import (
 
 	"github.com/pkg/errors"
 
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 const permissionsExportBatchSize = 100
diff --git a/app/permissions_migrations.go b/app/permissions_migrations.go
index dd927c586..d3410d642 100644
--- a/app/permissions_migrations.go
+++ b/app/permissions_migrations.go
@@ -8,8 +8,8 @@ import (
 	"net/http"
 	"strings"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
 )
 
 type permissionTransformation struct {
@@ -902,7 +902,7 @@ func (a *App) getAddAuthenticationSubsectionPermissions() (permissionsMap, error
 	return transformations, nil
 }
 
-// This migration fixes https://github.com/mattermost/mattermost-server/issues/17642 where this particular ancillary permission was forgotten during the initial migrations
+// This migration fixes https://github.com/cjdelisle/matterfoss-server/issues/17642 where this particular ancillary permission was forgotten during the initial migrations
 func (a *App) getAddTestEmailAncillaryPermission() (permissionsMap, error) {
 	transformations := []permissionTransformation{}
 
diff --git a/app/permissions_migrations_test.go b/app/permissions_migrations_test.go
index 1b20ddf1d..429fa511c 100644
--- a/app/permissions_migrations_test.go
+++ b/app/permissions_migrations_test.go
@@ -9,7 +9,7 @@ import (
 
 	"github.com/stretchr/testify/assert"
 
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 func TestApplyPermissionsMap(t *testing.T) {
diff --git a/app/permissions_test.go b/app/permissions_test.go
index bfe98f599..24cdd66f7 100644
--- a/app/permissions_test.go
+++ b/app/permissions_test.go
@@ -13,7 +13,7 @@ import (
 	"github.com/stretchr/testify/assert"
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 type testWriter struct {
diff --git a/app/plugin.go b/app/plugin.go
index 579c83497..7aeccbae3 100644
--- a/app/plugin.go
+++ b/app/plugin.go
@@ -20,13 +20,13 @@ import (
 	svg "github.com/h2non/go-is-svg"
 	"github.com/pkg/errors"
 
-	"github.com/mattermost/mattermost-server/v6/app/request"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/plugin"
-	"github.com/mattermost/mattermost-server/v6/services/marketplace"
-	"github.com/mattermost/mattermost-server/v6/shared/filestore"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
-	"github.com/mattermost/mattermost-server/v6/utils/fileutils"
+	"github.com/cjdelisle/matterfoss-server/v6/app/request"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/plugin"
+	"github.com/cjdelisle/matterfoss-server/v6/services/marketplace"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/filestore"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/utils/fileutils"
 )
 
 const prepackagedPluginsDir = "prepackaged_plugins"
diff --git a/app/plugin_api.go b/app/plugin_api.go
index 892e2104a..0bcb48003 100644
--- a/app/plugin_api.go
+++ b/app/plugin_api.go
@@ -16,10 +16,10 @@ import (
 	"strconv"
 	"strings"
 
-	"github.com/mattermost/mattermost-server/v6/app/request"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/i18n"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/app/request"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/i18n"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
 )
 
 type PluginAPI struct {
diff --git a/app/plugin_api_test.go b/app/plugin_api_test.go
index f6acee6f0..0eb087607 100644
--- a/app/plugin_api_test.go
+++ b/app/plugin_api_test.go
@@ -25,13 +25,13 @@ import (
 	"github.com/stretchr/testify/mock"
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/app/request"
-	"github.com/mattermost/mattermost-server/v6/einterfaces/mocks"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/plugin"
-	"github.com/mattermost/mattermost-server/v6/shared/i18n"
-	"github.com/mattermost/mattermost-server/v6/utils"
-	"github.com/mattermost/mattermost-server/v6/utils/fileutils"
+	"github.com/cjdelisle/matterfoss-server/v6/app/request"
+	"github.com/cjdelisle/matterfoss-server/v6/einterfaces/mocks"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/plugin"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/i18n"
+	"github.com/cjdelisle/matterfoss-server/v6/utils"
+	"github.com/cjdelisle/matterfoss-server/v6/utils/fileutils"
 )
 
 func getDefaultPluginSettingsSchema() string {
@@ -143,7 +143,7 @@ func TestPublicFilesPathConfiguration(t *testing.T) {
 		package main
 
 		import (
-			"github.com/mattermost/mattermost-server/v6/plugin"
+			"github.com/cjdelisle/matterfoss-server/v6/plugin"
 		)
 
 		type MyPlugin struct {
@@ -818,7 +818,7 @@ func TestPluginAPIGetPlugins(t *testing.T) {
     package main
 
     import (
-      "github.com/mattermost/mattermost-server/v6/plugin"
+      "github.com/cjdelisle/matterfoss-server/v6/plugin"
     )
 
     type MyPlugin struct {
@@ -970,7 +970,7 @@ func TestInstallPlugin(t *testing.T) {
 
 			"github.com/pkg/errors"
 
-			"github.com/mattermost/mattermost-server/v6/plugin"
+			"github.com/cjdelisle/matterfoss-server/v6/plugin"
 		)
 
 		type configuration struct {
@@ -1467,7 +1467,7 @@ func TestInterpluginPluginHTTP(t *testing.T) {
 		package main
 
 		import (
-			"github.com/mattermost/mattermost-server/v6/plugin"
+			"github.com/cjdelisle/matterfoss-server/v6/plugin"
 			"bytes"
 			"net/http"
 		)
@@ -1508,8 +1508,8 @@ func TestInterpluginPluginHTTP(t *testing.T) {
 		package main
 
 		import (
-			"github.com/mattermost/mattermost-server/v6/plugin"
-			"github.com/mattermost/mattermost-server/v6/model"
+			"github.com/cjdelisle/matterfoss-server/v6/plugin"
+			"github.com/cjdelisle/matterfoss-server/v6/model"
 			"bytes"
 			"net/http"
 			"io/ioutil"
@@ -1613,8 +1613,8 @@ func TestAPIMetrics(t *testing.T) {
 	package main
 
 	import (
-		"github.com/mattermost/mattermost-server/v6/model"
-		"github.com/mattermost/mattermost-server/v6/plugin"
+		"github.com/cjdelisle/matterfoss-server/v6/model"
+		"github.com/cjdelisle/matterfoss-server/v6/plugin"
 	)
 
 	type MyPlugin struct {
diff --git a/app/plugin_api_tests/manual.test_http_hijack_plugin/main.go b/app/plugin_api_tests/manual.test_http_hijack_plugin/main.go
index cb2ec08b9..4d55567b1 100644
--- a/app/plugin_api_tests/manual.test_http_hijack_plugin/main.go
+++ b/app/plugin_api_tests/manual.test_http_hijack_plugin/main.go
@@ -6,7 +6,7 @@ package main
 import (
 	"net/http"
 
-	"github.com/mattermost/mattermost-server/v6/plugin"
+	"github.com/cjdelisle/matterfoss-server/v6/plugin"
 )
 
 type Plugin struct {
diff --git a/app/plugin_api_tests/manual.test_http_upgrade_websocket_plugin/main.go b/app/plugin_api_tests/manual.test_http_upgrade_websocket_plugin/main.go
index 99a1ecac1..2569afb82 100644
--- a/app/plugin_api_tests/manual.test_http_upgrade_websocket_plugin/main.go
+++ b/app/plugin_api_tests/manual.test_http_upgrade_websocket_plugin/main.go
@@ -9,8 +9,8 @@ import (
 
 	"github.com/gorilla/websocket"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/plugin"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/plugin"
 )
 
 type Plugin struct {
diff --git a/app/plugin_api_tests/manual.test_load_configuration_defaults_plugin/main.go b/app/plugin_api_tests/manual.test_load_configuration_defaults_plugin/main.go
index 22d8947ac..0cccae310 100644
--- a/app/plugin_api_tests/manual.test_load_configuration_defaults_plugin/main.go
+++ b/app/plugin_api_tests/manual.test_load_configuration_defaults_plugin/main.go
@@ -4,9 +4,9 @@
 package main
 
 import (
-	"github.com/mattermost/mattermost-server/v6/app/plugin_api_tests"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/plugin"
+	"github.com/cjdelisle/matterfoss-server/v6/app/plugin_api_tests"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/plugin"
 )
 
 type configuration struct {
diff --git a/app/plugin_api_tests/manual.test_load_configuration_plugin/main.go b/app/plugin_api_tests/manual.test_load_configuration_plugin/main.go
index 9d0aa3157..205177d05 100644
--- a/app/plugin_api_tests/manual.test_load_configuration_plugin/main.go
+++ b/app/plugin_api_tests/manual.test_load_configuration_plugin/main.go
@@ -6,9 +6,9 @@ package main
 import (
 	"fmt"
 
-	"github.com/mattermost/mattermost-server/v6/app/plugin_api_tests"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/plugin"
+	"github.com/cjdelisle/matterfoss-server/v6/app/plugin_api_tests"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/plugin"
 )
 
 type configuration struct {
diff --git a/app/plugin_api_tests/test_bots_plugin/main.go b/app/plugin_api_tests/test_bots_plugin/main.go
index 337ef6428..ef459203d 100644
--- a/app/plugin_api_tests/test_bots_plugin/main.go
+++ b/app/plugin_api_tests/test_bots_plugin/main.go
@@ -4,9 +4,9 @@
 package main
 
 import (
-	"github.com/mattermost/mattermost-server/v6/app/plugin_api_tests"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/plugin"
+	"github.com/cjdelisle/matterfoss-server/v6/app/plugin_api_tests"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/plugin"
 )
 
 type MyPlugin struct {
diff --git a/app/plugin_api_tests/test_call_log_api_plugin/main.go b/app/plugin_api_tests/test_call_log_api_plugin/main.go
index dc21bc3ac..892df1ad8 100644
--- a/app/plugin_api_tests/test_call_log_api_plugin/main.go
+++ b/app/plugin_api_tests/test_call_log_api_plugin/main.go
@@ -6,8 +6,8 @@ package main
 import (
 	"github.com/pkg/errors"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/plugin"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/plugin"
 )
 
 type PluginUsingLogAPI struct {
diff --git a/app/plugin_api_tests/test_db_driver/main.go b/app/plugin_api_tests/test_db_driver/main.go
index c97b10ed2..efbf50145 100644
--- a/app/plugin_api_tests/test_db_driver/main.go
+++ b/app/plugin_api_tests/test_db_driver/main.go
@@ -7,12 +7,12 @@ import (
 	"database/sql"
 	"testing"
 
-	"github.com/mattermost/mattermost-server/v6/app/plugin_api_tests"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/plugin"
-	"github.com/mattermost/mattermost-server/v6/shared/driver"
-	"github.com/mattermost/mattermost-server/v6/store/sqlstore"
-	"github.com/mattermost/mattermost-server/v6/store/storetest"
+	"github.com/cjdelisle/matterfoss-server/v6/app/plugin_api_tests"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/plugin"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/driver"
+	"github.com/cjdelisle/matterfoss-server/v6/store/sqlstore"
+	"github.com/cjdelisle/matterfoss-server/v6/store/storetest"
 )
 
 type MyPlugin struct {
diff --git a/app/plugin_api_tests/test_get_bundle_path_plugin/main.go b/app/plugin_api_tests/test_get_bundle_path_plugin/main.go
index d352fa1d8..86da071e7 100644
--- a/app/plugin_api_tests/test_get_bundle_path_plugin/main.go
+++ b/app/plugin_api_tests/test_get_bundle_path_plugin/main.go
@@ -7,9 +7,9 @@ import (
 	"fmt"
 	"path/filepath"
 
-	"github.com/mattermost/mattermost-server/v6/app/plugin_api_tests"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/plugin"
+	"github.com/cjdelisle/matterfoss-server/v6/app/plugin_api_tests"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/plugin"
 )
 
 type MyPlugin struct {
diff --git a/app/plugin_api_tests/test_get_channels_for_team_for_user_plugin/main.go b/app/plugin_api_tests/test_get_channels_for_team_for_user_plugin/main.go
index cb83c9c52..338a2b294 100644
--- a/app/plugin_api_tests/test_get_channels_for_team_for_user_plugin/main.go
+++ b/app/plugin_api_tests/test_get_channels_for_team_for_user_plugin/main.go
@@ -4,9 +4,9 @@
 package main
 
 import (
-	"github.com/mattermost/mattermost-server/v6/app/plugin_api_tests"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/plugin"
+	"github.com/cjdelisle/matterfoss-server/v6/app/plugin_api_tests"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/plugin"
 )
 
 type MyPlugin struct {
diff --git a/app/plugin_api_tests/test_get_direct_channel_plugin/main.go b/app/plugin_api_tests/test_get_direct_channel_plugin/main.go
index d4fc15781..2125b7db0 100644
--- a/app/plugin_api_tests/test_get_direct_channel_plugin/main.go
+++ b/app/plugin_api_tests/test_get_direct_channel_plugin/main.go
@@ -4,9 +4,9 @@
 package main
 
 import (
-	"github.com/mattermost/mattermost-server/v6/app/plugin_api_tests"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/plugin"
+	"github.com/cjdelisle/matterfoss-server/v6/app/plugin_api_tests"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/plugin"
 )
 
 type MyPlugin struct {
diff --git a/app/plugin_api_tests/test_get_plugin_status_plugin/main.go b/app/plugin_api_tests/test_get_plugin_status_plugin/main.go
index d23dcdca2..45e4c84af 100644
--- a/app/plugin_api_tests/test_get_plugin_status_plugin/main.go
+++ b/app/plugin_api_tests/test_get_plugin_status_plugin/main.go
@@ -4,9 +4,9 @@
 package main
 
 import (
-	"github.com/mattermost/mattermost-server/v6/app/plugin_api_tests"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/plugin"
+	"github.com/cjdelisle/matterfoss-server/v6/app/plugin_api_tests"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/plugin"
 )
 
 type MyPlugin struct {
diff --git a/app/plugin_api_tests/test_get_profile_image_plugin/main.go b/app/plugin_api_tests/test_get_profile_image_plugin/main.go
index 92befd6e5..11235b25d 100644
--- a/app/plugin_api_tests/test_get_profile_image_plugin/main.go
+++ b/app/plugin_api_tests/test_get_profile_image_plugin/main.go
@@ -4,9 +4,9 @@
 package main
 
 import (
-	"github.com/mattermost/mattermost-server/v6/app/plugin_api_tests"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/plugin"
+	"github.com/cjdelisle/matterfoss-server/v6/app/plugin_api_tests"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/plugin"
 )
 
 type MyPlugin struct {
diff --git a/app/plugin_api_tests/test_kv/main.go b/app/plugin_api_tests/test_kv/main.go
index 5663aaf2a..b8e166efa 100644
--- a/app/plugin_api_tests/test_kv/main.go
+++ b/app/plugin_api_tests/test_kv/main.go
@@ -7,9 +7,9 @@ import (
 	"bytes"
 	"fmt"
 
-	"github.com/mattermost/mattermost-server/v6/app/plugin_api_tests"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/plugin"
+	"github.com/cjdelisle/matterfoss-server/v6/app/plugin_api_tests"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/plugin"
 )
 
 type MyPlugin struct {
diff --git a/app/plugin_api_tests/test_member_channels_plugin/main.go b/app/plugin_api_tests/test_member_channels_plugin/main.go
index 044c2d594..7b8f64498 100644
--- a/app/plugin_api_tests/test_member_channels_plugin/main.go
+++ b/app/plugin_api_tests/test_member_channels_plugin/main.go
@@ -4,9 +4,9 @@
 package main
 
 import (
-	"github.com/mattermost/mattermost-server/v6/app/plugin_api_tests"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/plugin"
+	"github.com/cjdelisle/matterfoss-server/v6/app/plugin_api_tests"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/plugin"
 )
 
 type MyPlugin struct {
diff --git a/app/plugin_api_tests/test_members_plugin/main.go b/app/plugin_api_tests/test_members_plugin/main.go
index 5886f4764..2616fff5f 100644
--- a/app/plugin_api_tests/test_members_plugin/main.go
+++ b/app/plugin_api_tests/test_members_plugin/main.go
@@ -4,9 +4,9 @@
 package main
 
 import (
-	"github.com/mattermost/mattermost-server/v6/app/plugin_api_tests"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/plugin"
+	"github.com/cjdelisle/matterfoss-server/v6/app/plugin_api_tests"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/plugin"
 )
 
 type MyPlugin struct {
diff --git a/app/plugin_api_tests/test_search_channels_plugin/main.go b/app/plugin_api_tests/test_search_channels_plugin/main.go
index 6846a805d..a25afca35 100644
--- a/app/plugin_api_tests/test_search_channels_plugin/main.go
+++ b/app/plugin_api_tests/test_search_channels_plugin/main.go
@@ -4,9 +4,9 @@
 package main
 
 import (
-	"github.com/mattermost/mattermost-server/v6/app/plugin_api_tests"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/plugin"
+	"github.com/cjdelisle/matterfoss-server/v6/app/plugin_api_tests"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/plugin"
 )
 
 type MyPlugin struct {
diff --git a/app/plugin_api_tests/test_search_posts_in_team_plugin/main.go b/app/plugin_api_tests/test_search_posts_in_team_plugin/main.go
index 1ca86edf1..d9630e068 100644
--- a/app/plugin_api_tests/test_search_posts_in_team_plugin/main.go
+++ b/app/plugin_api_tests/test_search_posts_in_team_plugin/main.go
@@ -6,9 +6,9 @@ package main
 import (
 	"fmt"
 
-	"github.com/mattermost/mattermost-server/v6/app/plugin_api_tests"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/plugin"
+	"github.com/cjdelisle/matterfoss-server/v6/app/plugin_api_tests"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/plugin"
 )
 
 type MyPlugin struct {
diff --git a/app/plugin_api_tests/test_search_teams_plugin/main.go b/app/plugin_api_tests/test_search_teams_plugin/main.go
index 4b23cb319..db5c35931 100644
--- a/app/plugin_api_tests/test_search_teams_plugin/main.go
+++ b/app/plugin_api_tests/test_search_teams_plugin/main.go
@@ -6,9 +6,9 @@ package main
 import (
 	"fmt"
 
-	"github.com/mattermost/mattermost-server/v6/app/plugin_api_tests"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/plugin"
+	"github.com/cjdelisle/matterfoss-server/v6/app/plugin_api_tests"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/plugin"
 )
 
 type MyPlugin struct {
diff --git a/app/plugin_api_tests/test_send_mail_plugin/main.go b/app/plugin_api_tests/test_send_mail_plugin/main.go
index ca90a8403..c59b751b3 100644
--- a/app/plugin_api_tests/test_send_mail_plugin/main.go
+++ b/app/plugin_api_tests/test_send_mail_plugin/main.go
@@ -7,10 +7,10 @@ import (
 	"fmt"
 	"strings"
 
-	"github.com/mattermost/mattermost-server/v6/app/plugin_api_tests"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/plugin"
-	"github.com/mattermost/mattermost-server/v6/shared/mail"
+	"github.com/cjdelisle/matterfoss-server/v6/app/plugin_api_tests"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/plugin"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mail"
 )
 
 type MyPlugin struct {
diff --git a/app/plugin_api_tests/test_sessions_plugin/main.go b/app/plugin_api_tests/test_sessions_plugin/main.go
index 52ec7678d..f0655fc1d 100644
--- a/app/plugin_api_tests/test_sessions_plugin/main.go
+++ b/app/plugin_api_tests/test_sessions_plugin/main.go
@@ -7,9 +7,9 @@ import (
 	"fmt"
 	"time"
 
-	"github.com/mattermost/mattermost-server/v6/app/plugin_api_tests"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/plugin"
+	"github.com/cjdelisle/matterfoss-server/v6/app/plugin_api_tests"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/plugin"
 )
 
 type MyPlugin struct {
diff --git a/app/plugin_api_tests/test_set_profile_image_plugin/main.go b/app/plugin_api_tests/test_set_profile_image_plugin/main.go
index 9644193db..51b30a49e 100644
--- a/app/plugin_api_tests/test_set_profile_image_plugin/main.go
+++ b/app/plugin_api_tests/test_set_profile_image_plugin/main.go
@@ -10,9 +10,9 @@ import (
 	"image/color"
 	"image/png"
 
-	"github.com/mattermost/mattermost-server/v6/app/plugin_api_tests"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/plugin"
+	"github.com/cjdelisle/matterfoss-server/v6/app/plugin_api_tests"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/plugin"
 )
 
 type MyPlugin struct {
diff --git a/app/plugin_api_tests/test_update_user_active_plugin/main.go b/app/plugin_api_tests/test_update_user_active_plugin/main.go
index 265df15c1..e6482c2dc 100644
--- a/app/plugin_api_tests/test_update_user_active_plugin/main.go
+++ b/app/plugin_api_tests/test_update_user_active_plugin/main.go
@@ -4,9 +4,9 @@
 package main
 
 import (
-	"github.com/mattermost/mattermost-server/v6/app/plugin_api_tests"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/plugin"
+	"github.com/cjdelisle/matterfoss-server/v6/app/plugin_api_tests"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/plugin"
 )
 
 type MyPlugin struct {
diff --git a/app/plugin_api_tests/test_update_user_status_plugin/main.go b/app/plugin_api_tests/test_update_user_status_plugin/main.go
index 7e330e8ca..7e6121f20 100644
--- a/app/plugin_api_tests/test_update_user_status_plugin/main.go
+++ b/app/plugin_api_tests/test_update_user_status_plugin/main.go
@@ -6,9 +6,9 @@ package main
 import (
 	"fmt"
 
-	"github.com/mattermost/mattermost-server/v6/app/plugin_api_tests"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/plugin"
+	"github.com/cjdelisle/matterfoss-server/v6/app/plugin_api_tests"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/plugin"
 )
 
 type MyPlugin struct {
diff --git a/app/plugin_commands.go b/app/plugin_commands.go
index 48c0dc881..0ca79e077 100644
--- a/app/plugin_commands.go
+++ b/app/plugin_commands.go
@@ -11,9 +11,9 @@ import (
 
 	"github.com/pkg/errors"
 
-	"github.com/mattermost/mattermost-server/v6/app/request"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/app/request"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
 )
 
 type PluginCommand struct {
diff --git a/app/plugin_commands_test.go b/app/plugin_commands_test.go
index 5c3ffc4a6..c0739a5a6 100644
--- a/app/plugin_commands_test.go
+++ b/app/plugin_commands_test.go
@@ -9,8 +9,8 @@ import (
 
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/i18n"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/i18n"
 )
 
 func TestPluginCommand(t *testing.T) {
@@ -39,8 +39,8 @@ func TestPluginCommand(t *testing.T) {
 			package main
 
 			import (
-				"github.com/mattermost/mattermost-server/v6/plugin"
-				"github.com/mattermost/mattermost-server/v6/model"
+				"github.com/cjdelisle/matterfoss-server/v6/plugin"
+				"github.com/cjdelisle/matterfoss-server/v6/model"
 			)
 
 			type configuration struct {
@@ -120,8 +120,8 @@ func TestPluginCommand(t *testing.T) {
 			package main
 
 			import (
-				"github.com/mattermost/mattermost-server/v6/plugin"
-				"github.com/mattermost/mattermost-server/v6/model"
+				"github.com/cjdelisle/matterfoss-server/v6/plugin"
+				"github.com/cjdelisle/matterfoss-server/v6/model"
 			)
 
 			type configuration struct {
@@ -227,8 +227,8 @@ func TestPluginCommand(t *testing.T) {
 			package main
 
 			import (
-				"github.com/mattermost/mattermost-server/v6/plugin"
-				"github.com/mattermost/mattermost-server/v6/model"
+				"github.com/cjdelisle/matterfoss-server/v6/plugin"
+				"github.com/cjdelisle/matterfoss-server/v6/model"
 			)
 
 			type configuration struct {
@@ -292,8 +292,8 @@ func TestPluginCommand(t *testing.T) {
 			package main
 
 			import (
-				"github.com/mattermost/mattermost-server/v6/plugin"
-				"github.com/mattermost/mattermost-server/v6/model"
+				"github.com/cjdelisle/matterfoss-server/v6/plugin"
+				"github.com/cjdelisle/matterfoss-server/v6/model"
 			)
 
 			type MyPlugin struct {
@@ -337,8 +337,8 @@ func TestPluginCommand(t *testing.T) {
 			package main
 
 			import (
-				"github.com/mattermost/mattermost-server/v6/plugin"
-				"github.com/mattermost/mattermost-server/v6/model"
+				"github.com/cjdelisle/matterfoss-server/v6/plugin"
+				"github.com/cjdelisle/matterfoss-server/v6/model"
 			)
 
 			type MyPlugin struct {
@@ -388,8 +388,8 @@ func TestPluginCommand(t *testing.T) {
 			package main
 
 			import (
-				"github.com/mattermost/mattermost-server/v6/plugin"
-				"github.com/mattermost/mattermost-server/v6/model"
+				"github.com/cjdelisle/matterfoss-server/v6/plugin"
+				"github.com/cjdelisle/matterfoss-server/v6/model"
 			)
 
 			type configuration struct {
diff --git a/app/plugin_db_driver.go b/app/plugin_db_driver.go
index 2b9cfbac7..35f1dfdc6 100644
--- a/app/plugin_db_driver.go
+++ b/app/plugin_db_driver.go
@@ -9,8 +9,8 @@ import (
 	"database/sql/driver"
 	"sync"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/plugin"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/plugin"
 )
 
 // DriverImpl implements the plugin.Driver interface on the server-side.
diff --git a/app/plugin_deadlock_test.go b/app/plugin_deadlock_test.go
index eb151aeb6..ef21ce674 100644
--- a/app/plugin_deadlock_test.go
+++ b/app/plugin_deadlock_test.go
@@ -12,7 +12,7 @@ import (
 
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 func TestPluginDeadlock(t *testing.T) {
@@ -24,8 +24,8 @@ func TestPluginDeadlock(t *testing.T) {
 			package main
 
 			import (
-				"github.com/mattermost/mattermost-server/v6/plugin"
-				"github.com/mattermost/mattermost-server/v6/model"
+				"github.com/cjdelisle/matterfoss-server/v6/plugin"
+				"github.com/cjdelisle/matterfoss-server/v6/model"
 			)
 
 			type MyPlugin struct {
@@ -112,8 +112,8 @@ func TestPluginDeadlock(t *testing.T) {
 			package main
 
 			import (
-				"github.com/mattermost/mattermost-server/v6/plugin"
-				"github.com/mattermost/mattermost-server/v6/model"
+				"github.com/cjdelisle/matterfoss-server/v6/plugin"
+				"github.com/cjdelisle/matterfoss-server/v6/model"
 			)
 
 			type MyPlugin struct {
@@ -147,8 +147,8 @@ func TestPluginDeadlock(t *testing.T) {
 			package main
 
 			import (
-				"github.com/mattermost/mattermost-server/v6/plugin"
-				"github.com/mattermost/mattermost-server/v6/model"
+				"github.com/cjdelisle/matterfoss-server/v6/plugin"
+				"github.com/cjdelisle/matterfoss-server/v6/model"
 			)
 
 			type MyPlugin struct {
@@ -218,8 +218,8 @@ func TestPluginDeadlock(t *testing.T) {
 			package main
 
 			import (
-				"github.com/mattermost/mattermost-server/v6/plugin"
-				"github.com/mattermost/mattermost-server/v6/model"
+				"github.com/cjdelisle/matterfoss-server/v6/plugin"
+				"github.com/cjdelisle/matterfoss-server/v6/model"
 			)
 
 			type MyPlugin struct {
diff --git a/app/plugin_event.go b/app/plugin_event.go
index b4b68be3b..bcf4c9b31 100644
--- a/app/plugin_event.go
+++ b/app/plugin_event.go
@@ -6,7 +6,7 @@ package app
 import (
 	"encoding/json"
 
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 func (ch *Channels) notifyClusterPluginEvent(event model.ClusterEvent, data model.PluginEventData) {
diff --git a/app/plugin_health_check_test.go b/app/plugin_health_check_test.go
index 1c2d67f87..286acb1f5 100644
--- a/app/plugin_health_check_test.go
+++ b/app/plugin_health_check_test.go
@@ -8,8 +8,8 @@ import (
 
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/plugin"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/plugin"
 )
 
 func TestHealthCheckJob(t *testing.T) {
@@ -21,8 +21,8 @@ func TestHealthCheckJob(t *testing.T) {
 			package main
 
 			import (
-				"github.com/mattermost/mattermost-server/v6/model"
-				"github.com/mattermost/mattermost-server/v6/plugin"
+				"github.com/cjdelisle/matterfoss-server/v6/model"
+				"github.com/cjdelisle/matterfoss-server/v6/plugin"
 			)
 
 			type MyPlugin struct {
diff --git a/app/plugin_hooks_test.go b/app/plugin_hooks_test.go
index 5d8cbcb5f..3a94a532b 100644
--- a/app/plugin_hooks_test.go
+++ b/app/plugin_hooks_test.go
@@ -20,12 +20,12 @@ import (
 	"github.com/stretchr/testify/mock"
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/app/request"
-	"github.com/mattermost/mattermost-server/v6/einterfaces/mocks"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/plugin"
-	"github.com/mattermost/mattermost-server/v6/plugin/plugintest"
-	"github.com/mattermost/mattermost-server/v6/utils"
+	"github.com/cjdelisle/matterfoss-server/v6/app/request"
+	"github.com/cjdelisle/matterfoss-server/v6/einterfaces/mocks"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/plugin"
+	"github.com/cjdelisle/matterfoss-server/v6/plugin/plugintest"
+	"github.com/cjdelisle/matterfoss-server/v6/utils"
 )
 
 func SetAppEnvironmentWithPlugins(t *testing.T, pluginCode []string, app *App, apiFunc func(*model.Manifest) plugin.API) (func(), []string, []error) {
@@ -73,8 +73,8 @@ func TestHookMessageWillBePosted(t *testing.T) {
 			package main
 
 			import (
-				"github.com/mattermost/mattermost-server/v6/plugin"
-				"github.com/mattermost/mattermost-server/v6/model"
+				"github.com/cjdelisle/matterfoss-server/v6/plugin"
+				"github.com/cjdelisle/matterfoss-server/v6/model"
 			)
 
 			type MyPlugin struct {
@@ -113,8 +113,8 @@ func TestHookMessageWillBePosted(t *testing.T) {
 			package main
 
 			import (
-				"github.com/mattermost/mattermost-server/v6/plugin"
-				"github.com/mattermost/mattermost-server/v6/model"
+				"github.com/cjdelisle/matterfoss-server/v6/plugin"
+				"github.com/cjdelisle/matterfoss-server/v6/model"
 			)
 
 			type MyPlugin struct {
@@ -154,8 +154,8 @@ func TestHookMessageWillBePosted(t *testing.T) {
 			package main
 
 			import (
-				"github.com/mattermost/mattermost-server/v6/plugin"
-				"github.com/mattermost/mattermost-server/v6/model"
+				"github.com/cjdelisle/matterfoss-server/v6/plugin"
+				"github.com/cjdelisle/matterfoss-server/v6/model"
 			)
 
 			type MyPlugin struct {
@@ -197,8 +197,8 @@ func TestHookMessageWillBePosted(t *testing.T) {
 			package main
 
 			import (
-				"github.com/mattermost/mattermost-server/v6/plugin"
-				"github.com/mattermost/mattermost-server/v6/model"
+				"github.com/cjdelisle/matterfoss-server/v6/plugin"
+				"github.com/cjdelisle/matterfoss-server/v6/model"
 			)
 
 			type MyPlugin struct {
@@ -241,8 +241,8 @@ func TestHookMessageWillBePosted(t *testing.T) {
 			package main
 
 			import (
-				"github.com/mattermost/mattermost-server/v6/plugin"
-				"github.com/mattermost/mattermost-server/v6/model"
+				"github.com/cjdelisle/matterfoss-server/v6/plugin"
+				"github.com/cjdelisle/matterfoss-server/v6/model"
 			)
 
 			type MyPlugin struct {
@@ -263,8 +263,8 @@ func TestHookMessageWillBePosted(t *testing.T) {
 			package main
 
 			import (
-				"github.com/mattermost/mattermost-server/v6/plugin"
-				"github.com/mattermost/mattermost-server/v6/model"
+				"github.com/cjdelisle/matterfoss-server/v6/plugin"
+				"github.com/cjdelisle/matterfoss-server/v6/model"
 			)
 
 			type MyPlugin struct {
@@ -309,8 +309,8 @@ func TestHookMessageHasBeenPosted(t *testing.T) {
 		package main
 
 		import (
-			"github.com/mattermost/mattermost-server/v6/plugin"
-			"github.com/mattermost/mattermost-server/v6/model"
+			"github.com/cjdelisle/matterfoss-server/v6/plugin"
+			"github.com/cjdelisle/matterfoss-server/v6/model"
 		)
 
 		type MyPlugin struct {
@@ -347,8 +347,8 @@ func TestHookMessageWillBeUpdated(t *testing.T) {
 		package main
 
 		import (
-			"github.com/mattermost/mattermost-server/v6/plugin"
-			"github.com/mattermost/mattermost-server/v6/model"
+			"github.com/cjdelisle/matterfoss-server/v6/plugin"
+			"github.com/cjdelisle/matterfoss-server/v6/model"
 		)
 
 		type MyPlugin struct {
@@ -395,8 +395,8 @@ func TestHookMessageHasBeenUpdated(t *testing.T) {
 		package main
 
 		import (
-			"github.com/mattermost/mattermost-server/v6/plugin"
-			"github.com/mattermost/mattermost-server/v6/model"
+			"github.com/cjdelisle/matterfoss-server/v6/plugin"
+			"github.com/cjdelisle/matterfoss-server/v6/model"
 		)
 
 		type MyPlugin struct {
@@ -443,8 +443,8 @@ func TestHookFileWillBeUploaded(t *testing.T) {
 
 			import (
 				"io"
-				"github.com/mattermost/mattermost-server/v6/plugin"
-				"github.com/mattermost/mattermost-server/v6/model"
+				"github.com/cjdelisle/matterfoss-server/v6/plugin"
+				"github.com/cjdelisle/matterfoss-server/v6/model"
 			)
 
 			type MyPlugin struct {
@@ -491,8 +491,8 @@ func TestHookFileWillBeUploaded(t *testing.T) {
 			import (
 				"fmt"
 				"io"
-				"github.com/mattermost/mattermost-server/v6/plugin"
-				"github.com/mattermost/mattermost-server/v6/model"
+				"github.com/cjdelisle/matterfoss-server/v6/plugin"
+				"github.com/cjdelisle/matterfoss-server/v6/model"
 			)
 
 			type MyPlugin struct {
@@ -543,8 +543,8 @@ func TestHookFileWillBeUploaded(t *testing.T) {
 
 			import (
 				"io"
-				"github.com/mattermost/mattermost-server/v6/plugin"
-				"github.com/mattermost/mattermost-server/v6/model"
+				"github.com/cjdelisle/matterfoss-server/v6/plugin"
+				"github.com/cjdelisle/matterfoss-server/v6/model"
 			)
 
 			type MyPlugin struct {
@@ -604,8 +604,8 @@ func TestHookFileWillBeUploaded(t *testing.T) {
 				"io"
 				"fmt"
 				"bytes"
-				"github.com/mattermost/mattermost-server/v6/plugin"
-				"github.com/mattermost/mattermost-server/v6/model"
+				"github.com/cjdelisle/matterfoss-server/v6/plugin"
+				"github.com/cjdelisle/matterfoss-server/v6/model"
 			)
 
 			type MyPlugin struct {
@@ -677,8 +677,8 @@ func TestUserWillLogIn_Blocked(t *testing.T) {
 		package main
 
 		import (
-			"github.com/mattermost/mattermost-server/v6/plugin"
-			"github.com/mattermost/mattermost-server/v6/model"
+			"github.com/cjdelisle/matterfoss-server/v6/plugin"
+			"github.com/cjdelisle/matterfoss-server/v6/model"
 		)
 
 		type MyPlugin struct {
@@ -716,8 +716,8 @@ func TestUserWillLogInIn_Passed(t *testing.T) {
 		package main
 
 		import (
-			"github.com/mattermost/mattermost-server/v6/plugin"
-			"github.com/mattermost/mattermost-server/v6/model"
+			"github.com/cjdelisle/matterfoss-server/v6/plugin"
+			"github.com/cjdelisle/matterfoss-server/v6/model"
 		)
 
 		type MyPlugin struct {
@@ -756,8 +756,8 @@ func TestUserHasLoggedIn(t *testing.T) {
 		package main
 
 		import (
-			"github.com/mattermost/mattermost-server/v6/plugin"
-			"github.com/mattermost/mattermost-server/v6/model"
+			"github.com/cjdelisle/matterfoss-server/v6/plugin"
+			"github.com/cjdelisle/matterfoss-server/v6/model"
 		)
 
 		type MyPlugin struct {
@@ -798,8 +798,8 @@ func TestUserHasBeenCreated(t *testing.T) {
 		package main
 
 		import (
-			"github.com/mattermost/mattermost-server/v6/plugin"
-			"github.com/mattermost/mattermost-server/v6/model"
+			"github.com/cjdelisle/matterfoss-server/v6/plugin"
+			"github.com/cjdelisle/matterfoss-server/v6/model"
 		)
 
 		type MyPlugin struct {
@@ -847,7 +847,7 @@ func TestErrorString(t *testing.T) {
 			import (
 				"errors"
 
-				"github.com/mattermost/mattermost-server/v6/plugin"
+				"github.com/cjdelisle/matterfoss-server/v6/plugin"
 			)
 
 			type MyPlugin struct {
@@ -876,8 +876,8 @@ func TestErrorString(t *testing.T) {
 			package main
 
 			import (
-				"github.com/mattermost/mattermost-server/v6/plugin"
-				"github.com/mattermost/mattermost-server/v6/model"
+				"github.com/cjdelisle/matterfoss-server/v6/plugin"
+				"github.com/cjdelisle/matterfoss-server/v6/model"
 			)
 
 			type MyPlugin struct {
@@ -928,8 +928,8 @@ func TestHookContext(t *testing.T) {
 		package main
 
 		import (
-			"github.com/mattermost/mattermost-server/v6/plugin"
-			"github.com/mattermost/mattermost-server/v6/model"
+			"github.com/cjdelisle/matterfoss-server/v6/plugin"
+			"github.com/cjdelisle/matterfoss-server/v6/model"
 		)
 
 		type MyPlugin struct {
@@ -971,8 +971,8 @@ func TestActiveHooks(t *testing.T) {
 			package main
 
 			import (
-				"github.com/mattermost/mattermost-server/v6/model"
-				"github.com/mattermost/mattermost-server/v6/plugin"
+				"github.com/cjdelisle/matterfoss-server/v6/model"
+				"github.com/cjdelisle/matterfoss-server/v6/plugin"
 			)
 
 			type MyPlugin struct {
@@ -1057,8 +1057,8 @@ func TestHookMetrics(t *testing.T) {
 	package main
 
 	import (
-		"github.com/mattermost/mattermost-server/v6/model"
-		"github.com/mattermost/mattermost-server/v6/plugin"
+		"github.com/cjdelisle/matterfoss-server/v6/model"
+		"github.com/cjdelisle/matterfoss-server/v6/plugin"
 	)
 
 	type MyPlugin struct {
@@ -1144,8 +1144,8 @@ func TestHookReactionHasBeenAdded(t *testing.T) {
 		package main
 
 		import (
-			"github.com/mattermost/mattermost-server/v6/plugin"
-			"github.com/mattermost/mattermost-server/v6/model"
+			"github.com/cjdelisle/matterfoss-server/v6/plugin"
+			"github.com/cjdelisle/matterfoss-server/v6/model"
 		)
 
 		type MyPlugin struct {
@@ -1186,8 +1186,8 @@ func TestHookReactionHasBeenRemoved(t *testing.T) {
 		package main
 
 		import (
-			"github.com/mattermost/mattermost-server/v6/plugin"
-			"github.com/mattermost/mattermost-server/v6/model"
+			"github.com/cjdelisle/matterfoss-server/v6/plugin"
+			"github.com/cjdelisle/matterfoss-server/v6/model"
 		)
 
 		type MyPlugin struct {
@@ -1226,7 +1226,7 @@ func TestHookRunDataRetention(t *testing.T) {
 		package main
 
 		import (
-			"github.com/mattermost/mattermost-server/v6/plugin"
+			"github.com/cjdelisle/matterfoss-server/v6/plugin"
 		)
 
 		type MyPlugin struct {
@@ -1270,7 +1270,7 @@ func TestHookOnSendDailyTelemetry(t *testing.T) {
 		package main
 
 		import (
-			"github.com/mattermost/mattermost-server/v6/plugin"
+			"github.com/cjdelisle/matterfoss-server/v6/plugin"
 		)
 
 		type MyPlugin struct {
diff --git a/app/plugin_install.go b/app/plugin_install.go
index 35e415465..e540fac65 100644
--- a/app/plugin_install.go
+++ b/app/plugin_install.go
@@ -48,10 +48,10 @@ import (
 	"github.com/blang/semver"
 	"github.com/pkg/errors"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/filestore"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
-	"github.com/mattermost/mattermost-server/v6/utils"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/filestore"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/utils"
 )
 
 // managedPluginFileName is the file name of the flag file that marks
diff --git a/app/plugin_install_test.go b/app/plugin_install_test.go
index a3eb6cfb2..5bcc953f1 100644
--- a/app/plugin_install_test.go
+++ b/app/plugin_install_test.go
@@ -17,8 +17,8 @@ import (
 	"github.com/stretchr/testify/assert"
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/utils/fileutils"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/utils/fileutils"
 )
 
 type nilReadSeeker struct {
diff --git a/app/plugin_key_value_store.go b/app/plugin_key_value_store.go
index c86b3493c..19b7f43fd 100644
--- a/app/plugin_key_value_store.go
+++ b/app/plugin_key_value_store.go
@@ -9,9 +9,9 @@ import (
 	"errors"
 	"net/http"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
-	"github.com/mattermost/mattermost-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
 )
 
 func getKeyHash(key string) string {
diff --git a/app/plugin_public_keys.go b/app/plugin_public_keys.go
index 0756a1383..2b33384c9 100644
--- a/app/plugin_public_keys.go
+++ b/app/plugin_public_keys.go
@@ -3,7 +3,7 @@
 
 package app
 
-var mattermostPluginPublicKey []byte = []byte(`-----BEGIN PGP PUBLIC KEY BLOCK-----
+var matterfossPluginPublicKey []byte = []byte(`-----BEGIN PGP PUBLIC KEY BLOCK-----
 
 mQINBF3YTiEBEACgkhnZ5+xylKZhLVj193b6d/rSQuCU/zwWeZJnqyR8wRsPotXO
 CMXOUM9bTTaGfItCP9KlPPcyrshNEIgqcqhB6TSKkWSyrV5XS95Opd9Esbjw1VZq
diff --git a/app/plugin_requests.go b/app/plugin_requests.go
index 142ec94a1..e3fadaca0 100644
--- a/app/plugin_requests.go
+++ b/app/plugin_requests.go
@@ -14,10 +14,10 @@ import (
 
 	"github.com/gorilla/mux"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/plugin"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
-	"github.com/mattermost/mattermost-server/v6/utils"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/plugin"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/utils"
 )
 
 func (ch *Channels) ServePluginRequest(w http.ResponseWriter, r *http.Request) {
diff --git a/app/plugin_requests_test.go b/app/plugin_requests_test.go
index c41c70be6..1d7e04dc8 100644
--- a/app/plugin_requests_test.go
+++ b/app/plugin_requests_test.go
@@ -11,7 +11,7 @@ import (
 	"github.com/stretchr/testify/assert"
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 func TestServePluginPublicRequest(t *testing.T) {
diff --git a/app/plugin_shutdown_test.go b/app/plugin_shutdown_test.go
index 293d882f1..97f48c905 100644
--- a/app/plugin_shutdown_test.go
+++ b/app/plugin_shutdown_test.go
@@ -24,7 +24,7 @@ func TestPluginShutdownTest(t *testing.T) {
 			package main
 
 			import (
-				"github.com/mattermost/mattermost-server/v6/plugin"
+				"github.com/cjdelisle/matterfoss-server/v6/plugin"
 			)
 
 			type MyPlugin struct {
@@ -39,7 +39,7 @@ func TestPluginShutdownTest(t *testing.T) {
 			package main
 
 			import (
-				"github.com/mattermost/mattermost-server/v6/plugin"
+				"github.com/cjdelisle/matterfoss-server/v6/plugin"
 			)
 
 			type MyPlugin struct {
diff --git a/app/plugin_signature.go b/app/plugin_signature.go
index 2acf4990d..e921206e8 100644
--- a/app/plugin_signature.go
+++ b/app/plugin_signature.go
@@ -14,9 +14,9 @@ import (
 	"golang.org/x/crypto/openpgp"       //nolint:staticcheck
 	"golang.org/x/crypto/openpgp/armor" //nolint:staticcheck
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
-	"github.com/mattermost/mattermost-server/v6/utils"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/utils"
 )
 
 // GetPublicKey will return the actual public key saved in the `name` file.
@@ -78,7 +78,7 @@ func (a *App) VerifyPlugin(plugin, signature io.ReadSeeker) *model.AppError {
 }
 
 func (ch *Channels) verifyPlugin(plugin, signature io.ReadSeeker) *model.AppError {
-	if err := verifySignature(bytes.NewReader(mattermostPluginPublicKey), plugin, signature); err == nil {
+	if err := verifySignature(bytes.NewReader(matterfossPluginPublicKey), plugin, signature); err == nil {
 		return nil
 	}
 	publicKeys := ch.cfgSvc.Config().PluginSettings.SignaturePublicKeyFiles
diff --git a/app/plugin_signature_test.go b/app/plugin_signature_test.go
index f1b0d31d1..d241b021f 100644
--- a/app/plugin_signature_test.go
+++ b/app/plugin_signature_test.go
@@ -12,9 +12,9 @@ import (
 	"github.com/stretchr/testify/mock"
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/store/storetest/mocks"
-	"github.com/mattermost/mattermost-server/v6/utils/fileutils"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/store/storetest/mocks"
+	"github.com/cjdelisle/matterfoss-server/v6/utils/fileutils"
 )
 
 func TestPluginPublicKeys(t *testing.T) {
diff --git a/app/plugin_statuses.go b/app/plugin_statuses.go
index 540ab7c4a..0fcdf37fc 100644
--- a/app/plugin_statuses.go
+++ b/app/plugin_statuses.go
@@ -6,7 +6,7 @@ package app
 import (
 	"net/http"
 
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 // GetPluginStatus returns the status for a plugin installed on this server.
diff --git a/app/plugin_test.go b/app/plugin_test.go
index f060b4737..af2111237 100644
--- a/app/plugin_test.go
+++ b/app/plugin_test.go
@@ -20,12 +20,12 @@ import (
 	"github.com/stretchr/testify/assert"
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/app/request"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/plugin"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
-	"github.com/mattermost/mattermost-server/v6/testlib"
-	"github.com/mattermost/mattermost-server/v6/utils/fileutils"
+	"github.com/cjdelisle/matterfoss-server/v6/app/request"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/plugin"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/testlib"
+	"github.com/cjdelisle/matterfoss-server/v6/utils/fileutils"
 )
 
 func getHashedKey(key string) string {
@@ -629,7 +629,7 @@ func TestPluginSync(t *testing.T) {
 	}
 }
 
-// See https://github.com/mattermost/mattermost-server/issues/19189
+// See https://github.com/cjdelisle/matterfoss-server/issues/19189
 func TestChannelsPluginsInit(t *testing.T) {
 	th := Setup(t)
 	defer th.TearDown()
@@ -729,8 +729,8 @@ func TestPluginPanicLogs(t *testing.T) {
 		package main
 
 		import (
-			"github.com/mattermost/mattermost-server/v6/plugin"
-			"github.com/mattermost/mattermost-server/v6/model"
+			"github.com/cjdelisle/matterfoss-server/v6/plugin"
+			"github.com/cjdelisle/matterfoss-server/v6/model"
 		)
 
 		type MyPlugin struct {
diff --git a/app/post.go b/app/post.go
index 213d9d3f9..e365d2334 100644
--- a/app/post.go
+++ b/app/post.go
@@ -14,14 +14,14 @@ import (
 	"sync"
 	"time"
 
-	"github.com/mattermost/mattermost-server/v6/app/request"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/plugin"
-	"github.com/mattermost/mattermost-server/v6/services/cache"
-	"github.com/mattermost/mattermost-server/v6/shared/i18n"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
-	"github.com/mattermost/mattermost-server/v6/store"
-	"github.com/mattermost/mattermost-server/v6/store/sqlstore"
+	"github.com/cjdelisle/matterfoss-server/v6/app/request"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/plugin"
+	"github.com/cjdelisle/matterfoss-server/v6/services/cache"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/i18n"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/store/sqlstore"
 )
 
 const (
diff --git a/app/post_metadata.go b/app/post_metadata.go
index 5c1464641..7ddff3ece 100644
--- a/app/post_metadata.go
+++ b/app/post_metadata.go
@@ -18,11 +18,11 @@ import (
 
 	"github.com/dyatlov/go-opengraph/opengraph"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/services/cache"
-	"github.com/mattermost/mattermost-server/v6/shared/markdown"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
-	"github.com/mattermost/mattermost-server/v6/utils/imgutils"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/services/cache"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/markdown"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/utils/imgutils"
 )
 
 type linkMetadataCache struct {
diff --git a/app/post_metadata_test.go b/app/post_metadata_test.go
index 08500f90b..b8ee94503 100644
--- a/app/post_metadata_test.go
+++ b/app/post_metadata_test.go
@@ -22,10 +22,10 @@ import (
 	"github.com/stretchr/testify/assert"
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/services/httpservice"
-	"github.com/mattermost/mattermost-server/v6/services/imageproxy"
-	"github.com/mattermost/mattermost-server/v6/utils/testutils"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/services/httpservice"
+	"github.com/cjdelisle/matterfoss-server/v6/services/imageproxy"
+	"github.com/cjdelisle/matterfoss-server/v6/utils/testutils"
 )
 
 func TestPreparePostListForClient(t *testing.T) {
diff --git a/app/post_test.go b/app/post_test.go
index b49e6e32f..2d886ca91 100644
--- a/app/post_test.go
+++ b/app/post_test.go
@@ -15,15 +15,15 @@ import (
 	"github.com/stretchr/testify/assert"
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/plugin/plugintest/mock"
-	"github.com/mattermost/mattermost-server/v6/services/imageproxy"
-	"github.com/mattermost/mattermost-server/v6/services/searchengine/mocks"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
-	"github.com/mattermost/mattermost-server/v6/store"
-	"github.com/mattermost/mattermost-server/v6/store/storetest"
-	storemocks "github.com/mattermost/mattermost-server/v6/store/storetest/mocks"
-	"github.com/mattermost/mattermost-server/v6/testlib"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/plugin/plugintest/mock"
+	"github.com/cjdelisle/matterfoss-server/v6/services/imageproxy"
+	"github.com/cjdelisle/matterfoss-server/v6/services/searchengine/mocks"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/store/storetest"
+	storemocks "github.com/cjdelisle/matterfoss-server/v6/store/storetest/mocks"
+	"github.com/cjdelisle/matterfoss-server/v6/testlib"
 )
 
 func TestCreatePostDeduplicate(t *testing.T) {
@@ -57,8 +57,8 @@ func TestCreatePostDeduplicate(t *testing.T) {
 			package main
 
 			import (
-				"github.com/mattermost/mattermost-server/v6/plugin"
-				"github.com/mattermost/mattermost-server/v6/model"
+				"github.com/cjdelisle/matterfoss-server/v6/plugin"
+				"github.com/cjdelisle/matterfoss-server/v6/model"
 			)
 
 			type MyPlugin struct {
@@ -106,8 +106,8 @@ func TestCreatePostDeduplicate(t *testing.T) {
 			package main
 
 			import (
-				"github.com/mattermost/mattermost-server/v6/plugin"
-				"github.com/mattermost/mattermost-server/v6/model"
+				"github.com/cjdelisle/matterfoss-server/v6/plugin"
+				"github.com/cjdelisle/matterfoss-server/v6/model"
 				"time"
 			)
 
diff --git a/app/preference.go b/app/preference.go
index 23df83426..9430ec366 100644
--- a/app/preference.go
+++ b/app/preference.go
@@ -8,8 +8,8 @@ import (
 	"errors"
 	"net/http"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
 )
 
 func (a *App) GetPreferencesForUser(userID string) (model.Preferences, *model.AppError) {
diff --git a/app/product_notices.go b/app/product_notices.go
index 515e1f6b7..4cfcd672a 100644
--- a/app/product_notices.go
+++ b/app/product_notices.go
@@ -15,12 +15,12 @@ import (
 	"github.com/pkg/errors"
 	date_constraints "github.com/reflog/dateconstraints"
 
-	"github.com/mattermost/mattermost-server/v6/app/request"
-	"github.com/mattermost/mattermost-server/v6/config"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
-	"github.com/mattermost/mattermost-server/v6/store"
-	"github.com/mattermost/mattermost-server/v6/utils"
+	"github.com/cjdelisle/matterfoss-server/v6/app/request"
+	"github.com/cjdelisle/matterfoss-server/v6/config"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/utils"
 )
 
 const MaxRepeatViewings = 3
diff --git a/app/product_notices_test.go b/app/product_notices_test.go
index 8403634dc..cd580f2ad 100644
--- a/app/product_notices_test.go
+++ b/app/product_notices_test.go
@@ -14,9 +14,9 @@ import (
 
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/app/request"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/store/storetest/mocks"
+	"github.com/cjdelisle/matterfoss-server/v6/app/request"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/store/storetest/mocks"
 )
 
 func TestNoticeValidation(t *testing.T) {
diff --git a/app/ratelimit.go b/app/ratelimit.go
index 2ce56171d..90acf63ca 100644
--- a/app/ratelimit.go
+++ b/app/ratelimit.go
@@ -13,10 +13,10 @@ import (
 	"github.com/throttled/throttled"
 	"github.com/throttled/throttled/store/memstore"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/i18n"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
-	"github.com/mattermost/mattermost-server/v6/utils"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/i18n"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/utils"
 )
 
 type RateLimiter struct {
diff --git a/app/ratelimit_test.go b/app/ratelimit_test.go
index 9e1818f6f..a09f2951c 100644
--- a/app/ratelimit_test.go
+++ b/app/ratelimit_test.go
@@ -11,7 +11,7 @@ import (
 
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 func genRateLimitSettings(useAuth, useIP bool, header string) *model.RateLimitSettings {
diff --git a/app/reaction.go b/app/reaction.go
index c6a80c61f..f243adbdd 100644
--- a/app/reaction.go
+++ b/app/reaction.go
@@ -8,10 +8,10 @@ import (
 	"errors"
 	"net/http"
 
-	"github.com/mattermost/mattermost-server/v6/app/request"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/plugin"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/app/request"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/plugin"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
 )
 
 func (a *App) SaveReactionForPost(c *request.Context, reaction *model.Reaction) (*model.Reaction, *model.AppError) {
diff --git a/app/reaction_test.go b/app/reaction_test.go
index 3976175dd..d4b33f3ed 100644
--- a/app/reaction_test.go
+++ b/app/reaction_test.go
@@ -9,8 +9,8 @@ import (
 	"github.com/stretchr/testify/assert"
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/testlib"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/testlib"
 )
 
 func TestSharedChannelSyncForReactionActions(t *testing.T) {
diff --git a/app/remote_cluster.go b/app/remote_cluster.go
index 3c46166ee..fc9a119f6 100644
--- a/app/remote_cluster.go
+++ b/app/remote_cluster.go
@@ -8,10 +8,10 @@ import (
 
 	"github.com/pkg/errors"
 
-	"github.com/mattermost/mattermost-server/v6/services/remotecluster"
-	"github.com/mattermost/mattermost-server/v6/store/sqlstore"
+	"github.com/cjdelisle/matterfoss-server/v6/services/remotecluster"
+	"github.com/cjdelisle/matterfoss-server/v6/store/sqlstore"
 
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 func (a *App) AddRemoteCluster(rc *model.RemoteCluster) (*model.RemoteCluster, *model.AppError) {
diff --git a/app/remote_cluster_service_mock.go b/app/remote_cluster_service_mock.go
index 20e7139df..a04b9e7b9 100644
--- a/app/remote_cluster_service_mock.go
+++ b/app/remote_cluster_service_mock.go
@@ -6,8 +6,8 @@ package app
 import (
 	"context"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/services/remotecluster"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/services/remotecluster"
 )
 
 // MockOptionRemoteClusterService a mock of the remote cluster service
diff --git a/app/remote_cluster_test.go b/app/remote_cluster_test.go
index 61b7d1b6e..43a7fb490 100644
--- a/app/remote_cluster_test.go
+++ b/app/remote_cluster_test.go
@@ -9,8 +9,8 @@ import (
 	"github.com/stretchr/testify/assert"
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/i18n"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/i18n"
 )
 
 func TestAddRemoteCluster(t *testing.T) {
diff --git a/app/request/context.go b/app/request/context.go
index df98cc28c..ad3087b25 100644
--- a/app/request/context.go
+++ b/app/request/context.go
@@ -6,8 +6,8 @@ package request
 import (
 	"context"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/i18n"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/i18n"
 )
 
 type Context struct {
diff --git a/app/role.go b/app/role.go
index 846d9d83f..339c711d9 100644
--- a/app/role.go
+++ b/app/role.go
@@ -11,10 +11,10 @@ import (
 	"reflect"
 	"strings"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
-	"github.com/mattermost/mattermost-server/v6/store"
-	"github.com/mattermost/mattermost-server/v6/utils"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/utils"
 )
 
 func (a *App) GetRole(id string) (*model.Role, *model.AppError) {
diff --git a/app/role_test.go b/app/role_test.go
index 533308132..fa86ae83b 100644
--- a/app/role_test.go
+++ b/app/role_test.go
@@ -14,8 +14,8 @@ import (
 
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/utils"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/utils"
 )
 
 type permissionInheritanceTestData struct {
diff --git a/app/saml.go b/app/saml.go
index 4677a8183..5e2d01728 100644
--- a/app/saml.go
+++ b/app/saml.go
@@ -13,7 +13,7 @@ import (
 	"net/http"
 	"strings"
 
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 const (
diff --git a/app/scheme.go b/app/scheme.go
index 460e32f99..6471c7ad8 100644
--- a/app/scheme.go
+++ b/app/scheme.go
@@ -7,8 +7,8 @@ import (
 	"errors"
 	"net/http"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
 )
 
 func (a *App) GetScheme(id string) (*model.Scheme, *model.AppError) {
diff --git a/app/searchengine.go b/app/searchengine.go
index b8c107c5e..01576644b 100644
--- a/app/searchengine.go
+++ b/app/searchengine.go
@@ -6,8 +6,8 @@ package app
 import (
 	"net/http"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/services/searchengine"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/services/searchengine"
 )
 
 func (a *App) TestElasticsearch(cfg *model.Config) *model.AppError {
diff --git a/app/security_update_check.go b/app/security_update_check.go
index 2ed2334e7..eff164468 100644
--- a/app/security_update_check.go
+++ b/app/security_update_check.go
@@ -11,10 +11,10 @@ import (
 	"runtime"
 	"strconv"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/i18n"
-	"github.com/mattermost/mattermost-server/v6/shared/mail"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/i18n"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mail"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
 )
 
 const (
diff --git a/app/server.go b/app/server.go
index 4f473d2e9..56aa83e08 100644
--- a/app/server.go
+++ b/app/server.go
@@ -37,51 +37,51 @@ import (
 	"github.com/rs/cors"
 	"golang.org/x/crypto/acme/autocert"
 
-	"github.com/mattermost/mattermost-server/v6/app/email"
-	"github.com/mattermost/mattermost-server/v6/app/featureflag"
-	"github.com/mattermost/mattermost-server/v6/app/request"
-	"github.com/mattermost/mattermost-server/v6/app/teams"
-	"github.com/mattermost/mattermost-server/v6/app/users"
-	"github.com/mattermost/mattermost-server/v6/audit"
-	"github.com/mattermost/mattermost-server/v6/config"
-	"github.com/mattermost/mattermost-server/v6/einterfaces"
-	"github.com/mattermost/mattermost-server/v6/jobs"
-	"github.com/mattermost/mattermost-server/v6/jobs/active_users"
-	"github.com/mattermost/mattermost-server/v6/jobs/expirynotify"
-	"github.com/mattermost/mattermost-server/v6/jobs/export_delete"
-	"github.com/mattermost/mattermost-server/v6/jobs/export_process"
-	"github.com/mattermost/mattermost-server/v6/jobs/extract_content"
-	"github.com/mattermost/mattermost-server/v6/jobs/import_delete"
-	"github.com/mattermost/mattermost-server/v6/jobs/import_process"
-	"github.com/mattermost/mattermost-server/v6/jobs/migrations"
-	"github.com/mattermost/mattermost-server/v6/jobs/product_notices"
-	"github.com/mattermost/mattermost-server/v6/jobs/resend_invitation_email"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/plugin/scheduler"
-	"github.com/mattermost/mattermost-server/v6/services/awsmeter"
-	"github.com/mattermost/mattermost-server/v6/services/cache"
-	"github.com/mattermost/mattermost-server/v6/services/httpservice"
-	"github.com/mattermost/mattermost-server/v6/services/remotecluster"
-	"github.com/mattermost/mattermost-server/v6/services/searchengine"
-	"github.com/mattermost/mattermost-server/v6/services/searchengine/bleveengine"
-	"github.com/mattermost/mattermost-server/v6/services/searchengine/bleveengine/indexer"
-	"github.com/mattermost/mattermost-server/v6/services/sharedchannel"
-	"github.com/mattermost/mattermost-server/v6/services/telemetry"
-	"github.com/mattermost/mattermost-server/v6/services/timezones"
-	"github.com/mattermost/mattermost-server/v6/services/tracing"
-	"github.com/mattermost/mattermost-server/v6/services/upgrader"
-	"github.com/mattermost/mattermost-server/v6/shared/filestore"
-	"github.com/mattermost/mattermost-server/v6/shared/i18n"
-	"github.com/mattermost/mattermost-server/v6/shared/mail"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
-	"github.com/mattermost/mattermost-server/v6/shared/templates"
-	"github.com/mattermost/mattermost-server/v6/store"
-	"github.com/mattermost/mattermost-server/v6/store/localcachelayer"
-	"github.com/mattermost/mattermost-server/v6/store/retrylayer"
-	"github.com/mattermost/mattermost-server/v6/store/searchlayer"
-	"github.com/mattermost/mattermost-server/v6/store/sqlstore"
-	"github.com/mattermost/mattermost-server/v6/store/timerlayer"
-	"github.com/mattermost/mattermost-server/v6/utils"
+	"github.com/cjdelisle/matterfoss-server/v6/app/email"
+	"github.com/cjdelisle/matterfoss-server/v6/app/featureflag"
+	"github.com/cjdelisle/matterfoss-server/v6/app/request"
+	"github.com/cjdelisle/matterfoss-server/v6/app/teams"
+	"github.com/cjdelisle/matterfoss-server/v6/app/users"
+	"github.com/cjdelisle/matterfoss-server/v6/audit"
+	"github.com/cjdelisle/matterfoss-server/v6/config"
+	"github.com/cjdelisle/matterfoss-server/v6/einterfaces"
+	"github.com/cjdelisle/matterfoss-server/v6/jobs"
+	"github.com/cjdelisle/matterfoss-server/v6/jobs/active_users"
+	"github.com/cjdelisle/matterfoss-server/v6/jobs/expirynotify"
+	"github.com/cjdelisle/matterfoss-server/v6/jobs/export_delete"
+	"github.com/cjdelisle/matterfoss-server/v6/jobs/export_process"
+	"github.com/cjdelisle/matterfoss-server/v6/jobs/extract_content"
+	"github.com/cjdelisle/matterfoss-server/v6/jobs/import_delete"
+	"github.com/cjdelisle/matterfoss-server/v6/jobs/import_process"
+	"github.com/cjdelisle/matterfoss-server/v6/jobs/migrations"
+	"github.com/cjdelisle/matterfoss-server/v6/jobs/product_notices"
+	"github.com/cjdelisle/matterfoss-server/v6/jobs/resend_invitation_email"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/plugin/scheduler"
+	"github.com/cjdelisle/matterfoss-server/v6/services/awsmeter"
+	"github.com/cjdelisle/matterfoss-server/v6/services/cache"
+	"github.com/cjdelisle/matterfoss-server/v6/services/httpservice"
+	"github.com/cjdelisle/matterfoss-server/v6/services/remotecluster"
+	"github.com/cjdelisle/matterfoss-server/v6/services/searchengine"
+	"github.com/cjdelisle/matterfoss-server/v6/services/searchengine/bleveengine"
+	"github.com/cjdelisle/matterfoss-server/v6/services/searchengine/bleveengine/indexer"
+	"github.com/cjdelisle/matterfoss-server/v6/services/sharedchannel"
+	"github.com/cjdelisle/matterfoss-server/v6/services/telemetry"
+	"github.com/cjdelisle/matterfoss-server/v6/services/timezones"
+	"github.com/cjdelisle/matterfoss-server/v6/services/tracing"
+	"github.com/cjdelisle/matterfoss-server/v6/services/upgrader"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/filestore"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/i18n"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mail"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/templates"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/store/localcachelayer"
+	"github.com/cjdelisle/matterfoss-server/v6/store/retrylayer"
+	"github.com/cjdelisle/matterfoss-server/v6/store/searchlayer"
+	"github.com/cjdelisle/matterfoss-server/v6/store/sqlstore"
+	"github.com/cjdelisle/matterfoss-server/v6/store/timerlayer"
+	"github.com/cjdelisle/matterfoss-server/v6/utils"
 )
 
 // declaring this as var to allow overriding in tests
diff --git a/app/server_inactivity.go b/app/server_inactivity.go
index 177cf3e8e..09d064b99 100644
--- a/app/server_inactivity.go
+++ b/app/server_inactivity.go
@@ -9,9 +9,9 @@ import (
 	"strconv"
 	"time"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
-	"github.com/mattermost/mattermost-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
 )
 
 const serverInactivityHours = 100
diff --git a/app/server_license.go b/app/server_license.go
index ffb0dc68c..f24ac7351 100644
--- a/app/server_license.go
+++ b/app/server_license.go
@@ -4,7 +4,7 @@
 package app
 
 import (
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 func (s *Server) License() *model.License {
diff --git a/app/server_test.go b/app/server_test.go
index e2d650c78..9065dffcc 100644
--- a/app/server_test.go
+++ b/app/server_test.go
@@ -24,12 +24,12 @@ import (
 	"github.com/stretchr/testify/assert"
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/config"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/filestore"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
-	"github.com/mattermost/mattermost-server/v6/store/storetest"
-	"github.com/mattermost/mattermost-server/v6/utils/fileutils"
+	"github.com/cjdelisle/matterfoss-server/v6/config"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/filestore"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/store/storetest"
+	"github.com/cjdelisle/matterfoss-server/v6/utils/fileutils"
 )
 
 func newServerWithConfig(t *testing.T, f func(cfg *model.Config)) (*Server, error) {
diff --git a/app/session.go b/app/session.go
index 1d3a1833b..064833c71 100644
--- a/app/session.go
+++ b/app/session.go
@@ -10,11 +10,11 @@ import (
 	"net/http"
 	"os"
 
-	"github.com/mattermost/mattermost-server/v6/app/users"
-	"github.com/mattermost/mattermost-server/v6/audit"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
-	"github.com/mattermost/mattermost-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/app/users"
+	"github.com/cjdelisle/matterfoss-server/v6/audit"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
 )
 
 func (a *App) CreateSession(session *model.Session) (*model.Session, *model.AppError) {
diff --git a/app/session_test.go b/app/session_test.go
index 4b4ee8ce8..34441c089 100644
--- a/app/session_test.go
+++ b/app/session_test.go
@@ -12,7 +12,7 @@ import (
 	"github.com/stretchr/testify/assert"
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 func TestGetSessionIdleTimeoutInMinutes(t *testing.T) {
diff --git a/app/shared_channel.go b/app/shared_channel.go
index 8478ad9b9..0c3e8422a 100644
--- a/app/shared_channel.go
+++ b/app/shared_channel.go
@@ -8,8 +8,8 @@ import (
 	"fmt"
 	"net/http"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
 )
 
 func (a *App) checkChannelNotShared(channelId string) error {
diff --git a/app/shared_channel_notifier.go b/app/shared_channel_notifier.go
index 59aaefb1b..de52e1166 100644
--- a/app/shared_channel_notifier.go
+++ b/app/shared_channel_notifier.go
@@ -9,9 +9,9 @@ import (
 
 	"github.com/pkg/errors"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/services/sharedchannel"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/services/sharedchannel"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
 )
 
 var sharedChannelEventsForSync model.StringArray = []string{
diff --git a/app/shared_channel_notifier_test.go b/app/shared_channel_notifier_test.go
index 9454b5dba..bb9e96b14 100644
--- a/app/shared_channel_notifier_test.go
+++ b/app/shared_channel_notifier_test.go
@@ -8,7 +8,7 @@ import (
 
 	"github.com/stretchr/testify/assert"
 
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 func TestServerSyncSharedChannelHandler(t *testing.T) {
diff --git a/app/shared_channel_service_iface.go b/app/shared_channel_service_iface.go
index 4df47fce0..e3eb64aff 100644
--- a/app/shared_channel_service_iface.go
+++ b/app/shared_channel_service_iface.go
@@ -4,8 +4,8 @@
 package app
 
 import (
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/services/sharedchannel"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/services/sharedchannel"
 )
 
 // SharedChannelServiceIFace is the interface to the shared channel service
diff --git a/app/shared_channel_test.go b/app/shared_channel_test.go
index f2674980e..240ec979e 100644
--- a/app/shared_channel_test.go
+++ b/app/shared_channel_test.go
@@ -9,7 +9,7 @@ import (
 	"github.com/stretchr/testify/assert"
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 func TestApp_CheckCanInviteToSharedChannel(t *testing.T) {
diff --git a/app/slack.go b/app/slack.go
index b35539695..9946bc8b1 100644
--- a/app/slack.go
+++ b/app/slack.go
@@ -13,10 +13,10 @@ import (
 	"strings"
 	"time"
 
-	"github.com/mattermost/mattermost-server/v6/app/request"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/services/slackimport"
-	"github.com/mattermost/mattermost-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/app/request"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/services/slackimport"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
 )
 
 func (a *App) SlackImport(c *request.Context, fileData multipart.File, fileSize int64, teamID string) (*model.AppError, *bytes.Buffer) {
diff --git a/app/slack_test.go b/app/slack_test.go
index e82eb097f..57905f80e 100644
--- a/app/slack_test.go
+++ b/app/slack_test.go
@@ -6,7 +6,7 @@ package app
 import (
 	"testing"
 
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 func TestProcessSlackText(t *testing.T) {
diff --git a/app/slashcommands/auto_channels.go b/app/slashcommands/auto_channels.go
index f2db5c5e7..e3b0745f5 100644
--- a/app/slashcommands/auto_channels.go
+++ b/app/slashcommands/auto_channels.go
@@ -4,10 +4,10 @@
 package slashcommands
 
 import (
-	"github.com/mattermost/mattermost-server/v6/app"
-	"github.com/mattermost/mattermost-server/v6/app/request"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/utils"
+	"github.com/cjdelisle/matterfoss-server/v6/app"
+	"github.com/cjdelisle/matterfoss-server/v6/app/request"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/utils"
 )
 
 type AutoChannelCreator struct {
diff --git a/app/slashcommands/auto_constants.go b/app/slashcommands/auto_constants.go
index d6b1bc1cd..63e71b611 100644
--- a/app/slashcommands/auto_constants.go
+++ b/app/slashcommands/auto_constants.go
@@ -4,8 +4,8 @@
 package slashcommands
 
 import (
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/utils"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/utils"
 )
 
 const (
diff --git a/app/slashcommands/auto_environment.go b/app/slashcommands/auto_environment.go
index 50870decf..9f6d6c123 100644
--- a/app/slashcommands/auto_environment.go
+++ b/app/slashcommands/auto_environment.go
@@ -7,10 +7,10 @@ import (
 	"math/rand"
 	"time"
 
-	"github.com/mattermost/mattermost-server/v6/app"
-	"github.com/mattermost/mattermost-server/v6/app/request"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/utils"
+	"github.com/cjdelisle/matterfoss-server/v6/app"
+	"github.com/cjdelisle/matterfoss-server/v6/app/request"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/utils"
 )
 
 type TestEnvironment struct {
diff --git a/app/slashcommands/auto_posts.go b/app/slashcommands/auto_posts.go
index 3c78b0998..2033133bd 100644
--- a/app/slashcommands/auto_posts.go
+++ b/app/slashcommands/auto_posts.go
@@ -9,11 +9,11 @@ import (
 	"os"
 	"path/filepath"
 
-	"github.com/mattermost/mattermost-server/v6/app"
-	"github.com/mattermost/mattermost-server/v6/app/request"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/utils"
-	"github.com/mattermost/mattermost-server/v6/utils/fileutils"
+	"github.com/cjdelisle/matterfoss-server/v6/app"
+	"github.com/cjdelisle/matterfoss-server/v6/app/request"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/utils"
+	"github.com/cjdelisle/matterfoss-server/v6/utils/fileutils"
 )
 
 type AutoPostCreator struct {
diff --git a/app/slashcommands/auto_teams.go b/app/slashcommands/auto_teams.go
index 4caa28840..bcec0e670 100644
--- a/app/slashcommands/auto_teams.go
+++ b/app/slashcommands/auto_teams.go
@@ -4,8 +4,8 @@
 package slashcommands
 
 import (
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/utils"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/utils"
 )
 
 type TeamEnvironment struct {
diff --git a/app/slashcommands/auto_users.go b/app/slashcommands/auto_users.go
index d100f3242..9b4c47c25 100644
--- a/app/slashcommands/auto_users.go
+++ b/app/slashcommands/auto_users.go
@@ -7,11 +7,11 @@ import (
 	"errors"
 	"net/http"
 
-	"github.com/mattermost/mattermost-server/v6/app"
-	"github.com/mattermost/mattermost-server/v6/app/request"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/store"
-	"github.com/mattermost/mattermost-server/v6/utils"
+	"github.com/cjdelisle/matterfoss-server/v6/app"
+	"github.com/cjdelisle/matterfoss-server/v6/app/request"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/utils"
 )
 
 type AutoUserCreator struct {
diff --git a/app/slashcommands/command_away.go b/app/slashcommands/command_away.go
index c49877031..2e37a45a5 100644
--- a/app/slashcommands/command_away.go
+++ b/app/slashcommands/command_away.go
@@ -4,10 +4,10 @@
 package slashcommands
 
 import (
-	"github.com/mattermost/mattermost-server/v6/app"
-	"github.com/mattermost/mattermost-server/v6/app/request"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/i18n"
+	"github.com/cjdelisle/matterfoss-server/v6/app"
+	"github.com/cjdelisle/matterfoss-server/v6/app/request"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/i18n"
 )
 
 type AwayProvider struct {
diff --git a/app/slashcommands/command_channel_header.go b/app/slashcommands/command_channel_header.go
index 24a8acb88..995a9279d 100644
--- a/app/slashcommands/command_channel_header.go
+++ b/app/slashcommands/command_channel_header.go
@@ -6,10 +6,10 @@ package slashcommands
 import (
 	"context"
 
-	"github.com/mattermost/mattermost-server/v6/app"
-	"github.com/mattermost/mattermost-server/v6/app/request"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/i18n"
+	"github.com/cjdelisle/matterfoss-server/v6/app"
+	"github.com/cjdelisle/matterfoss-server/v6/app/request"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/i18n"
 )
 
 type HeaderProvider struct {
diff --git a/app/slashcommands/command_channel_header_test.go b/app/slashcommands/command_channel_header_test.go
index 5a6ec51fa..6feae614a 100644
--- a/app/slashcommands/command_channel_header_test.go
+++ b/app/slashcommands/command_channel_header_test.go
@@ -8,7 +8,7 @@ import (
 
 	"github.com/stretchr/testify/assert"
 
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 func TestHeaderProviderDoCommand(t *testing.T) {
diff --git a/app/slashcommands/command_channel_purpose.go b/app/slashcommands/command_channel_purpose.go
index e51947039..e7fa55046 100644
--- a/app/slashcommands/command_channel_purpose.go
+++ b/app/slashcommands/command_channel_purpose.go
@@ -4,10 +4,10 @@
 package slashcommands
 
 import (
-	"github.com/mattermost/mattermost-server/v6/app"
-	"github.com/mattermost/mattermost-server/v6/app/request"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/i18n"
+	"github.com/cjdelisle/matterfoss-server/v6/app"
+	"github.com/cjdelisle/matterfoss-server/v6/app/request"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/i18n"
 )
 
 type PurposeProvider struct {
diff --git a/app/slashcommands/command_channel_purpose_test.go b/app/slashcommands/command_channel_purpose_test.go
index d03b647ac..1238c01ac 100644
--- a/app/slashcommands/command_channel_purpose_test.go
+++ b/app/slashcommands/command_channel_purpose_test.go
@@ -8,7 +8,7 @@ import (
 
 	"github.com/stretchr/testify/assert"
 
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 func TestPurposeProviderDoCommand(t *testing.T) {
diff --git a/app/slashcommands/command_channel_rename.go b/app/slashcommands/command_channel_rename.go
index bf892374e..869bdf448 100644
--- a/app/slashcommands/command_channel_rename.go
+++ b/app/slashcommands/command_channel_rename.go
@@ -4,10 +4,10 @@
 package slashcommands
 
 import (
-	"github.com/mattermost/mattermost-server/v6/app"
-	"github.com/mattermost/mattermost-server/v6/app/request"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/i18n"
+	"github.com/cjdelisle/matterfoss-server/v6/app"
+	"github.com/cjdelisle/matterfoss-server/v6/app/request"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/i18n"
 )
 
 type RenameProvider struct {
diff --git a/app/slashcommands/command_channel_rename_test.go b/app/slashcommands/command_channel_rename_test.go
index eb6097450..e830b40ea 100644
--- a/app/slashcommands/command_channel_rename_test.go
+++ b/app/slashcommands/command_channel_rename_test.go
@@ -9,7 +9,7 @@ import (
 
 	"github.com/stretchr/testify/assert"
 
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 func TestRenameProviderDoCommand(t *testing.T) {
diff --git a/app/slashcommands/command_code.go b/app/slashcommands/command_code.go
index 0add5d18e..bbb73e762 100644
--- a/app/slashcommands/command_code.go
+++ b/app/slashcommands/command_code.go
@@ -6,10 +6,10 @@ package slashcommands
 import (
 	"strings"
 
-	"github.com/mattermost/mattermost-server/v6/app"
-	"github.com/mattermost/mattermost-server/v6/app/request"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/i18n"
+	"github.com/cjdelisle/matterfoss-server/v6/app"
+	"github.com/cjdelisle/matterfoss-server/v6/app/request"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/i18n"
 )
 
 type CodeProvider struct {
diff --git a/app/slashcommands/command_code_test.go b/app/slashcommands/command_code_test.go
index 732b3bef0..c0be6828d 100644
--- a/app/slashcommands/command_code_test.go
+++ b/app/slashcommands/command_code_test.go
@@ -6,7 +6,7 @@ package slashcommands
 import (
 	"testing"
 
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 func TestCodeProviderDoCommand(t *testing.T) {
diff --git a/app/slashcommands/command_custom_status.go b/app/slashcommands/command_custom_status.go
index a75fbcbf6..d73184916 100644
--- a/app/slashcommands/command_custom_status.go
+++ b/app/slashcommands/command_custom_status.go
@@ -8,11 +8,11 @@ import (
 	"strings"
 	"unicode/utf8"
 
-	"github.com/mattermost/mattermost-server/v6/app"
-	"github.com/mattermost/mattermost-server/v6/app/request"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/i18n"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/app"
+	"github.com/cjdelisle/matterfoss-server/v6/app/request"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/i18n"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
 )
 
 type CustomStatusProvider struct {
diff --git a/app/slashcommands/command_custom_status_test.go b/app/slashcommands/command_custom_status_test.go
index 560ba2e18..ad26cf9db 100644
--- a/app/slashcommands/command_custom_status_test.go
+++ b/app/slashcommands/command_custom_status_test.go
@@ -6,7 +6,7 @@ package slashcommands
 import (
 	"testing"
 
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 func TestGetCustomStatus(t *testing.T) {
diff --git a/app/slashcommands/command_dnd.go b/app/slashcommands/command_dnd.go
index 7a2d4aa01..0f4323d3d 100644
--- a/app/slashcommands/command_dnd.go
+++ b/app/slashcommands/command_dnd.go
@@ -4,10 +4,10 @@
 package slashcommands
 
 import (
-	"github.com/mattermost/mattermost-server/v6/app"
-	"github.com/mattermost/mattermost-server/v6/app/request"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/i18n"
+	"github.com/cjdelisle/matterfoss-server/v6/app"
+	"github.com/cjdelisle/matterfoss-server/v6/app/request"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/i18n"
 )
 
 type DndProvider struct {
diff --git a/app/slashcommands/command_echo.go b/app/slashcommands/command_echo.go
index 3b66a7338..126f3af95 100644
--- a/app/slashcommands/command_echo.go
+++ b/app/slashcommands/command_echo.go
@@ -8,11 +8,11 @@ import (
 	"strings"
 	"time"
 
-	"github.com/mattermost/mattermost-server/v6/app"
-	"github.com/mattermost/mattermost-server/v6/app/request"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/i18n"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/app"
+	"github.com/cjdelisle/matterfoss-server/v6/app/request"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/i18n"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
 )
 
 var echoSem chan bool
diff --git a/app/slashcommands/command_expand_collapse.go b/app/slashcommands/command_expand_collapse.go
index 056725e44..1a7b4b10e 100644
--- a/app/slashcommands/command_expand_collapse.go
+++ b/app/slashcommands/command_expand_collapse.go
@@ -7,11 +7,11 @@ import (
 	"encoding/json"
 	"strconv"
 
-	"github.com/mattermost/mattermost-server/v6/app"
-	"github.com/mattermost/mattermost-server/v6/app/request"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/i18n"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/app"
+	"github.com/cjdelisle/matterfoss-server/v6/app/request"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/i18n"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
 )
 
 type ExpandProvider struct {
diff --git a/app/slashcommands/command_groupmsg.go b/app/slashcommands/command_groupmsg.go
index 8ecf74da4..b0669df69 100644
--- a/app/slashcommands/command_groupmsg.go
+++ b/app/slashcommands/command_groupmsg.go
@@ -7,11 +7,11 @@ import (
 	"fmt"
 	"strings"
 
-	"github.com/mattermost/mattermost-server/v6/app"
-	"github.com/mattermost/mattermost-server/v6/app/request"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/i18n"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/app"
+	"github.com/cjdelisle/matterfoss-server/v6/app/request"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/i18n"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
 )
 
 type groupmsgProvider struct {
diff --git a/app/slashcommands/command_groupmsg_test.go b/app/slashcommands/command_groupmsg_test.go
index 3e8887fc8..4329cd651 100644
--- a/app/slashcommands/command_groupmsg_test.go
+++ b/app/slashcommands/command_groupmsg_test.go
@@ -8,8 +8,8 @@ import (
 
 	"github.com/stretchr/testify/assert"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/i18n"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/i18n"
 )
 
 func TestGroupMsgUsernames(t *testing.T) {
diff --git a/app/slashcommands/command_help.go b/app/slashcommands/command_help.go
index 2e627be70..3696fc5de 100644
--- a/app/slashcommands/command_help.go
+++ b/app/slashcommands/command_help.go
@@ -4,10 +4,10 @@
 package slashcommands
 
 import (
-	"github.com/mattermost/mattermost-server/v6/app"
-	"github.com/mattermost/mattermost-server/v6/app/request"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/i18n"
+	"github.com/cjdelisle/matterfoss-server/v6/app"
+	"github.com/cjdelisle/matterfoss-server/v6/app/request"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/i18n"
 )
 
 type HelpProvider struct {
diff --git a/app/slashcommands/command_invite.go b/app/slashcommands/command_invite.go
index a6b0625b7..68533dbfb 100644
--- a/app/slashcommands/command_invite.go
+++ b/app/slashcommands/command_invite.go
@@ -7,11 +7,11 @@ import (
 	"context"
 	"strings"
 
-	"github.com/mattermost/mattermost-server/v6/app"
-	"github.com/mattermost/mattermost-server/v6/app/request"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/i18n"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/app"
+	"github.com/cjdelisle/matterfoss-server/v6/app/request"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/i18n"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
 )
 
 type InviteProvider struct {
diff --git a/app/slashcommands/command_invite_people.go b/app/slashcommands/command_invite_people.go
index 6ec723f6f..44310b417 100644
--- a/app/slashcommands/command_invite_people.go
+++ b/app/slashcommands/command_invite_people.go
@@ -6,11 +6,11 @@ package slashcommands
 import (
 	"strings"
 
-	"github.com/mattermost/mattermost-server/v6/app"
-	"github.com/mattermost/mattermost-server/v6/app/request"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/i18n"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/app"
+	"github.com/cjdelisle/matterfoss-server/v6/app/request"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/i18n"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
 )
 
 type InvitePeopleProvider struct {
diff --git a/app/slashcommands/command_invite_people_test.go b/app/slashcommands/command_invite_people_test.go
index 0a13e7b43..190956a4e 100644
--- a/app/slashcommands/command_invite_people_test.go
+++ b/app/slashcommands/command_invite_people_test.go
@@ -8,7 +8,7 @@ import (
 
 	"github.com/stretchr/testify/assert"
 
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 func TestInvitePeopleProvider(t *testing.T) {
diff --git a/app/slashcommands/command_invite_test.go b/app/slashcommands/command_invite_test.go
index b792cf880..9b5bbcb54 100644
--- a/app/slashcommands/command_invite_test.go
+++ b/app/slashcommands/command_invite_test.go
@@ -9,8 +9,8 @@ import (
 	"github.com/stretchr/testify/assert"
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/app"
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/app"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 func TestInviteProvider(t *testing.T) {
diff --git a/app/slashcommands/command_join.go b/app/slashcommands/command_join.go
index dd70bed6c..d4dba00b0 100644
--- a/app/slashcommands/command_join.go
+++ b/app/slashcommands/command_join.go
@@ -6,10 +6,10 @@ package slashcommands
 import (
 	"strings"
 
-	"github.com/mattermost/mattermost-server/v6/app"
-	"github.com/mattermost/mattermost-server/v6/app/request"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/i18n"
+	"github.com/cjdelisle/matterfoss-server/v6/app"
+	"github.com/cjdelisle/matterfoss-server/v6/app/request"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/i18n"
 )
 
 type JoinProvider struct {
diff --git a/app/slashcommands/command_join_test.go b/app/slashcommands/command_join_test.go
index 0ec98ea2a..f49a757e0 100644
--- a/app/slashcommands/command_join_test.go
+++ b/app/slashcommands/command_join_test.go
@@ -8,8 +8,8 @@ import (
 
 	"github.com/stretchr/testify/assert"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/i18n"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/i18n"
 )
 
 func TestJoinCommandNoChannel(t *testing.T) {
diff --git a/app/slashcommands/command_leave.go b/app/slashcommands/command_leave.go
index ad3a80f03..1c83e531a 100644
--- a/app/slashcommands/command_leave.go
+++ b/app/slashcommands/command_leave.go
@@ -4,10 +4,10 @@
 package slashcommands
 
 import (
-	"github.com/mattermost/mattermost-server/v6/app"
-	"github.com/mattermost/mattermost-server/v6/app/request"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/i18n"
+	"github.com/cjdelisle/matterfoss-server/v6/app"
+	"github.com/cjdelisle/matterfoss-server/v6/app/request"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/i18n"
 )
 
 type LeaveProvider struct {
diff --git a/app/slashcommands/command_leave_test.go b/app/slashcommands/command_leave_test.go
index c883f418c..673530d83 100644
--- a/app/slashcommands/command_leave_test.go
+++ b/app/slashcommands/command_leave_test.go
@@ -10,7 +10,7 @@ import (
 	"github.com/stretchr/testify/assert"
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 func TestLeaveProviderDoCommand(t *testing.T) {
diff --git a/app/slashcommands/command_loadtest.go b/app/slashcommands/command_loadtest.go
index 0b744637f..c1c3e6219 100644
--- a/app/slashcommands/command_loadtest.go
+++ b/app/slashcommands/command_loadtest.go
@@ -15,12 +15,12 @@ import (
 
 	"github.com/pkg/errors"
 
-	"github.com/mattermost/mattermost-server/v6/app"
-	"github.com/mattermost/mattermost-server/v6/app/request"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/i18n"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
-	"github.com/mattermost/mattermost-server/v6/utils"
+	"github.com/cjdelisle/matterfoss-server/v6/app"
+	"github.com/cjdelisle/matterfoss-server/v6/app/request"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/i18n"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/utils"
 )
 
 var usage = `Mattermost testing commands to help configure the system
diff --git a/app/slashcommands/command_logout.go b/app/slashcommands/command_logout.go
index 645a8534a..4d0fcbab4 100644
--- a/app/slashcommands/command_logout.go
+++ b/app/slashcommands/command_logout.go
@@ -4,10 +4,10 @@
 package slashcommands
 
 import (
-	"github.com/mattermost/mattermost-server/v6/app"
-	"github.com/mattermost/mattermost-server/v6/app/request"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/i18n"
+	"github.com/cjdelisle/matterfoss-server/v6/app"
+	"github.com/cjdelisle/matterfoss-server/v6/app/request"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/i18n"
 )
 
 type LogoutProvider struct {
diff --git a/app/slashcommands/command_me.go b/app/slashcommands/command_me.go
index a6f3a2db3..82f19717e 100644
--- a/app/slashcommands/command_me.go
+++ b/app/slashcommands/command_me.go
@@ -4,10 +4,10 @@
 package slashcommands
 
 import (
-	"github.com/mattermost/mattermost-server/v6/app"
-	"github.com/mattermost/mattermost-server/v6/app/request"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/i18n"
+	"github.com/cjdelisle/matterfoss-server/v6/app"
+	"github.com/cjdelisle/matterfoss-server/v6/app/request"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/i18n"
 )
 
 type MeProvider struct {
diff --git a/app/slashcommands/command_me_test.go b/app/slashcommands/command_me_test.go
index 20472e745..e0b231bec 100644
--- a/app/slashcommands/command_me_test.go
+++ b/app/slashcommands/command_me_test.go
@@ -8,7 +8,7 @@ import (
 
 	"github.com/stretchr/testify/assert"
 
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 func TestMeProviderDoCommand(t *testing.T) {
diff --git a/app/slashcommands/command_msg.go b/app/slashcommands/command_msg.go
index e64379ee2..b555b4011 100644
--- a/app/slashcommands/command_msg.go
+++ b/app/slashcommands/command_msg.go
@@ -7,12 +7,12 @@ import (
 	"errors"
 	"strings"
 
-	"github.com/mattermost/mattermost-server/v6/app"
-	"github.com/mattermost/mattermost-server/v6/app/request"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/i18n"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
-	"github.com/mattermost/mattermost-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/app"
+	"github.com/cjdelisle/matterfoss-server/v6/app/request"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/i18n"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
 )
 
 type msgProvider struct {
diff --git a/app/slashcommands/command_msg_test.go b/app/slashcommands/command_msg_test.go
index 851c71212..4df84668d 100644
--- a/app/slashcommands/command_msg_test.go
+++ b/app/slashcommands/command_msg_test.go
@@ -8,8 +8,8 @@ import (
 
 	"github.com/stretchr/testify/assert"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/i18n"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/i18n"
 )
 
 func TestMsgProvider(t *testing.T) {
diff --git a/app/slashcommands/command_mute.go b/app/slashcommands/command_mute.go
index 6b2c19e54..2c9280a6f 100644
--- a/app/slashcommands/command_mute.go
+++ b/app/slashcommands/command_mute.go
@@ -6,10 +6,10 @@ package slashcommands
 import (
 	"strings"
 
-	"github.com/mattermost/mattermost-server/v6/app"
-	"github.com/mattermost/mattermost-server/v6/app/request"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/i18n"
+	"github.com/cjdelisle/matterfoss-server/v6/app"
+	"github.com/cjdelisle/matterfoss-server/v6/app/request"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/i18n"
 )
 
 type MuteProvider struct {
diff --git a/app/slashcommands/command_mute_test.go b/app/slashcommands/command_mute_test.go
index 921d519e8..472147f64 100644
--- a/app/slashcommands/command_mute_test.go
+++ b/app/slashcommands/command_mute_test.go
@@ -10,8 +10,8 @@ import (
 
 	"github.com/stretchr/testify/assert"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/i18n"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/i18n"
 )
 
 func TestMuteCommandNoChannel(t *testing.T) {
diff --git a/app/slashcommands/command_offline.go b/app/slashcommands/command_offline.go
index f89cb85c3..795a1c981 100644
--- a/app/slashcommands/command_offline.go
+++ b/app/slashcommands/command_offline.go
@@ -4,10 +4,10 @@
 package slashcommands
 
 import (
-	"github.com/mattermost/mattermost-server/v6/app"
-	"github.com/mattermost/mattermost-server/v6/app/request"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/i18n"
+	"github.com/cjdelisle/matterfoss-server/v6/app"
+	"github.com/cjdelisle/matterfoss-server/v6/app/request"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/i18n"
 )
 
 type OfflineProvider struct {
diff --git a/app/slashcommands/command_online.go b/app/slashcommands/command_online.go
index ab43cb07b..293a94481 100644
--- a/app/slashcommands/command_online.go
+++ b/app/slashcommands/command_online.go
@@ -4,10 +4,10 @@
 package slashcommands
 
 import (
-	"github.com/mattermost/mattermost-server/v6/app"
-	"github.com/mattermost/mattermost-server/v6/app/request"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/i18n"
+	"github.com/cjdelisle/matterfoss-server/v6/app"
+	"github.com/cjdelisle/matterfoss-server/v6/app/request"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/i18n"
 )
 
 type OnlineProvider struct {
diff --git a/app/slashcommands/command_open.go b/app/slashcommands/command_open.go
index c8b83841e..5b34c8005 100644
--- a/app/slashcommands/command_open.go
+++ b/app/slashcommands/command_open.go
@@ -4,9 +4,9 @@
 package slashcommands
 
 import (
-	"github.com/mattermost/mattermost-server/v6/app"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/i18n"
+	"github.com/cjdelisle/matterfoss-server/v6/app"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/i18n"
 )
 
 type OpenProvider struct {
diff --git a/app/slashcommands/command_remote.go b/app/slashcommands/command_remote.go
index 90ce6d8e8..ffb717586 100644
--- a/app/slashcommands/command_remote.go
+++ b/app/slashcommands/command_remote.go
@@ -9,10 +9,10 @@ import (
 	"fmt"
 	"strings"
 
-	"github.com/mattermost/mattermost-server/v6/app"
-	"github.com/mattermost/mattermost-server/v6/app/request"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/i18n"
+	"github.com/cjdelisle/matterfoss-server/v6/app"
+	"github.com/cjdelisle/matterfoss-server/v6/app/request"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/i18n"
 )
 
 const (
diff --git a/app/slashcommands/command_remove.go b/app/slashcommands/command_remove.go
index e98a6c64b..fe1d01737 100644
--- a/app/slashcommands/command_remove.go
+++ b/app/slashcommands/command_remove.go
@@ -7,11 +7,11 @@ import (
 	"context"
 	"strings"
 
-	"github.com/mattermost/mattermost-server/v6/app"
-	"github.com/mattermost/mattermost-server/v6/app/request"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/i18n"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/app"
+	"github.com/cjdelisle/matterfoss-server/v6/app/request"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/i18n"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
 )
 
 type RemoveProvider struct {
diff --git a/app/slashcommands/command_remove_test.go b/app/slashcommands/command_remove_test.go
index 9e775ee78..d333a7428 100644
--- a/app/slashcommands/command_remove_test.go
+++ b/app/slashcommands/command_remove_test.go
@@ -8,7 +8,7 @@ import (
 
 	"github.com/stretchr/testify/assert"
 
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 func TestRemoveProviderDoCommand(t *testing.T) {
diff --git a/app/slashcommands/command_search.go b/app/slashcommands/command_search.go
index 2bc8dc364..b63b90cc7 100644
--- a/app/slashcommands/command_search.go
+++ b/app/slashcommands/command_search.go
@@ -4,10 +4,10 @@
 package slashcommands
 
 import (
-	"github.com/mattermost/mattermost-server/v6/app"
-	"github.com/mattermost/mattermost-server/v6/app/request"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/i18n"
+	"github.com/cjdelisle/matterfoss-server/v6/app"
+	"github.com/cjdelisle/matterfoss-server/v6/app/request"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/i18n"
 )
 
 type SearchProvider struct {
diff --git a/app/slashcommands/command_settings.go b/app/slashcommands/command_settings.go
index 7904be535..e2b207de7 100644
--- a/app/slashcommands/command_settings.go
+++ b/app/slashcommands/command_settings.go
@@ -4,10 +4,10 @@
 package slashcommands
 
 import (
-	"github.com/mattermost/mattermost-server/v6/app"
-	"github.com/mattermost/mattermost-server/v6/app/request"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/i18n"
+	"github.com/cjdelisle/matterfoss-server/v6/app"
+	"github.com/cjdelisle/matterfoss-server/v6/app/request"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/i18n"
 )
 
 type SettingsProvider struct {
diff --git a/app/slashcommands/command_share.go b/app/slashcommands/command_share.go
index 30fa0d40d..6d67bd3b8 100644
--- a/app/slashcommands/command_share.go
+++ b/app/slashcommands/command_share.go
@@ -8,10 +8,10 @@ import (
 	"fmt"
 	"strings"
 
-	"github.com/mattermost/mattermost-server/v6/app"
-	"github.com/mattermost/mattermost-server/v6/app/request"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/i18n"
+	"github.com/cjdelisle/matterfoss-server/v6/app"
+	"github.com/cjdelisle/matterfoss-server/v6/app/request"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/i18n"
 )
 
 type ShareProvider struct {
diff --git a/app/slashcommands/command_share_test.go b/app/slashcommands/command_share_test.go
index 36b7ce342..26498b833 100644
--- a/app/slashcommands/command_share_test.go
+++ b/app/slashcommands/command_share_test.go
@@ -9,14 +9,14 @@ import (
 
 	"github.com/stretchr/testify/assert"
 
-	"github.com/mattermost/mattermost-server/v6/testlib"
+	"github.com/cjdelisle/matterfoss-server/v6/testlib"
 
-	"github.com/mattermost/mattermost-server/v6/app"
-	"github.com/mattermost/mattermost-server/v6/services/remotecluster"
+	"github.com/cjdelisle/matterfoss-server/v6/app"
+	"github.com/cjdelisle/matterfoss-server/v6/services/remotecluster"
 
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 func TestShareProviderDoCommand(t *testing.T) {
diff --git a/app/slashcommands/command_shortcuts.go b/app/slashcommands/command_shortcuts.go
index a4f06b028..1cede8c02 100644
--- a/app/slashcommands/command_shortcuts.go
+++ b/app/slashcommands/command_shortcuts.go
@@ -4,10 +4,10 @@
 package slashcommands
 
 import (
-	"github.com/mattermost/mattermost-server/v6/app"
-	"github.com/mattermost/mattermost-server/v6/app/request"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/i18n"
+	"github.com/cjdelisle/matterfoss-server/v6/app"
+	"github.com/cjdelisle/matterfoss-server/v6/app/request"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/i18n"
 )
 
 type ShortcutsProvider struct {
diff --git a/app/slashcommands/command_shrug.go b/app/slashcommands/command_shrug.go
index 13a965487..7b7ba3bbf 100644
--- a/app/slashcommands/command_shrug.go
+++ b/app/slashcommands/command_shrug.go
@@ -4,10 +4,10 @@
 package slashcommands
 
 import (
-	"github.com/mattermost/mattermost-server/v6/app"
-	"github.com/mattermost/mattermost-server/v6/app/request"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/i18n"
+	"github.com/cjdelisle/matterfoss-server/v6/app"
+	"github.com/cjdelisle/matterfoss-server/v6/app/request"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/i18n"
 )
 
 type ShrugProvider struct {
diff --git a/app/slashcommands/command_test.go b/app/slashcommands/command_test.go
index 33593c290..d25a8d32c 100644
--- a/app/slashcommands/command_test.go
+++ b/app/slashcommands/command_test.go
@@ -16,8 +16,8 @@ import (
 	"github.com/stretchr/testify/assert"
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/services/httpservice"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/services/httpservice"
 )
 
 type InfiniteReader struct {
diff --git a/app/slashcommands/helper_test.go b/app/slashcommands/helper_test.go
index 56ba662f7..6fbbf1de4 100644
--- a/app/slashcommands/helper_test.go
+++ b/app/slashcommands/helper_test.go
@@ -14,13 +14,13 @@ import (
 	"testing"
 	"time"
 
-	"github.com/mattermost/mattermost-server/v6/app"
-	"github.com/mattermost/mattermost-server/v6/app/request"
-	"github.com/mattermost/mattermost-server/v6/config"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
-	"github.com/mattermost/mattermost-server/v6/store"
-	"github.com/mattermost/mattermost-server/v6/store/localcachelayer"
+	"github.com/cjdelisle/matterfoss-server/v6/app"
+	"github.com/cjdelisle/matterfoss-server/v6/app/request"
+	"github.com/cjdelisle/matterfoss-server/v6/config"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/store/localcachelayer"
 )
 
 type TestHelper struct {
diff --git a/app/slashcommands/main_test.go b/app/slashcommands/main_test.go
index dd2d0d52f..fb3b78a8f 100644
--- a/app/slashcommands/main_test.go
+++ b/app/slashcommands/main_test.go
@@ -6,7 +6,7 @@ package slashcommands
 import (
 	"testing"
 
-	"github.com/mattermost/mattermost-server/v6/testlib"
+	"github.com/cjdelisle/matterfoss-server/v6/testlib"
 )
 
 var mainHelper *testlib.MainHelper
diff --git a/app/slashcommands/util.go b/app/slashcommands/util.go
index dc59fb727..cd7a931cd 100644
--- a/app/slashcommands/util.go
+++ b/app/slashcommands/util.go
@@ -8,8 +8,8 @@ import (
 	"strings"
 	"time"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/i18n"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/i18n"
 )
 
 const (
diff --git a/app/status.go b/app/status.go
index c3d34d804..ad91e2dba 100644
--- a/app/status.go
+++ b/app/status.go
@@ -8,9 +8,9 @@ import (
 	"errors"
 	"net/http"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
-	"github.com/mattermost/mattermost-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
 )
 
 func (a *App) AddStatusCacheSkipClusterSend(status *model.Status) {
diff --git a/app/status_test.go b/app/status_test.go
index 74d82f515..c74a13854 100644
--- a/app/status_test.go
+++ b/app/status_test.go
@@ -9,10 +9,10 @@ import (
 	"github.com/stretchr/testify/mock"
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/app/users"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/store"
-	"github.com/mattermost/mattermost-server/v6/store/storetest/mocks"
+	"github.com/cjdelisle/matterfoss-server/v6/app/users"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/store/storetest/mocks"
 )
 
 func TestSaveStatus(t *testing.T) {
diff --git a/app/syncables.go b/app/syncables.go
index 731aceb98..edeee06b8 100644
--- a/app/syncables.go
+++ b/app/syncables.go
@@ -8,9 +8,9 @@ import (
 	"net/http"
 	"strings"
 
-	"github.com/mattermost/mattermost-server/v6/app/request"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/app/request"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
 )
 
 // createDefaultChannelMemberships adds users to channels based on their group memberships and how those groups are
diff --git a/app/syncables_test.go b/app/syncables_test.go
index 778d4159d..60e205992 100644
--- a/app/syncables_test.go
+++ b/app/syncables_test.go
@@ -9,7 +9,7 @@ import (
 
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 func TestCreateDefaultMemberships(t *testing.T) {
diff --git a/app/team.go b/app/team.go
index 740e9161c..c9bbaa67f 100644
--- a/app/team.go
+++ b/app/team.go
@@ -16,17 +16,17 @@ import (
 	"net/url"
 	"strings"
 
-	"github.com/mattermost/mattermost-server/v6/app/email"
-	"github.com/mattermost/mattermost-server/v6/app/imaging"
-	"github.com/mattermost/mattermost-server/v6/app/request"
-	"github.com/mattermost/mattermost-server/v6/app/teams"
-	"github.com/mattermost/mattermost-server/v6/app/users"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/plugin"
-	"github.com/mattermost/mattermost-server/v6/shared/i18n"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
-	"github.com/mattermost/mattermost-server/v6/store"
-	"github.com/mattermost/mattermost-server/v6/store/sqlstore"
+	"github.com/cjdelisle/matterfoss-server/v6/app/email"
+	"github.com/cjdelisle/matterfoss-server/v6/app/imaging"
+	"github.com/cjdelisle/matterfoss-server/v6/app/request"
+	"github.com/cjdelisle/matterfoss-server/v6/app/teams"
+	"github.com/cjdelisle/matterfoss-server/v6/app/users"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/plugin"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/i18n"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/store/sqlstore"
 )
 
 func (a *App) CreateTeam(c *request.Context, team *model.Team) (*model.Team, *model.AppError) {
diff --git a/app/team_test.go b/app/team_test.go
index 964cb10c4..011c9b730 100644
--- a/app/team_test.go
+++ b/app/team_test.go
@@ -16,14 +16,14 @@ import (
 	"github.com/stretchr/testify/mock"
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/app/email"
-	emailmocks "github.com/mattermost/mattermost-server/v6/app/email/mocks"
-	"github.com/mattermost/mattermost-server/v6/app/teams"
-	"github.com/mattermost/mattermost-server/v6/app/users"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/store"
-	"github.com/mattermost/mattermost-server/v6/store/sqlstore"
-	"github.com/mattermost/mattermost-server/v6/store/storetest/mocks"
+	"github.com/cjdelisle/matterfoss-server/v6/app/email"
+	emailmocks "github.com/cjdelisle/matterfoss-server/v6/app/email/mocks"
+	"github.com/cjdelisle/matterfoss-server/v6/app/teams"
+	"github.com/cjdelisle/matterfoss-server/v6/app/users"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/store/sqlstore"
+	"github.com/cjdelisle/matterfoss-server/v6/store/storetest/mocks"
 )
 
 func TestCreateTeam(t *testing.T) {
diff --git a/app/teams/helper_test.go b/app/teams/helper_test.go
index ce57919c4..d20a4be80 100644
--- a/app/teams/helper_test.go
+++ b/app/teams/helper_test.go
@@ -10,10 +10,10 @@ import (
 	"path/filepath"
 	"testing"
 
-	"github.com/mattermost/mattermost-server/v6/app/request"
-	"github.com/mattermost/mattermost-server/v6/config"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/app/request"
+	"github.com/cjdelisle/matterfoss-server/v6/config"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
 )
 
 type TestHelper struct {
diff --git a/app/teams/main_test.go b/app/teams/main_test.go
index 9a136ec5c..3cee3d549 100644
--- a/app/teams/main_test.go
+++ b/app/teams/main_test.go
@@ -7,7 +7,7 @@ import (
 	"flag"
 	"testing"
 
-	"github.com/mattermost/mattermost-server/v6/testlib"
+	"github.com/cjdelisle/matterfoss-server/v6/testlib"
 )
 
 var mainHelper *testlib.MainHelper
diff --git a/app/teams/service.go b/app/teams/service.go
index a818c7d8c..acc18ad78 100644
--- a/app/teams/service.go
+++ b/app/teams/service.go
@@ -6,8 +6,8 @@ package teams
 import (
 	"errors"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
 )
 
 type TeamService struct {
diff --git a/app/teams/teams.go b/app/teams/teams.go
index 4511f9641..5d5d1f131 100644
--- a/app/teams/teams.go
+++ b/app/teams/teams.go
@@ -6,8 +6,8 @@ package teams
 import (
 	"context"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/i18n"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/i18n"
 )
 
 func (ts *TeamService) CreateTeam(team *model.Team) (*model.Team, error) {
diff --git a/app/teams/teams_test.go b/app/teams/teams_test.go
index fbacd99b1..5d2b6a108 100644
--- a/app/teams/teams_test.go
+++ b/app/teams/teams_test.go
@@ -7,7 +7,7 @@ import (
 	"strings"
 	"testing"
 
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 	"github.com/stretchr/testify/require"
 )
 
diff --git a/app/teams/utils.go b/app/teams/utils.go
index 2fc8e199d..001ddc09b 100644
--- a/app/teams/utils.go
+++ b/app/teams/utils.go
@@ -6,7 +6,7 @@ package teams
 import (
 	"strings"
 
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 // By default the list will be (not necessarily in this order):
diff --git a/app/telemetry.go b/app/telemetry.go
index e0c42375f..41f87d594 100644
--- a/app/telemetry.go
+++ b/app/telemetry.go
@@ -3,7 +3,7 @@
 
 package app
 
-import "github.com/mattermost/mattermost-server/v6/services/telemetry"
+import "github.com/cjdelisle/matterfoss-server/v6/services/telemetry"
 
 func (s *Server) GetTelemetryService() *telemetry.TelemetryService {
 	return s.telemetryService
diff --git a/app/terms_of_service.go b/app/terms_of_service.go
index 98db3341b..10d702c68 100644
--- a/app/terms_of_service.go
+++ b/app/terms_of_service.go
@@ -7,8 +7,8 @@ import (
 	"errors"
 	"net/http"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
 )
 
 func (a *App) CreateTermsOfService(text, userID string) (*model.TermsOfService, *model.AppError) {
diff --git a/app/upload.go b/app/upload.go
index ed46a107a..7662b4771 100644
--- a/app/upload.go
+++ b/app/upload.go
@@ -12,11 +12,11 @@ import (
 	"sync"
 	"time"
 
-	"github.com/mattermost/mattermost-server/v6/app/request"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/plugin"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
-	"github.com/mattermost/mattermost-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/app/request"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/plugin"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
 )
 
 const minFirstPartSize = 5 * 1024 * 1024 // 5MB
diff --git a/app/upload_test.go b/app/upload_test.go
index 26530f2b3..1cbae4384 100644
--- a/app/upload_test.go
+++ b/app/upload_test.go
@@ -15,8 +15,8 @@ import (
 
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/utils/fileutils"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/utils/fileutils"
 )
 
 func TestCreateUploadSession(t *testing.T) {
diff --git a/app/user.go b/app/user.go
index 64924a3b0..9bc409af9 100644
--- a/app/user.go
+++ b/app/user.go
@@ -17,17 +17,17 @@ import (
 
 	"github.com/pkg/errors"
 
-	"github.com/mattermost/mattermost-server/v6/app/email"
-	"github.com/mattermost/mattermost-server/v6/app/imaging"
-	"github.com/mattermost/mattermost-server/v6/app/request"
-	"github.com/mattermost/mattermost-server/v6/app/users"
-	"github.com/mattermost/mattermost-server/v6/einterfaces"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/plugin"
-	"github.com/mattermost/mattermost-server/v6/shared/i18n"
-	"github.com/mattermost/mattermost-server/v6/shared/mfa"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
-	"github.com/mattermost/mattermost-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/app/email"
+	"github.com/cjdelisle/matterfoss-server/v6/app/imaging"
+	"github.com/cjdelisle/matterfoss-server/v6/app/request"
+	"github.com/cjdelisle/matterfoss-server/v6/app/users"
+	"github.com/cjdelisle/matterfoss-server/v6/einterfaces"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/plugin"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/i18n"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mfa"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
 	"golang.org/x/sync/errgroup"
 )
 
diff --git a/app/user_agent.go b/app/user_agent.go
index 301edd807..464467bbb 100644
--- a/app/user_agent.go
+++ b/app/user_agent.go
@@ -84,8 +84,8 @@ func getOSName(ua *uasurfer.UserAgent) string {
 }
 
 func getBrowserVersion(ua *uasurfer.UserAgent, userAgentString string) string {
-	if index := strings.Index(userAgentString, "Mattermost/"); index != -1 {
-		afterVersion := userAgentString[index+len("Mattermost/"):]
+	if index := strings.Index(userAgentString, "Matterfoss/"); index != -1 {
+		afterVersion := userAgentString[index+len("Matterfoss/"):]
 		return strings.Fields(afterVersion)[0]
 	}
 
@@ -123,7 +123,7 @@ var browserNames = map[uasurfer.BrowserName]string{
 func getBrowserName(ua *uasurfer.UserAgent, userAgentString string) string {
 	browser := ua.Browser.Name
 
-	if strings.Contains(userAgentString, "Mattermost") {
+	if strings.Contains(userAgentString, "Matterfoss") {
 		return "Desktop App"
 	}
 
diff --git a/app/user_agent_test.go b/app/user_agent_test.go
index aa730d50f..bfc7eda13 100644
--- a/app/user_agent_test.go
+++ b/app/user_agent_test.go
@@ -22,7 +22,7 @@ var testUserAgents = []testUserAgent{
 	{"Chrome Mobile", "Mozilla/5.0 (Linux; Android 6.0; Nexus 5 Build/MRA58N) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/60.0.3112.113 Mobile Safari/537.36"},
 	{"MM Classic App", "Mozilla/5.0 (Linux; Android 8.0.0; Nexus 5X Build/OPR6.170623.013; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/61.0.3163.81 Mobile Safari/537.36 Web-Atoms-Mobile-WebView"},
 	{"mmctl", "mmctl/5.20.0 (linux)"},
-	{"MM App 3.7.1", "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_6) AppleWebKit/537.36 (KHTML, like Gecko) Mattermost/3.7.1 Chrome/56.0.2924.87 Electron/1.6.11 Safari/537.36"},
+	{"MM App 3.7.1", "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_6) AppleWebKit/537.36 (KHTML, like Gecko) Matterfoss/3.7.1 Chrome/56.0.2924.87 Electron/1.6.11 Safari/537.36"},
 	{"Franz 4.0.4", "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_6) AppleWebKit/537.36 (KHTML, like Gecko) Franz/4.0.4 Chrome/52.0.2743.82 Electron/1.3.1 Safari/537.36"},
 	{"Edge 14", "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36 Edge/14.14393"},
 	{"Internet Explorer 9", "Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 7.1; Trident/5.0"},
diff --git a/app/user_terms_of_service.go b/app/user_terms_of_service.go
index d1e3eef45..394a91653 100644
--- a/app/user_terms_of_service.go
+++ b/app/user_terms_of_service.go
@@ -7,8 +7,8 @@ import (
 	"errors"
 	"net/http"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
 )
 
 func (a *App) GetUserTermsOfService(userID string) (*model.UserTermsOfService, *model.AppError) {
diff --git a/app/user_test.go b/app/user_test.go
index 85b50bc91..101171a86 100644
--- a/app/user_test.go
+++ b/app/user_test.go
@@ -17,15 +17,15 @@ import (
 	"github.com/stretchr/testify/mock"
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/app/request"
-	"github.com/mattermost/mattermost-server/v6/app/users"
-	"github.com/mattermost/mattermost-server/v6/einterfaces"
-	"github.com/mattermost/mattermost-server/v6/einterfaces/mocks"
-	"github.com/mattermost/mattermost-server/v6/model"
-	oauthgitlab "github.com/mattermost/mattermost-server/v6/model/gitlab"
-	"github.com/mattermost/mattermost-server/v6/store"
-	storemocks "github.com/mattermost/mattermost-server/v6/store/storetest/mocks"
-	"github.com/mattermost/mattermost-server/v6/utils/testutils"
+	"github.com/cjdelisle/matterfoss-server/v6/app/request"
+	"github.com/cjdelisle/matterfoss-server/v6/app/users"
+	"github.com/cjdelisle/matterfoss-server/v6/einterfaces"
+	"github.com/cjdelisle/matterfoss-server/v6/einterfaces/mocks"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	oauthgitlab "github.com/cjdelisle/matterfoss-server/v6/model/gitlab"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
+	storemocks "github.com/cjdelisle/matterfoss-server/v6/store/storetest/mocks"
+	"github.com/cjdelisle/matterfoss-server/v6/utils/testutils"
 )
 
 func TestCreateOAuthUser(t *testing.T) {
diff --git a/app/user_viewmembers_test.go b/app/user_viewmembers_test.go
index 7d0176d1c..937037e68 100644
--- a/app/user_viewmembers_test.go
+++ b/app/user_viewmembers_test.go
@@ -9,8 +9,8 @@ import (
 	"github.com/stretchr/testify/assert"
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
 )
 
 func TestRestrictedViewMembers(t *testing.T) {
diff --git a/app/users/helper_test.go b/app/users/helper_test.go
index 94375778f..cb00602b7 100644
--- a/app/users/helper_test.go
+++ b/app/users/helper_test.go
@@ -12,11 +12,11 @@ import (
 	"sync"
 	"testing"
 
-	"github.com/mattermost/mattermost-server/v6/app/request"
-	"github.com/mattermost/mattermost-server/v6/config"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/services/cache"
-	"github.com/mattermost/mattermost-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/app/request"
+	"github.com/cjdelisle/matterfoss-server/v6/config"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/services/cache"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
 )
 
 var initBasicOnce sync.Once
diff --git a/app/users/main_test.go b/app/users/main_test.go
index f57d77811..0a7809fd9 100644
--- a/app/users/main_test.go
+++ b/app/users/main_test.go
@@ -7,7 +7,7 @@ import (
 	"flag"
 	"testing"
 
-	"github.com/mattermost/mattermost-server/v6/testlib"
+	"github.com/cjdelisle/matterfoss-server/v6/testlib"
 )
 
 var mainHelper *testlib.MainHelper
diff --git a/app/users/password.go b/app/users/password.go
index da286f73a..849007b35 100644
--- a/app/users/password.go
+++ b/app/users/password.go
@@ -7,7 +7,7 @@ import (
 	"errors"
 	"strings"
 
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 	"golang.org/x/crypto/bcrypt"
 )
 
diff --git a/app/users/password_test.go b/app/users/password_test.go
index 500abb14a..ee00b8beb 100644
--- a/app/users/password_test.go
+++ b/app/users/password_test.go
@@ -10,7 +10,7 @@ import (
 	"github.com/stretchr/testify/assert"
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 func TestComparePassword(t *testing.T) {
diff --git a/app/users/profile_picture.go b/app/users/profile_picture.go
index fbd413f52..974d3dd54 100644
--- a/app/users/profile_picture.go
+++ b/app/users/profile_picture.go
@@ -18,9 +18,9 @@ import (
 
 	"github.com/golang/freetype"
 	"github.com/golang/freetype/truetype"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/filestore"
-	"github.com/mattermost/mattermost-server/v6/utils/fileutils"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/filestore"
+	"github.com/cjdelisle/matterfoss-server/v6/utils/fileutils"
 )
 
 const (
diff --git a/app/users/service.go b/app/users/service.go
index 8a61e31fe..4840590cb 100644
--- a/app/users/service.go
+++ b/app/users/service.go
@@ -9,10 +9,10 @@ import (
 	"runtime"
 	"sync"
 
-	"github.com/mattermost/mattermost-server/v6/einterfaces"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/services/cache"
-	"github.com/mattermost/mattermost-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/einterfaces"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/services/cache"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
 )
 
 type UserService struct {
diff --git a/app/users/service_test.go b/app/users/service_test.go
index 4eaeb5f17..5ad822d92 100644
--- a/app/users/service_test.go
+++ b/app/users/service_test.go
@@ -6,7 +6,7 @@ package users
 import (
 	"testing"
 
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 	"github.com/stretchr/testify/require"
 )
 
diff --git a/app/users/session.go b/app/users/session.go
index f21a083b5..29f10a926 100644
--- a/app/users/session.go
+++ b/app/users/session.go
@@ -8,9 +8,9 @@ import (
 	"fmt"
 	"time"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
-	"github.com/mattermost/mattermost-server/v6/store/sqlstore"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/store/sqlstore"
 	"github.com/pkg/errors"
 )
 
diff --git a/app/users/session_test.go b/app/users/session_test.go
index cee66b9af..ae5c149b6 100644
--- a/app/users/session_test.go
+++ b/app/users/session_test.go
@@ -7,7 +7,7 @@ import (
 	"testing"
 	"time"
 
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 	"github.com/stretchr/testify/require"
 )
 
diff --git a/app/users/users.go b/app/users/users.go
index 2c208a62f..d008f3025 100644
--- a/app/users/users.go
+++ b/app/users/users.go
@@ -8,11 +8,11 @@ import (
 	"encoding/base64"
 	"fmt"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/i18n"
-	"github.com/mattermost/mattermost-server/v6/shared/mfa"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
-	"github.com/mattermost/mattermost-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/i18n"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mfa"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
 
 	"github.com/pkg/errors"
 )
diff --git a/app/users/users_test.go b/app/users/users_test.go
index 8dfd14dc1..1ab887cd3 100644
--- a/app/users/users_test.go
+++ b/app/users/users_test.go
@@ -6,7 +6,7 @@ package users
 import (
 	"testing"
 
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 
 	"github.com/stretchr/testify/require"
 )
diff --git a/app/users/utils.go b/app/users/utils.go
index d9356f076..3e3694106 100644
--- a/app/users/utils.go
+++ b/app/users/utils.go
@@ -6,7 +6,7 @@ package users
 import (
 	"strings"
 
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 func maxInt(a, b int) int {
diff --git a/app/web_conn.go b/app/web_conn.go
index 29f9fe558..2496260a0 100644
--- a/app/web_conn.go
+++ b/app/web_conn.go
@@ -19,10 +19,10 @@ import (
 	"github.com/gorilla/websocket"
 	"github.com/vmihailenco/msgpack/v5"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/plugin"
-	"github.com/mattermost/mattermost-server/v6/shared/i18n"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/plugin"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/i18n"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
 )
 
 const (
diff --git a/app/web_conn_test.go b/app/web_conn_test.go
index ec313d4d8..e8db690b3 100644
--- a/app/web_conn_test.go
+++ b/app/web_conn_test.go
@@ -14,8 +14,8 @@ import (
 	"github.com/stretchr/testify/assert"
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/i18n"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/i18n"
 )
 
 func TestWebConnShouldSendEvent(t *testing.T) {
diff --git a/app/web_hub.go b/app/web_hub.go
index bbaf4fc5e..8430b33cd 100644
--- a/app/web_hub.go
+++ b/app/web_hub.go
@@ -11,8 +11,8 @@ import (
 	"sync/atomic"
 	"time"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
 )
 
 const (
@@ -48,7 +48,7 @@ type webConnCheckMessage struct {
 // user connections.
 type Hub struct {
 	// connectionCount should be kept first.
-	// See https://github.com/mattermost/mattermost-server/pull/7281
+	// See https://github.com/cjdelisle/matterfoss-server/pull/7281
 	connectionCount int64
 	srv             *Server
 	connectionIndex int
diff --git a/app/web_hub_test.go b/app/web_hub_test.go
index 7031434c8..12d03c1b0 100644
--- a/app/web_hub_test.go
+++ b/app/web_hub_test.go
@@ -15,11 +15,11 @@ import (
 	"github.com/stretchr/testify/mock"
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/app/users"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/i18n"
-	"github.com/mattermost/mattermost-server/v6/store/storetest/mocks"
-	"github.com/mattermost/mattermost-server/v6/testlib"
+	"github.com/cjdelisle/matterfoss-server/v6/app/users"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/i18n"
+	"github.com/cjdelisle/matterfoss-server/v6/store/storetest/mocks"
+	"github.com/cjdelisle/matterfoss-server/v6/testlib"
 )
 
 func dummyWebsocketHandler(t *testing.T) http.HandlerFunc {
diff --git a/app/webhook.go b/app/webhook.go
index ebb4870fa..5bd38f298 100644
--- a/app/webhook.go
+++ b/app/webhook.go
@@ -14,11 +14,11 @@ import (
 	"strings"
 	"unicode/utf8"
 
-	"github.com/mattermost/mattermost-server/v6/app/request"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
-	"github.com/mattermost/mattermost-server/v6/store"
-	"github.com/mattermost/mattermost-server/v6/utils"
+	"github.com/cjdelisle/matterfoss-server/v6/app/request"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/utils"
 )
 
 const (
diff --git a/app/webhook_test.go b/app/webhook_test.go
index e28835862..92c3c7549 100644
--- a/app/webhook_test.go
+++ b/app/webhook_test.go
@@ -16,8 +16,8 @@ import (
 	"github.com/stretchr/testify/assert"
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/services/httpservice"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/services/httpservice"
 )
 
 func TestCreateIncomingWebhookForChannel(t *testing.T) {
diff --git a/app/webhub_fuzz.go b/app/webhub_fuzz.go
index 00ae47fc8..79c6d71d4 100644
--- a/app/webhub_fuzz.go
+++ b/app/webhub_fuzz.go
@@ -18,9 +18,9 @@ import (
 
 	"github.com/gorilla/websocket"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/i18n"
-	"github.com/mattermost/mattermost-server/v6/testlib"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/i18n"
+	"github.com/cjdelisle/matterfoss-server/v6/testlib"
 )
 
 // This is a file used to fuzz test the web_hub code.
@@ -41,7 +41,7 @@ import (
 // 1. go get -u github.com/dvyukov/go-fuzz/go-fuzz github.com/dvyukov/go-fuzz/go-fuzz-build
 // 2. mv app/helper_test.go app/helper.go
 // (Also reduce the number of push notification workers to 1 to debug stack traces easily.)
-// 3. go-fuzz-build github.com/mattermost/mattermost-server/v6/app
+// 3. go-fuzz-build github.com/cjdelisle/matterfoss-server/v6/app
 // 4. Generate a corpus dir. It's just a directory with files containing random data
 // for go-fuzz to use as an initial seed. Use the generateInitialCorpus function for that.
 // 5. go-fuzz -bin=app-fuzz.zip -workdir=./workdir
diff --git a/app/websocket_router.go b/app/websocket_router.go
index 82884a17d..cfb09cc98 100644
--- a/app/websocket_router.go
+++ b/app/websocket_router.go
@@ -6,9 +6,9 @@ package app
 import (
 	"net/http"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/i18n"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/i18n"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
 )
 
 type webSocketHandler interface {
diff --git a/audit/audit.go b/audit/audit.go
index 763f39027..33b7967e7 100644
--- a/audit/audit.go
+++ b/audit/audit.go
@@ -6,7 +6,7 @@ package audit
 import (
 	"fmt"
 
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
 )
 
 type Audit struct {
diff --git a/build/MIT-COMPILED-LICENSE.md b/build/MIT-COMPILED-LICENSE.md
deleted file mode 100644
index a5525d50f..000000000
--- a/build/MIT-COMPILED-LICENSE.md
+++ /dev/null
@@ -1,11 +0,0 @@
-Mattermost MIT Compiled License
-
-**Note: this license does not cover source code, for information on source code licensing see LICENSE.txt in the Mattermost source code.
-
-Copyright (c) 2016-present Mattermost, Inc.
-
-Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
-
-The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software;
-
-THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
diff --git a/build/docker/mysql.conf.d/custom.cnf b/build/docker/mysql.conf.d/custom.cnf
deleted file mode 100644
index 27722b73d..000000000
--- a/build/docker/mysql.conf.d/custom.cnf
+++ /dev/null
@@ -1,19 +0,0 @@
-[mysqld]
-bind-address = 0.0.0.0
-
-log-output = NONE
-slow-query-log = 0
-innodb_flush_log_at_trx_commit = 2
-innodb_flush_method = nosync
-innodb_lock_wait_timeout = 50
-innodb_log_buffer_size = 3M
-innodb_buffer_pool_size = 180M
-
-max_connect_errors = 1000000
-max_connections = 900
-
-character-set-server = utf8
-sql_mode = ""
-innodb = FORCE
-default-storage-engine = InnoDB
-max_allowed_packet = 256M
diff --git a/build/entrypoint.sh b/build/entrypoint.sh
deleted file mode 100755
index 2177b9e87..000000000
--- a/build/entrypoint.sh
+++ /dev/null
@@ -1,7 +0,0 @@
-#!/bin/sh
-
-if [ "${1:0:1}" = '-' ]; then
-    set -- mattermost "$@"
-fi
-
-exec "$@"
diff --git a/build/legacy.mk b/build/legacy.mk
deleted file mode 100644
index 57e2d8838..000000000
--- a/build/legacy.mk
+++ /dev/null
@@ -1,80 +0,0 @@
-# test-te used to just run the team edition tests, but now runs whatever is available
-test-te: test-server
-
-# test-ee used to just run the enterprise edition tests, but now runs whatever is available
-test-ee: test-server
-
-## Old target to run go vet. Now it just invokes golangci-lint.
-govet: golangci-lint
-
-gofmt: ## Runs gofmt against all packages. This is now subsumed by make golangci-lint.
-	@echo Running GOFMT
-
-	@for package in $(TE_PACKAGES) $(EE_PACKAGES); do \
-		 echo "Checking "$$package; \
-		 files=$$($(GO) list $(GOFLAGS) -f '{{range .GoFiles}}{{$$.Dir}}/{{.}} {{end}}' $$package); \
-		 if [ "$$files" ]; then \
-			 gofmt_output=$$(gofmt -d -s $$files 2>&1); \
-			 if [ "$$gofmt_output" ]; then \
-				 echo "$$gofmt_output"; \
-				 echo "gofmt failure"; \
-				 exit 1; \
-			 fi; \
-		 fi; \
-	done
-	@echo "gofmt success"; \
-
-# check-licenses was used to check the license of the files, but now is done through mattermost-govet
-check-licenses: vet
-
-# clean old docker images
-clean-old-docker:
-	@echo Removing docker containers
-
-	@if [ $(shell docker ps -a --no-trunc --quiet --filter name=^/mattermost-mysql$$ | wc -l) -eq 1 ]; then \
-		echo removing mattermost-mysql; \
-		docker stop mattermost-mysql > /dev/null; \
-		docker rm -v mattermost-mysql > /dev/null; \
-	fi
-
-	@if [ $(shell docker ps -a --no-trunc --quiet --filter name=^/mattermost-mysql-unittest$$ | wc -l) -eq 1 ]; then \
-		echo removing mattermost-mysql-unittest; \
-		docker stop mattermost-mysql-unittest > /dev/null; \
-		docker rm -v mattermost-mysql-unittest > /dev/null; \
-	fi
-
-	@if [ $(shell docker ps -a --no-trunc --quiet --filter name=^/mattermost-postgres$$ | wc -l) -eq 1 ]; then \
-		echo removing mattermost-postgres; \
-		docker stop mattermost-postgres > /dev/null; \
-		docker rm -v mattermost-postgres > /dev/null; \
-	fi
-
-	@if [ $(shell docker ps -a --no-trunc --quiet --filter name=^/mattermost-postgres-unittest$$ | wc -l) -eq 1 ]; then \
-		echo removing mattermost-postgres-unittest; \
-		docker stop mattermost-postgres-unittest > /dev/null; \
-		docker rm -v mattermost-postgres-unittest > /dev/null; \
-	fi
-
-	@if [ $(shell docker ps -a | grep -ci mattermost-openldap) -eq 1 ]; then \
-		echo removing mattermost-openldap; \
-		docker stop mattermost-openldap > /dev/null; \
-		docker rm -v mattermost-openldap > /dev/null; \
-	fi
-
-	@if [ $(shell docker ps -a | grep -ci mattermost-inbucket) -eq 1 ]; then \
-		echo removing mattermost-inbucket; \
-		docker stop mattermost-inbucket > /dev/null; \
-		docker rm -v mattermost-inbucket > /dev/null; \
-	fi
-
-	@if [ $(shell docker ps -a | grep -ci mattermost-minio) -eq 1 ]; then \
-		echo removing mattermost-minio; \
-		docker stop mattermost-minio > /dev/null; \
-		docker rm -v mattermost-minio > /dev/null; \
-	fi
-
-	@if [ $(shell docker ps -a | grep -ci mattermost-elasticsearch) -eq 1 ]; then \
-		echo removing mattermost-elasticsearch; \
-		docker stop mattermost-elasticsearch > /dev/null; \
-		docker rm -v mattermost-elasticsearch > /dev/null; \
-	fi
diff --git a/build/local-test-env.sh b/build/local-test-env.sh
index e53844b17..dd08b3afc 100755
--- a/build/local-test-env.sh
+++ b/build/local-test-env.sh
@@ -26,7 +26,7 @@ up()
     docker run -it -u root \
         --privileged \
         -v $GOPATH:/go \
-        -w /go/src/github.com/mattermost/mattermost-server/ \
+        -w /go/src/github.com/cjdelisle/matterfoss-server/ \
         --net ${COMPOSE_PROJECT_NAME}_mm-test \
         --env-file=dotenv/test.env
         -e GOPATH="/go" \
diff --git a/build/plugin-production-public-key.gpg b/build/plugin-production-public-key.gpg
deleted file mode 100644
index 7500035ae..000000000
--- a/build/plugin-production-public-key.gpg
+++ /dev/null
@@ -1,52 +0,0 @@
------BEGIN PGP PUBLIC KEY BLOCK-----
-
-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
-d+eYY64=
-=UePK
------END PGP PUBLIC KEY BLOCK-----
diff --git a/cmd/mattermost/commands/cmdtestlib.go b/cmd/matterfoss/commands/cmdtestlib.go
similarity index 96%
rename from cmd/mattermost/commands/cmdtestlib.go
rename to cmd/matterfoss/commands/cmdtestlib.go
index f79fdf934..3f8793567 100644
--- a/cmd/mattermost/commands/cmdtestlib.go
+++ b/cmd/matterfoss/commands/cmdtestlib.go
@@ -18,10 +18,10 @@ import (
 
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/api4"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/store/storetest/mocks"
-	"github.com/mattermost/mattermost-server/v6/testlib"
+	"github.com/cjdelisle/matterfoss-server/v6/api4"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/store/storetest/mocks"
+	"github.com/cjdelisle/matterfoss-server/v6/testlib"
 )
 
 var coverprofileCounters map[string]int = make(map[string]int)
diff --git a/cmd/mattermost/commands/db.go b/cmd/matterfoss/commands/db.go
similarity index 96%
rename from cmd/mattermost/commands/db.go
rename to cmd/matterfoss/commands/db.go
index dfe8c81b7..d3a318d54 100644
--- a/cmd/mattermost/commands/db.go
+++ b/cmd/matterfoss/commands/db.go
@@ -10,9 +10,9 @@ import (
 	"github.com/pkg/errors"
 	"github.com/spf13/cobra"
 
-	"github.com/mattermost/mattermost-server/v6/audit"
-	"github.com/mattermost/mattermost-server/v6/config"
-	"github.com/mattermost/mattermost-server/v6/store/sqlstore"
+	"github.com/cjdelisle/matterfoss-server/v6/audit"
+	"github.com/cjdelisle/matterfoss-server/v6/config"
+	"github.com/cjdelisle/matterfoss-server/v6/store/sqlstore"
 )
 
 var DbCmd = &cobra.Command{
diff --git a/cmd/mattermost/commands/exec_command_test.go b/cmd/matterfoss/commands/exec_command_test.go
similarity index 100%
rename from cmd/mattermost/commands/exec_command_test.go
rename to cmd/matterfoss/commands/exec_command_test.go
diff --git a/cmd/mattermost/commands/export.go b/cmd/matterfoss/commands/export.go
similarity index 98%
rename from cmd/mattermost/commands/export.go
rename to cmd/matterfoss/commands/export.go
index baac81757..932876e61 100644
--- a/cmd/mattermost/commands/export.go
+++ b/cmd/matterfoss/commands/export.go
@@ -10,8 +10,8 @@ import (
 	"path/filepath"
 	"time"
 
-	"github.com/mattermost/mattermost-server/v6/audit"
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/audit"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 
 	"github.com/pkg/errors"
 	"github.com/spf13/cobra"
diff --git a/cmd/mattermost/commands/export_test.go b/cmd/matterfoss/commands/export_test.go
similarity index 97%
rename from cmd/mattermost/commands/export_test.go
rename to cmd/matterfoss/commands/export_test.go
index f6ebfeffb..f5b3c16ba 100644
--- a/cmd/mattermost/commands/export_test.go
+++ b/cmd/matterfoss/commands/export_test.go
@@ -8,7 +8,7 @@ import (
 
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 // There are no tests that actually run the Message Export job, because it can take a long time to complete depending
diff --git a/cmd/mattermost/commands/import.go b/cmd/matterfoss/commands/import.go
similarity index 95%
rename from cmd/mattermost/commands/import.go
rename to cmd/matterfoss/commands/import.go
index f63d5a0bb..45289b2f2 100644
--- a/cmd/mattermost/commands/import.go
+++ b/cmd/matterfoss/commands/import.go
@@ -10,10 +10,10 @@ import (
 
 	"github.com/spf13/cobra"
 
-	"github.com/mattermost/mattermost-server/v6/app"
-	"github.com/mattermost/mattermost-server/v6/app/request"
-	"github.com/mattermost/mattermost-server/v6/audit"
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/app"
+	"github.com/cjdelisle/matterfoss-server/v6/app/request"
+	"github.com/cjdelisle/matterfoss-server/v6/audit"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 var ImportCmd = &cobra.Command{
diff --git a/cmd/mattermost/commands/init.go b/cmd/matterfoss/commands/init.go
similarity index 81%
rename from cmd/mattermost/commands/init.go
rename to cmd/matterfoss/commands/init.go
index b254f2d8b..6b1ffa7dd 100644
--- a/cmd/mattermost/commands/init.go
+++ b/cmd/matterfoss/commands/init.go
@@ -6,12 +6,12 @@ package commands
 import (
 	"github.com/spf13/cobra"
 
-	"github.com/mattermost/mattermost-server/v6/app"
-	"github.com/mattermost/mattermost-server/v6/app/request"
-	"github.com/mattermost/mattermost-server/v6/config"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/i18n"
-	"github.com/mattermost/mattermost-server/v6/utils"
+	"github.com/cjdelisle/matterfoss-server/v6/app"
+	"github.com/cjdelisle/matterfoss-server/v6/app/request"
+	"github.com/cjdelisle/matterfoss-server/v6/config"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/i18n"
+	"github.com/cjdelisle/matterfoss-server/v6/utils"
 )
 
 func initDBCommandContextCobra(command *cobra.Command, readOnlyConfigStore bool) (*app.App, error) {
diff --git a/cmd/mattermost/commands/jobserver.go b/cmd/matterfoss/commands/jobserver.go
similarity index 90%
rename from cmd/mattermost/commands/jobserver.go
rename to cmd/matterfoss/commands/jobserver.go
index 488b3f8fe..984eefb5d 100644
--- a/cmd/mattermost/commands/jobserver.go
+++ b/cmd/matterfoss/commands/jobserver.go
@@ -10,9 +10,9 @@ import (
 
 	"github.com/spf13/cobra"
 
-	"github.com/mattermost/mattermost-server/v6/audit"
-	"github.com/mattermost/mattermost-server/v6/config"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/audit"
+	"github.com/cjdelisle/matterfoss-server/v6/config"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
 )
 
 var JobserverCmd = &cobra.Command{
diff --git a/cmd/mattermost/commands/main_test.go b/cmd/matterfoss/commands/main_test.go
similarity index 93%
rename from cmd/mattermost/commands/main_test.go
rename to cmd/matterfoss/commands/main_test.go
index eedfb0814..b3990df7c 100644
--- a/cmd/mattermost/commands/main_test.go
+++ b/cmd/matterfoss/commands/main_test.go
@@ -8,9 +8,9 @@ import (
 	"os"
 	"testing"
 
-	"github.com/mattermost/mattermost-server/v6/api4"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/testlib"
+	"github.com/cjdelisle/matterfoss-server/v6/api4"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/testlib"
 )
 
 // Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.
diff --git a/cmd/mattermost/commands/output.go b/cmd/matterfoss/commands/output.go
similarity index 100%
rename from cmd/mattermost/commands/output.go
rename to cmd/matterfoss/commands/output.go
diff --git a/cmd/mattermost/commands/root.go b/cmd/matterfoss/commands/root.go
similarity index 77%
rename from cmd/mattermost/commands/root.go
rename to cmd/matterfoss/commands/root.go
index 3dd3dea3e..b441dc753 100644
--- a/cmd/mattermost/commands/root.go
+++ b/cmd/matterfoss/commands/root.go
@@ -15,9 +15,9 @@ func Run(args []string) error {
 }
 
 var RootCmd = &cobra.Command{
-	Use:   "mattermost",
+	Use:   "matterfoss",
 	Short: "Open source, self-hosted Slack-alternative",
-	Long:  `Mattermost offers workplace messaging across web, PC and phones with archiving, search and integration with your existing systems. Documentation available at https://docs.mattermost.com`,
+	Long:  `Matterfoss offers workplace messaging across web, PC and phones with archiving, search and integration with your existing systems. Documentation available at https://docs.matterfoss.org`,
 }
 
 func init() {
diff --git a/cmd/mattermost/commands/server.go b/cmd/matterfoss/commands/server.go
similarity index 89%
rename from cmd/mattermost/commands/server.go
rename to cmd/matterfoss/commands/server.go
index 3d0c43025..eb1503b87 100644
--- a/cmd/mattermost/commands/server.go
+++ b/cmd/matterfoss/commands/server.go
@@ -15,14 +15,14 @@ import (
 	"github.com/pkg/errors"
 	"github.com/spf13/cobra"
 
-	"github.com/mattermost/mattermost-server/v6/api4"
-	"github.com/mattermost/mattermost-server/v6/app"
-	"github.com/mattermost/mattermost-server/v6/config"
-	"github.com/mattermost/mattermost-server/v6/manualtesting"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
-	"github.com/mattermost/mattermost-server/v6/utils"
-	"github.com/mattermost/mattermost-server/v6/web"
-	"github.com/mattermost/mattermost-server/v6/wsapi"
+	"github.com/cjdelisle/matterfoss-server/v6/api4"
+	"github.com/cjdelisle/matterfoss-server/v6/app"
+	"github.com/cjdelisle/matterfoss-server/v6/config"
+	"github.com/cjdelisle/matterfoss-server/v6/manualtesting"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/utils"
+	"github.com/cjdelisle/matterfoss-server/v6/web"
+	"github.com/cjdelisle/matterfoss-server/v6/wsapi"
 )
 
 var serverCmd = &cobra.Command{
diff --git a/cmd/mattermost/commands/server_test.go b/cmd/matterfoss/commands/server_test.go
similarity index 97%
rename from cmd/mattermost/commands/server_test.go
rename to cmd/matterfoss/commands/server_test.go
index a8dfc9247..80e543db3 100644
--- a/cmd/mattermost/commands/server_test.go
+++ b/cmd/matterfoss/commands/server_test.go
@@ -12,8 +12,8 @@ import (
 
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/config"
-	"github.com/mattermost/mattermost-server/v6/jobs"
+	"github.com/cjdelisle/matterfoss-server/v6/config"
+	"github.com/cjdelisle/matterfoss-server/v6/jobs"
 )
 
 const (
diff --git a/cmd/mattermost/commands/test.go b/cmd/matterfoss/commands/test.go
similarity index 93%
rename from cmd/mattermost/commands/test.go
rename to cmd/matterfoss/commands/test.go
index 75c49a4ee..65749815a 100644
--- a/cmd/mattermost/commands/test.go
+++ b/cmd/matterfoss/commands/test.go
@@ -13,10 +13,10 @@ import (
 
 	"github.com/spf13/cobra"
 
-	"github.com/mattermost/mattermost-server/v6/api4"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/i18n"
-	"github.com/mattermost/mattermost-server/v6/wsapi"
+	"github.com/cjdelisle/matterfoss-server/v6/api4"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/i18n"
+	"github.com/cjdelisle/matterfoss-server/v6/wsapi"
 )
 
 var TestCmd = &cobra.Command{
diff --git a/cmd/mattermost/commands/utils.go b/cmd/matterfoss/commands/utils.go
similarity index 97%
rename from cmd/mattermost/commands/utils.go
rename to cmd/matterfoss/commands/utils.go
index 08d39e467..aded364e3 100644
--- a/cmd/mattermost/commands/utils.go
+++ b/cmd/matterfoss/commands/utils.go
@@ -14,7 +14,7 @@ import (
 
 	"github.com/spf13/cobra"
 
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 const CustomDefaultsEnvVar = "MM_CUSTOM_DEFAULTS_PATH"
diff --git a/cmd/mattermost/commands/utils_test.go b/cmd/matterfoss/commands/utils_test.go
similarity index 100%
rename from cmd/mattermost/commands/utils_test.go
rename to cmd/matterfoss/commands/utils_test.go
diff --git a/cmd/mattermost/commands/version.go b/cmd/matterfoss/commands/version.go
similarity index 95%
rename from cmd/mattermost/commands/version.go
rename to cmd/matterfoss/commands/version.go
index 2c318a72e..556d84f1f 100644
--- a/cmd/mattermost/commands/version.go
+++ b/cmd/matterfoss/commands/version.go
@@ -6,7 +6,7 @@ package commands
 import (
 	"github.com/spf13/cobra"
 
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 var VersionCmd = &cobra.Command{
diff --git a/cmd/mattermost/commands/version_test.go b/cmd/matterfoss/commands/version_test.go
similarity index 100%
rename from cmd/mattermost/commands/version_test.go
rename to cmd/matterfoss/commands/version_test.go
diff --git a/cmd/mattermost/main.go b/cmd/matterfoss/main.go
similarity index 73%
rename from cmd/mattermost/main.go
rename to cmd/matterfoss/main.go
index b2ce78036..e155d6902 100644
--- a/cmd/mattermost/main.go
+++ b/cmd/matterfoss/main.go
@@ -18,13 +18,13 @@ import (
 	_ "github.com/tylerb/graceful"
 	_ "gopkg.in/olivere/elastic.v6"
 
-	"github.com/mattermost/mattermost-server/v6/cmd/mattermost/commands"
+	"github.com/cjdelisle/matterfoss-server/v6/cmd/matterfoss/commands"
 	// Import and register app layer slash commands
-	_ "github.com/mattermost/mattermost-server/v6/app/slashcommands"
+	_ "github.com/cjdelisle/matterfoss-server/v6/app/slashcommands"
 	// Plugins
-	_ "github.com/mattermost/mattermost-server/v6/model/gitlab"
+	_ "github.com/cjdelisle/matterfoss-server/v6/model/gitlab"
 	// Enterprise Imports
-	_ "github.com/mattermost/mattermost-server/v6/imports"
+	_ "github.com/cjdelisle/matterfoss-server/v6/imports"
 )
 
 func main() {
diff --git a/cmd/mattermost/main_test.go b/cmd/matterfoss/main_test.go
similarity index 77%
rename from cmd/mattermost/main_test.go
rename to cmd/matterfoss/main_test.go
index 8726b2ced..941f05925 100644
--- a/cmd/mattermost/main_test.go
+++ b/cmd/matterfoss/main_test.go
@@ -8,8 +8,8 @@ import (
 
 // TestRunMain can be used to track code coverage in integration tests.
 // To run this:
-// go test -coverpkg="<>" -mod=vendor -ldflags '<>' -tags maincoverage -c ./cmd/mattermost/
-// ./mattermost.test -test.run="^TestRunMain$" -test.coverprofile=coverage.out
+// go test -coverpkg="<>" -mod=vendor -ldflags '<>' -tags maincoverage -c ./cmd/matterfoss/
+// ./matterfoss.test -test.run="^TestRunMain$" -test.coverprofile=coverage.out
 // And then run your integration tests.
 func TestRunMain(t *testing.T) {
 	main()
diff --git a/config/README.md b/config/README.md
deleted file mode 100644
index 55e5e60f4..000000000
--- a/config/README.md
+++ /dev/null
@@ -1,3 +0,0 @@
-# config.json
-
-This is the system configuration file for your Mattermost server. Settings are specific to different editions of Mattermost. Please read the documentation before making changes: https://docs.mattermost.com/configure/configuration-settings.html/
diff --git a/config/client.go b/config/client.go
index c1918a142..46863aefc 100644
--- a/config/client.go
+++ b/config/client.go
@@ -8,7 +8,7 @@ import (
 	"strconv"
 	"strings"
 
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 // GenerateClientConfig renders the given configuration for a client.
diff --git a/config/client_test.go b/config/client_test.go
index 8402d14af..013bfe1d6 100644
--- a/config/client_test.go
+++ b/config/client_test.go
@@ -9,7 +9,7 @@ import (
 
 	"github.com/stretchr/testify/assert"
 
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 func TestGetClientConfig(t *testing.T) {
diff --git a/config/common_test.go b/config/common_test.go
index 06e4f9005..25553ca44 100644
--- a/config/common_test.go
+++ b/config/common_test.go
@@ -10,7 +10,7 @@ import (
 	"github.com/stretchr/testify/assert"
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 var emptyConfig, readOnlyConfig, minimalConfig, minimalConfigNoFF, invalidConfig, fixesRequiredConfig, ldapConfig, testConfig, customConfigDefaults *model.Config
diff --git a/config/database.go b/config/database.go
index f0bdc1a65..b313ae31e 100644
--- a/config/database.go
+++ b/config/database.go
@@ -21,8 +21,8 @@ import (
 	// Load the Postgres driver
 	_ "github.com/lib/pq"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
 	"github.com/mattermost/morph"
 
 	"github.com/mattermost/morph/drivers"
diff --git a/config/database_test.go b/config/database_test.go
index f6eaeaa28..282100c03 100644
--- a/config/database_test.go
+++ b/config/database_test.go
@@ -15,7 +15,7 @@ import (
 	"github.com/stretchr/testify/assert"
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 func getDsn(driver string, source string) string {
diff --git a/config/diff.go b/config/diff.go
index 139091844..56061729c 100644
--- a/config/diff.go
+++ b/config/diff.go
@@ -7,7 +7,7 @@ import (
 	"fmt"
 	"reflect"
 
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 type ConfigDiffs []ConfigDiff
diff --git a/config/diff_test.go b/config/diff_test.go
index 6c05da327..cc2958bfc 100644
--- a/config/diff_test.go
+++ b/config/diff_test.go
@@ -6,7 +6,7 @@ package config
 import (
 	"testing"
 
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 
 	"github.com/stretchr/testify/require"
 )
diff --git a/config/emitter.go b/config/emitter.go
index 4431cba2d..db75a1471 100644
--- a/config/emitter.go
+++ b/config/emitter.go
@@ -6,8 +6,8 @@ package config
 import (
 	"sync"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
 )
 
 // Listener is a callback function invoked when the configuration changes.
diff --git a/config/emitter_test.go b/config/emitter_test.go
index 364b7b294..6ca527c30 100644
--- a/config/emitter_test.go
+++ b/config/emitter_test.go
@@ -8,8 +8,8 @@ import (
 
 	"github.com/stretchr/testify/assert"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
 )
 
 func TestEmitter(t *testing.T) {
diff --git a/config/environment.go b/config/environment.go
index d6b68864c..ec10ce35a 100644
--- a/config/environment.go
+++ b/config/environment.go
@@ -9,7 +9,7 @@ import (
 	"strconv"
 	"strings"
 
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 func GetEnvironment() map[string]string {
diff --git a/config/environment_test.go b/config/environment_test.go
index fb4b3261e..bf693d557 100644
--- a/config/environment_test.go
+++ b/config/environment_test.go
@@ -8,7 +8,7 @@ import (
 
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 func modifiedDefault(modify func(*model.Config)) *model.Config {
diff --git a/config/file.go b/config/file.go
index cbf53cf73..4b17b44be 100644
--- a/config/file.go
+++ b/config/file.go
@@ -11,9 +11,9 @@ import (
 
 	"github.com/pkg/errors"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
-	"github.com/mattermost/mattermost-server/v6/utils/fileutils"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/utils/fileutils"
 )
 
 var (
diff --git a/config/file_test.go b/config/file_test.go
index 414c4b649..fa62915b8 100644
--- a/config/file_test.go
+++ b/config/file_test.go
@@ -16,8 +16,8 @@ import (
 	"github.com/stretchr/testify/assert"
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/utils"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/utils"
 )
 
 func setupConfigFile(t *testing.T, cfg *model.Config) (string, func()) {
diff --git a/config/logconfigsrc.go b/config/logconfigsrc.go
index fa082caaf..1afb0f893 100644
--- a/config/logconfigsrc.go
+++ b/config/logconfigsrc.go
@@ -10,7 +10,7 @@ import (
 	"strings"
 	"sync"
 
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
 )
 
 type LogSrcListener func(old, new mlog.LoggerConfiguration)
diff --git a/config/logger.go b/config/logger.go
index 93f18e919..900ae985a 100644
--- a/config/logger.go
+++ b/config/logger.go
@@ -9,9 +9,9 @@ import (
 	"path/filepath"
 	"strings"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
-	"github.com/mattermost/mattermost-server/v6/utils/fileutils"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/utils/fileutils"
 )
 
 const (
diff --git a/config/main_test.go b/config/main_test.go
index c2468e796..1629bb9bf 100644
--- a/config/main_test.go
+++ b/config/main_test.go
@@ -11,8 +11,8 @@ import (
 	"github.com/lib/pq"
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/testlib"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/testlib"
 )
 
 var mainHelper *testlib.MainHelper
diff --git a/config/memory.go b/config/memory.go
index d59b34bec..ba4abc3b0 100644
--- a/config/memory.go
+++ b/config/memory.go
@@ -8,7 +8,7 @@ import (
 
 	"github.com/pkg/errors"
 
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 // MemoryStore implements the Store interface. It is meant primarily for testing.
diff --git a/config/migrate_test.go b/config/migrate_test.go
index 348f29bd5..7183b1a93 100644
--- a/config/migrate_test.go
+++ b/config/migrate_test.go
@@ -12,7 +12,7 @@ import (
 	"github.com/stretchr/testify/assert"
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 type cleanUpFn func(store *Store)
diff --git a/config/store.go b/config/store.go
index 9bd5c2354..e0b05247a 100644
--- a/config/store.go
+++ b/config/store.go
@@ -10,8 +10,8 @@ import (
 
 	"github.com/pkg/errors"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/utils/jsonutils"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/utils/jsonutils"
 )
 
 var (
diff --git a/config/utils.go b/config/utils.go
index 9def14e47..d2d6c9eab 100644
--- a/config/utils.go
+++ b/config/utils.go
@@ -11,10 +11,10 @@ import (
 	"strings"
 
 	"github.com/go-sql-driver/mysql"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/i18n"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
-	"github.com/mattermost/mattermost-server/v6/utils"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/i18n"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/utils"
 )
 
 // marshalConfig converts the given configuration into JSON bytes for persistence.
diff --git a/config/utils_test.go b/config/utils_test.go
index 4788fac80..9aab42d23 100644
--- a/config/utils_test.go
+++ b/config/utils_test.go
@@ -9,8 +9,8 @@ import (
 	"github.com/stretchr/testify/assert"
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/utils"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/utils"
 )
 
 func TestDesanitize(t *testing.T) {
diff --git a/doc/help/README.md b/doc/help/README.md
deleted file mode 100644
index 3f3e8f64e..000000000
--- a/doc/help/README.md
+++ /dev/null
@@ -1 +0,0 @@
-Please see Mattermost Documentation now at [http://docs.mattermost.com](http://docs.mattermost.com)
diff --git a/einterfaces/account_migration.go b/einterfaces/account_migration.go
index 08b47b2ba..7c117ac0d 100644
--- a/einterfaces/account_migration.go
+++ b/einterfaces/account_migration.go
@@ -4,7 +4,7 @@
 package einterfaces
 
 import (
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 type AccountMigrationInterface interface {
diff --git a/einterfaces/cloud.go b/einterfaces/cloud.go
index bbc3a76be..a16809ed7 100644
--- a/einterfaces/cloud.go
+++ b/einterfaces/cloud.go
@@ -4,7 +4,7 @@
 package einterfaces
 
 import (
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 type CloudInterface interface {
diff --git a/einterfaces/cluster.go b/einterfaces/cluster.go
index 6d52f35b5..ed6975da5 100644
--- a/einterfaces/cluster.go
+++ b/einterfaces/cluster.go
@@ -4,7 +4,7 @@
 package einterfaces
 
 import (
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 type ClusterMessageHandler func(msg *model.ClusterMessage)
diff --git a/einterfaces/compliance.go b/einterfaces/compliance.go
index ce607f79b..234a5dc77 100644
--- a/einterfaces/compliance.go
+++ b/einterfaces/compliance.go
@@ -4,7 +4,7 @@
 package einterfaces
 
 import (
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 type ComplianceInterface interface {
diff --git a/einterfaces/data_retention.go b/einterfaces/data_retention.go
index 9f317bd59..7f832219b 100644
--- a/einterfaces/data_retention.go
+++ b/einterfaces/data_retention.go
@@ -4,7 +4,7 @@
 package einterfaces
 
 import (
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 type DataRetentionInterface interface {
diff --git a/einterfaces/jobs/cloud_interface.go b/einterfaces/jobs/cloud_interface.go
index 62619cbbd..b5ee85ed1 100644
--- a/einterfaces/jobs/cloud_interface.go
+++ b/einterfaces/jobs/cloud_interface.go
@@ -4,7 +4,7 @@
 package jobs
 
 import (
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 type CloudJobInterface interface {
diff --git a/einterfaces/jobs/data_retention.go b/einterfaces/jobs/data_retention.go
index c00ad5b20..3f2476212 100644
--- a/einterfaces/jobs/data_retention.go
+++ b/einterfaces/jobs/data_retention.go
@@ -4,7 +4,7 @@
 package jobs
 
 import (
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 type DataRetentionJobInterface interface {
diff --git a/einterfaces/jobs/elasticsearch.go b/einterfaces/jobs/elasticsearch.go
index 207889512..a88dad0ed 100644
--- a/einterfaces/jobs/elasticsearch.go
+++ b/einterfaces/jobs/elasticsearch.go
@@ -4,7 +4,7 @@
 package jobs
 
 import (
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 type ElasticsearchIndexerInterface interface {
diff --git a/einterfaces/jobs/indexer_interface.go b/einterfaces/jobs/indexer_interface.go
index 09035b84e..c256301e3 100644
--- a/einterfaces/jobs/indexer_interface.go
+++ b/einterfaces/jobs/indexer_interface.go
@@ -4,7 +4,7 @@
 package jobs
 
 import (
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 type IndexerJobInterface interface {
diff --git a/einterfaces/jobs/ldap_sync.go b/einterfaces/jobs/ldap_sync.go
index 01f855043..bf99071bf 100644
--- a/einterfaces/jobs/ldap_sync.go
+++ b/einterfaces/jobs/ldap_sync.go
@@ -4,7 +4,7 @@
 package jobs
 
 import (
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 type LdapSyncInterface interface {
diff --git a/einterfaces/jobs/message_export.go b/einterfaces/jobs/message_export.go
index 5d699d73b..a1cfde586 100644
--- a/einterfaces/jobs/message_export.go
+++ b/einterfaces/jobs/message_export.go
@@ -4,7 +4,7 @@
 package jobs
 
 import (
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 type MessageExportJobInterface interface {
diff --git a/einterfaces/ldap.go b/einterfaces/ldap.go
index 990a4fd98..f2616532a 100644
--- a/einterfaces/ldap.go
+++ b/einterfaces/ldap.go
@@ -4,8 +4,8 @@
 package einterfaces
 
 import (
-	"github.com/mattermost/mattermost-server/v6/app/request"
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/app/request"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 type LdapInterface interface {
diff --git a/einterfaces/license.go b/einterfaces/license.go
index 3a66ebe56..5d4f72e4a 100644
--- a/einterfaces/license.go
+++ b/einterfaces/license.go
@@ -3,7 +3,7 @@
 
 package einterfaces
 
-import "github.com/mattermost/mattermost-server/v6/model"
+import "github.com/cjdelisle/matterfoss-server/v6/model"
 
 type LicenseInterface interface {
 	CanStartTrial() (bool, error)
diff --git a/einterfaces/message_export.go b/einterfaces/message_export.go
index 6411327a3..18fd734ce 100644
--- a/einterfaces/message_export.go
+++ b/einterfaces/message_export.go
@@ -6,7 +6,7 @@ package einterfaces
 import (
 	"context"
 
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 type MessageExportInterface interface {
diff --git a/einterfaces/metrics.go b/einterfaces/metrics.go
index 56e6cb5aa..bf9636b0b 100644
--- a/einterfaces/metrics.go
+++ b/einterfaces/metrics.go
@@ -4,8 +4,8 @@
 package einterfaces
 
 import (
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
 )
 
 type MetricsInterface interface {
diff --git a/einterfaces/mfa.go b/einterfaces/mfa.go
index e3b89cabc..739ab4035 100644
--- a/einterfaces/mfa.go
+++ b/einterfaces/mfa.go
@@ -4,7 +4,7 @@
 package einterfaces
 
 import (
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 type MfaInterface interface {
diff --git a/einterfaces/mocks/AccountMigrationInterface.go b/einterfaces/mocks/AccountMigrationInterface.go
index 968200b07..aa7d9b559 100644
--- a/einterfaces/mocks/AccountMigrationInterface.go
+++ b/einterfaces/mocks/AccountMigrationInterface.go
@@ -5,7 +5,7 @@
 package mocks
 
 import (
-	model "github.com/mattermost/mattermost-server/v6/model"
+	model "github.com/cjdelisle/matterfoss-server/v6/model"
 	mock "github.com/stretchr/testify/mock"
 )
 
diff --git a/einterfaces/mocks/AppContextInterface.go b/einterfaces/mocks/AppContextInterface.go
index 4cd8f9bce..a2dc08af7 100644
--- a/einterfaces/mocks/AppContextInterface.go
+++ b/einterfaces/mocks/AppContextInterface.go
@@ -5,7 +5,7 @@
 package mocks
 
 import (
-	model "github.com/mattermost/mattermost-server/v6/model"
+	model "github.com/cjdelisle/matterfoss-server/v6/model"
 	mock "github.com/stretchr/testify/mock"
 )
 
diff --git a/einterfaces/mocks/CloudInterface.go b/einterfaces/mocks/CloudInterface.go
index 8cf7d4105..69c90da63 100644
--- a/einterfaces/mocks/CloudInterface.go
+++ b/einterfaces/mocks/CloudInterface.go
@@ -5,7 +5,7 @@
 package mocks
 
 import (
-	model "github.com/mattermost/mattermost-server/v6/model"
+	model "github.com/cjdelisle/matterfoss-server/v6/model"
 	mock "github.com/stretchr/testify/mock"
 )
 
diff --git a/einterfaces/mocks/CloudJobInterface.go b/einterfaces/mocks/CloudJobInterface.go
index 52f0077e8..4e3b3bd58 100644
--- a/einterfaces/mocks/CloudJobInterface.go
+++ b/einterfaces/mocks/CloudJobInterface.go
@@ -5,7 +5,7 @@
 package mocks
 
 import (
-	model "github.com/mattermost/mattermost-server/v6/model"
+	model "github.com/cjdelisle/matterfoss-server/v6/model"
 	mock "github.com/stretchr/testify/mock"
 )
 
diff --git a/einterfaces/mocks/ClusterInterface.go b/einterfaces/mocks/ClusterInterface.go
index fa7bbf596..29a3b762c 100644
--- a/einterfaces/mocks/ClusterInterface.go
+++ b/einterfaces/mocks/ClusterInterface.go
@@ -5,10 +5,10 @@
 package mocks
 
 import (
-	einterfaces "github.com/mattermost/mattermost-server/v6/einterfaces"
+	einterfaces "github.com/cjdelisle/matterfoss-server/v6/einterfaces"
 	mock "github.com/stretchr/testify/mock"
 
-	model "github.com/mattermost/mattermost-server/v6/model"
+	model "github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 // ClusterInterface is an autogenerated mock type for the ClusterInterface type
diff --git a/einterfaces/mocks/ComplianceInterface.go b/einterfaces/mocks/ComplianceInterface.go
index 5ff8dcef9..8ad16b5df 100644
--- a/einterfaces/mocks/ComplianceInterface.go
+++ b/einterfaces/mocks/ComplianceInterface.go
@@ -5,7 +5,7 @@
 package mocks
 
 import (
-	model "github.com/mattermost/mattermost-server/v6/model"
+	model "github.com/cjdelisle/matterfoss-server/v6/model"
 	mock "github.com/stretchr/testify/mock"
 )
 
diff --git a/einterfaces/mocks/DataRetentionInterface.go b/einterfaces/mocks/DataRetentionInterface.go
index 347f4149d..aa27844a2 100644
--- a/einterfaces/mocks/DataRetentionInterface.go
+++ b/einterfaces/mocks/DataRetentionInterface.go
@@ -5,7 +5,7 @@
 package mocks
 
 import (
-	model "github.com/mattermost/mattermost-server/v6/model"
+	model "github.com/cjdelisle/matterfoss-server/v6/model"
 	mock "github.com/stretchr/testify/mock"
 )
 
diff --git a/einterfaces/mocks/DataRetentionJobInterface.go b/einterfaces/mocks/DataRetentionJobInterface.go
index 0eea3890e..b33358a1a 100644
--- a/einterfaces/mocks/DataRetentionJobInterface.go
+++ b/einterfaces/mocks/DataRetentionJobInterface.go
@@ -5,7 +5,7 @@
 package mocks
 
 import (
-	model "github.com/mattermost/mattermost-server/v6/model"
+	model "github.com/cjdelisle/matterfoss-server/v6/model"
 	mock "github.com/stretchr/testify/mock"
 )
 
diff --git a/einterfaces/mocks/ElasticsearchAggregatorInterface.go b/einterfaces/mocks/ElasticsearchAggregatorInterface.go
index 54c788523..2821b47ea 100644
--- a/einterfaces/mocks/ElasticsearchAggregatorInterface.go
+++ b/einterfaces/mocks/ElasticsearchAggregatorInterface.go
@@ -5,7 +5,7 @@
 package mocks
 
 import (
-	model "github.com/mattermost/mattermost-server/v6/model"
+	model "github.com/cjdelisle/matterfoss-server/v6/model"
 	mock "github.com/stretchr/testify/mock"
 )
 
diff --git a/einterfaces/mocks/ElasticsearchIndexerInterface.go b/einterfaces/mocks/ElasticsearchIndexerInterface.go
index c0775f7a5..43f153ce8 100644
--- a/einterfaces/mocks/ElasticsearchIndexerInterface.go
+++ b/einterfaces/mocks/ElasticsearchIndexerInterface.go
@@ -5,7 +5,7 @@
 package mocks
 
 import (
-	model "github.com/mattermost/mattermost-server/v6/model"
+	model "github.com/cjdelisle/matterfoss-server/v6/model"
 	mock "github.com/stretchr/testify/mock"
 )
 
diff --git a/einterfaces/mocks/IndexerJobInterface.go b/einterfaces/mocks/IndexerJobInterface.go
index 1382d7798..0b9bd1eb4 100644
--- a/einterfaces/mocks/IndexerJobInterface.go
+++ b/einterfaces/mocks/IndexerJobInterface.go
@@ -5,7 +5,7 @@
 package mocks
 
 import (
-	model "github.com/mattermost/mattermost-server/v6/model"
+	model "github.com/cjdelisle/matterfoss-server/v6/model"
 	mock "github.com/stretchr/testify/mock"
 )
 
diff --git a/einterfaces/mocks/LdapInterface.go b/einterfaces/mocks/LdapInterface.go
index 950395b32..dad681d76 100644
--- a/einterfaces/mocks/LdapInterface.go
+++ b/einterfaces/mocks/LdapInterface.go
@@ -5,8 +5,8 @@
 package mocks
 
 import (
-	request "github.com/mattermost/mattermost-server/v6/app/request"
-	model "github.com/mattermost/mattermost-server/v6/model"
+	request "github.com/cjdelisle/matterfoss-server/v6/app/request"
+	model "github.com/cjdelisle/matterfoss-server/v6/model"
 	mock "github.com/stretchr/testify/mock"
 )
 
diff --git a/einterfaces/mocks/LdapSyncInterface.go b/einterfaces/mocks/LdapSyncInterface.go
index 29ba81336..60e5978c6 100644
--- a/einterfaces/mocks/LdapSyncInterface.go
+++ b/einterfaces/mocks/LdapSyncInterface.go
@@ -5,7 +5,7 @@
 package mocks
 
 import (
-	model "github.com/mattermost/mattermost-server/v6/model"
+	model "github.com/cjdelisle/matterfoss-server/v6/model"
 	mock "github.com/stretchr/testify/mock"
 )
 
diff --git a/einterfaces/mocks/LicenseInterface.go b/einterfaces/mocks/LicenseInterface.go
index 6160f415d..ef4ed79db 100644
--- a/einterfaces/mocks/LicenseInterface.go
+++ b/einterfaces/mocks/LicenseInterface.go
@@ -5,7 +5,7 @@
 package mocks
 
 import (
-	model "github.com/mattermost/mattermost-server/v6/model"
+	model "github.com/cjdelisle/matterfoss-server/v6/model"
 	mock "github.com/stretchr/testify/mock"
 )
 
diff --git a/einterfaces/mocks/MessageExportInterface.go b/einterfaces/mocks/MessageExportInterface.go
index 90f9b7377..4329050bc 100644
--- a/einterfaces/mocks/MessageExportInterface.go
+++ b/einterfaces/mocks/MessageExportInterface.go
@@ -9,7 +9,7 @@ import (
 
 	mock "github.com/stretchr/testify/mock"
 
-	model "github.com/mattermost/mattermost-server/v6/model"
+	model "github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 // MessageExportInterface is an autogenerated mock type for the MessageExportInterface type
diff --git a/einterfaces/mocks/MessageExportJobInterface.go b/einterfaces/mocks/MessageExportJobInterface.go
index cdc1b7e93..a429353c4 100644
--- a/einterfaces/mocks/MessageExportJobInterface.go
+++ b/einterfaces/mocks/MessageExportJobInterface.go
@@ -5,7 +5,7 @@
 package mocks
 
 import (
-	model "github.com/mattermost/mattermost-server/v6/model"
+	model "github.com/cjdelisle/matterfoss-server/v6/model"
 	mock "github.com/stretchr/testify/mock"
 )
 
diff --git a/einterfaces/mocks/MetricsInterface.go b/einterfaces/mocks/MetricsInterface.go
index db733f8b8..ed0dd9e1b 100644
--- a/einterfaces/mocks/MetricsInterface.go
+++ b/einterfaces/mocks/MetricsInterface.go
@@ -8,7 +8,7 @@ import (
 	logr "github.com/mattermost/logr/v2"
 	mock "github.com/stretchr/testify/mock"
 
-	model "github.com/mattermost/mattermost-server/v6/model"
+	model "github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 // MetricsInterface is an autogenerated mock type for the MetricsInterface type
diff --git a/einterfaces/mocks/MfaInterface.go b/einterfaces/mocks/MfaInterface.go
index ade8b82ef..fc893475c 100644
--- a/einterfaces/mocks/MfaInterface.go
+++ b/einterfaces/mocks/MfaInterface.go
@@ -5,7 +5,7 @@
 package mocks
 
 import (
-	model "github.com/mattermost/mattermost-server/v6/model"
+	model "github.com/cjdelisle/matterfoss-server/v6/model"
 	mock "github.com/stretchr/testify/mock"
 )
 
diff --git a/einterfaces/mocks/NotificationInterface.go b/einterfaces/mocks/NotificationInterface.go
index f63ccb8a5..c60bebcd9 100644
--- a/einterfaces/mocks/NotificationInterface.go
+++ b/einterfaces/mocks/NotificationInterface.go
@@ -5,7 +5,7 @@
 package mocks
 
 import (
-	model "github.com/mattermost/mattermost-server/v6/model"
+	model "github.com/cjdelisle/matterfoss-server/v6/model"
 	mock "github.com/stretchr/testify/mock"
 )
 
diff --git a/einterfaces/mocks/OAuthProvider.go b/einterfaces/mocks/OAuthProvider.go
index b83a0b928..be5872d56 100644
--- a/einterfaces/mocks/OAuthProvider.go
+++ b/einterfaces/mocks/OAuthProvider.go
@@ -7,7 +7,7 @@ package mocks
 import (
 	io "io"
 
-	model "github.com/mattermost/mattermost-server/v6/model"
+	model "github.com/cjdelisle/matterfoss-server/v6/model"
 	mock "github.com/stretchr/testify/mock"
 )
 
diff --git a/einterfaces/mocks/ResendInvitationEmailJobInterface.go b/einterfaces/mocks/ResendInvitationEmailJobInterface.go
index 8e69694e7..8db733162 100644
--- a/einterfaces/mocks/ResendInvitationEmailJobInterface.go
+++ b/einterfaces/mocks/ResendInvitationEmailJobInterface.go
@@ -5,7 +5,7 @@
 package mocks
 
 import (
-	model "github.com/mattermost/mattermost-server/v6/model"
+	model "github.com/cjdelisle/matterfoss-server/v6/model"
 	mock "github.com/stretchr/testify/mock"
 )
 
diff --git a/einterfaces/mocks/SamlInterface.go b/einterfaces/mocks/SamlInterface.go
index 1c058ce22..fdf26670f 100644
--- a/einterfaces/mocks/SamlInterface.go
+++ b/einterfaces/mocks/SamlInterface.go
@@ -5,8 +5,8 @@
 package mocks
 
 import (
-	request "github.com/mattermost/mattermost-server/v6/app/request"
-	model "github.com/mattermost/mattermost-server/v6/model"
+	request "github.com/cjdelisle/matterfoss-server/v6/app/request"
+	model "github.com/cjdelisle/matterfoss-server/v6/model"
 	mock "github.com/stretchr/testify/mock"
 )
 
diff --git a/einterfaces/notification.go b/einterfaces/notification.go
index 9a63d9da2..e88267cde 100644
--- a/einterfaces/notification.go
+++ b/einterfaces/notification.go
@@ -4,7 +4,7 @@
 package einterfaces
 
 import (
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 type NotificationInterface interface {
diff --git a/einterfaces/oauthproviders.go b/einterfaces/oauthproviders.go
index de60c9459..0e1f838a0 100644
--- a/einterfaces/oauthproviders.go
+++ b/einterfaces/oauthproviders.go
@@ -6,7 +6,7 @@ package einterfaces
 import (
 	"io"
 
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 type OAuthProvider interface {
diff --git a/einterfaces/saml.go b/einterfaces/saml.go
index abe30febc..bbb142870 100644
--- a/einterfaces/saml.go
+++ b/einterfaces/saml.go
@@ -4,8 +4,8 @@
 package einterfaces
 
 import (
-	"github.com/mattermost/mattermost-server/v6/app/request"
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/app/request"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 type SamlInterface interface {
diff --git a/go.mod b/go.mod
index 3fe2dd45b..d4893ef7e 100644
--- a/go.mod
+++ b/go.mod
@@ -1,4 +1,4 @@
-module github.com/mattermost/mattermost-server/v6
+module github.com/cjdelisle/matterfoss-server/v6
 
 go 1.16
 
diff --git a/jobs/active_users/scheduler.go b/jobs/active_users/scheduler.go
index ad2d496f5..77d6dc73a 100644
--- a/jobs/active_users/scheduler.go
+++ b/jobs/active_users/scheduler.go
@@ -6,8 +6,8 @@ package active_users
 import (
 	"time"
 
-	"github.com/mattermost/mattermost-server/v6/jobs"
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/jobs"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 const schedFreq = 10 * time.Minute
diff --git a/jobs/active_users/worker.go b/jobs/active_users/worker.go
index 8f562dd6a..c050ea105 100644
--- a/jobs/active_users/worker.go
+++ b/jobs/active_users/worker.go
@@ -4,10 +4,10 @@
 package active_users
 
 import (
-	"github.com/mattermost/mattermost-server/v6/einterfaces"
-	"github.com/mattermost/mattermost-server/v6/jobs"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/einterfaces"
+	"github.com/cjdelisle/matterfoss-server/v6/jobs"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
 )
 
 const (
diff --git a/jobs/base_schedulers.go b/jobs/base_schedulers.go
index b6416b3bb..9ce8330b8 100644
--- a/jobs/base_schedulers.go
+++ b/jobs/base_schedulers.go
@@ -6,7 +6,7 @@ package jobs
 import (
 	"time"
 
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 type PeriodicScheduler struct {
diff --git a/jobs/base_workers.go b/jobs/base_workers.go
index b5fbd6166..ced0b9904 100644
--- a/jobs/base_workers.go
+++ b/jobs/base_workers.go
@@ -6,8 +6,8 @@ package jobs
 import (
 	"net/http"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
 )
 
 type SimpleWorker struct {
diff --git a/jobs/expirynotify/scheduler.go b/jobs/expirynotify/scheduler.go
index 023e0c0f2..c4d9ad773 100644
--- a/jobs/expirynotify/scheduler.go
+++ b/jobs/expirynotify/scheduler.go
@@ -6,8 +6,8 @@ package expirynotify
 import (
 	"time"
 
-	"github.com/mattermost/mattermost-server/v6/jobs"
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/jobs"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 const schedFreq = 10 * time.Minute
diff --git a/jobs/expirynotify/worker.go b/jobs/expirynotify/worker.go
index 98b9a0b47..632e24aac 100644
--- a/jobs/expirynotify/worker.go
+++ b/jobs/expirynotify/worker.go
@@ -4,8 +4,8 @@
 package expirynotify
 
 import (
-	"github.com/mattermost/mattermost-server/v6/jobs"
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/jobs"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 const (
diff --git a/jobs/export_delete/scheduler.go b/jobs/export_delete/scheduler.go
index f15f7339e..10edf4407 100644
--- a/jobs/export_delete/scheduler.go
+++ b/jobs/export_delete/scheduler.go
@@ -6,8 +6,8 @@ package export_delete
 import (
 	"time"
 
-	"github.com/mattermost/mattermost-server/v6/jobs"
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/jobs"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 const schedFreq = 24 * time.Hour
diff --git a/jobs/export_delete/worker.go b/jobs/export_delete/worker.go
index 8a8c50942..f6186ab26 100644
--- a/jobs/export_delete/worker.go
+++ b/jobs/export_delete/worker.go
@@ -7,10 +7,10 @@ import (
 	"path/filepath"
 	"time"
 
-	"github.com/mattermost/mattermost-server/v6/jobs"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/services/configservice"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/jobs"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/services/configservice"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
 	"github.com/wiggin77/merror"
 )
 
diff --git a/jobs/export_process/worker.go b/jobs/export_process/worker.go
index e37e5798a..e1c0edab4 100644
--- a/jobs/export_process/worker.go
+++ b/jobs/export_process/worker.go
@@ -7,10 +7,10 @@ import (
 	"io"
 	"path/filepath"
 
-	"github.com/mattermost/mattermost-server/v6/jobs"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/services/configservice"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/jobs"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/services/configservice"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
 )
 
 const jobName = "ExportProcess"
diff --git a/jobs/extract_content/worker.go b/jobs/extract_content/worker.go
index c2eb9ad0a..816b5a4f0 100644
--- a/jobs/extract_content/worker.go
+++ b/jobs/extract_content/worker.go
@@ -6,10 +6,10 @@ package extract_content
 import (
 	"strconv"
 
-	"github.com/mattermost/mattermost-server/v6/jobs"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
-	"github.com/mattermost/mattermost-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/jobs"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
 )
 
 var ignoredFiles = map[string]bool{
diff --git a/jobs/import_delete/scheduler.go b/jobs/import_delete/scheduler.go
index e76f9dc13..28c433dce 100644
--- a/jobs/import_delete/scheduler.go
+++ b/jobs/import_delete/scheduler.go
@@ -6,8 +6,8 @@ package import_delete
 import (
 	"time"
 
-	"github.com/mattermost/mattermost-server/v6/jobs"
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/jobs"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 const schedFreq = 24 * time.Hour
diff --git a/jobs/import_delete/worker.go b/jobs/import_delete/worker.go
index 6dc46b4ae..a79d53b04 100644
--- a/jobs/import_delete/worker.go
+++ b/jobs/import_delete/worker.go
@@ -8,11 +8,11 @@ import (
 	"path/filepath"
 	"time"
 
-	"github.com/mattermost/mattermost-server/v6/jobs"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/services/configservice"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
-	"github.com/mattermost/mattermost-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/jobs"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/services/configservice"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
 	"github.com/wiggin77/merror"
 )
 
diff --git a/jobs/import_process/worker.go b/jobs/import_process/worker.go
index 77c0fabe5..e9fdd9df1 100644
--- a/jobs/import_process/worker.go
+++ b/jobs/import_process/worker.go
@@ -12,11 +12,11 @@ import (
 	"strconv"
 	"strings"
 
-	"github.com/mattermost/mattermost-server/v6/app/request"
-	"github.com/mattermost/mattermost-server/v6/jobs"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/services/configservice"
-	"github.com/mattermost/mattermost-server/v6/shared/filestore"
+	"github.com/cjdelisle/matterfoss-server/v6/app/request"
+	"github.com/cjdelisle/matterfoss-server/v6/jobs"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/services/configservice"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/filestore"
 )
 
 const jobName = "ImportProcess"
diff --git a/jobs/jobs.go b/jobs/jobs.go
index 897fe87c2..10f19945c 100644
--- a/jobs/jobs.go
+++ b/jobs/jobs.go
@@ -9,9 +9,9 @@ import (
 	"net/http"
 	"time"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
-	"github.com/mattermost/mattermost-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
 )
 
 const (
diff --git a/jobs/jobs_test.go b/jobs/jobs_test.go
index bb28db69a..51fc0bf0b 100644
--- a/jobs/jobs_test.go
+++ b/jobs/jobs_test.go
@@ -8,11 +8,11 @@ import (
 
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/einterfaces/mocks"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/store"
-	"github.com/mattermost/mattermost-server/v6/store/storetest"
-	"github.com/mattermost/mattermost-server/v6/utils/testutils"
+	"github.com/cjdelisle/matterfoss-server/v6/einterfaces/mocks"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/store/storetest"
+	"github.com/cjdelisle/matterfoss-server/v6/utils/testutils"
 )
 
 func makeJobServer(t *testing.T) (*JobServer, *storetest.Store, *mocks.MetricsInterface) {
diff --git a/jobs/jobs_watcher.go b/jobs/jobs_watcher.go
index e0f57a5cf..53c269fab 100644
--- a/jobs/jobs_watcher.go
+++ b/jobs/jobs_watcher.go
@@ -7,8 +7,8 @@ import (
 	"math/rand"
 	"time"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
 )
 
 // Default polling interval for jobs termination.
diff --git a/jobs/migrations/advanced_permissions_phase_2.go b/jobs/migrations/advanced_permissions_phase_2.go
index caebb980a..d6ff1ed7c 100644
--- a/jobs/migrations/advanced_permissions_phase_2.go
+++ b/jobs/migrations/advanced_permissions_phase_2.go
@@ -9,7 +9,7 @@ import (
 	"net/http"
 	"strings"
 
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 type AdvancedPermissionsPhase2Progress struct {
diff --git a/jobs/migrations/helper_test.go b/jobs/migrations/helper_test.go
index 4813fc0f6..4c0bfdf3f 100644
--- a/jobs/migrations/helper_test.go
+++ b/jobs/migrations/helper_test.go
@@ -6,8 +6,8 @@ package migrations
 import (
 	"testing"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
 )
 
 func Setup(tb testing.TB) store.Store {
diff --git a/jobs/migrations/main_test.go b/jobs/migrations/main_test.go
index 372655a61..cc5943a88 100644
--- a/jobs/migrations/main_test.go
+++ b/jobs/migrations/main_test.go
@@ -6,7 +6,7 @@ package migrations
 import (
 	"testing"
 
-	"github.com/mattermost/mattermost-server/v6/testlib"
+	"github.com/cjdelisle/matterfoss-server/v6/testlib"
 )
 
 var mainHelper *testlib.MainHelper
diff --git a/jobs/migrations/migrations.go b/jobs/migrations/migrations.go
index 7327d953e..b37e63307 100644
--- a/jobs/migrations/migrations.go
+++ b/jobs/migrations/migrations.go
@@ -6,8 +6,8 @@ package migrations
 import (
 	"net/http"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
 )
 
 const (
diff --git a/jobs/migrations/migrations_test.go b/jobs/migrations/migrations_test.go
index fee7830c0..49429b16e 100644
--- a/jobs/migrations/migrations_test.go
+++ b/jobs/migrations/migrations_test.go
@@ -9,7 +9,7 @@ import (
 	"github.com/stretchr/testify/assert"
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 func TestGetMigrationState(t *testing.T) {
diff --git a/jobs/migrations/scheduler.go b/jobs/migrations/scheduler.go
index 928c5a51c..db8650ef8 100644
--- a/jobs/migrations/scheduler.go
+++ b/jobs/migrations/scheduler.go
@@ -6,10 +6,10 @@ package migrations
 import (
 	"time"
 
-	"github.com/mattermost/mattermost-server/v6/jobs"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
-	"github.com/mattermost/mattermost-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/jobs"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
 )
 
 const (
diff --git a/jobs/migrations/worker.go b/jobs/migrations/worker.go
index 001c04a49..f7a419a29 100644
--- a/jobs/migrations/worker.go
+++ b/jobs/migrations/worker.go
@@ -9,10 +9,10 @@ import (
 	"sync/atomic"
 	"time"
 
-	"github.com/mattermost/mattermost-server/v6/jobs"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
-	"github.com/mattermost/mattermost-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/jobs"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
 )
 
 const (
diff --git a/jobs/product_notices/scheduler.go b/jobs/product_notices/scheduler.go
index e222e94fd..7bd907d58 100644
--- a/jobs/product_notices/scheduler.go
+++ b/jobs/product_notices/scheduler.go
@@ -6,8 +6,8 @@ package product_notices
 import (
 	"time"
 
-	"github.com/mattermost/mattermost-server/v6/jobs"
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/jobs"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 type Scheduler struct {
diff --git a/jobs/product_notices/worker.go b/jobs/product_notices/worker.go
index 20935dfc8..3c1872e8a 100644
--- a/jobs/product_notices/worker.go
+++ b/jobs/product_notices/worker.go
@@ -4,9 +4,9 @@
 package product_notices
 
 import (
-	"github.com/mattermost/mattermost-server/v6/jobs"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/jobs"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
 )
 
 const jobName = "ProductNotices"
diff --git a/jobs/resend_invitation_email/worker.go b/jobs/resend_invitation_email/worker.go
index 274187901..c8b125e6c 100644
--- a/jobs/resend_invitation_email/worker.go
+++ b/jobs/resend_invitation_email/worker.go
@@ -8,12 +8,12 @@ import (
 	"os"
 	"strconv"
 
-	"github.com/mattermost/mattermost-server/v6/jobs"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/services/configservice"
-	"github.com/mattermost/mattermost-server/v6/services/telemetry"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
-	"github.com/mattermost/mattermost-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/jobs"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/services/configservice"
+	"github.com/cjdelisle/matterfoss-server/v6/services/telemetry"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
 )
 
 const FourtyEightHoursInMillis int64 = 172800000
diff --git a/jobs/schedulers.go b/jobs/schedulers.go
index f692b0845..558c8b5d5 100644
--- a/jobs/schedulers.go
+++ b/jobs/schedulers.go
@@ -8,8 +8,8 @@ import (
 	"fmt"
 	"time"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
 )
 
 type Schedulers struct {
diff --git a/jobs/schedulers_test.go b/jobs/schedulers_test.go
index 8421d4f0f..f426cdd05 100644
--- a/jobs/schedulers_test.go
+++ b/jobs/schedulers_test.go
@@ -9,10 +9,10 @@ import (
 
 	"github.com/stretchr/testify/assert"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/plugin/plugintest/mock"
-	"github.com/mattermost/mattermost-server/v6/store/storetest"
-	"github.com/mattermost/mattermost-server/v6/utils/testutils"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/plugin/plugintest/mock"
+	"github.com/cjdelisle/matterfoss-server/v6/store/storetest"
+	"github.com/cjdelisle/matterfoss-server/v6/utils/testutils"
 )
 
 type MockScheduler struct {
diff --git a/jobs/server.go b/jobs/server.go
index 9c5870027..91bf2f49f 100644
--- a/jobs/server.go
+++ b/jobs/server.go
@@ -7,10 +7,10 @@ import (
 	"sync"
 	"time"
 
-	"github.com/mattermost/mattermost-server/v6/einterfaces"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/services/configservice"
-	"github.com/mattermost/mattermost-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/einterfaces"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/services/configservice"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
 )
 
 type JobServer struct {
diff --git a/jobs/workers.go b/jobs/workers.go
index 009b040f8..a2cf09076 100644
--- a/jobs/workers.go
+++ b/jobs/workers.go
@@ -6,9 +6,9 @@ package jobs
 import (
 	"errors"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/services/configservice"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/services/configservice"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
 )
 
 type Workers struct {
diff --git a/manualtesting/manual_testing.go b/manualtesting/manual_testing.go
index 9423f1baa..3e7263d5c 100644
--- a/manualtesting/manual_testing.go
+++ b/manualtesting/manual_testing.go
@@ -12,14 +12,14 @@ import (
 	"strconv"
 	"time"
 
-	"github.com/mattermost/mattermost-server/v6/api4"
-	"github.com/mattermost/mattermost-server/v6/app"
-	"github.com/mattermost/mattermost-server/v6/app/slashcommands"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
-	"github.com/mattermost/mattermost-server/v6/store"
-	"github.com/mattermost/mattermost-server/v6/utils"
-	"github.com/mattermost/mattermost-server/v6/web"
+	"github.com/cjdelisle/matterfoss-server/v6/api4"
+	"github.com/cjdelisle/matterfoss-server/v6/app"
+	"github.com/cjdelisle/matterfoss-server/v6/app/slashcommands"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/utils"
+	"github.com/cjdelisle/matterfoss-server/v6/web"
 )
 
 // TestEnvironment is a helper struct used for tests in manualtesting.
diff --git a/manualtesting/test_autolink.go b/manualtesting/test_autolink.go
index 1fe293436..3751bb748 100644
--- a/manualtesting/test_autolink.go
+++ b/manualtesting/test_autolink.go
@@ -7,8 +7,8 @@ import (
 	"errors"
 	"net/http"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
 )
 
 const linkPostText = `
diff --git a/model/bundle_info.go b/model/bundle_info.go
index 63969de7f..df6418bf0 100644
--- a/model/bundle_info.go
+++ b/model/bundle_info.go
@@ -4,7 +4,7 @@
 package model
 
 import (
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
 )
 
 type BundleInfo struct {
diff --git a/model/client4_test.go b/model/client4_test.go
index 5f9bd828c..195821555 100644
--- a/model/client4_test.go
+++ b/model/client4_test.go
@@ -26,7 +26,7 @@ func TestClient4TrimTrailingSlash(t *testing.T) {
 	}
 }
 
-// https://github.com/mattermost/mattermost-server/v6/issues/8205
+// https://github.com/cjdelisle/matterfoss-server/v6/issues/8205
 func TestClient4CreatePost(t *testing.T) {
 	post := &Post{
 		Props: map[string]interface{}{
diff --git a/model/command_args.go b/model/command_args.go
index c8333acbd..bed92557e 100644
--- a/model/command_args.go
+++ b/model/command_args.go
@@ -4,7 +4,7 @@
 package model
 
 import (
-	"github.com/mattermost/mattermost-server/v6/shared/i18n"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/i18n"
 )
 
 type CommandArgs struct {
diff --git a/model/command_response.go b/model/command_response.go
index b2521f8e0..f19f39ba3 100644
--- a/model/command_response.go
+++ b/model/command_response.go
@@ -9,7 +9,7 @@ import (
 	"io/ioutil"
 	"strings"
 
-	"github.com/mattermost/mattermost-server/v6/utils/jsonutils"
+	"github.com/cjdelisle/matterfoss-server/v6/utils/jsonutils"
 )
 
 const (
diff --git a/model/config.go b/model/config.go
index 3920bc1e9..ce91a9be2 100644
--- a/model/config.go
+++ b/model/config.go
@@ -20,8 +20,8 @@ import (
 
 	"github.com/mattermost/ldap"
 
-	"github.com/mattermost/mattermost-server/v6/shared/filestore"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/filestore"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
 )
 
 const (
diff --git a/model/gitlab/gitlab.go b/model/gitlab/gitlab.go
index ade599cb4..82a4acaa9 100644
--- a/model/gitlab/gitlab.go
+++ b/model/gitlab/gitlab.go
@@ -10,8 +10,8 @@ import (
 	"strconv"
 	"strings"
 
-	"github.com/mattermost/mattermost-server/v6/einterfaces"
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/einterfaces"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 type GitLabProvider struct {
diff --git a/model/manifest.go b/model/manifest.go
index fda365f25..1309e2615 100644
--- a/model/manifest.go
+++ b/model/manifest.go
@@ -167,7 +167,7 @@ type Manifest struct {
 	// A version number for your plugin. Semantic versioning is recommended: http://semver.org
 	Version string `json:"version" yaml:"version"`
 
-	// The minimum Mattermost server version required for your plugin.
+	// The minimum Matterfoss server version required for your plugin.
 	//
 	// Minimum server version: 5.6
 	MinServerVersion string `json:"min_server_version,omitempty" yaml:"min_server_version,omitempty"`
@@ -178,7 +178,7 @@ type Manifest struct {
 	// If your plugin extends the web app, you'll need to define webapp.
 	Webapp *ManifestWebapp `json:"webapp,omitempty" yaml:"webapp,omitempty"`
 
-	// To allow administrators to configure your plugin via the Mattermost system console, you can
+	// To allow administrators to configure your plugin via the Matterfoss system console, you can
 	// provide your settings schema.
 	SettingsSchema *PluginSettingsSchema `json:"settings_schema,omitempty" yaml:"settings_schema,omitempty"`
 
diff --git a/model/marketplace_plugin.go b/model/marketplace_plugin.go
index 8f0371b11..3560a7efc 100644
--- a/model/marketplace_plugin.go
+++ b/model/marketplace_plugin.go
@@ -14,7 +14,7 @@ import (
 	"github.com/pkg/errors"
 )
 
-// BaseMarketplacePlugin is a Mattermost plugin received from the Marketplace server.
+// BaseMarketplacePlugin is a Matterfoss plugin received from the Marketplace server.
 type BaseMarketplacePlugin struct {
 	HomepageURL     string             `json:"homepage_url"`
 	IconData        string             `json:"icon_data"`
diff --git a/model/plugin_valid_test.go b/model/plugin_valid_test.go
index ad3dbafb5..51eaa1972 100644
--- a/model/plugin_valid_test.go
+++ b/model/plugin_valid_test.go
@@ -21,7 +21,7 @@ func TestIsValidPluginId(t *testing.T) {
 		"abcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghij1": false,
 		"../path":     false,
 		"/etc/passwd": false,
-		"com.mattermost.plugin_with_features-0.9": true,
+		"com.matterfoss.plugin_with_features-0.9": true,
 		"PLUGINS-THAT-YELL-ARE-OK-2":              true,
 	}
 
diff --git a/model/post.go b/model/post.go
index 8736de3a1..c2b862132 100644
--- a/model/post.go
+++ b/model/post.go
@@ -14,7 +14,7 @@ import (
 	"sync"
 	"unicode/utf8"
 
-	"github.com/mattermost/mattermost-server/v6/shared/markdown"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/markdown"
 )
 
 const (
diff --git a/model/post_test.go b/model/post_test.go
index d8e6fbd10..d64e3770d 100644
--- a/model/post_test.go
+++ b/model/post_test.go
@@ -326,7 +326,7 @@ func TestPost_AttachmentsEqual(t *testing.T) {
 								URL: "http://localhost",
 								Context: map[string]interface{}{
 									"context": "foobar",
-									"test":    "mattermost",
+									"test":    "matterfoss",
 								},
 							},
 						},
diff --git a/model/push_notification.go b/model/push_notification.go
index 09a645ea3..8b0d1580c 100644
--- a/model/push_notification.go
+++ b/model/push_notification.go
@@ -26,7 +26,7 @@ const (
 	// with the push notifications
 	CategoryCanReply = "CAN_REPLY"
 
-	MHPNS = "https://push.mattermost.com"
+	MHPNS = "https://push.matterfoss.org"
 
 	PushSendPrepare = "Prepared to send"
 	PushSendSuccess = "Successful"
diff --git a/model/session.go b/model/session.go
index fcf8eea12..d0be3ba6d 100644
--- a/model/session.go
+++ b/model/session.go
@@ -8,7 +8,7 @@ import (
 	"strconv"
 	"strings"
 
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
 )
 
 const (
diff --git a/model/user.go b/model/user.go
index 698f33772..64fed6a95 100644
--- a/model/user.go
+++ b/model/user.go
@@ -16,8 +16,8 @@ import (
 	"golang.org/x/crypto/bcrypt"
 	"golang.org/x/text/language"
 
-	"github.com/mattermost/mattermost-server/v6/services/timezones"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/services/timezones"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
 )
 
 const (
diff --git a/model/utils.go b/model/utils.go
index 4a6f633e0..2be0c98ef 100644
--- a/model/utils.go
+++ b/model/utils.go
@@ -23,7 +23,7 @@ import (
 	"time"
 	"unicode"
 
-	"github.com/mattermost/mattermost-server/v6/shared/i18n"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/i18n"
 	"github.com/pborman/uuid"
 	"github.com/pkg/errors"
 )
diff --git a/model/websocket_client.go b/model/websocket_client.go
index b80d47775..748584163 100644
--- a/model/websocket_client.go
+++ b/model/websocket_client.go
@@ -11,7 +11,7 @@ import (
 	"sync/atomic"
 	"time"
 
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
 
 	"github.com/gorilla/websocket"
 	"github.com/vmihailenco/msgpack/v5"
diff --git a/model/websocket_request.go b/model/websocket_request.go
index a7750bcea..4e02f3325 100644
--- a/model/websocket_request.go
+++ b/model/websocket_request.go
@@ -4,7 +4,7 @@
 package model
 
 import (
-	"github.com/mattermost/mattermost-server/v6/shared/i18n"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/i18n"
 
 	"github.com/vmihailenco/msgpack/v5"
 )
diff --git a/plugin/api.go b/plugin/api.go
index 2a9ccf18b..5ee48dde4 100644
--- a/plugin/api.go
+++ b/plugin/api.go
@@ -9,7 +9,7 @@ import (
 
 	plugin "github.com/hashicorp/go-plugin"
 
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 // The API can be used to retrieve data or perform actions on behalf of the plugin. Most methods
diff --git a/plugin/api_timer_layer_generated.go b/plugin/api_timer_layer_generated.go
index d27179790..9afcf082a 100644
--- a/plugin/api_timer_layer_generated.go
+++ b/plugin/api_timer_layer_generated.go
@@ -11,8 +11,8 @@ import (
 	"net/http"
 	timePkg "time"
 
-	"github.com/mattermost/mattermost-server/v6/einterfaces"
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/einterfaces"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 type apiTimerLayer struct {
diff --git a/plugin/checker/check_api.go b/plugin/checker/check_api.go
index 707da34e9..88dee2990 100644
--- a/plugin/checker/check_api.go
+++ b/plugin/checker/check_api.go
@@ -8,8 +8,8 @@ import (
 	"go/ast"
 	"go/token"
 
-	"github.com/mattermost/mattermost-server/v6/plugin/checker/internal/asthelpers"
-	"github.com/mattermost/mattermost-server/v6/plugin/checker/internal/version"
+	"github.com/cjdelisle/matterfoss-server/v6/plugin/checker/internal/asthelpers"
+	"github.com/cjdelisle/matterfoss-server/v6/plugin/checker/internal/version"
 )
 
 func checkAPIVersionComments(pkgPath string) (result, error) {
diff --git a/plugin/checker/check_api_test.go b/plugin/checker/check_api_test.go
index c270399ab..89b9bd32c 100644
--- a/plugin/checker/check_api_test.go
+++ b/plugin/checker/check_api_test.go
@@ -17,24 +17,24 @@ func TestCheckAPIVersionComments(t *testing.T) {
 	}{
 		{
 			name:    "valid comments",
-			pkgPath: "github.com/mattermost/mattermost-server/v6/plugin/checker/internal/test/valid",
+			pkgPath: "github.com/cjdelisle/matterfoss-server/v6/plugin/checker/internal/test/valid",
 			err:     "",
 		},
 		{
 			name:    "invalid comments",
-			pkgPath: "github.com/mattermost/mattermost-server/v6/plugin/checker/internal/test/invalid",
+			pkgPath: "github.com/cjdelisle/matterfoss-server/v6/plugin/checker/internal/test/invalid",
 			expected: result{
 				Errors: []string{"internal/test/invalid/invalid.go:15:2: missing a minimum server version comment on method InvalidMethod"},
 			},
 		},
 		{
 			name:    "missing API interface",
-			pkgPath: "github.com/mattermost/mattermost-server/v6/plugin/checker/internal/test/missing",
+			pkgPath: "github.com/cjdelisle/matterfoss-server/v6/plugin/checker/internal/test/missing",
 			err:     "could not find API interface",
 		},
 		{
 			name:    "non-existent package path",
-			pkgPath: "github.com/mattermost/mattermost-server/v6/plugin/checker/internal/test/does_not_exist",
+			pkgPath: "github.com/cjdelisle/matterfoss-server/v6/plugin/checker/internal/test/does_not_exist",
 			err:     "could not find API interface",
 		},
 	}
diff --git a/plugin/checker/main.go b/plugin/checker/main.go
index 87c1f6b41..3944f6cd3 100644
--- a/plugin/checker/main.go
+++ b/plugin/checker/main.go
@@ -10,7 +10,7 @@ import (
 	"strings"
 )
 
-const pluginPackagePath = "github.com/mattermost/mattermost-server/v6/plugin"
+const pluginPackagePath = "github.com/cjdelisle/matterfoss-server/v6/plugin"
 
 type result struct {
 	Warnings []string
diff --git a/plugin/client_rpc.go b/plugin/client_rpc.go
index e8115d70e..52befef96 100644
--- a/plugin/client_rpc.go
+++ b/plugin/client_rpc.go
@@ -26,8 +26,8 @@ import (
 	"github.com/hashicorp/go-plugin"
 	"github.com/lib/pq"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
 )
 
 var hookNameToId map[string]int = make(map[string]int)
diff --git a/plugin/client_rpc_generated.go b/plugin/client_rpc_generated.go
index 72b3838b1..9ccd60a42 100644
--- a/plugin/client_rpc_generated.go
+++ b/plugin/client_rpc_generated.go
@@ -10,8 +10,8 @@ import (
 	"fmt"
 	"log"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
 )
 
 func init() {
diff --git a/plugin/doc.go b/plugin/doc.go
index b6806365b..883bdd4a7 100644
--- a/plugin/doc.go
+++ b/plugin/doc.go
@@ -1,8 +1,8 @@
 // Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.
 // See LICENSE.txt for license information.
 
-// The plugin package is used by Mattermost server plugins written in go. It also enables the
-// Mattermost server to manage and interact with the running plugin environment.
+// The plugin package is used by Matterfoss server plugins written in go. It also enables the
+// Matterfoss server to manage and interact with the running plugin environment.
 //
 // Note that this package exports a large number of types prefixed with Z_. These are public only
 // to allow their use with Hashicorp's go-plugin (and net/rpc). Do not use these directly.
diff --git a/plugin/environment.go b/plugin/environment.go
index 70c738733..ebd1b46d0 100644
--- a/plugin/environment.go
+++ b/plugin/environment.go
@@ -14,10 +14,10 @@ import (
 
 	"github.com/pkg/errors"
 
-	"github.com/mattermost/mattermost-server/v6/einterfaces"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
-	"github.com/mattermost/mattermost-server/v6/utils"
+	"github.com/cjdelisle/matterfoss-server/v6/einterfaces"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/utils"
 )
 
 var ErrNotFound = errors.New("Item not found")
diff --git a/plugin/environment_test.go b/plugin/environment_test.go
index 827b82242..18b060728 100644
--- a/plugin/environment_test.go
+++ b/plugin/environment_test.go
@@ -12,7 +12,7 @@ import (
 
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 func TestAvailablePlugins(t *testing.T) {
diff --git a/plugin/example_hello_world_test.go b/plugin/example_hello_world_test.go
index 59ed5a01c..8efb9bbc3 100644
--- a/plugin/example_hello_world_test.go
+++ b/plugin/example_hello_world_test.go
@@ -7,7 +7,7 @@ import (
 	"fmt"
 	"net/http"
 
-	"github.com/mattermost/mattermost-server/v6/plugin"
+	"github.com/cjdelisle/matterfoss-server/v6/plugin"
 )
 
 // HelloWorldPlugin implements the interface expected by the Mattermost server to communicate
diff --git a/plugin/example_help_test.go b/plugin/example_help_test.go
index cd18e1ceb..898fff6a6 100644
--- a/plugin/example_help_test.go
+++ b/plugin/example_help_test.go
@@ -9,8 +9,8 @@ import (
 
 	"github.com/pkg/errors"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/plugin"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/plugin"
 )
 
 // configuration represents the configuration for this plugin as exposed via the Mattermost
diff --git a/plugin/hclog_adapter.go b/plugin/hclog_adapter.go
index 4142298f4..236a49dc5 100644
--- a/plugin/hclog_adapter.go
+++ b/plugin/hclog_adapter.go
@@ -11,7 +11,7 @@ import (
 
 	"github.com/hashicorp/go-hclog"
 
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
 )
 
 type hclogAdapter struct {
diff --git a/plugin/health_check.go b/plugin/health_check.go
index 97491cac9..b85e66f1b 100644
--- a/plugin/health_check.go
+++ b/plugin/health_check.go
@@ -7,8 +7,8 @@ import (
 	"sync"
 	"time"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
 )
 
 const (
diff --git a/plugin/health_check_test.go b/plugin/health_check_test.go
index 1854af0a9..c08a64fed 100644
--- a/plugin/health_check_test.go
+++ b/plugin/health_check_test.go
@@ -12,9 +12,9 @@ import (
 
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
-	"github.com/mattermost/mattermost-server/v6/utils"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/utils"
 )
 
 func TestPluginHealthCheck(t *testing.T) {
@@ -36,7 +36,7 @@ func testPluginHealthCheckSuccess(t *testing.T) {
 		package main
 
 		import (
-			"github.com/mattermost/mattermost-server/v6/plugin"
+			"github.com/cjdelisle/matterfoss-server/v6/plugin"
 		)
 
 		type MyPlugin struct {
@@ -74,8 +74,8 @@ func testPluginHealthCheckPanic(t *testing.T) {
 		package main
 
 		import (
-			"github.com/mattermost/mattermost-server/v6/model"
-			"github.com/mattermost/mattermost-server/v6/plugin"
+			"github.com/cjdelisle/matterfoss-server/v6/model"
+			"github.com/cjdelisle/matterfoss-server/v6/plugin"
 		)
 
 		type MyPlugin struct {
diff --git a/plugin/hooks.go b/plugin/hooks.go
index 266e3fba9..799556fcf 100644
--- a/plugin/hooks.go
+++ b/plugin/hooks.go
@@ -7,7 +7,7 @@ import (
 	"io"
 	"net/http"
 
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 // These assignments are part of the wire protocol used to trigger hook events in plugins.
diff --git a/plugin/hooks_timer_layer_generated.go b/plugin/hooks_timer_layer_generated.go
index 527862e8f..a0eeca426 100644
--- a/plugin/hooks_timer_layer_generated.go
+++ b/plugin/hooks_timer_layer_generated.go
@@ -11,8 +11,8 @@ import (
 	"net/http"
 	timePkg "time"
 
-	"github.com/mattermost/mattermost-server/v6/einterfaces"
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/einterfaces"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 type hooksTimerLayer struct {
diff --git a/plugin/http.go b/plugin/http.go
index a1e674a08..5dbddd73f 100644
--- a/plugin/http.go
+++ b/plugin/http.go
@@ -12,7 +12,7 @@ import (
 	"net/http"
 	"net/rpc"
 
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
 )
 
 type hijackedResponse struct {
diff --git a/plugin/interface_generator/main.go b/plugin/interface_generator/main.go
index a6217d20b..a88fd9920 100644
--- a/plugin/interface_generator/main.go
+++ b/plugin/interface_generator/main.go
@@ -373,8 +373,8 @@ import (
 	"net/http"
 	timePkg "time"
 
-	"github.com/mattermost/mattermost-server/v6/einterfaces"
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/einterfaces"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 type apiTimerLayer struct {
@@ -415,8 +415,8 @@ import (
 	"net/http"
 	timePkg "time"
 
-	"github.com/mattermost/mattermost-server/v6/einterfaces"
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/einterfaces"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 type hooksTimerLayer struct {
@@ -563,7 +563,7 @@ func generatePluginTimerLayer(info *PluginInterfaceInfo) {
 }
 
 func getPluginPackageDir() string {
-	dirs, err := goList("github.com/mattermost/mattermost-server/v6/plugin")
+	dirs, err := goList("github.com/cjdelisle/matterfoss-server/v6/plugin")
 	if err != nil {
 		panic(err)
 	} else if len(dirs) != 1 {
diff --git a/plugin/plugintest/api.go b/plugin/plugintest/api.go
index d32b8a063..954ff72b7 100644
--- a/plugin/plugintest/api.go
+++ b/plugin/plugintest/api.go
@@ -10,7 +10,7 @@ import (
 
 	mock "github.com/stretchr/testify/mock"
 
-	model "github.com/mattermost/mattermost-server/v6/model"
+	model "github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 // API is an autogenerated mock type for the API type
diff --git a/plugin/plugintest/doc.go b/plugin/plugintest/doc.go
index b20f1a92c..eeb03bee4 100644
--- a/plugin/plugintest/doc.go
+++ b/plugin/plugintest/doc.go
@@ -7,5 +7,5 @@
 // https://godoc.org/github.com/stretchr/testify/mock
 //
 // If you need to import the mock package, you can import it with
-// "github.com/mattermost/mattermost-server/v6/plugin/plugintest/mock".
+// "github.com/cjdelisle/matterfoss-server/v6/plugin/plugintest/mock".
 package plugintest
diff --git a/plugin/plugintest/driver.go b/plugin/plugintest/driver.go
index 805470821..6a6b78454 100644
--- a/plugin/plugintest/driver.go
+++ b/plugin/plugintest/driver.go
@@ -9,7 +9,7 @@ import (
 
 	mock "github.com/stretchr/testify/mock"
 
-	plugin "github.com/mattermost/mattermost-server/v6/plugin"
+	plugin "github.com/cjdelisle/matterfoss-server/v6/plugin"
 )
 
 // Driver is an autogenerated mock type for the Driver type
diff --git a/plugin/plugintest/example_hello_user_test.go b/plugin/plugintest/example_hello_user_test.go
index 36b57f65b..b574f9661 100644
--- a/plugin/plugintest/example_hello_user_test.go
+++ b/plugin/plugintest/example_hello_user_test.go
@@ -13,9 +13,9 @@ import (
 	"github.com/stretchr/testify/assert"
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/plugin"
-	"github.com/mattermost/mattermost-server/v6/plugin/plugintest"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/plugin"
+	"github.com/cjdelisle/matterfoss-server/v6/plugin/plugintest"
 )
 
 type HelloUserPlugin struct {
diff --git a/plugin/plugintest/hooks.go b/plugin/plugintest/hooks.go
index 3dcbea85b..cce52ba95 100644
--- a/plugin/plugintest/hooks.go
+++ b/plugin/plugintest/hooks.go
@@ -10,9 +10,9 @@ import (
 
 	mock "github.com/stretchr/testify/mock"
 
-	model "github.com/mattermost/mattermost-server/v6/model"
+	model "github.com/cjdelisle/matterfoss-server/v6/model"
 
-	plugin "github.com/mattermost/mattermost-server/v6/plugin"
+	plugin "github.com/cjdelisle/matterfoss-server/v6/plugin"
 )
 
 // Hooks is an autogenerated mock type for the Hooks type
diff --git a/plugin/scheduler/scheduler.go b/plugin/scheduler/scheduler.go
index 85589fd60..decd4495e 100644
--- a/plugin/scheduler/scheduler.go
+++ b/plugin/scheduler/scheduler.go
@@ -6,8 +6,8 @@ package scheduler
 import (
 	"time"
 
-	"github.com/mattermost/mattermost-server/v6/jobs"
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/jobs"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 const schedFreq = 24 * time.Hour
diff --git a/plugin/scheduler/worker.go b/plugin/scheduler/worker.go
index cd141a4e1..00c8867a9 100644
--- a/plugin/scheduler/worker.go
+++ b/plugin/scheduler/worker.go
@@ -4,9 +4,9 @@
 package scheduler
 
 import (
-	"github.com/mattermost/mattermost-server/v6/jobs"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/jobs"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
 )
 
 type AppIface interface {
diff --git a/plugin/supervisor.go b/plugin/supervisor.go
index 49dc70bc5..ad74e1396 100644
--- a/plugin/supervisor.go
+++ b/plugin/supervisor.go
@@ -14,9 +14,9 @@ import (
 
 	plugin "github.com/hashicorp/go-plugin"
 
-	"github.com/mattermost/mattermost-server/v6/einterfaces"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/einterfaces"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
 )
 
 type supervisor struct {
diff --git a/plugin/supervisor_test.go b/plugin/supervisor_test.go
index 81b8d6a91..692a2baae 100644
--- a/plugin/supervisor_test.go
+++ b/plugin/supervisor_test.go
@@ -12,9 +12,9 @@ import (
 	"github.com/stretchr/testify/assert"
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
-	"github.com/mattermost/mattermost-server/v6/utils"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/utils"
 )
 
 func TestSupervisor(t *testing.T) {
diff --git a/scripts/config_generator/main.go b/scripts/config_generator/main.go
index b7641cbbf..84abaaaa2 100644
--- a/scripts/config_generator/main.go
+++ b/scripts/config_generator/main.go
@@ -8,7 +8,7 @@ import (
 	"fmt"
 	"os"
 
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 // generateDefaultConfig writes default config to outputFile.
diff --git a/scripts/config_generator/main_test.go b/scripts/config_generator/main_test.go
index e0afc34d0..9e7458cdc 100644
--- a/scripts/config_generator/main_test.go
+++ b/scripts/config_generator/main_test.go
@@ -9,7 +9,7 @@ import (
 	"os"
 	"testing"
 
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 
 	"github.com/stretchr/testify/require"
 )
diff --git a/scripts/diff-config.sh b/scripts/diff-config.sh
index acba19a02..2fb6f5055 100755
--- a/scripts/diff-config.sh
+++ b/scripts/diff-config.sh
@@ -16,8 +16,8 @@ fi
 
 # Returns the config file for a specific release
 fetch_config() {
-  local url="https://releases.mattermost.com/$1/mattermost-$1-linux-amd64.tar.gz"
-  curl -sf "$url" | tar -xzOf - mattermost/config/config.json | jq -S .
+  local url="https://releases.matterfoss.com/$1/matterfoss-$1-linux-amd64.tar.gz"
+  curl -sf "$url" | tar -xzOf - matterfoss/config/config.json | jq -S .
 }
 
 echo Fetching config files
diff --git a/scripts/prereq-check-enterprise.sh b/scripts/prereq-check-enterprise.sh
index 167e61b53..c8898c0f7 100755
--- a/scripts/prereq-check-enterprise.sh
+++ b/scripts/prereq-check-enterprise.sh
@@ -3,7 +3,7 @@
 check_prereq()
 {
     local dependency=$1
-    type "$dependency" >/dev/null 2>&1 || { echo >&2 "Mattermost Enterprise requires '$dependency' but it doesn't appear to be installed.  Aborting."; exit 1; }
+    type "$dependency" >/dev/null 2>&1 || { echo >&2 "Matterfoss Enterprise requires '$dependency' but it doesn't appear to be installed.  Aborting."; exit 1; }
 }
 
 echo "Checking enterprise prerequisites"
diff --git a/scripts/prereq-check.sh b/scripts/prereq-check.sh
index 4851f778c..16feb1a1e 100755
--- a/scripts/prereq-check.sh
+++ b/scripts/prereq-check.sh
@@ -15,12 +15,12 @@ check_prereq()
 
     local dependency=$1 required_version=$2 installed_version=$3
 
-    type $dependency >/dev/null 2>&1 || { echo >&2 "Mattermost requires '$dependency' but it doesn't appear to be installed.  Aborting."; exit 1; }
+    type $dependency >/dev/null 2>&1 || { echo >&2 "Matterfoss requires '$dependency' but it doesn't appear to be installed.  Aborting."; exit 1; }
 
     if check_version $installed_version $required_version; then
         echo "$dependency minimum requirement met. Required: $required_version, Found: $installed_version"
     else
-        echo "WARNING! Mattermost did not find the minimum supported version of '$dependency' installed. Required: $required_version, Found: $installed_version"
+        echo "WARNING! Matterfoss did not find the minimum supported version of '$dependency' installed. Required: $required_version, Found: $installed_version"
         echo "We highly recommend stopping installation and updating dependencies before continuing"
         read -p "Enter Y to continue anyway (not recommended)." -n 1 -r
         echo
diff --git a/scripts/rename.sh b/scripts/rename.sh
new file mode 100644
index 000000000..102b682fd
--- /dev/null
+++ b/scripts/rename.sh
@@ -0,0 +1,87 @@
+#!/usr/bin/env bash
+
+# This script is designed to replace all instances of the word Mattermost with
+# Matterfoss. Mattermost is a trademark of Mattermost Inc. and this script was
+# designed with the intention of avoiding confusion between this Free Software
+# project and any commercial product provided Mattermost Inc.
+
+update_paths() {
+    OLDPATH="github.com/cjdelisle/matterfoss-server"
+    NEWPATH="github.com/cjdelisle/matterfoss-server"
+    REGEX="s@$OLDPATH@$NEWPATH@g"
+    find ./ -name '*.go' -exec sed -i -e $REGEX {} \;
+    find ./ -name '*.go.tmpl' -exec sed -i -e $REGEX {} \;
+    sed -i -e $REGEX ./go.mod
+    rm ./go.sum
+}
+
+change_cmd() {
+    find ./ -name '*.go' -exec sed -i -e "s@cmd/mattermost@cmd/matterfoss@g" {} \;
+    mv ./cmd/mattermost ./cmd/matterfoss
+}
+
+remove_files() {
+    rm -rf ./.circleci
+    rm -rf ./.github
+    rm -f CHANGELOG.md
+    rm -f docker-compose.makefile.yml
+    rm -f CONTRIBUTING.md
+    rm -f README.md
+    rm -f SECURITY.md
+    rm -f Makefile
+    rm -f config.mk
+    rm -f config/README.md
+    rm -f docker-compose.yaml
+    rm -rf ./build
+    rm -rf ./doc
+    rm -f ./go.tools.mod
+    rm -f ./go.tools.sum
+    rm -f ./*.yml
+    rm -f ./CODEOWNERS ## this seems to be a technical file, not a notice
+}
+
+change_go_files() {
+    find ./* -type f -name '*.go' -exec gawk -i inplace '{
+        if ($0 ~ "Mattermost") {
+            if ($0 ~ "All Rights Reserved") {
+                /* This is a copyright notice, leave it alone */
+            } else {
+                gsub(/Mattermost/, "Matterfoss");
+            }
+        }
+        gsub(/mattermost\.com/, "matterfoss.org");
+        gsub(/mattermost\.org/, "matterfoss.org");
+        if ($0 !~ "\"github.com/mattermost") {
+            /* We want to preserve golang dependencies */
+            gsub(/mattermost/, "matterfoss");
+        }
+        print;
+    }' {} \;
+}
+
+change_non_go_files() {
+    find ./* -type f -exec grep -Iq . {} \; -print | \
+        grep -v '\.go$' | \
+        grep -v '^./\(vendor\|LICENSE\|NOTICE\|go\.\)' | \
+        grep -v '.go.tmpl\|/rename.sh' | \
+    while read -r x; do
+        gawk -i inplace '{
+            gsub(/mattermost/, "matterfoss");
+            gsub(/Mattermost/, "Matterfoss");
+            print;
+        }' "$x";
+    done
+}
+
+rename_scripts() {
+    find ./ -type f -name '*mattermost*' | while read -r x; do
+        mv "$x" "${x//mattermost/matterfoss}"
+    done
+}
+
+update_paths
+change_cmd
+remove_files
+change_go_files
+change_non_go_files
+rename_scripts
diff --git a/services/awsmeter/awsmeter.go b/services/awsmeter/awsmeter.go
index b2e1d0ee1..b8a9a3674 100644
--- a/services/awsmeter/awsmeter.go
+++ b/services/awsmeter/awsmeter.go
@@ -17,9 +17,9 @@ import (
 	"github.com/aws/aws-sdk-go/service/marketplacemetering/marketplacemeteringiface"
 	"github.com/pkg/errors"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
-	"github.com/mattermost/mattermost-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
 )
 
 type AwsMeter struct {
diff --git a/services/awsmeter/awsmeter_test.go b/services/awsmeter/awsmeter_test.go
index 9e22e6eff..893c3715d 100644
--- a/services/awsmeter/awsmeter_test.go
+++ b/services/awsmeter/awsmeter_test.go
@@ -13,9 +13,9 @@ import (
 	"github.com/stretchr/testify/assert"
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/plugin/plugintest/mock"
-	"github.com/mattermost/mattermost-server/v6/store/storetest/mocks"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/plugin/plugintest/mock"
+	"github.com/cjdelisle/matterfoss-server/v6/store/storetest/mocks"
 )
 
 type mockMarketplaceMeteringClient struct {
diff --git a/services/cache/cache.go b/services/cache/cache.go
index 9c0ef08e2..0eaf406aa 100644
--- a/services/cache/cache.go
+++ b/services/cache/cache.go
@@ -7,7 +7,7 @@ import (
 	"errors"
 	"time"
 
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 // ErrKeyNotFound is the error when the given key is not found
diff --git a/services/cache/lru.go b/services/cache/lru.go
index dcb43589c..b03c6033d 100644
--- a/services/cache/lru.go
+++ b/services/cache/lru.go
@@ -11,7 +11,7 @@ import (
 	"github.com/tinylib/msgp/msgp"
 	"github.com/vmihailenco/msgpack/v5"
 
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 // LRU is a thread-safe fixed size LRU cache.
diff --git a/services/cache/lru_striped.go b/services/cache/lru_striped.go
index f8bae110b..495b8550e 100644
--- a/services/cache/lru_striped.go
+++ b/services/cache/lru_striped.go
@@ -10,7 +10,7 @@ import (
 
 	"github.com/cespare/xxhash/v2"
 
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 // LRUStriped keeps LRU caches in buckets in order to lower mutex contention.
diff --git a/services/cache/lru_striped_bench_test.go b/services/cache/lru_striped_bench_test.go
index 1126f4835..34f6f4c73 100644
--- a/services/cache/lru_striped_bench_test.go
+++ b/services/cache/lru_striped_bench_test.go
@@ -11,7 +11,7 @@ import (
 
 	"github.com/cespare/xxhash/v2"
 
-	"github.com/mattermost/mattermost-server/v6/services/cache"
+	"github.com/cjdelisle/matterfoss-server/v6/services/cache"
 )
 
 const (
diff --git a/services/cache/lru_striped_test.go b/services/cache/lru_striped_test.go
index fe541c5b5..bc13fef43 100644
--- a/services/cache/lru_striped_test.go
+++ b/services/cache/lru_striped_test.go
@@ -12,7 +12,7 @@ import (
 	"github.com/stretchr/testify/assert"
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 func makeLRUPredictableTestData(num int) [][2]string {
diff --git a/services/cache/lru_test.go b/services/cache/lru_test.go
index ed7b3d87c..0578472dd 100644
--- a/services/cache/lru_test.go
+++ b/services/cache/lru_test.go
@@ -12,7 +12,7 @@ import (
 	"github.com/stretchr/testify/assert"
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 func TestLRU(t *testing.T) {
diff --git a/services/cache/mocks/Provider.go b/services/cache/mocks/Provider.go
index 9eb614170..0b8bb28ab 100644
--- a/services/cache/mocks/Provider.go
+++ b/services/cache/mocks/Provider.go
@@ -5,7 +5,7 @@ package mocks
 import (
 	mock "github.com/stretchr/testify/mock"
 
-	cache "github.com/mattermost/mattermost-server/v6/services/cache"
+	cache "github.com/cjdelisle/matterfoss-server/v6/services/cache"
 )
 
 // Provider is an autogenerated mock type for the Provider type
diff --git a/services/cache/provider.go b/services/cache/provider.go
index a55dabf42..e68a8ee65 100644
--- a/services/cache/provider.go
+++ b/services/cache/provider.go
@@ -6,7 +6,7 @@ package cache
 import (
 	"time"
 
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 // CacheOptions contains options for initializing a cache
diff --git a/services/cache/provider_test.go b/services/cache/provider_test.go
index 096257563..a713dffd3 100644
--- a/services/cache/provider_test.go
+++ b/services/cache/provider_test.go
@@ -7,7 +7,7 @@ import (
 	"testing"
 	"time"
 
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 	"github.com/stretchr/testify/require"
 )
 
diff --git a/services/configservice/configservice.go b/services/configservice/configservice.go
index 6bf2fb420..d1a0ba92e 100644
--- a/services/configservice/configservice.go
+++ b/services/configservice/configservice.go
@@ -4,7 +4,7 @@
 package configservice
 
 import (
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 // An interface representing something that contains a Config, such as the app.App struct
diff --git a/services/docextractor/combine.go b/services/docextractor/combine.go
index c2874f4ae..4e07139c3 100644
--- a/services/docextractor/combine.go
+++ b/services/docextractor/combine.go
@@ -6,7 +6,7 @@ package docextractor
 import (
 	"io"
 
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
 )
 
 type combineExtractor struct {
diff --git a/services/docextractor/docextractor_test.go b/services/docextractor/docextractor_test.go
index 197d07e8a..6be85ff26 100644
--- a/services/docextractor/docextractor_test.go
+++ b/services/docextractor/docextractor_test.go
@@ -13,7 +13,7 @@ import (
 	"github.com/stretchr/testify/assert"
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/utils/testutils"
+	"github.com/cjdelisle/matterfoss-server/v6/utils/testutils"
 )
 
 func TestExtract(t *testing.T) {
diff --git a/services/docextractor/pdf_test.go b/services/docextractor/pdf_test.go
index 1ab7b4c6c..cacaa6997 100644
--- a/services/docextractor/pdf_test.go
+++ b/services/docextractor/pdf_test.go
@@ -7,7 +7,7 @@ import (
 	"bytes"
 	"testing"
 
-	"github.com/mattermost/mattermost-server/v6/utils/testutils"
+	"github.com/cjdelisle/matterfoss-server/v6/utils/testutils"
 	"github.com/stretchr/testify/require"
 )
 
diff --git a/services/httpservice/client.go b/services/httpservice/client.go
index 5cd08d2b1..87fbdab54 100644
--- a/services/httpservice/client.go
+++ b/services/httpservice/client.go
@@ -134,7 +134,7 @@ func dialContextFilter(dial DialContextFunction, allowHost func(host string) boo
 	}
 }
 
-func NewTransport(enableInsecureConnections bool, allowHost func(host string) bool, allowIP func(ip net.IP) bool) *MattermostTransport {
+func NewTransport(enableInsecureConnections bool, allowHost func(host string) bool, allowIP func(ip net.IP) bool) *MatterfossTransport {
 	dialContext := (&net.Dialer{
 		Timeout:   ConnectTimeout,
 		KeepAlive: 30 * time.Second,
@@ -144,7 +144,7 @@ func NewTransport(enableInsecureConnections bool, allowHost func(host string) bo
 		dialContext = dialContextFilter(dialContext, allowHost, allowIP)
 	}
 
-	return &MattermostTransport{
+	return &MatterfossTransport{
 		&http.Transport{
 			Proxy:                 http.ProxyFromEnvironment,
 			DialContext:           dialContext,
diff --git a/services/httpservice/client_test.go b/services/httpservice/client_test.go
index a57e5134a..90b5ea7d6 100644
--- a/services/httpservice/client_test.go
+++ b/services/httpservice/client_test.go
@@ -102,7 +102,7 @@ func TestHTTPClientWithProxy(t *testing.T) {
 
 	c := NewHTTPClient(NewTransport(true, nil, nil))
 	purl, _ := url.Parse(proxy.URL)
-	c.Transport.(*MattermostTransport).Transport.(*http.Transport).Proxy = http.ProxyURL(purl)
+	c.Transport.(*MatterfossTransport).Transport.(*http.Transport).Proxy = http.ProxyURL(purl)
 
 	resp, err := c.Get("http://acme.com")
 	require.NoError(t, err)
diff --git a/services/httpservice/httpservice.go b/services/httpservice/httpservice.go
index 88c51030f..ab826c4ca 100644
--- a/services/httpservice/httpservice.go
+++ b/services/httpservice/httpservice.go
@@ -10,7 +10,7 @@ import (
 	"time"
 	"unicode"
 
-	"github.com/mattermost/mattermost-server/v6/services/configservice"
+	"github.com/cjdelisle/matterfoss-server/v6/services/configservice"
 )
 
 // HTTPService wraps the functionality for making http requests to provide some improvements to the default client
@@ -25,7 +25,7 @@ type HTTPService interface {
 	// - A timeout for end-to-end requests
 	// - A Mattermost-specific user agent header
 	// - Additional security for untrusted and insecure connections
-	MakeTransport(trustURLs bool) *MattermostTransport
+	MakeTransport(trustURLs bool) *MatterfossTransport
 }
 
 type HTTPServiceImpl struct {
@@ -52,7 +52,7 @@ func (h *HTTPServiceImpl) MakeClient(trustURLs bool) *http.Client {
 	}
 }
 
-func (h *HTTPServiceImpl) MakeTransport(trustURLs bool) *MattermostTransport {
+func (h *HTTPServiceImpl) MakeTransport(trustURLs bool) *MatterfossTransport {
 	insecure := h.configService.Config().ServiceSettings.EnableInsecureOutgoingConnections != nil && *h.configService.Config().ServiceSettings.EnableInsecureOutgoingConnections
 
 	if trustURLs {
diff --git a/services/httpservice/transport.go b/services/httpservice/transport.go
index abbc6c8d7..b65f08ee2 100644
--- a/services/httpservice/transport.go
+++ b/services/httpservice/transport.go
@@ -7,14 +7,14 @@ import (
 	"net/http"
 )
 
-// MattermostTransport is an implementation of http.RoundTripper that ensures each request contains a custom user agent
-// string to indicate that the request is coming from a Mattermost instance.
-type MattermostTransport struct {
+// MatterfossTransport is an implementation of http.RoundTripper that ensures each request contains a custom user agent
+// string to indicate that the request is coming from a Matterfoss instance.
+type MatterfossTransport struct {
 	// Transport is the underlying http.RoundTripper that is actually used to make the request
 	Transport http.RoundTripper
 }
 
-func (t *MattermostTransport) RoundTrip(req *http.Request) (*http.Response, error) {
+func (t *MatterfossTransport) RoundTrip(req *http.Request) (*http.Response, error) {
 	req.Header.Set("User-Agent", defaultUserAgent)
 
 	return t.Transport.RoundTrip(req)
diff --git a/services/imageproxy/atmos_camo_test.go b/services/imageproxy/atmos_camo_test.go
index 114071b4e..4ac808afc 100644
--- a/services/imageproxy/atmos_camo_test.go
+++ b/services/imageproxy/atmos_camo_test.go
@@ -13,9 +13,9 @@ import (
 	"github.com/stretchr/testify/assert"
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/services/httpservice"
-	"github.com/mattermost/mattermost-server/v6/utils/testutils"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/services/httpservice"
+	"github.com/cjdelisle/matterfoss-server/v6/utils/testutils"
 )
 
 func makeTestAtmosCamoProxy() *ImageProxy {
diff --git a/services/imageproxy/imageproxy.go b/services/imageproxy/imageproxy.go
index d9c8e1c05..52dd60e55 100644
--- a/services/imageproxy/imageproxy.go
+++ b/services/imageproxy/imageproxy.go
@@ -11,10 +11,10 @@ import (
 	"strings"
 	"sync"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/services/configservice"
-	"github.com/mattermost/mattermost-server/v6/services/httpservice"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/services/configservice"
+	"github.com/cjdelisle/matterfoss-server/v6/services/httpservice"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
 )
 
 var ErrNotEnabled = Error{errors.New("imageproxy.ImageProxy: image proxy not enabled")}
diff --git a/services/imageproxy/local.go b/services/imageproxy/local.go
index afd4b0dec..c190f1403 100644
--- a/services/imageproxy/local.go
+++ b/services/imageproxy/local.go
@@ -20,7 +20,7 @@ import (
 	"strings"
 	"time"
 
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
 )
 
 var imageContentTypes = []string{
diff --git a/services/imageproxy/local_test.go b/services/imageproxy/local_test.go
index eca7960c7..86a41fad9 100644
--- a/services/imageproxy/local_test.go
+++ b/services/imageproxy/local_test.go
@@ -13,9 +13,9 @@ import (
 	"github.com/stretchr/testify/assert"
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/services/httpservice"
-	"github.com/mattermost/mattermost-server/v6/utils/testutils"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/services/httpservice"
+	"github.com/cjdelisle/matterfoss-server/v6/utils/testutils"
 )
 
 func makeTestLocalProxy() *ImageProxy {
diff --git a/services/marketplace/client.go b/services/marketplace/client.go
index 36c1b7f02..a3796ed0b 100644
--- a/services/marketplace/client.go
+++ b/services/marketplace/client.go
@@ -13,8 +13,8 @@ import (
 
 	"github.com/pkg/errors"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/services/httpservice"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/services/httpservice"
 )
 
 // Client is the programmatic interface to the marketplace server API.
diff --git a/services/marketplace/client_test.go b/services/marketplace/client_test.go
index 2c51f934a..0abeafc14 100644
--- a/services/marketplace/client_test.go
+++ b/services/marketplace/client_test.go
@@ -18,19 +18,19 @@ func TestBuildURL(t *testing.T) {
 		expected string
 	}{
 		"Base url with trailing slash and path with leading slash": {
-			base:     "https://api.integrations.mattermost.com/",
+			base:     "https://api.integrations.matterfoss.org/",
 			path:     "/api/v1/plugins",
-			expected: "https://api.integrations.mattermost.com/api/v1/plugins",
+			expected: "https://api.integrations.matterfoss.org/api/v1/plugins",
 		},
 		"Base url without trailing slash and path with leading slash": {
-			base:     "https://api.integrations.mattermost.com",
+			base:     "https://api.integrations.matterfoss.org",
 			path:     "/api/v1/plugins",
-			expected: "https://api.integrations.mattermost.com/api/v1/plugins",
+			expected: "https://api.integrations.matterfoss.org/api/v1/plugins",
 		},
 		"Base url without trailing slash and path without leading slash": {
-			base:     "https://api.integrations.mattermost.com",
+			base:     "https://api.integrations.matterfoss.org",
 			path:     "api/v1/plugins",
-			expected: "https://api.integrations.mattermost.com/api/v1/plugins",
+			expected: "https://api.integrations.matterfoss.org/api/v1/plugins",
 		},
 	}
 
diff --git a/services/remotecluster/invitation.go b/services/remotecluster/invitation.go
index 73cbeb4fa..3a0356ed8 100644
--- a/services/remotecluster/invitation.go
+++ b/services/remotecluster/invitation.go
@@ -8,7 +8,7 @@ import (
 	"errors"
 	"fmt"
 
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 // AcceptInvitation is called when accepting an invitation to connect with a remote cluster.
diff --git a/services/remotecluster/mocks_test.go b/services/remotecluster/mocks_test.go
index f23dade31..27b842fbb 100644
--- a/services/remotecluster/mocks_test.go
+++ b/services/remotecluster/mocks_test.go
@@ -6,12 +6,12 @@ package remotecluster
 import (
 	"context"
 
-	"github.com/mattermost/mattermost-server/v6/einterfaces"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/plugin/plugintest/mock"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
-	"github.com/mattermost/mattermost-server/v6/store"
-	"github.com/mattermost/mattermost-server/v6/store/storetest/mocks"
+	"github.com/cjdelisle/matterfoss-server/v6/einterfaces"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/plugin/plugintest/mock"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/store/storetest/mocks"
 )
 
 type mockServer struct {
diff --git a/services/remotecluster/ping.go b/services/remotecluster/ping.go
index 5bc6751dd..c04921d7b 100644
--- a/services/remotecluster/ping.go
+++ b/services/remotecluster/ping.go
@@ -8,8 +8,8 @@ import (
 	"fmt"
 	"time"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
 )
 
 // pingLoop periodically sends a ping to all remote clusters.
diff --git a/services/remotecluster/ping_test.go b/services/remotecluster/ping_test.go
index b786c785e..ec68c2e97 100644
--- a/services/remotecluster/ping_test.go
+++ b/services/remotecluster/ping_test.go
@@ -16,7 +16,7 @@ import (
 	"github.com/stretchr/testify/require"
 	"github.com/wiggin77/merror"
 
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 const (
diff --git a/services/remotecluster/recv.go b/services/remotecluster/recv.go
index 6c827afe5..85eb376f2 100644
--- a/services/remotecluster/recv.go
+++ b/services/remotecluster/recv.go
@@ -6,8 +6,8 @@ package remotecluster
 import (
 	"fmt"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
 )
 
 // ReceiveIncomingMsg is called by the Rest API layer, or websocket layer (future), when a Remote Cluster
diff --git a/services/remotecluster/send_test.go b/services/remotecluster/send_test.go
index e5b0ef746..d97e915bd 100644
--- a/services/remotecluster/send_test.go
+++ b/services/remotecluster/send_test.go
@@ -18,7 +18,7 @@ import (
 	"github.com/stretchr/testify/require"
 	"github.com/wiggin77/merror"
 
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 const (
diff --git a/services/remotecluster/sendfile.go b/services/remotecluster/sendfile.go
index d94434e2b..3f9d395c5 100644
--- a/services/remotecluster/sendfile.go
+++ b/services/remotecluster/sendfile.go
@@ -13,9 +13,9 @@ import (
 	"path"
 	"time"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/filestore"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/filestore"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
 )
 
 type SendFileResultFunc func(us *model.UploadSession, rc *model.RemoteCluster, resp *Response, err error)
diff --git a/services/remotecluster/sendmsg.go b/services/remotecluster/sendmsg.go
index 2b66cdcb6..9fb3bbe94 100644
--- a/services/remotecluster/sendmsg.go
+++ b/services/remotecluster/sendmsg.go
@@ -17,8 +17,8 @@ import (
 
 	"github.com/wiggin77/merror"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
 )
 
 type SendMsgResultFunc func(msg model.RemoteClusterMsg, rc *model.RemoteCluster, resp *Response, err error)
diff --git a/services/remotecluster/sendprofileImage.go b/services/remotecluster/sendprofileImage.go
index ff148a347..b2068fbe2 100644
--- a/services/remotecluster/sendprofileImage.go
+++ b/services/remotecluster/sendprofileImage.go
@@ -15,8 +15,8 @@ import (
 	"path"
 	"time"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
 )
 
 type SendProfileImageResultFunc func(userId string, rc *model.RemoteCluster, resp *Response, err error)
diff --git a/services/remotecluster/sendprofileImage_test.go b/services/remotecluster/sendprofileImage_test.go
index a2249fd58..80a96403d 100644
--- a/services/remotecluster/sendprofileImage_test.go
+++ b/services/remotecluster/sendprofileImage_test.go
@@ -19,7 +19,7 @@ import (
 	"github.com/stretchr/testify/assert"
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 const (
diff --git a/services/remotecluster/service.go b/services/remotecluster/service.go
index c96b8f7f7..3634dfe27 100644
--- a/services/remotecluster/service.go
+++ b/services/remotecluster/service.go
@@ -10,10 +10,10 @@ import (
 	"sync"
 	"time"
 
-	"github.com/mattermost/mattermost-server/v6/einterfaces"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
-	"github.com/mattermost/mattermost-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/einterfaces"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
 )
 
 const (
diff --git a/services/remotecluster/service_test.go b/services/remotecluster/service_test.go
index 1e9bbd5b6..e263603f5 100644
--- a/services/remotecluster/service_test.go
+++ b/services/remotecluster/service_test.go
@@ -10,7 +10,7 @@ import (
 	"github.com/stretchr/testify/assert"
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 func TestService_AddTopicListener(t *testing.T) {
diff --git a/services/searchengine/bleveengine/bleve.go b/services/searchengine/bleveengine/bleve.go
index 76bcb02d1..27dffadc8 100644
--- a/services/searchengine/bleveengine/bleve.go
+++ b/services/searchengine/bleveengine/bleve.go
@@ -17,8 +17,8 @@ import (
 	"github.com/blevesearch/bleve/v2/analysis/analyzer/standard"
 	"github.com/blevesearch/bleve/v2/mapping"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
 )
 
 const (
diff --git a/services/searchengine/bleveengine/bleve_test.go b/services/searchengine/bleveengine/bleve_test.go
index a0ed1e173..fd44d7f76 100644
--- a/services/searchengine/bleveengine/bleve_test.go
+++ b/services/searchengine/bleveengine/bleve_test.go
@@ -12,13 +12,13 @@ import (
 	"github.com/stretchr/testify/require"
 	"github.com/stretchr/testify/suite"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/services/searchengine"
-	"github.com/mattermost/mattermost-server/v6/store/searchlayer"
-	"github.com/mattermost/mattermost-server/v6/store/searchtest"
-	"github.com/mattermost/mattermost-server/v6/store/sqlstore"
-	"github.com/mattermost/mattermost-server/v6/store/storetest"
-	"github.com/mattermost/mattermost-server/v6/testlib"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/services/searchengine"
+	"github.com/cjdelisle/matterfoss-server/v6/store/searchlayer"
+	"github.com/cjdelisle/matterfoss-server/v6/store/searchtest"
+	"github.com/cjdelisle/matterfoss-server/v6/store/sqlstore"
+	"github.com/cjdelisle/matterfoss-server/v6/store/storetest"
+	"github.com/cjdelisle/matterfoss-server/v6/testlib"
 )
 
 type BleveEngineTestSuite struct {
diff --git a/services/searchengine/bleveengine/common.go b/services/searchengine/bleveengine/common.go
index 055b02abf..0834c279b 100644
--- a/services/searchengine/bleveengine/common.go
+++ b/services/searchengine/bleveengine/common.go
@@ -6,8 +6,8 @@ package bleveengine
 import (
 	"strings"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/services/searchengine"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/services/searchengine"
 )
 
 type BLVChannel struct {
diff --git a/services/searchengine/bleveengine/indexer/indexing_job.go b/services/searchengine/bleveengine/indexer/indexing_job.go
index db52e7eae..6c01f97b1 100644
--- a/services/searchengine/bleveengine/indexer/indexing_job.go
+++ b/services/searchengine/bleveengine/indexer/indexing_job.go
@@ -10,10 +10,10 @@ import (
 	"sync/atomic"
 	"time"
 
-	"github.com/mattermost/mattermost-server/v6/jobs"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/services/searchengine/bleveengine"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/jobs"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/services/searchengine/bleveengine"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
 )
 
 const (
diff --git a/services/searchengine/bleveengine/indexer/indexing_job_test.go b/services/searchengine/bleveengine/indexer/indexing_job_test.go
index 16de60201..5d17df62f 100644
--- a/services/searchengine/bleveengine/indexer/indexing_job_test.go
+++ b/services/searchengine/bleveengine/indexer/indexing_job_test.go
@@ -9,11 +9,11 @@ import (
 	"os"
 	"testing"
 
-	"github.com/mattermost/mattermost-server/v6/jobs"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/services/searchengine/bleveengine"
-	"github.com/mattermost/mattermost-server/v6/store/storetest"
-	"github.com/mattermost/mattermost-server/v6/utils/testutils"
+	"github.com/cjdelisle/matterfoss-server/v6/jobs"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/services/searchengine/bleveengine"
+	"github.com/cjdelisle/matterfoss-server/v6/store/storetest"
+	"github.com/cjdelisle/matterfoss-server/v6/utils/testutils"
 	"github.com/stretchr/testify/require"
 )
 
diff --git a/services/searchengine/bleveengine/search.go b/services/searchengine/bleveengine/search.go
index 21fd45b0c..de5848244 100644
--- a/services/searchengine/bleveengine/search.go
+++ b/services/searchengine/bleveengine/search.go
@@ -10,8 +10,8 @@ import (
 	"github.com/blevesearch/bleve/v2"
 	"github.com/blevesearch/bleve/v2/search/query"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
 )
 
 const DeletePostsBatchSize = 500
diff --git a/services/searchengine/bleveengine/testlib.go b/services/searchengine/bleveengine/testlib.go
index 5c03856bb..bc22e7550 100644
--- a/services/searchengine/bleveengine/testlib.go
+++ b/services/searchengine/bleveengine/testlib.go
@@ -6,7 +6,7 @@ package bleveengine
 import (
 	"fmt"
 
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 func createPost(userId string, channelId string) *model.Post {
diff --git a/services/searchengine/interface.go b/services/searchengine/interface.go
index b7c4a5f24..b500e28b6 100644
--- a/services/searchengine/interface.go
+++ b/services/searchengine/interface.go
@@ -6,7 +6,7 @@ package searchengine
 import (
 	"time"
 
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 type SearchEngineInterface interface {
diff --git a/services/searchengine/mocks/SearchEngineInterface.go b/services/searchengine/mocks/SearchEngineInterface.go
index 9d143de20..75cc52004 100644
--- a/services/searchengine/mocks/SearchEngineInterface.go
+++ b/services/searchengine/mocks/SearchEngineInterface.go
@@ -5,7 +5,7 @@
 package mocks
 
 import (
-	model "github.com/mattermost/mattermost-server/v6/model"
+	model "github.com/cjdelisle/matterfoss-server/v6/model"
 	mock "github.com/stretchr/testify/mock"
 
 	time "time"
diff --git a/services/searchengine/searchengine.go b/services/searchengine/searchengine.go
index 55948e98e..cc205ba71 100644
--- a/services/searchengine/searchengine.go
+++ b/services/searchengine/searchengine.go
@@ -4,7 +4,7 @@
 package searchengine
 
 import (
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 func NewBroker(cfg *model.Config) *Broker {
diff --git a/services/searchengine/utils.go b/services/searchengine/utils.go
index dd872046d..139bbf83d 100644
--- a/services/searchengine/utils.go
+++ b/services/searchengine/utils.go
@@ -7,7 +7,7 @@ import (
 	"regexp"
 	"strings"
 
-	"github.com/mattermost/mattermost-server/v6/utils"
+	"github.com/cjdelisle/matterfoss-server/v6/utils"
 )
 
 var EmailRegex = regexp.MustCompile(`^[^\s"]+@[^\s"]+$`)
diff --git a/services/sharedchannel/attachment.go b/services/sharedchannel/attachment.go
index aec5d311f..d17861235 100644
--- a/services/sharedchannel/attachment.go
+++ b/services/sharedchannel/attachment.go
@@ -10,9 +10,9 @@ import (
 	"fmt"
 	"sync"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/services/remotecluster"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/services/remotecluster"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
 )
 
 // postsToAttachments returns the file attachments for a slice of posts that need to be synchronized.
diff --git a/services/sharedchannel/channelinvite.go b/services/sharedchannel/channelinvite.go
index 0ac7e0df6..2c0280376 100644
--- a/services/sharedchannel/channelinvite.go
+++ b/services/sharedchannel/channelinvite.go
@@ -9,10 +9,10 @@ import (
 	"fmt"
 	"strings"
 
-	"github.com/mattermost/mattermost-server/v6/app/request"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/services/remotecluster"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/app/request"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/services/remotecluster"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
 )
 
 // channelInviteMsg represents an invitation for a remote cluster to start sharing a channel.
diff --git a/services/sharedchannel/channelinvite_test.go b/services/sharedchannel/channelinvite_test.go
index d1ee9978a..d2e1f7fb3 100644
--- a/services/sharedchannel/channelinvite_test.go
+++ b/services/sharedchannel/channelinvite_test.go
@@ -13,10 +13,10 @@ import (
 	"github.com/stretchr/testify/assert"
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/plugin/plugintest/mock"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
-	"github.com/mattermost/mattermost-server/v6/store/storetest/mocks"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/plugin/plugintest/mock"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/store/storetest/mocks"
 )
 
 type mockLogger struct {
diff --git a/services/sharedchannel/mock_AppIface_test.go b/services/sharedchannel/mock_AppIface_test.go
index 94d6dac2e..c76967c81 100644
--- a/services/sharedchannel/mock_AppIface_test.go
+++ b/services/sharedchannel/mock_AppIface_test.go
@@ -5,12 +5,12 @@
 package sharedchannel
 
 import (
-	filestore "github.com/mattermost/mattermost-server/v6/shared/filestore"
+	filestore "github.com/cjdelisle/matterfoss-server/v6/shared/filestore"
 	mock "github.com/stretchr/testify/mock"
 
-	model "github.com/mattermost/mattermost-server/v6/model"
+	model "github.com/cjdelisle/matterfoss-server/v6/model"
 
-	request "github.com/mattermost/mattermost-server/v6/app/request"
+	request "github.com/cjdelisle/matterfoss-server/v6/app/request"
 )
 
 // MockAppIface is an autogenerated mock type for the AppIface type
diff --git a/services/sharedchannel/mock_ServerIface_test.go b/services/sharedchannel/mock_ServerIface_test.go
index 891268d2a..154720785 100644
--- a/services/sharedchannel/mock_ServerIface_test.go
+++ b/services/sharedchannel/mock_ServerIface_test.go
@@ -5,14 +5,14 @@
 package sharedchannel
 
 import (
-	mlog "github.com/mattermost/mattermost-server/v6/shared/mlog"
+	mlog "github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
 	mock "github.com/stretchr/testify/mock"
 
-	model "github.com/mattermost/mattermost-server/v6/model"
+	model "github.com/cjdelisle/matterfoss-server/v6/model"
 
-	remotecluster "github.com/mattermost/mattermost-server/v6/services/remotecluster"
+	remotecluster "github.com/cjdelisle/matterfoss-server/v6/services/remotecluster"
 
-	store "github.com/mattermost/mattermost-server/v6/store"
+	store "github.com/cjdelisle/matterfoss-server/v6/store"
 )
 
 // MockServerIface is an autogenerated mock type for the ServerIface type
diff --git a/services/sharedchannel/msg.go b/services/sharedchannel/msg.go
index 90d76d2c7..2eb16a7b1 100644
--- a/services/sharedchannel/msg.go
+++ b/services/sharedchannel/msg.go
@@ -6,7 +6,7 @@ package sharedchannel
 import (
 	"encoding/json"
 
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 // syncMsg represents a change in content (post add/edit/delete, reaction add/remove, users).
diff --git a/services/sharedchannel/permalink.go b/services/sharedchannel/permalink.go
index 2a0a13dba..fddced5a9 100644
--- a/services/sharedchannel/permalink.go
+++ b/services/sharedchannel/permalink.go
@@ -9,9 +9,9 @@ import (
 	"regexp"
 	"strings"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/i18n"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/i18n"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
 )
 
 var (
diff --git a/services/sharedchannel/permalink_test.go b/services/sharedchannel/permalink_test.go
index d8640f7a9..1f995d772 100644
--- a/services/sharedchannel/permalink_test.go
+++ b/services/sharedchannel/permalink_test.go
@@ -10,10 +10,10 @@ import (
 
 	"github.com/stretchr/testify/assert"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/plugin/plugintest/mock"
-	"github.com/mattermost/mattermost-server/v6/store/storetest/mocks"
-	"github.com/mattermost/mattermost-server/v6/utils"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/plugin/plugintest/mock"
+	"github.com/cjdelisle/matterfoss-server/v6/store/storetest/mocks"
+	"github.com/cjdelisle/matterfoss-server/v6/utils"
 )
 
 func TestProcessPermalinkToRemote(t *testing.T) {
diff --git a/services/sharedchannel/service.go b/services/sharedchannel/service.go
index a24bd18f8..53b5a031d 100644
--- a/services/sharedchannel/service.go
+++ b/services/sharedchannel/service.go
@@ -10,12 +10,12 @@ import (
 	"sync"
 	"time"
 
-	"github.com/mattermost/mattermost-server/v6/app/request"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/services/remotecluster"
-	"github.com/mattermost/mattermost-server/v6/shared/filestore"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
-	"github.com/mattermost/mattermost-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/app/request"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/services/remotecluster"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/filestore"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
 )
 
 const (
diff --git a/services/sharedchannel/sync_recv.go b/services/sharedchannel/sync_recv.go
index f8618f3dd..64f2f0334 100644
--- a/services/sharedchannel/sync_recv.go
+++ b/services/sharedchannel/sync_recv.go
@@ -11,10 +11,10 @@ import (
 	"strconv"
 	"strings"
 
-	"github.com/mattermost/mattermost-server/v6/app/request"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/services/remotecluster"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/app/request"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/services/remotecluster"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
 )
 
 func (scs *Service) onReceiveSyncMessage(msg model.RemoteClusterMsg, rc *model.RemoteCluster, response *remotecluster.Response) error {
diff --git a/services/sharedchannel/sync_send.go b/services/sharedchannel/sync_send.go
index ff12daeb8..91ac20b03 100644
--- a/services/sharedchannel/sync_send.go
+++ b/services/sharedchannel/sync_send.go
@@ -8,10 +8,10 @@ import (
 	"fmt"
 	"time"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/services/remotecluster"
-	"github.com/mattermost/mattermost-server/v6/shared/i18n"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/services/remotecluster"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/i18n"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
 )
 
 type syncTask struct {
diff --git a/services/sharedchannel/sync_send_remote.go b/services/sharedchannel/sync_send_remote.go
index 0db2250da..9a242fec9 100644
--- a/services/sharedchannel/sync_send_remote.go
+++ b/services/sharedchannel/sync_send_remote.go
@@ -11,9 +11,9 @@ import (
 
 	"github.com/wiggin77/merror"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/services/remotecluster"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/services/remotecluster"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
 )
 
 type sendSyncMsgResultFunc func(syncResp SyncResponse, err error)
diff --git a/services/sharedchannel/util.go b/services/sharedchannel/util.go
index b8c0b124a..3a009f96b 100644
--- a/services/sharedchannel/util.go
+++ b/services/sharedchannel/util.go
@@ -7,7 +7,7 @@ import (
 	"fmt"
 	"strings"
 
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 // fixMention replaces any mentions in a post for the user with the user's real username.
diff --git a/services/slackimport/converters.go b/services/slackimport/converters.go
index 2dcb5232b..0111ae475 100644
--- a/services/slackimport/converters.go
+++ b/services/slackimport/converters.go
@@ -8,7 +8,7 @@ import (
 	"strconv"
 	"strings"
 
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
 )
 
 func slackConvertTimeStamp(ts string) int64 {
diff --git a/services/slackimport/parsers.go b/services/slackimport/parsers.go
index f3eab0ab1..66b91d35b 100644
--- a/services/slackimport/parsers.go
+++ b/services/slackimport/parsers.go
@@ -7,8 +7,8 @@ import (
 	"encoding/json"
 	"io"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
 )
 
 func slackParseChannels(data io.Reader, channelType model.ChannelType) ([]slackChannel, error) {
diff --git a/services/slackimport/slackimport.go b/services/slackimport/slackimport.go
index f9bd9784f..bfd4506d2 100644
--- a/services/slackimport/slackimport.go
+++ b/services/slackimport/slackimport.go
@@ -17,11 +17,11 @@ import (
 	"time"
 	"unicode/utf8"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/i18n"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
-	"github.com/mattermost/mattermost-server/v6/store"
-	"github.com/mattermost/mattermost-server/v6/utils"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/i18n"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/utils"
 )
 
 type slackChannel struct {
diff --git a/services/slackimport/slackimport_test.go b/services/slackimport/slackimport_test.go
index c48e4d47a..3680745f8 100644
--- a/services/slackimport/slackimport_test.go
+++ b/services/slackimport/slackimport_test.go
@@ -11,8 +11,8 @@ import (
 	"github.com/stretchr/testify/assert"
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/store/storetest/mocks"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/store/storetest/mocks"
 )
 
 func TestSlackConvertTimeStamp(t *testing.T) {
diff --git a/services/telemetry/mocks/ServerIface.go b/services/telemetry/mocks/ServerIface.go
index 9d7063894..ef0f719db 100644
--- a/services/telemetry/mocks/ServerIface.go
+++ b/services/telemetry/mocks/ServerIface.go
@@ -7,12 +7,12 @@ package mocks
 import (
 	context "context"
 
-	httpservice "github.com/mattermost/mattermost-server/v6/services/httpservice"
+	httpservice "github.com/cjdelisle/matterfoss-server/v6/services/httpservice"
 	mock "github.com/stretchr/testify/mock"
 
-	model "github.com/mattermost/mattermost-server/v6/model"
+	model "github.com/cjdelisle/matterfoss-server/v6/model"
 
-	plugin "github.com/mattermost/mattermost-server/v6/plugin"
+	plugin "github.com/cjdelisle/matterfoss-server/v6/plugin"
 )
 
 // ServerIface is an autogenerated mock type for the ServerIface type
diff --git a/services/telemetry/telemetry.go b/services/telemetry/telemetry.go
index d2090d4c5..edd0cad02 100644
--- a/services/telemetry/telemetry.go
+++ b/services/telemetry/telemetry.go
@@ -13,14 +13,14 @@ import (
 
 	rudder "github.com/rudderlabs/analytics-go"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/plugin"
-	"github.com/mattermost/mattermost-server/v6/services/httpservice"
-	"github.com/mattermost/mattermost-server/v6/services/marketplace"
-	"github.com/mattermost/mattermost-server/v6/services/searchengine"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
-	"github.com/mattermost/mattermost-server/v6/store"
-	"github.com/mattermost/mattermost-server/v6/utils"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/plugin"
+	"github.com/cjdelisle/matterfoss-server/v6/services/httpservice"
+	"github.com/cjdelisle/matterfoss-server/v6/services/marketplace"
+	"github.com/cjdelisle/matterfoss-server/v6/services/searchengine"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/utils"
 )
 
 const (
diff --git a/services/telemetry/telemetry_test.go b/services/telemetry/telemetry_test.go
index 11adbcd95..73e5e23ca 100644
--- a/services/telemetry/telemetry_test.go
+++ b/services/telemetry/telemetry_test.go
@@ -20,15 +20,15 @@ import (
 	"github.com/stretchr/testify/mock"
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/config"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/plugin"
-	"github.com/mattermost/mattermost-server/v6/plugin/plugintest"
-	"github.com/mattermost/mattermost-server/v6/services/httpservice"
-	"github.com/mattermost/mattermost-server/v6/services/searchengine"
-	"github.com/mattermost/mattermost-server/v6/services/telemetry/mocks"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
-	storeMocks "github.com/mattermost/mattermost-server/v6/store/storetest/mocks"
+	"github.com/cjdelisle/matterfoss-server/v6/config"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/plugin"
+	"github.com/cjdelisle/matterfoss-server/v6/plugin/plugintest"
+	"github.com/cjdelisle/matterfoss-server/v6/services/httpservice"
+	"github.com/cjdelisle/matterfoss-server/v6/services/searchengine"
+	"github.com/cjdelisle/matterfoss-server/v6/services/telemetry/mocks"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
+	storeMocks "github.com/cjdelisle/matterfoss-server/v6/store/storetest/mocks"
 )
 
 type FakeConfigService struct {
diff --git a/services/tracing/tracing.go b/services/tracing/tracing.go
index b2d129e0e..8ead35978 100644
--- a/services/tracing/tracing.go
+++ b/services/tracing/tracing.go
@@ -14,7 +14,7 @@ import (
 	"github.com/uber/jaeger-client-go/zipkin"
 	"github.com/uber/jaeger-lib/metrics"
 
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
 )
 
 // Tracer is a wrapper around Jaeger OpenTracing client, used to properly de-initialize jaeger on exit
diff --git a/services/upgrader/upgrader_linux.go b/services/upgrader/upgrader_linux.go
index 0cb2b6c88..f88e29ca4 100644
--- a/services/upgrader/upgrader_linux.go
+++ b/services/upgrader/upgrader_linux.go
@@ -23,8 +23,8 @@ import (
 	"github.com/pkg/errors"
 	"golang.org/x/crypto/openpgp" //nolint:staticcheck
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
 )
 
 const mattermostBuildPublicKey = `-----BEGIN PGP PUBLIC KEY BLOCK-----
diff --git a/services/upgrader/upgrader_linux_test.go b/services/upgrader/upgrader_linux_test.go
index 43583a243..b20b5302b 100644
--- a/services/upgrader/upgrader_linux_test.go
+++ b/services/upgrader/upgrader_linux_test.go
@@ -12,7 +12,7 @@ import (
 
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 func TestCanIUpgradeToE0(t *testing.T) {
diff --git a/shared/driver/conn.go b/shared/driver/conn.go
index 6acf8e876..86707473d 100644
--- a/shared/driver/conn.go
+++ b/shared/driver/conn.go
@@ -7,7 +7,7 @@ import (
 	"context"
 	"database/sql/driver"
 
-	"github.com/mattermost/mattermost-server/v6/plugin"
+	"github.com/cjdelisle/matterfoss-server/v6/plugin"
 )
 
 // Conn is a DB driver conn implementation
diff --git a/shared/driver/driver.go b/shared/driver/driver.go
index 2f6f6c3b7..fc888ba21 100644
--- a/shared/driver/driver.go
+++ b/shared/driver/driver.go
@@ -12,7 +12,7 @@ import (
 	"context"
 	"database/sql/driver"
 
-	"github.com/mattermost/mattermost-server/v6/plugin"
+	"github.com/cjdelisle/matterfoss-server/v6/plugin"
 )
 
 var (
diff --git a/shared/driver/objects.go b/shared/driver/objects.go
index ff28cb2ed..96f792b6e 100644
--- a/shared/driver/objects.go
+++ b/shared/driver/objects.go
@@ -7,7 +7,7 @@ import (
 	"context"
 	"database/sql/driver"
 
-	"github.com/mattermost/mattermost-server/v6/plugin"
+	"github.com/cjdelisle/matterfoss-server/v6/plugin"
 )
 
 type wrapperTx struct {
diff --git a/shared/filestore/filesstore_test.go b/shared/filestore/filesstore_test.go
index 76823e398..941473339 100644
--- a/shared/filestore/filesstore_test.go
+++ b/shared/filestore/filesstore_test.go
@@ -16,7 +16,7 @@ import (
 	"github.com/stretchr/testify/suite"
 	"github.com/xtgo/uuid"
 
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
 )
 
 func randomString() string {
diff --git a/shared/filestore/localstore.go b/shared/filestore/localstore.go
index e2d53e494..134418dac 100644
--- a/shared/filestore/localstore.go
+++ b/shared/filestore/localstore.go
@@ -13,7 +13,7 @@ import (
 
 	"github.com/pkg/errors"
 
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
 )
 
 const (
diff --git a/shared/filestore/mocks/FileBackend.go b/shared/filestore/mocks/FileBackend.go
index 51c45d82e..fb4e1d315 100644
--- a/shared/filestore/mocks/FileBackend.go
+++ b/shared/filestore/mocks/FileBackend.go
@@ -7,7 +7,7 @@ package mocks
 import (
 	io "io"
 
-	filestore "github.com/mattermost/mattermost-server/v6/shared/filestore"
+	filestore "github.com/cjdelisle/matterfoss-server/v6/shared/filestore"
 
 	mock "github.com/stretchr/testify/mock"
 
diff --git a/shared/filestore/s3store.go b/shared/filestore/s3store.go
index 5ab6f1ce3..a9c0d1baf 100644
--- a/shared/filestore/s3store.go
+++ b/shared/filestore/s3store.go
@@ -17,7 +17,7 @@ import (
 	"github.com/minio/minio-go/v7/pkg/encrypt"
 	"github.com/pkg/errors"
 
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
 )
 
 // S3FileBackend contains all necessary information to communicate with
diff --git a/shared/i18n/i18n.go b/shared/i18n/i18n.go
index 0168b751d..485cc4220 100644
--- a/shared/i18n/i18n.go
+++ b/shared/i18n/i18n.go
@@ -14,7 +14,7 @@ import (
 
 	"github.com/mattermost/go-i18n/i18n"
 
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
 )
 
 const defaultLocale = "en"
diff --git a/shared/mail/mail.go b/shared/mail/mail.go
index 8ca1db48b..3f41d98d4 100644
--- a/shared/mail/mail.go
+++ b/shared/mail/mail.go
@@ -17,7 +17,7 @@ import (
 	"github.com/pkg/errors"
 	gomail "gopkg.in/mail.v2"
 
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
 )
 
 const (
diff --git a/shared/markdown/autolink_test.go b/shared/markdown/autolink_test.go
index 2ab7dc158..8f012bd64 100644
--- a/shared/markdown/autolink_test.go
+++ b/shared/markdown/autolink_test.go
@@ -436,7 +436,7 @@ func TestTrimTrailingCharactersFromLink(t *testing.T) {
 }
 
 func TestAutolinking(t *testing.T) {
-	// These tests are adapted from https://github.com/mattermost/commonmark.js/test/mattermost.txt.
+	// These tests are adapted from https://github.com/matterfoss/commonmark.js/test/matterfoss.txt.
 	// It is missing tests for:
 	// 1. Links surrounded by emphasis (emphasis not implemented on the server)
 	// 2. IPv6 addresses (not implemented on the server or by GitHub)
diff --git a/shared/markdown/text_range_test.go b/shared/markdown/text_range_test.go
index 7909d4be6..de56918e8 100644
--- a/shared/markdown/text_range_test.go
+++ b/shared/markdown/text_range_test.go
@@ -86,9 +86,9 @@ func TestTextRanges(t *testing.T) {
 			ExpectedValues: []string{"&amp test"},
 		},
 		"notcharref2": {
-			Markdown:       "this is &mattermost;",
+			Markdown:       "this is &matterfoss;",
 			ExpectedRanges: []Range{{0, 20}},
-			ExpectedValues: []string{"this is &mattermost;"},
+			ExpectedValues: []string{"this is &matterfoss;"},
 		},
 		"standalone-ampersand": {
 			Markdown:       "Hello & World",
diff --git a/shared/mfa/mfa_test.go b/shared/mfa/mfa_test.go
index 060f06283..c57244032 100644
--- a/shared/mfa/mfa_test.go
+++ b/shared/mfa/mfa_test.go
@@ -12,8 +12,8 @@ import (
 	"time"
 
 	"github.com/dgryski/dgoogauth"
-	"github.com/mattermost/mattermost-server/v6/plugin/plugintest/mock"
-	"github.com/mattermost/mattermost-server/v6/store/storetest/mocks"
+	"github.com/cjdelisle/matterfoss-server/v6/plugin/plugintest/mock"
+	"github.com/cjdelisle/matterfoss-server/v6/store/storetest/mocks"
 	"github.com/stretchr/testify/assert"
 	"github.com/stretchr/testify/require"
 )
diff --git a/shared/mlog/global_test.go b/shared/mlog/global_test.go
index b5a362f1f..dbd8cd99f 100644
--- a/shared/mlog/global_test.go
+++ b/shared/mlog/global_test.go
@@ -15,7 +15,7 @@ import (
 
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
 )
 
 func TestLoggingBeforeInitialized(t *testing.T) {
diff --git a/shared/templates/templates.go b/shared/templates/templates.go
index 73e1b4a66..98b51161f 100644
--- a/shared/templates/templates.go
+++ b/shared/templates/templates.go
@@ -12,7 +12,7 @@ import (
 	"sync"
 
 	"github.com/fsnotify/fsnotify"
-	"github.com/mattermost/mattermost-server/v6/utils/fileutils"
+	"github.com/cjdelisle/matterfoss-server/v6/utils/fileutils"
 )
 
 // Container represents a set of templates that can be render
diff --git a/store/layer_generators/opentracing_layer.go.tmpl b/store/layer_generators/opentracing_layer.go.tmpl
index b6ac76bc1..883a2277e 100644
--- a/store/layer_generators/opentracing_layer.go.tmpl
+++ b/store/layer_generators/opentracing_layer.go.tmpl
@@ -9,9 +9,9 @@ package opentracinglayer
 import (
 	"context"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/services/tracing"
-	"github.com/mattermost/mattermost-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/services/tracing"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
 	"github.com/opentracing/opentracing-go/ext"
 	spanlog "github.com/opentracing/opentracing-go/log"
 )
diff --git a/store/layer_generators/retry_layer.go.tmpl b/store/layer_generators/retry_layer.go.tmpl
index affa9e893..b025a8c2c 100644
--- a/store/layer_generators/retry_layer.go.tmpl
+++ b/store/layer_generators/retry_layer.go.tmpl
@@ -11,8 +11,8 @@ import (
 	timepkg "time"
 
 	"github.com/lib/pq"
-	"github.com/mattermost/mattermost-server/v6/model"
-    "github.com/mattermost/mattermost-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+    "github.com/cjdelisle/matterfoss-server/v6/store"
     "github.com/pkg/errors"
 	"github.com/go-sql-driver/mysql"
 )
diff --git a/store/layer_generators/timer_layer.go.tmpl b/store/layer_generators/timer_layer.go.tmpl
index 30879275e..4bb9dc580 100644
--- a/store/layer_generators/timer_layer.go.tmpl
+++ b/store/layer_generators/timer_layer.go.tmpl
@@ -10,9 +10,9 @@ import (
 	"context"
 	timemodule "time"
 
-    "github.com/mattermost/mattermost-server/v6/einterfaces"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/store"
+    "github.com/cjdelisle/matterfoss-server/v6/einterfaces"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
 )
 
 type {{.Name}} struct {
diff --git a/store/localcachelayer/channel_layer.go b/store/localcachelayer/channel_layer.go
index 6f9a1c2c1..4a4f5adae 100644
--- a/store/localcachelayer/channel_layer.go
+++ b/store/localcachelayer/channel_layer.go
@@ -6,8 +6,8 @@ package localcachelayer
 import (
 	"bytes"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
 )
 
 type LocalCacheChannelStore struct {
diff --git a/store/localcachelayer/channel_layer_test.go b/store/localcachelayer/channel_layer_test.go
index 0073cbade..579d4c094 100644
--- a/store/localcachelayer/channel_layer_test.go
+++ b/store/localcachelayer/channel_layer_test.go
@@ -9,9 +9,9 @@ import (
 	"github.com/stretchr/testify/assert"
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/store/storetest"
-	"github.com/mattermost/mattermost-server/v6/store/storetest/mocks"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/store/storetest"
+	"github.com/cjdelisle/matterfoss-server/v6/store/storetest/mocks"
 )
 
 func TestChannelStore(t *testing.T) {
diff --git a/store/localcachelayer/emoji_layer.go b/store/localcachelayer/emoji_layer.go
index d774d8533..fb0b9461d 100644
--- a/store/localcachelayer/emoji_layer.go
+++ b/store/localcachelayer/emoji_layer.go
@@ -8,9 +8,9 @@ import (
 	"context"
 	"sync"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/store"
-	"github.com/mattermost/mattermost-server/v6/store/sqlstore"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/store/sqlstore"
 )
 
 type LocalCacheEmojiStore struct {
diff --git a/store/localcachelayer/emoji_layer_test.go b/store/localcachelayer/emoji_layer_test.go
index edaea1ecb..092c29cc1 100644
--- a/store/localcachelayer/emoji_layer_test.go
+++ b/store/localcachelayer/emoji_layer_test.go
@@ -10,9 +10,9 @@ import (
 	"github.com/stretchr/testify/assert"
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/store/storetest"
-	"github.com/mattermost/mattermost-server/v6/store/storetest/mocks"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/store/storetest"
+	"github.com/cjdelisle/matterfoss-server/v6/store/storetest/mocks"
 )
 
 func TestEmojiStore(t *testing.T) {
diff --git a/store/localcachelayer/file_info_layer.go b/store/localcachelayer/file_info_layer.go
index e077802df..4b995a0bf 100644
--- a/store/localcachelayer/file_info_layer.go
+++ b/store/localcachelayer/file_info_layer.go
@@ -6,8 +6,8 @@ package localcachelayer
 import (
 	"bytes"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
 )
 
 type LocalCacheFileInfoStore struct {
diff --git a/store/localcachelayer/file_info_layer_test.go b/store/localcachelayer/file_info_layer_test.go
index f2fb6572c..15c17feaa 100644
--- a/store/localcachelayer/file_info_layer_test.go
+++ b/store/localcachelayer/file_info_layer_test.go
@@ -9,9 +9,9 @@ import (
 	"github.com/stretchr/testify/assert"
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/store/storetest"
-	"github.com/mattermost/mattermost-server/v6/store/storetest/mocks"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/store/storetest"
+	"github.com/cjdelisle/matterfoss-server/v6/store/storetest/mocks"
 )
 
 func TestFileInfoStore(t *testing.T) {
diff --git a/store/localcachelayer/layer.go b/store/localcachelayer/layer.go
index 75276fc0d..133b997a4 100644
--- a/store/localcachelayer/layer.go
+++ b/store/localcachelayer/layer.go
@@ -7,10 +7,10 @@ import (
 	"runtime"
 	"time"
 
-	"github.com/mattermost/mattermost-server/v6/einterfaces"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/services/cache"
-	"github.com/mattermost/mattermost-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/einterfaces"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/services/cache"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
 )
 
 const (
diff --git a/store/localcachelayer/layer_test.go b/store/localcachelayer/layer_test.go
index 16f01b837..568ccd82b 100644
--- a/store/localcachelayer/layer_test.go
+++ b/store/localcachelayer/layer_test.go
@@ -8,10 +8,10 @@ import (
 	"sync"
 	"testing"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/store"
-	"github.com/mattermost/mattermost-server/v6/store/sqlstore"
-	"github.com/mattermost/mattermost-server/v6/store/storetest"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/store/sqlstore"
+	"github.com/cjdelisle/matterfoss-server/v6/store/storetest"
 )
 
 type storeType struct {
diff --git a/store/localcachelayer/main_test.go b/store/localcachelayer/main_test.go
index ed82cb3d4..324b7ba9b 100644
--- a/store/localcachelayer/main_test.go
+++ b/store/localcachelayer/main_test.go
@@ -10,13 +10,13 @@ import (
 
 	"github.com/stretchr/testify/mock"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/services/cache"
-	cachemocks "github.com/mattermost/mattermost-server/v6/services/cache/mocks"
-	"github.com/mattermost/mattermost-server/v6/store"
-	"github.com/mattermost/mattermost-server/v6/store/sqlstore"
-	"github.com/mattermost/mattermost-server/v6/store/storetest/mocks"
-	"github.com/mattermost/mattermost-server/v6/testlib"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/services/cache"
+	cachemocks "github.com/cjdelisle/matterfoss-server/v6/services/cache/mocks"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/store/sqlstore"
+	"github.com/cjdelisle/matterfoss-server/v6/store/storetest/mocks"
+	"github.com/cjdelisle/matterfoss-server/v6/testlib"
 )
 
 var mainHelper *testlib.MainHelper
diff --git a/store/localcachelayer/post_layer.go b/store/localcachelayer/post_layer.go
index 80bc09bdc..cfda8d7dc 100644
--- a/store/localcachelayer/post_layer.go
+++ b/store/localcachelayer/post_layer.go
@@ -9,8 +9,8 @@ import (
 	"strconv"
 	"strings"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
 )
 
 type LocalCachePostStore struct {
diff --git a/store/localcachelayer/post_layer_test.go b/store/localcachelayer/post_layer_test.go
index bef499194..d316b5e3d 100644
--- a/store/localcachelayer/post_layer_test.go
+++ b/store/localcachelayer/post_layer_test.go
@@ -10,9 +10,9 @@ import (
 	"github.com/stretchr/testify/assert"
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/store/storetest"
-	"github.com/mattermost/mattermost-server/v6/store/storetest/mocks"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/store/storetest"
+	"github.com/cjdelisle/matterfoss-server/v6/store/storetest/mocks"
 )
 
 func TestPostStore(t *testing.T) {
diff --git a/store/localcachelayer/reaction_layer.go b/store/localcachelayer/reaction_layer.go
index 30a1e6152..1d36d8968 100644
--- a/store/localcachelayer/reaction_layer.go
+++ b/store/localcachelayer/reaction_layer.go
@@ -6,8 +6,8 @@ package localcachelayer
 import (
 	"bytes"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
 )
 
 type LocalCacheReactionStore struct {
diff --git a/store/localcachelayer/reaction_layer_test.go b/store/localcachelayer/reaction_layer_test.go
index df0876c38..93d7ba642 100644
--- a/store/localcachelayer/reaction_layer_test.go
+++ b/store/localcachelayer/reaction_layer_test.go
@@ -9,9 +9,9 @@ import (
 	"github.com/stretchr/testify/assert"
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/store/storetest"
-	"github.com/mattermost/mattermost-server/v6/store/storetest/mocks"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/store/storetest"
+	"github.com/cjdelisle/matterfoss-server/v6/store/storetest/mocks"
 )
 
 func TestReactionStore(t *testing.T) {
diff --git a/store/localcachelayer/role_layer.go b/store/localcachelayer/role_layer.go
index 3ab2258b2..fce7100ae 100644
--- a/store/localcachelayer/role_layer.go
+++ b/store/localcachelayer/role_layer.go
@@ -9,8 +9,8 @@ import (
 	"sort"
 	"strings"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
 )
 
 type LocalCacheRoleStore struct {
diff --git a/store/localcachelayer/role_layer_test.go b/store/localcachelayer/role_layer_test.go
index 164012dda..c5299b963 100644
--- a/store/localcachelayer/role_layer_test.go
+++ b/store/localcachelayer/role_layer_test.go
@@ -10,9 +10,9 @@ import (
 	"github.com/stretchr/testify/assert"
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/store/storetest"
-	"github.com/mattermost/mattermost-server/v6/store/storetest/mocks"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/store/storetest"
+	"github.com/cjdelisle/matterfoss-server/v6/store/storetest/mocks"
 )
 
 func TestRoleStore(t *testing.T) {
diff --git a/store/localcachelayer/scheme_layer.go b/store/localcachelayer/scheme_layer.go
index 6e7c3af15..bd8c480df 100644
--- a/store/localcachelayer/scheme_layer.go
+++ b/store/localcachelayer/scheme_layer.go
@@ -6,8 +6,8 @@ package localcachelayer
 import (
 	"bytes"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
 )
 
 type LocalCacheSchemeStore struct {
diff --git a/store/localcachelayer/scheme_layer_test.go b/store/localcachelayer/scheme_layer_test.go
index 5ced6262f..0ec355992 100644
--- a/store/localcachelayer/scheme_layer_test.go
+++ b/store/localcachelayer/scheme_layer_test.go
@@ -9,9 +9,9 @@ import (
 	"github.com/stretchr/testify/assert"
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/store/storetest"
-	"github.com/mattermost/mattermost-server/v6/store/storetest/mocks"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/store/storetest"
+	"github.com/cjdelisle/matterfoss-server/v6/store/storetest/mocks"
 )
 
 func TestSchemeStore(t *testing.T) {
diff --git a/store/localcachelayer/team_layer.go b/store/localcachelayer/team_layer.go
index 3f96a325a..98fa8284a 100644
--- a/store/localcachelayer/team_layer.go
+++ b/store/localcachelayer/team_layer.go
@@ -6,8 +6,8 @@ package localcachelayer
 import (
 	"bytes"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
 )
 
 type LocalCacheTeamStore struct {
diff --git a/store/localcachelayer/team_layer_test.go b/store/localcachelayer/team_layer_test.go
index e4bcc499b..1eb0b7d22 100644
--- a/store/localcachelayer/team_layer_test.go
+++ b/store/localcachelayer/team_layer_test.go
@@ -9,8 +9,8 @@ import (
 	"github.com/stretchr/testify/assert"
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/store/storetest"
-	"github.com/mattermost/mattermost-server/v6/store/storetest/mocks"
+	"github.com/cjdelisle/matterfoss-server/v6/store/storetest"
+	"github.com/cjdelisle/matterfoss-server/v6/store/storetest/mocks"
 )
 
 func TestTeamStore(t *testing.T) {
diff --git a/store/localcachelayer/terms_of_service_layer.go b/store/localcachelayer/terms_of_service_layer.go
index 2db4a64ad..823e6f7fe 100644
--- a/store/localcachelayer/terms_of_service_layer.go
+++ b/store/localcachelayer/terms_of_service_layer.go
@@ -6,8 +6,8 @@ package localcachelayer
 import (
 	"bytes"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
 )
 
 const (
diff --git a/store/localcachelayer/terms_of_service_layer_test.go b/store/localcachelayer/terms_of_service_layer_test.go
index 802c8fb4f..42bc6c361 100644
--- a/store/localcachelayer/terms_of_service_layer_test.go
+++ b/store/localcachelayer/terms_of_service_layer_test.go
@@ -9,9 +9,9 @@ import (
 	"github.com/stretchr/testify/assert"
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/store/storetest"
-	"github.com/mattermost/mattermost-server/v6/store/storetest/mocks"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/store/storetest"
+	"github.com/cjdelisle/matterfoss-server/v6/store/storetest/mocks"
 )
 
 func TestTermsOfServiceStore(t *testing.T) {
diff --git a/store/localcachelayer/user_layer.go b/store/localcachelayer/user_layer.go
index c3465c5a7..a9cb79ab2 100644
--- a/store/localcachelayer/user_layer.go
+++ b/store/localcachelayer/user_layer.go
@@ -9,9 +9,9 @@ import (
 	"sort"
 	"sync"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/store"
-	"github.com/mattermost/mattermost-server/v6/store/sqlstore"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/store/sqlstore"
 )
 
 type LocalCacheUserStore struct {
diff --git a/store/localcachelayer/user_layer_test.go b/store/localcachelayer/user_layer_test.go
index ca9d15932..b31b1fb7e 100644
--- a/store/localcachelayer/user_layer_test.go
+++ b/store/localcachelayer/user_layer_test.go
@@ -10,11 +10,11 @@ import (
 	"github.com/stretchr/testify/assert"
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/plugin/plugintest/mock"
-	"github.com/mattermost/mattermost-server/v6/store"
-	"github.com/mattermost/mattermost-server/v6/store/storetest"
-	"github.com/mattermost/mattermost-server/v6/store/storetest/mocks"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/plugin/plugintest/mock"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/store/storetest"
+	"github.com/cjdelisle/matterfoss-server/v6/store/storetest/mocks"
 )
 
 func TestUserStore(t *testing.T) {
diff --git a/store/localcachelayer/webhook_layer.go b/store/localcachelayer/webhook_layer.go
index c2330a2f2..18af2fda8 100644
--- a/store/localcachelayer/webhook_layer.go
+++ b/store/localcachelayer/webhook_layer.go
@@ -6,8 +6,8 @@ package localcachelayer
 import (
 	"bytes"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
 )
 
 type LocalCacheWebhookStore struct {
diff --git a/store/localcachelayer/webhook_layer_test.go b/store/localcachelayer/webhook_layer_test.go
index 21c0a0dea..7460fb119 100644
--- a/store/localcachelayer/webhook_layer_test.go
+++ b/store/localcachelayer/webhook_layer_test.go
@@ -9,9 +9,9 @@ import (
 	"github.com/stretchr/testify/assert"
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/store/storetest"
-	"github.com/mattermost/mattermost-server/v6/store/storetest/mocks"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/store/storetest"
+	"github.com/cjdelisle/matterfoss-server/v6/store/storetest/mocks"
 )
 
 func TestWebhookStore(t *testing.T) {
diff --git a/store/opentracinglayer/opentracinglayer.go b/store/opentracinglayer/opentracinglayer.go
index 20211dbcd..3fe1e942f 100644
--- a/store/opentracinglayer/opentracinglayer.go
+++ b/store/opentracinglayer/opentracinglayer.go
@@ -9,9 +9,9 @@ package opentracinglayer
 import (
 	"context"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/services/tracing"
-	"github.com/mattermost/mattermost-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/services/tracing"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
 	"github.com/opentracing/opentracing-go/ext"
 	spanlog "github.com/opentracing/opentracing-go/log"
 )
diff --git a/store/retrylayer/retrylayer.go b/store/retrylayer/retrylayer.go
index 513000600..3528f6f71 100644
--- a/store/retrylayer/retrylayer.go
+++ b/store/retrylayer/retrylayer.go
@@ -12,8 +12,8 @@ import (
 
 	"github.com/go-sql-driver/mysql"
 	"github.com/lib/pq"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
 	"github.com/pkg/errors"
 )
 
diff --git a/store/retrylayer/retrylayer_test.go b/store/retrylayer/retrylayer_test.go
index 0d2f95bad..4e3273465 100644
--- a/store/retrylayer/retrylayer_test.go
+++ b/store/retrylayer/retrylayer_test.go
@@ -10,8 +10,8 @@ import (
 	"github.com/lib/pq"
 	"github.com/pkg/errors"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/store/storetest/mocks"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/store/storetest/mocks"
 )
 
 func genStore() *mocks.Store {
diff --git a/store/searchlayer/channel_layer.go b/store/searchlayer/channel_layer.go
index ccad681ab..ff274ee9c 100644
--- a/store/searchlayer/channel_layer.go
+++ b/store/searchlayer/channel_layer.go
@@ -8,10 +8,10 @@ import (
 
 	"github.com/pkg/errors"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/services/searchengine"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
-	"github.com/mattermost/mattermost-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/services/searchengine"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
 )
 
 type SearchChannelStore struct {
diff --git a/store/searchlayer/file_info_layer.go b/store/searchlayer/file_info_layer.go
index 8c5d186d1..161c2532d 100644
--- a/store/searchlayer/file_info_layer.go
+++ b/store/searchlayer/file_info_layer.go
@@ -4,10 +4,10 @@
 package searchlayer
 
 import (
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/services/searchengine"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
-	"github.com/mattermost/mattermost-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/services/searchengine"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
 )
 
 type SearchFileInfoStore struct {
diff --git a/store/searchlayer/layer.go b/store/searchlayer/layer.go
index 8b65fe4e1..8b7d51d73 100644
--- a/store/searchlayer/layer.go
+++ b/store/searchlayer/layer.go
@@ -7,10 +7,10 @@ import (
 	"context"
 	"sync/atomic"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/services/searchengine"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
-	"github.com/mattermost/mattermost-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/services/searchengine"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
 )
 
 type SearchStore struct {
diff --git a/store/searchlayer/layer_test.go b/store/searchlayer/layer_test.go
index cbc30409c..da532e9b8 100644
--- a/store/searchlayer/layer_test.go
+++ b/store/searchlayer/layer_test.go
@@ -8,12 +8,12 @@ import (
 	"sync"
 	"testing"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/services/searchengine"
-	"github.com/mattermost/mattermost-server/v6/store/searchlayer"
-	"github.com/mattermost/mattermost-server/v6/store/sqlstore"
-	"github.com/mattermost/mattermost-server/v6/store/storetest"
-	"github.com/mattermost/mattermost-server/v6/testlib"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/services/searchengine"
+	"github.com/cjdelisle/matterfoss-server/v6/store/searchlayer"
+	"github.com/cjdelisle/matterfoss-server/v6/store/sqlstore"
+	"github.com/cjdelisle/matterfoss-server/v6/store/storetest"
+	"github.com/cjdelisle/matterfoss-server/v6/testlib"
 )
 
 // Test to verify race condition on UpdateConfig. The test must run with -race flag in order to verify
diff --git a/store/searchlayer/post_layer.go b/store/searchlayer/post_layer.go
index 1f594cdd7..7b93e80f8 100644
--- a/store/searchlayer/post_layer.go
+++ b/store/searchlayer/post_layer.go
@@ -8,10 +8,10 @@ import (
 
 	"github.com/pkg/errors"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/services/searchengine"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
-	"github.com/mattermost/mattermost-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/services/searchengine"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
 )
 
 type SearchPostStore struct {
diff --git a/store/searchlayer/team_layer.go b/store/searchlayer/team_layer.go
index a8d16972c..430ee948d 100644
--- a/store/searchlayer/team_layer.go
+++ b/store/searchlayer/team_layer.go
@@ -4,8 +4,8 @@
 package searchlayer
 
 import (
-	model "github.com/mattermost/mattermost-server/v6/model"
-	store "github.com/mattermost/mattermost-server/v6/store"
+	model "github.com/cjdelisle/matterfoss-server/v6/model"
+	store "github.com/cjdelisle/matterfoss-server/v6/store"
 )
 
 type SearchTeamStore struct {
diff --git a/store/searchlayer/user_layer.go b/store/searchlayer/user_layer.go
index 2c63dabd3..de825b6fa 100644
--- a/store/searchlayer/user_layer.go
+++ b/store/searchlayer/user_layer.go
@@ -9,10 +9,10 @@ import (
 
 	"github.com/pkg/errors"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/services/searchengine"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
-	"github.com/mattermost/mattermost-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/services/searchengine"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
 )
 
 type SearchUserStore struct {
diff --git a/store/searchtest/channel_layer.go b/store/searchtest/channel_layer.go
index 70d6553fb..4439ee5d0 100644
--- a/store/searchtest/channel_layer.go
+++ b/store/searchtest/channel_layer.go
@@ -8,8 +8,8 @@ import (
 
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
 )
 
 var searchChannelStoreTests = []searchTest{
diff --git a/store/searchtest/file_info_layer.go b/store/searchtest/file_info_layer.go
index 37ddeb07e..ba5e0a9fc 100644
--- a/store/searchtest/file_info_layer.go
+++ b/store/searchtest/file_info_layer.go
@@ -9,8 +9,8 @@ import (
 
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
 )
 
 var searchFileInfoStoreTests = []searchTest{
diff --git a/store/searchtest/helper.go b/store/searchtest/helper.go
index 8dd70f850..9aaa7dd98 100644
--- a/store/searchtest/helper.go
+++ b/store/searchtest/helper.go
@@ -11,8 +11,8 @@ import (
 	"github.com/stretchr/testify/assert"
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
 )
 
 type SearchTestHelper struct {
diff --git a/store/searchtest/post_layer.go b/store/searchtest/post_layer.go
index 5fb65219d..ea1fc7808 100644
--- a/store/searchtest/post_layer.go
+++ b/store/searchtest/post_layer.go
@@ -9,8 +9,8 @@ import (
 
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
 )
 
 var searchPostStoreTests = []searchTest{
diff --git a/store/searchtest/testlib.go b/store/searchtest/testlib.go
index 1dce7d816..99200bfbc 100644
--- a/store/searchtest/testlib.go
+++ b/store/searchtest/testlib.go
@@ -6,8 +6,8 @@ package searchtest
 import (
 	"testing"
 
-	"github.com/mattermost/mattermost-server/v6/store"
-	"github.com/mattermost/mattermost-server/v6/utils"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/utils"
 )
 
 const (
diff --git a/store/searchtest/user_layer.go b/store/searchtest/user_layer.go
index efb14a1c8..ace67ccbd 100644
--- a/store/searchtest/user_layer.go
+++ b/store/searchtest/user_layer.go
@@ -8,8 +8,8 @@ import (
 
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
 )
 
 var searchUserStoreTests = []searchTest{
diff --git a/store/sqlstore/adapters.go b/store/sqlstore/adapters.go
index c7b1e9563..cd2ad6ed6 100644
--- a/store/sqlstore/adapters.go
+++ b/store/sqlstore/adapters.go
@@ -10,7 +10,7 @@ import (
 	"strconv"
 	"strings"
 
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
 )
 
 type jsonArray []string
diff --git a/store/sqlstore/audit_store.go b/store/sqlstore/audit_store.go
index 8b99f1347..5c1469f9e 100644
--- a/store/sqlstore/audit_store.go
+++ b/store/sqlstore/audit_store.go
@@ -7,8 +7,8 @@ import (
 	sq "github.com/Masterminds/squirrel"
 	"github.com/pkg/errors"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
 )
 
 type SqlAuditStore struct {
diff --git a/store/sqlstore/audit_store_test.go b/store/sqlstore/audit_store_test.go
index ef70cb0d2..64ad51bf9 100644
--- a/store/sqlstore/audit_store_test.go
+++ b/store/sqlstore/audit_store_test.go
@@ -6,7 +6,7 @@ package sqlstore
 import (
 	"testing"
 
-	"github.com/mattermost/mattermost-server/v6/store/storetest"
+	"github.com/cjdelisle/matterfoss-server/v6/store/storetest"
 )
 
 func TestAuditStore(t *testing.T) {
diff --git a/store/sqlstore/bot_store.go b/store/sqlstore/bot_store.go
index b2e20a683..10f42fa26 100644
--- a/store/sqlstore/bot_store.go
+++ b/store/sqlstore/bot_store.go
@@ -10,9 +10,9 @@ import (
 
 	"github.com/pkg/errors"
 
-	"github.com/mattermost/mattermost-server/v6/einterfaces"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/einterfaces"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
 )
 
 // bot is a subset of the model.Bot type, omitting the model.User fields.
diff --git a/store/sqlstore/bot_store_test.go b/store/sqlstore/bot_store_test.go
index ea23ab6db..2b5ad86d2 100644
--- a/store/sqlstore/bot_store_test.go
+++ b/store/sqlstore/bot_store_test.go
@@ -6,7 +6,7 @@ package sqlstore
 import (
 	"testing"
 
-	"github.com/mattermost/mattermost-server/v6/store/storetest"
+	"github.com/cjdelisle/matterfoss-server/v6/store/storetest"
 )
 
 func TestBotStore(t *testing.T) {
diff --git a/store/sqlstore/channel_member_history_store.go b/store/sqlstore/channel_member_history_store.go
index 07e46f5aa..2acbe28d8 100644
--- a/store/sqlstore/channel_member_history_store.go
+++ b/store/sqlstore/channel_member_history_store.go
@@ -10,9 +10,9 @@ import (
 	sq "github.com/Masterminds/squirrel"
 	"github.com/pkg/errors"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
-	"github.com/mattermost/mattermost-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
 )
 
 type SqlChannelMemberHistoryStore struct {
diff --git a/store/sqlstore/channel_member_history_store_test.go b/store/sqlstore/channel_member_history_store_test.go
index 47caac323..a200235db 100644
--- a/store/sqlstore/channel_member_history_store_test.go
+++ b/store/sqlstore/channel_member_history_store_test.go
@@ -6,7 +6,7 @@ package sqlstore
 import (
 	"testing"
 
-	"github.com/mattermost/mattermost-server/v6/store/storetest"
+	"github.com/cjdelisle/matterfoss-server/v6/store/storetest"
 )
 
 func TestChannelMemberHistoryStore(t *testing.T) {
diff --git a/store/sqlstore/channel_store.go b/store/sqlstore/channel_store.go
index f2a838938..21ddc7b47 100644
--- a/store/sqlstore/channel_store.go
+++ b/store/sqlstore/channel_store.go
@@ -15,11 +15,11 @@ import (
 	sq "github.com/Masterminds/squirrel"
 	"github.com/pkg/errors"
 
-	"github.com/mattermost/mattermost-server/v6/einterfaces"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/services/cache"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
-	"github.com/mattermost/mattermost-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/einterfaces"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/services/cache"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
 )
 
 const (
diff --git a/store/sqlstore/channel_store_categories.go b/store/sqlstore/channel_store_categories.go
index 94f0fea0a..12ae16b09 100644
--- a/store/sqlstore/channel_store_categories.go
+++ b/store/sqlstore/channel_store_categories.go
@@ -9,8 +9,8 @@ import (
 	sq "github.com/Masterminds/squirrel"
 	"github.com/pkg/errors"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
 )
 
 // dbSelecter is an interface used to enable some internal store methods
diff --git a/store/sqlstore/channel_store_categories_test.go b/store/sqlstore/channel_store_categories_test.go
index 23c7cebea..cfd9b6aae 100644
--- a/store/sqlstore/channel_store_categories_test.go
+++ b/store/sqlstore/channel_store_categories_test.go
@@ -6,7 +6,7 @@ package sqlstore
 import (
 	"testing"
 
-	"github.com/mattermost/mattermost-server/v6/store/storetest"
+	"github.com/cjdelisle/matterfoss-server/v6/store/storetest"
 )
 
 func TestChannelStoreCategories(t *testing.T) {
diff --git a/store/sqlstore/channel_store_test.go b/store/sqlstore/channel_store_test.go
index 3f39b4143..e46c8d21b 100644
--- a/store/sqlstore/channel_store_test.go
+++ b/store/sqlstore/channel_store_test.go
@@ -10,10 +10,10 @@ import (
 	"github.com/stretchr/testify/assert"
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/store"
-	"github.com/mattermost/mattermost-server/v6/store/searchtest"
-	"github.com/mattermost/mattermost-server/v6/store/storetest"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/store/searchtest"
+	"github.com/cjdelisle/matterfoss-server/v6/store/storetest"
 )
 
 func TestChannelStore(t *testing.T) {
diff --git a/store/sqlstore/cluster_discovery_store.go b/store/sqlstore/cluster_discovery_store.go
index 818ed3970..96ca9b6f6 100644
--- a/store/sqlstore/cluster_discovery_store.go
+++ b/store/sqlstore/cluster_discovery_store.go
@@ -7,8 +7,8 @@ import (
 	sq "github.com/Masterminds/squirrel"
 	"github.com/pkg/errors"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
 )
 
 type sqlClusterDiscoveryStore struct {
@@ -26,7 +26,7 @@ func (s sqlClusterDiscoveryStore) Save(ClusterDiscovery *model.ClusterDiscovery)
 	}
 
 	if _, err := s.GetMasterX().NamedExec(`
-		INSERT INTO 
+		INSERT INTO
 			ClusterDiscovery
 			(Id, Type, ClusterName, Hostname, GossipPort, Port, CreateAt, LastPingAt)
 		VALUES
diff --git a/store/sqlstore/cluster_discovery_store_test.go b/store/sqlstore/cluster_discovery_store_test.go
index 14644a53a..d36759cda 100644
--- a/store/sqlstore/cluster_discovery_store_test.go
+++ b/store/sqlstore/cluster_discovery_store_test.go
@@ -6,7 +6,7 @@ package sqlstore
 import (
 	"testing"
 
-	"github.com/mattermost/mattermost-server/v6/store/storetest"
+	"github.com/cjdelisle/matterfoss-server/v6/store/storetest"
 )
 
 func TestClusterDiscoveryStore(t *testing.T) {
diff --git a/store/sqlstore/command_store.go b/store/sqlstore/command_store.go
index f72b8c100..0a490be76 100644
--- a/store/sqlstore/command_store.go
+++ b/store/sqlstore/command_store.go
@@ -10,8 +10,8 @@ import (
 	sq "github.com/Masterminds/squirrel"
 	"github.com/pkg/errors"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
 )
 
 type SqlCommandStore struct {
diff --git a/store/sqlstore/command_store_test.go b/store/sqlstore/command_store_test.go
index a142eb2d5..bd707e1a0 100644
--- a/store/sqlstore/command_store_test.go
+++ b/store/sqlstore/command_store_test.go
@@ -6,7 +6,7 @@ package sqlstore
 import (
 	"testing"
 
-	"github.com/mattermost/mattermost-server/v6/store/storetest"
+	"github.com/cjdelisle/matterfoss-server/v6/store/storetest"
 )
 
 func TestCommandStore(t *testing.T) {
diff --git a/store/sqlstore/command_webhook_store.go b/store/sqlstore/command_webhook_store.go
index f53c97dff..28af9c10b 100644
--- a/store/sqlstore/command_webhook_store.go
+++ b/store/sqlstore/command_webhook_store.go
@@ -9,9 +9,9 @@ import (
 	sq "github.com/Masterminds/squirrel"
 	"github.com/pkg/errors"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
-	"github.com/mattermost/mattermost-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
 )
 
 type SqlCommandWebhookStore struct {
diff --git a/store/sqlstore/command_webhook_store_test.go b/store/sqlstore/command_webhook_store_test.go
index 245b8d44f..877738ba6 100644
--- a/store/sqlstore/command_webhook_store_test.go
+++ b/store/sqlstore/command_webhook_store_test.go
@@ -6,7 +6,7 @@ package sqlstore
 import (
 	"testing"
 
-	"github.com/mattermost/mattermost-server/v6/store/storetest"
+	"github.com/cjdelisle/matterfoss-server/v6/store/storetest"
 )
 
 func TestCommandWebhookStore(t *testing.T) {
diff --git a/store/sqlstore/compliance_store.go b/store/sqlstore/compliance_store.go
index 7b6d4b515..44ec3f3ac 100644
--- a/store/sqlstore/compliance_store.go
+++ b/store/sqlstore/compliance_store.go
@@ -11,8 +11,8 @@ import (
 	sq "github.com/Masterminds/squirrel"
 	"github.com/pkg/errors"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
 )
 
 type SqlComplianceStore struct {
diff --git a/store/sqlstore/compliance_store_test.go b/store/sqlstore/compliance_store_test.go
index 4a428ace2..c37d69048 100644
--- a/store/sqlstore/compliance_store_test.go
+++ b/store/sqlstore/compliance_store_test.go
@@ -6,7 +6,7 @@ package sqlstore
 import (
 	"testing"
 
-	"github.com/mattermost/mattermost-server/v6/store/storetest"
+	"github.com/cjdelisle/matterfoss-server/v6/store/storetest"
 )
 
 func TestComplianceStore(t *testing.T) {
diff --git a/store/sqlstore/emoji_store.go b/store/sqlstore/emoji_store.go
index a3bdc5b90..ee69df9a7 100644
--- a/store/sqlstore/emoji_store.go
+++ b/store/sqlstore/emoji_store.go
@@ -11,9 +11,9 @@ import (
 
 	"github.com/pkg/errors"
 
-	"github.com/mattermost/mattermost-server/v6/einterfaces"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/einterfaces"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
 )
 
 type SqlEmojiStore struct {
diff --git a/store/sqlstore/emoji_store_test.go b/store/sqlstore/emoji_store_test.go
index 9bdd0f88c..864ec6966 100644
--- a/store/sqlstore/emoji_store_test.go
+++ b/store/sqlstore/emoji_store_test.go
@@ -6,7 +6,7 @@ package sqlstore
 import (
 	"testing"
 
-	"github.com/mattermost/mattermost-server/v6/store/storetest"
+	"github.com/cjdelisle/matterfoss-server/v6/store/storetest"
 )
 
 func TestEmojiStore(t *testing.T) {
diff --git a/store/sqlstore/file_info_store.go b/store/sqlstore/file_info_store.go
index 8353571e8..144b9290e 100644
--- a/store/sqlstore/file_info_store.go
+++ b/store/sqlstore/file_info_store.go
@@ -13,10 +13,10 @@ import (
 	sq "github.com/Masterminds/squirrel"
 	"github.com/pkg/errors"
 
-	"github.com/mattermost/mattermost-server/v6/einterfaces"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
-	"github.com/mattermost/mattermost-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/einterfaces"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
 )
 
 type fileInfoWithChannelID struct {
diff --git a/store/sqlstore/file_info_store_test.go b/store/sqlstore/file_info_store_test.go
index 5b6e46e2a..fac1a48a0 100644
--- a/store/sqlstore/file_info_store_test.go
+++ b/store/sqlstore/file_info_store_test.go
@@ -6,8 +6,8 @@ package sqlstore
 import (
 	"testing"
 
-	"github.com/mattermost/mattermost-server/v6/store/searchtest"
-	"github.com/mattermost/mattermost-server/v6/store/storetest"
+	"github.com/cjdelisle/matterfoss-server/v6/store/searchtest"
+	"github.com/cjdelisle/matterfoss-server/v6/store/storetest"
 )
 
 func TestFileInfoStore(t *testing.T) {
diff --git a/store/sqlstore/group_store.go b/store/sqlstore/group_store.go
index 11f2f22b1..6bcf2077a 100644
--- a/store/sqlstore/group_store.go
+++ b/store/sqlstore/group_store.go
@@ -11,8 +11,8 @@ import (
 	sq "github.com/Masterminds/squirrel"
 	"github.com/pkg/errors"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
 )
 
 type selectType int
@@ -435,11 +435,11 @@ func (s *SqlGroupStore) GetNonMemberUsersPage(groupID string, page int, perPage
 	}
 
 	query := `
-	SELECT 
+	SELECT
 		Users.*
 	FROM
 		Users
-	LEFT JOIN 
+	LEFT JOIN
 		GroupMembers ON (GroupMembers.UserId = Users.Id AND GroupMembers.GroupId = ?)
 	WHERE
 		Users.DeleteAt = 0
diff --git a/store/sqlstore/group_store_test.go b/store/sqlstore/group_store_test.go
index aaa79f2d7..98b23e805 100644
--- a/store/sqlstore/group_store_test.go
+++ b/store/sqlstore/group_store_test.go
@@ -6,7 +6,7 @@ package sqlstore
 import (
 	"testing"
 
-	"github.com/mattermost/mattermost-server/v6/store/storetest"
+	"github.com/cjdelisle/matterfoss-server/v6/store/storetest"
 )
 
 func TestGroupStore(t *testing.T) {
diff --git a/store/sqlstore/integrity.go b/store/sqlstore/integrity.go
index a1e3a6c91..4c3a698f3 100644
--- a/store/sqlstore/integrity.go
+++ b/store/sqlstore/integrity.go
@@ -6,8 +6,8 @@ package sqlstore
 import (
 	sq "github.com/Masterminds/squirrel"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
 )
 
 type relationalCheckConfig struct {
diff --git a/store/sqlstore/integrity_test.go b/store/sqlstore/integrity_test.go
index 1e331bc15..950afe930 100644
--- a/store/sqlstore/integrity_test.go
+++ b/store/sqlstore/integrity_test.go
@@ -8,8 +8,8 @@ import (
 
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
 )
 
 func createAudit(ss store.Store, userId, sessionId string) *model.Audit {
diff --git a/store/sqlstore/job_store.go b/store/sqlstore/job_store.go
index 3ba7c9e08..4e57f205b 100644
--- a/store/sqlstore/job_store.go
+++ b/store/sqlstore/job_store.go
@@ -13,8 +13,8 @@ import (
 	sq "github.com/Masterminds/squirrel"
 	"github.com/pkg/errors"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
 )
 
 const (
diff --git a/store/sqlstore/job_store_test.go b/store/sqlstore/job_store_test.go
index 060c10c77..c04600cfb 100644
--- a/store/sqlstore/job_store_test.go
+++ b/store/sqlstore/job_store_test.go
@@ -6,7 +6,7 @@ package sqlstore
 import (
 	"testing"
 
-	"github.com/mattermost/mattermost-server/v6/store/storetest"
+	"github.com/cjdelisle/matterfoss-server/v6/store/storetest"
 )
 
 func TestJobStore(t *testing.T) {
diff --git a/store/sqlstore/license_store.go b/store/sqlstore/license_store.go
index d7e61bb98..8315b2783 100644
--- a/store/sqlstore/license_store.go
+++ b/store/sqlstore/license_store.go
@@ -7,8 +7,8 @@ import (
 	sq "github.com/Masterminds/squirrel"
 	"github.com/pkg/errors"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
 )
 
 // SqlLicenseStore encapsulates the database writes and reads for
diff --git a/store/sqlstore/license_store_test.go b/store/sqlstore/license_store_test.go
index 80f84e06f..1bd523820 100644
--- a/store/sqlstore/license_store_test.go
+++ b/store/sqlstore/license_store_test.go
@@ -6,7 +6,7 @@ package sqlstore
 import (
 	"testing"
 
-	"github.com/mattermost/mattermost-server/v6/store/storetest"
+	"github.com/cjdelisle/matterfoss-server/v6/store/storetest"
 )
 
 func TestLicenseStore(t *testing.T) {
diff --git a/store/sqlstore/link_metadata_store.go b/store/sqlstore/link_metadata_store.go
index a935e12a4..2168ec967 100644
--- a/store/sqlstore/link_metadata_store.go
+++ b/store/sqlstore/link_metadata_store.go
@@ -10,8 +10,8 @@ import (
 	sq "github.com/Masterminds/squirrel"
 	"github.com/pkg/errors"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
 )
 
 type SqlLinkMetadataStore struct {
diff --git a/store/sqlstore/link_metadata_store_test.go b/store/sqlstore/link_metadata_store_test.go
index 315887eb8..1da1465eb 100644
--- a/store/sqlstore/link_metadata_store_test.go
+++ b/store/sqlstore/link_metadata_store_test.go
@@ -6,7 +6,7 @@ package sqlstore
 import (
 	"testing"
 
-	"github.com/mattermost/mattermost-server/v6/store/storetest"
+	"github.com/cjdelisle/matterfoss-server/v6/store/storetest"
 )
 
 func TestLinkMetadataStore(t *testing.T) {
diff --git a/store/sqlstore/main_test.go b/store/sqlstore/main_test.go
index fe6b4c386..1a64428e1 100644
--- a/store/sqlstore/main_test.go
+++ b/store/sqlstore/main_test.go
@@ -6,8 +6,8 @@ package sqlstore_test
 import (
 	"testing"
 
-	"github.com/mattermost/mattermost-server/v6/store/sqlstore"
-	"github.com/mattermost/mattermost-server/v6/testlib"
+	"github.com/cjdelisle/matterfoss-server/v6/store/sqlstore"
+	"github.com/cjdelisle/matterfoss-server/v6/testlib"
 )
 
 var mainHelper *testlib.MainHelper
diff --git a/store/sqlstore/oauth_store.go b/store/sqlstore/oauth_store.go
index dec6db893..2c1884218 100644
--- a/store/sqlstore/oauth_store.go
+++ b/store/sqlstore/oauth_store.go
@@ -9,8 +9,8 @@ import (
 
 	"github.com/pkg/errors"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
 )
 
 type SqlOAuthStore struct {
diff --git a/store/sqlstore/oauth_store_test.go b/store/sqlstore/oauth_store_test.go
index 9c7d5ea98..ab28aa8bd 100644
--- a/store/sqlstore/oauth_store_test.go
+++ b/store/sqlstore/oauth_store_test.go
@@ -6,7 +6,7 @@ package sqlstore
 import (
 	"testing"
 
-	"github.com/mattermost/mattermost-server/v6/store/storetest"
+	"github.com/cjdelisle/matterfoss-server/v6/store/storetest"
 )
 
 func TestOAuthStore(t *testing.T) {
diff --git a/store/sqlstore/plugin_store.go b/store/sqlstore/plugin_store.go
index d0cda29b4..f81f90eb9 100644
--- a/store/sqlstore/plugin_store.go
+++ b/store/sqlstore/plugin_store.go
@@ -11,8 +11,8 @@ import (
 	sq "github.com/Masterminds/squirrel"
 	"github.com/pkg/errors"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
 )
 
 const (
diff --git a/store/sqlstore/plugin_store_test.go b/store/sqlstore/plugin_store_test.go
index c1583b769..47210f826 100644
--- a/store/sqlstore/plugin_store_test.go
+++ b/store/sqlstore/plugin_store_test.go
@@ -6,7 +6,7 @@ package sqlstore
 import (
 	"testing"
 
-	"github.com/mattermost/mattermost-server/v6/store/storetest"
+	"github.com/cjdelisle/matterfoss-server/v6/store/storetest"
 )
 
 func TestPluginStore(t *testing.T) {
diff --git a/store/sqlstore/post_store.go b/store/sqlstore/post_store.go
index aaeea5246..7011b1b53 100644
--- a/store/sqlstore/post_store.go
+++ b/store/sqlstore/post_store.go
@@ -15,12 +15,12 @@ import (
 	sq "github.com/Masterminds/squirrel"
 	"github.com/pkg/errors"
 
-	"github.com/mattermost/mattermost-server/v6/einterfaces"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
-	"github.com/mattermost/mattermost-server/v6/store"
-	"github.com/mattermost/mattermost-server/v6/store/searchlayer"
-	"github.com/mattermost/mattermost-server/v6/utils"
+	"github.com/cjdelisle/matterfoss-server/v6/einterfaces"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/store/searchlayer"
+	"github.com/cjdelisle/matterfoss-server/v6/utils"
 )
 
 type SqlPostStore struct {
diff --git a/store/sqlstore/post_store_test.go b/store/sqlstore/post_store_test.go
index d7a1cc86c..dfe26978b 100644
--- a/store/sqlstore/post_store_test.go
+++ b/store/sqlstore/post_store_test.go
@@ -8,8 +8,8 @@ import (
 
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/store/searchtest"
-	"github.com/mattermost/mattermost-server/v6/store/storetest"
+	"github.com/cjdelisle/matterfoss-server/v6/store/searchtest"
+	"github.com/cjdelisle/matterfoss-server/v6/store/storetest"
 )
 
 func TestPostStore(t *testing.T) {
diff --git a/store/sqlstore/preference_store.go b/store/sqlstore/preference_store.go
index 68d0c4e5c..f2d7180d5 100644
--- a/store/sqlstore/preference_store.go
+++ b/store/sqlstore/preference_store.go
@@ -7,9 +7,9 @@ import (
 	sq "github.com/Masterminds/squirrel"
 	"github.com/pkg/errors"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
-	"github.com/mattermost/mattermost-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
 )
 
 type SqlPreferenceStore struct {
diff --git a/store/sqlstore/preference_store_test.go b/store/sqlstore/preference_store_test.go
index 4bf741318..a0def9f2e 100644
--- a/store/sqlstore/preference_store_test.go
+++ b/store/sqlstore/preference_store_test.go
@@ -8,9 +8,9 @@ import (
 
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/store"
-	"github.com/mattermost/mattermost-server/v6/store/storetest"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/store/storetest"
 )
 
 func TestPreferenceStore(t *testing.T) {
diff --git a/store/sqlstore/product_notices_store.go b/store/sqlstore/product_notices_store.go
index 8e146ef21..257e5a2fb 100644
--- a/store/sqlstore/product_notices_store.go
+++ b/store/sqlstore/product_notices_store.go
@@ -9,8 +9,8 @@ import (
 	sq "github.com/Masterminds/squirrel"
 	"github.com/pkg/errors"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
 )
 
 type SqlProductNoticesStore struct {
diff --git a/store/sqlstore/product_notices_store_test.go b/store/sqlstore/product_notices_store_test.go
index d780bbf5b..cea165cf0 100644
--- a/store/sqlstore/product_notices_store_test.go
+++ b/store/sqlstore/product_notices_store_test.go
@@ -6,7 +6,7 @@ package sqlstore
 import (
 	"testing"
 
-	"github.com/mattermost/mattermost-server/v6/store/storetest"
+	"github.com/cjdelisle/matterfoss-server/v6/store/storetest"
 )
 
 func TestProductNoticesStore(t *testing.T) {
diff --git a/store/sqlstore/reaction_store.go b/store/sqlstore/reaction_store.go
index 1c6746dd8..d1a8ce2df 100644
--- a/store/sqlstore/reaction_store.go
+++ b/store/sqlstore/reaction_store.go
@@ -6,9 +6,9 @@ package sqlstore
 import (
 	sq "github.com/Masterminds/squirrel"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
-	"github.com/mattermost/mattermost-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
 
 	"github.com/pkg/errors"
 )
diff --git a/store/sqlstore/reaction_store_test.go b/store/sqlstore/reaction_store_test.go
index 579592da0..51775d53c 100644
--- a/store/sqlstore/reaction_store_test.go
+++ b/store/sqlstore/reaction_store_test.go
@@ -6,7 +6,7 @@ package sqlstore
 import (
 	"testing"
 
-	"github.com/mattermost/mattermost-server/v6/store/storetest"
+	"github.com/cjdelisle/matterfoss-server/v6/store/storetest"
 )
 
 func TestReactionStore(t *testing.T) {
diff --git a/store/sqlstore/remote_cluster_store.go b/store/sqlstore/remote_cluster_store.go
index 9fc518658..22ae29418 100644
--- a/store/sqlstore/remote_cluster_store.go
+++ b/store/sqlstore/remote_cluster_store.go
@@ -10,8 +10,8 @@ import (
 	sq "github.com/Masterminds/squirrel"
 	"github.com/pkg/errors"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
 )
 
 type sqlRemoteClusterStore struct {
diff --git a/store/sqlstore/remote_cluster_store_test.go b/store/sqlstore/remote_cluster_store_test.go
index b55e0bed3..9c2f958e9 100644
--- a/store/sqlstore/remote_cluster_store_test.go
+++ b/store/sqlstore/remote_cluster_store_test.go
@@ -6,7 +6,7 @@ package sqlstore
 import (
 	"testing"
 
-	"github.com/mattermost/mattermost-server/v6/store/storetest"
+	"github.com/cjdelisle/matterfoss-server/v6/store/storetest"
 )
 
 func TestRemoteClusterStore(t *testing.T) {
diff --git a/store/sqlstore/retention_policy_store.go b/store/sqlstore/retention_policy_store.go
index 6b1891897..87d8ce4b4 100644
--- a/store/sqlstore/retention_policy_store.go
+++ b/store/sqlstore/retention_policy_store.go
@@ -12,9 +12,9 @@ import (
 	sq "github.com/Masterminds/squirrel"
 	"github.com/go-sql-driver/mysql"
 	"github.com/lib/pq"
-	"github.com/mattermost/mattermost-server/v6/einterfaces"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/einterfaces"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
 	"github.com/pkg/errors"
 )
 
diff --git a/store/sqlstore/retention_policy_store_test.go b/store/sqlstore/retention_policy_store_test.go
index acafa5751..41a5b8af6 100644
--- a/store/sqlstore/retention_policy_store_test.go
+++ b/store/sqlstore/retention_policy_store_test.go
@@ -6,7 +6,7 @@ package sqlstore
 import (
 	"testing"
 
-	"github.com/mattermost/mattermost-server/v6/store/storetest"
+	"github.com/cjdelisle/matterfoss-server/v6/store/storetest"
 )
 
 func TestRetentionPolicyStore(t *testing.T) {
diff --git a/store/sqlstore/role_store.go b/store/sqlstore/role_store.go
index 9d8c91c46..379a673ee 100644
--- a/store/sqlstore/role_store.go
+++ b/store/sqlstore/role_store.go
@@ -12,8 +12,8 @@ import (
 	sq "github.com/Masterminds/squirrel"
 	"github.com/pkg/errors"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
 )
 
 type SqlRoleStore struct {
diff --git a/store/sqlstore/role_store_test.go b/store/sqlstore/role_store_test.go
index 94ec01962..4730d6e6c 100644
--- a/store/sqlstore/role_store_test.go
+++ b/store/sqlstore/role_store_test.go
@@ -6,7 +6,7 @@ package sqlstore
 import (
 	"testing"
 
-	"github.com/mattermost/mattermost-server/v6/store/storetest"
+	"github.com/cjdelisle/matterfoss-server/v6/store/storetest"
 )
 
 func TestRoleStore(t *testing.T) {
diff --git a/store/sqlstore/scheme_store.go b/store/sqlstore/scheme_store.go
index 856262d9b..9e3463844 100644
--- a/store/sqlstore/scheme_store.go
+++ b/store/sqlstore/scheme_store.go
@@ -10,8 +10,8 @@ import (
 	sq "github.com/Masterminds/squirrel"
 	"github.com/pkg/errors"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
 )
 
 type SqlSchemeStore struct {
@@ -50,7 +50,7 @@ func (s *SqlSchemeStore) Save(scheme *model.Scheme) (*model.Scheme, error) {
 		SET UpdateAt=:UpdateAt, CreateAt=:CreateAt, DeleteAt=:DeleteAt, Name=:Name, DisplayName=:DisplayName, Description=:Description, Scope=:Scope,
 		 DefaultTeamAdminRole=:DefaultTeamAdminRole, DefaultTeamUserRole=:DefaultTeamUserRole, DefaultTeamGuestRole=:DefaultTeamGuestRole,
 		 DefaultChannelAdminRole=:DefaultChannelAdminRole, DefaultChannelUserRole=:DefaultChannelUserRole, DefaultChannelGuestRole=:DefaultChannelGuestRole,
-		 DefaultPlaybookMemberRole=:DefaultPlaybookMemberRole, DefaultPlaybookAdminRole=:DefaultPlaybookAdminRole, DefaultRunMemberRole=:DefaultRunMemberRole, DefaultRunAdminRole=:DefaultRunAdminRole 
+		 DefaultPlaybookMemberRole=:DefaultPlaybookMemberRole, DefaultPlaybookAdminRole=:DefaultPlaybookAdminRole, DefaultRunMemberRole=:DefaultRunMemberRole, DefaultRunAdminRole=:DefaultRunAdminRole
 		 WHERE Id=:Id`, scheme)
 
 	if err != nil {
@@ -369,7 +369,7 @@ func (s *SqlSchemeStore) Delete(schemeId string) (*model.Scheme, error) {
 	res, err := s.GetMasterX().NamedExec(`UPDATE Schemes
 		SET UpdateAt=:UpdateAt, DeleteAt=:DeleteAt, CreateAt=:CreateAt, Name=:Name, DisplayName=:DisplayName, Description=:Description, Scope=:Scope,
 		 DefaultTeamAdminRole=:DefaultTeamAdminRole, DefaultTeamUserRole=:DefaultTeamUserRole, DefaultTeamGuestRole=:DefaultTeamGuestRole,
-		 DefaultChannelAdminRole=:DefaultChannelAdminRole, DefaultChannelUserRole=:DefaultChannelUserRole, DefaultChannelGuestRole=:DefaultChannelGuestRole 
+		 DefaultChannelAdminRole=:DefaultChannelAdminRole, DefaultChannelUserRole=:DefaultChannelUserRole, DefaultChannelGuestRole=:DefaultChannelGuestRole
 		 WHERE Id=:Id`, &scheme)
 
 	if err != nil {
diff --git a/store/sqlstore/scheme_store_test.go b/store/sqlstore/scheme_store_test.go
index 50562227a..2154a6eba 100644
--- a/store/sqlstore/scheme_store_test.go
+++ b/store/sqlstore/scheme_store_test.go
@@ -6,7 +6,7 @@ package sqlstore
 import (
 	"testing"
 
-	"github.com/mattermost/mattermost-server/v6/store/storetest"
+	"github.com/cjdelisle/matterfoss-server/v6/store/storetest"
 )
 
 func TestSchemeStore(t *testing.T) {
diff --git a/store/sqlstore/session_store.go b/store/sqlstore/session_store.go
index c5cd86888..c76235c53 100644
--- a/store/sqlstore/session_store.go
+++ b/store/sqlstore/session_store.go
@@ -12,8 +12,8 @@ import (
 	sq "github.com/Masterminds/squirrel"
 	"github.com/pkg/errors"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
 )
 
 const (
diff --git a/store/sqlstore/session_store_test.go b/store/sqlstore/session_store_test.go
index c67e16707..8107cc491 100644
--- a/store/sqlstore/session_store_test.go
+++ b/store/sqlstore/session_store_test.go
@@ -6,7 +6,7 @@ package sqlstore
 import (
 	"testing"
 
-	"github.com/mattermost/mattermost-server/v6/store/storetest"
+	"github.com/cjdelisle/matterfoss-server/v6/store/storetest"
 )
 
 func TestSessionStore(t *testing.T) {
diff --git a/store/sqlstore/shared_channel_store.go b/store/sqlstore/shared_channel_store.go
index 479971154..2c29ff14c 100644
--- a/store/sqlstore/shared_channel_store.go
+++ b/store/sqlstore/shared_channel_store.go
@@ -7,8 +7,8 @@ import (
 	"database/sql"
 	"fmt"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
 
 	sq "github.com/Masterminds/squirrel"
 	"github.com/pkg/errors"
diff --git a/store/sqlstore/shared_channel_store_test.go b/store/sqlstore/shared_channel_store_test.go
index 62be683c1..f63bfa761 100644
--- a/store/sqlstore/shared_channel_store_test.go
+++ b/store/sqlstore/shared_channel_store_test.go
@@ -6,7 +6,7 @@ package sqlstore
 import (
 	"testing"
 
-	"github.com/mattermost/mattermost-server/v6/store/storetest"
+	"github.com/cjdelisle/matterfoss-server/v6/store/storetest"
 )
 
 func TestSharedChannelStore(t *testing.T) {
diff --git a/store/sqlstore/sqlx_wrapper.go b/store/sqlstore/sqlx_wrapper.go
index b29d56ce9..1b6a3339f 100644
--- a/store/sqlstore/sqlx_wrapper.go
+++ b/store/sqlstore/sqlx_wrapper.go
@@ -14,9 +14,9 @@ import (
 
 	"github.com/jmoiron/sqlx"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
-	"github.com/mattermost/mattermost-server/v6/store/storetest"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/store/storetest"
 )
 
 type StoreTestWrapper struct {
diff --git a/store/sqlstore/sqlx_wrapper_test.go b/store/sqlstore/sqlx_wrapper_test.go
index c9c5ea18f..f6b2d6690 100644
--- a/store/sqlstore/sqlx_wrapper_test.go
+++ b/store/sqlstore/sqlx_wrapper_test.go
@@ -8,7 +8,7 @@ import (
 	"strings"
 	"testing"
 
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 	"github.com/stretchr/testify/assert"
 	"github.com/stretchr/testify/require"
 )
diff --git a/store/sqlstore/status_store.go b/store/sqlstore/status_store.go
index 8f97e862a..cacf7836c 100644
--- a/store/sqlstore/status_store.go
+++ b/store/sqlstore/status_store.go
@@ -11,8 +11,8 @@ import (
 	sq "github.com/Masterminds/squirrel"
 	"github.com/pkg/errors"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
 )
 
 type SqlStatusStore struct {
diff --git a/store/sqlstore/status_store_test.go b/store/sqlstore/status_store_test.go
index ec79e80ca..fc83ed192 100644
--- a/store/sqlstore/status_store_test.go
+++ b/store/sqlstore/status_store_test.go
@@ -6,7 +6,7 @@ package sqlstore
 import (
 	"testing"
 
-	"github.com/mattermost/mattermost-server/v6/store/storetest"
+	"github.com/cjdelisle/matterfoss-server/v6/store/storetest"
 )
 
 func TestStatusStore(t *testing.T) {
diff --git a/store/sqlstore/store.go b/store/sqlstore/store.go
index 754c078b7..c142f0644 100644
--- a/store/sqlstore/store.go
+++ b/store/sqlstore/store.go
@@ -30,11 +30,11 @@ import (
 	mbindata "github.com/mattermost/morph/sources/embedded"
 	"github.com/pkg/errors"
 
-	"github.com/mattermost/mattermost-server/v6/db"
-	"github.com/mattermost/mattermost-server/v6/einterfaces"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
-	"github.com/mattermost/mattermost-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/db"
+	"github.com/cjdelisle/matterfoss-server/v6/einterfaces"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
 )
 
 type migrationDirection string
@@ -110,7 +110,7 @@ type SqlStoreStores struct {
 
 type SqlStore struct {
 	// rrCounter and srCounter should be kept first.
-	// See https://github.com/mattermost/mattermost-server/v6/pull/7281
+	// See https://github.com/cjdelisle/matterfoss-server/v6/pull/7281
 	rrCounter int64
 	srCounter int64
 
diff --git a/store/sqlstore/store_test.go b/store/sqlstore/store_test.go
index e28a2afc1..3c815752c 100644
--- a/store/sqlstore/store_test.go
+++ b/store/sqlstore/store_test.go
@@ -21,12 +21,12 @@ import (
 	"github.com/stretchr/testify/assert"
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/db"
-	"github.com/mattermost/mattermost-server/v6/einterfaces/mocks"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/store"
-	"github.com/mattermost/mattermost-server/v6/store/searchtest"
-	"github.com/mattermost/mattermost-server/v6/store/storetest"
+	"github.com/cjdelisle/matterfoss-server/v6/db"
+	"github.com/cjdelisle/matterfoss-server/v6/einterfaces/mocks"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/store/searchtest"
+	"github.com/cjdelisle/matterfoss-server/v6/store/storetest"
 )
 
 type storeType struct {
diff --git a/store/sqlstore/system_store.go b/store/sqlstore/system_store.go
index 091ef2831..ca1d2c076 100644
--- a/store/sqlstore/system_store.go
+++ b/store/sqlstore/system_store.go
@@ -13,9 +13,9 @@ import (
 	sq "github.com/Masterminds/squirrel"
 	"github.com/pkg/errors"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/store"
-	"github.com/mattermost/mattermost-server/v6/utils"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/utils"
 )
 
 type SqlSystemStore struct {
diff --git a/store/sqlstore/system_store_test.go b/store/sqlstore/system_store_test.go
index e4ae33e29..079339e70 100644
--- a/store/sqlstore/system_store_test.go
+++ b/store/sqlstore/system_store_test.go
@@ -6,7 +6,7 @@ package sqlstore
 import (
 	"testing"
 
-	"github.com/mattermost/mattermost-server/v6/store/storetest"
+	"github.com/cjdelisle/matterfoss-server/v6/store/storetest"
 )
 
 func TestSystemStore(t *testing.T) {
diff --git a/store/sqlstore/team_store.go b/store/sqlstore/team_store.go
index 10d434dd8..52dc88cad 100644
--- a/store/sqlstore/team_store.go
+++ b/store/sqlstore/team_store.go
@@ -12,9 +12,9 @@ import (
 	sq "github.com/Masterminds/squirrel"
 	"github.com/pkg/errors"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/store"
-	"github.com/mattermost/mattermost-server/v6/utils"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/utils"
 )
 
 const (
diff --git a/store/sqlstore/team_store_test.go b/store/sqlstore/team_store_test.go
index 833a67f4d..d40194759 100644
--- a/store/sqlstore/team_store_test.go
+++ b/store/sqlstore/team_store_test.go
@@ -9,8 +9,8 @@ import (
 
 	"github.com/stretchr/testify/assert"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/store/storetest"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/store/storetest"
 )
 
 func TestTeamStore(t *testing.T) {
diff --git a/store/sqlstore/terms_of_service_store.go b/store/sqlstore/terms_of_service_store.go
index 7c2845458..03ccf8af2 100644
--- a/store/sqlstore/terms_of_service_store.go
+++ b/store/sqlstore/terms_of_service_store.go
@@ -6,9 +6,9 @@ package sqlstore
 import (
 	"database/sql"
 
-	"github.com/mattermost/mattermost-server/v6/einterfaces"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/einterfaces"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
 	"github.com/pkg/errors"
 )
 
diff --git a/store/sqlstore/terms_of_service_store_test.go b/store/sqlstore/terms_of_service_store_test.go
index 6aedab1bd..2b757a4f9 100644
--- a/store/sqlstore/terms_of_service_store_test.go
+++ b/store/sqlstore/terms_of_service_store_test.go
@@ -6,7 +6,7 @@ package sqlstore
 import (
 	"testing"
 
-	"github.com/mattermost/mattermost-server/v6/store/storetest"
+	"github.com/cjdelisle/matterfoss-server/v6/store/storetest"
 )
 
 func TestTermsOfServiceStore(t *testing.T) {
diff --git a/store/sqlstore/thread_store.go b/store/sqlstore/thread_store.go
index d926b8acc..84c567335 100644
--- a/store/sqlstore/thread_store.go
+++ b/store/sqlstore/thread_store.go
@@ -13,9 +13,9 @@ import (
 	sq "github.com/Masterminds/squirrel"
 	"github.com/pkg/errors"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/store"
-	"github.com/mattermost/mattermost-server/v6/utils"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/utils"
 )
 
 type SqlThreadStore struct {
diff --git a/store/sqlstore/thread_store_test.go b/store/sqlstore/thread_store_test.go
index c3db8a29d..3576d2e44 100644
--- a/store/sqlstore/thread_store_test.go
+++ b/store/sqlstore/thread_store_test.go
@@ -6,7 +6,7 @@ package sqlstore
 import (
 	"testing"
 
-	"github.com/mattermost/mattermost-server/v6/store/storetest"
+	"github.com/cjdelisle/matterfoss-server/v6/store/storetest"
 )
 
 func TestThreadStore(t *testing.T) {
diff --git a/store/sqlstore/tokens_store.go b/store/sqlstore/tokens_store.go
index a2971eb32..20aa7898e 100644
--- a/store/sqlstore/tokens_store.go
+++ b/store/sqlstore/tokens_store.go
@@ -10,9 +10,9 @@ import (
 	sq "github.com/Masterminds/squirrel"
 	"github.com/pkg/errors"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
-	"github.com/mattermost/mattermost-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
 )
 
 type SqlTokenStore struct {
diff --git a/store/sqlstore/tokens_store_test.go b/store/sqlstore/tokens_store_test.go
index 24388620b..5f69a1b95 100644
--- a/store/sqlstore/tokens_store_test.go
+++ b/store/sqlstore/tokens_store_test.go
@@ -6,7 +6,7 @@ package sqlstore
 import (
 	"testing"
 
-	"github.com/mattermost/mattermost-server/v6/store/storetest"
+	"github.com/cjdelisle/matterfoss-server/v6/store/storetest"
 )
 
 func TestTokensStore(t *testing.T) {
diff --git a/store/sqlstore/upgrade.go b/store/sqlstore/upgrade.go
index 48de6e673..90cbc8a9a 100644
--- a/store/sqlstore/upgrade.go
+++ b/store/sqlstore/upgrade.go
@@ -9,8 +9,8 @@ import (
 	"github.com/blang/semver"
 	"github.com/pkg/errors"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
 )
 
 const (
diff --git a/store/sqlstore/upgrade_test.go b/store/sqlstore/upgrade_test.go
index 60ae37893..d823c2e28 100644
--- a/store/sqlstore/upgrade_test.go
+++ b/store/sqlstore/upgrade_test.go
@@ -8,7 +8,7 @@ import (
 
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
 )
 
 func TestStoreUpgradeDotRelease(t *testing.T) {
diff --git a/store/sqlstore/upload_session_store.go b/store/sqlstore/upload_session_store.go
index 6860f3fdd..ccfaf0a6a 100644
--- a/store/sqlstore/upload_session_store.go
+++ b/store/sqlstore/upload_session_store.go
@@ -9,8 +9,8 @@ import (
 	sq "github.com/Masterminds/squirrel"
 	"github.com/pkg/errors"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
 )
 
 type SqlUploadSessionStore struct {
diff --git a/store/sqlstore/upload_session_store_test.go b/store/sqlstore/upload_session_store_test.go
index 87a7012a2..b23d7b690 100644
--- a/store/sqlstore/upload_session_store_test.go
+++ b/store/sqlstore/upload_session_store_test.go
@@ -6,7 +6,7 @@ package sqlstore
 import (
 	"testing"
 
-	"github.com/mattermost/mattermost-server/v6/store/storetest"
+	"github.com/cjdelisle/matterfoss-server/v6/store/storetest"
 )
 
 func TestUploadSessionStore(t *testing.T) {
diff --git a/store/sqlstore/user_access_token_store.go b/store/sqlstore/user_access_token_store.go
index 3b4f5b57e..6230343e7 100644
--- a/store/sqlstore/user_access_token_store.go
+++ b/store/sqlstore/user_access_token_store.go
@@ -9,8 +9,8 @@ import (
 
 	"github.com/pkg/errors"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
 )
 
 type SqlUserAccessTokenStore struct {
diff --git a/store/sqlstore/user_access_token_store_test.go b/store/sqlstore/user_access_token_store_test.go
index 93e91e9cc..61df0d9f5 100644
--- a/store/sqlstore/user_access_token_store_test.go
+++ b/store/sqlstore/user_access_token_store_test.go
@@ -6,7 +6,7 @@ package sqlstore
 import (
 	"testing"
 
-	"github.com/mattermost/mattermost-server/v6/store/storetest"
+	"github.com/cjdelisle/matterfoss-server/v6/store/storetest"
 )
 
 func TestUserAccessTokenStore(t *testing.T) {
diff --git a/store/sqlstore/user_store.go b/store/sqlstore/user_store.go
index 559f8afe5..a0ecec9ee 100644
--- a/store/sqlstore/user_store.go
+++ b/store/sqlstore/user_store.go
@@ -15,9 +15,9 @@ import (
 	"github.com/pkg/errors"
 	"golang.org/x/sync/errgroup"
 
-	"github.com/mattermost/mattermost-server/v6/einterfaces"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/einterfaces"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
 )
 
 const (
diff --git a/store/sqlstore/user_store_test.go b/store/sqlstore/user_store_test.go
index 590184e3d..5800ccdfb 100644
--- a/store/sqlstore/user_store_test.go
+++ b/store/sqlstore/user_store_test.go
@@ -6,8 +6,8 @@ package sqlstore
 import (
 	"testing"
 
-	"github.com/mattermost/mattermost-server/v6/store/searchtest"
-	"github.com/mattermost/mattermost-server/v6/store/storetest"
+	"github.com/cjdelisle/matterfoss-server/v6/store/searchtest"
+	"github.com/cjdelisle/matterfoss-server/v6/store/storetest"
 )
 
 func TestUserStore(t *testing.T) {
diff --git a/store/sqlstore/user_terms_of_service.go b/store/sqlstore/user_terms_of_service.go
index c99b777cb..670d3ae8f 100644
--- a/store/sqlstore/user_terms_of_service.go
+++ b/store/sqlstore/user_terms_of_service.go
@@ -8,8 +8,8 @@ import (
 
 	"github.com/pkg/errors"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
 )
 
 type SqlUserTermsOfServiceStore struct {
@@ -23,8 +23,8 @@ func newSqlUserTermsOfServiceStore(sqlStore *SqlStore) store.UserTermsOfServiceS
 func (s SqlUserTermsOfServiceStore) GetByUser(userId string) (*model.UserTermsOfService, error) {
 	var userTermsOfService model.UserTermsOfService
 	query := `
-		SELECT * 
-		FROM UserTermsOfService 
+		SELECT *
+		FROM UserTermsOfService
 		WHERE UserId = ?
 	`
 	if err := s.GetReplicaX().Get(&userTermsOfService, query, userId); err != nil {
@@ -71,8 +71,8 @@ func (s SqlUserTermsOfServiceStore) Save(userTermsOfService *model.UserTermsOfSe
 
 func (s SqlUserTermsOfServiceStore) Delete(userId, termsOfServiceId string) error {
 	query := `
-		DELETE 
-		FROM UserTermsOfService 
+		DELETE
+		FROM UserTermsOfService
 		WHERE UserId = ? AND TermsOfServiceId = ?
 	`
 	if _, err := s.GetMasterX().Exec(query, userId, termsOfServiceId); err != nil {
diff --git a/store/sqlstore/user_terms_of_service_store_test.go b/store/sqlstore/user_terms_of_service_store_test.go
index 476163f52..a304fe7b6 100644
--- a/store/sqlstore/user_terms_of_service_store_test.go
+++ b/store/sqlstore/user_terms_of_service_store_test.go
@@ -6,7 +6,7 @@ package sqlstore
 import (
 	"testing"
 
-	"github.com/mattermost/mattermost-server/v6/store/storetest"
+	"github.com/cjdelisle/matterfoss-server/v6/store/storetest"
 )
 
 func TestUserTermsOfServiceStore(t *testing.T) {
diff --git a/store/sqlstore/utils.go b/store/sqlstore/utils.go
index 827554984..1d8ec652c 100644
--- a/store/sqlstore/utils.go
+++ b/store/sqlstore/utils.go
@@ -9,7 +9,7 @@ import (
 	"strings"
 	"unicode"
 
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
 )
 
 var escapeLikeSearchChar = []string{
diff --git a/store/sqlstore/webhook_store.go b/store/sqlstore/webhook_store.go
index 0a72d4058..ccc3c97bb 100644
--- a/store/sqlstore/webhook_store.go
+++ b/store/sqlstore/webhook_store.go
@@ -9,9 +9,9 @@ import (
 	sq "github.com/Masterminds/squirrel"
 	"github.com/pkg/errors"
 
-	"github.com/mattermost/mattermost-server/v6/einterfaces"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/einterfaces"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
 )
 
 type SqlWebhookStore struct {
diff --git a/store/sqlstore/webhook_store_test.go b/store/sqlstore/webhook_store_test.go
index 85da6a3e1..b56c140a4 100644
--- a/store/sqlstore/webhook_store_test.go
+++ b/store/sqlstore/webhook_store_test.go
@@ -6,7 +6,7 @@ package sqlstore
 import (
 	"testing"
 
-	"github.com/mattermost/mattermost-server/v6/store/storetest"
+	"github.com/cjdelisle/matterfoss-server/v6/store/storetest"
 )
 
 func TestWebhookStore(t *testing.T) {
diff --git a/store/store.go b/store/store.go
index 8136639ae..c2fb8c104 100644
--- a/store/store.go
+++ b/store/store.go
@@ -9,7 +9,7 @@ import (
 	"context"
 	"time"
 
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 type StoreResult struct {
diff --git a/store/storetest/audit_store.go b/store/storetest/audit_store.go
index c45e97961..e5848fbc3 100644
--- a/store/storetest/audit_store.go
+++ b/store/storetest/audit_store.go
@@ -10,8 +10,8 @@ import (
 	"github.com/stretchr/testify/assert"
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
 )
 
 func TestAuditStore(t *testing.T, ss store.Store) {
diff --git a/store/storetest/bot_store.go b/store/storetest/bot_store.go
index 1521573ca..16913d92e 100644
--- a/store/storetest/bot_store.go
+++ b/store/storetest/bot_store.go
@@ -9,8 +9,8 @@ import (
 
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
 )
 
 func makeBotWithUser(t *testing.T, ss store.Store, bot *model.Bot) (*model.Bot, *model.User) {
diff --git a/store/storetest/channel_member_history_store.go b/store/storetest/channel_member_history_store.go
index 1e88a66fe..65ed78448 100644
--- a/store/storetest/channel_member_history_store.go
+++ b/store/storetest/channel_member_history_store.go
@@ -11,8 +11,8 @@ import (
 	"github.com/stretchr/testify/assert"
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
 )
 
 func TestChannelMemberHistoryStore(t *testing.T, ss store.Store) {
diff --git a/store/storetest/channel_store.go b/store/storetest/channel_store.go
index 213eb462e..1027eb2b9 100644
--- a/store/storetest/channel_store.go
+++ b/store/storetest/channel_store.go
@@ -18,10 +18,10 @@ import (
 	"github.com/stretchr/testify/assert"
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/services/timezones"
-	"github.com/mattermost/mattermost-server/v6/store"
-	"github.com/mattermost/mattermost-server/v6/utils"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/services/timezones"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/utils"
 )
 
 type SqlStore interface {
diff --git a/store/storetest/channel_store_categories.go b/store/storetest/channel_store_categories.go
index a6c306138..b6559bade 100644
--- a/store/storetest/channel_store_categories.go
+++ b/store/storetest/channel_store_categories.go
@@ -12,8 +12,8 @@ import (
 	"github.com/stretchr/testify/assert"
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
 )
 
 func TestChannelStoreCategories(t *testing.T, ss store.Store, s SqlStore) {
diff --git a/store/storetest/cluster_discovery_store.go b/store/storetest/cluster_discovery_store.go
index ced4e095c..20d8d60ff 100644
--- a/store/storetest/cluster_discovery_store.go
+++ b/store/storetest/cluster_discovery_store.go
@@ -10,8 +10,8 @@ import (
 	"github.com/stretchr/testify/assert"
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
 )
 
 func TestClusterDiscoveryStore(t *testing.T, ss store.Store) {
diff --git a/store/storetest/command_store.go b/store/storetest/command_store.go
index 089a069aa..408ac6f21 100644
--- a/store/storetest/command_store.go
+++ b/store/storetest/command_store.go
@@ -9,8 +9,8 @@ import (
 
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
 )
 
 func TestCommandStore(t *testing.T, ss store.Store) {
diff --git a/store/storetest/command_webhook_store.go b/store/storetest/command_webhook_store.go
index fff2f1fa7..2e2061c6a 100644
--- a/store/storetest/command_webhook_store.go
+++ b/store/storetest/command_webhook_store.go
@@ -10,8 +10,8 @@ import (
 	"github.com/stretchr/testify/assert"
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
 )
 
 func TestCommandWebhookStore(t *testing.T, ss store.Store) {
diff --git a/store/storetest/compliance_store.go b/store/storetest/compliance_store.go
index a6fd060be..14d5ab29c 100644
--- a/store/storetest/compliance_store.go
+++ b/store/storetest/compliance_store.go
@@ -11,8 +11,8 @@ import (
 	"github.com/stretchr/testify/assert"
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
 )
 
 func cleanupStoreState(t *testing.T, ss store.Store) {
diff --git a/store/storetest/emoji_store.go b/store/storetest/emoji_store.go
index 357809a5a..dc6881be3 100644
--- a/store/storetest/emoji_store.go
+++ b/store/storetest/emoji_store.go
@@ -8,8 +8,8 @@ import (
 	"testing"
 	"time"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
 
 	"github.com/stretchr/testify/assert"
 	"github.com/stretchr/testify/require"
diff --git a/store/storetest/file_info_store.go b/store/storetest/file_info_store.go
index 2884dedc5..4873dd3be 100644
--- a/store/storetest/file_info_store.go
+++ b/store/storetest/file_info_store.go
@@ -9,8 +9,8 @@ import (
 	"testing"
 	"time"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
 
 	"github.com/stretchr/testify/assert"
 	"github.com/stretchr/testify/require"
diff --git a/store/storetest/group_store.go b/store/storetest/group_store.go
index 2025ed5fd..c42e06879 100644
--- a/store/storetest/group_store.go
+++ b/store/storetest/group_store.go
@@ -15,9 +15,9 @@ import (
 	"github.com/stretchr/testify/assert"
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/store"
-	"github.com/mattermost/mattermost-server/v6/utils"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/utils"
 )
 
 func TestGroupStore(t *testing.T, ss store.Store) {
diff --git a/store/storetest/job_store.go b/store/storetest/job_store.go
index e5c88453b..270a797b1 100644
--- a/store/storetest/job_store.go
+++ b/store/storetest/job_store.go
@@ -12,8 +12,8 @@ import (
 	"github.com/stretchr/testify/assert"
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
 )
 
 func TestJobStore(t *testing.T, ss store.Store) {
diff --git a/store/storetest/license_store.go b/store/storetest/license_store.go
index 2ac5251d7..5b495b994 100644
--- a/store/storetest/license_store.go
+++ b/store/storetest/license_store.go
@@ -8,8 +8,8 @@ import (
 
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
 )
 
 func TestLicenseStore(t *testing.T, ss store.Store) {
diff --git a/store/storetest/link_metadata_store.go b/store/storetest/link_metadata_store.go
index 0a9376225..5213f1b6f 100644
--- a/store/storetest/link_metadata_store.go
+++ b/store/storetest/link_metadata_store.go
@@ -12,8 +12,8 @@ import (
 	"github.com/stretchr/testify/assert"
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
 )
 
 // These tests are ran on the same store instance, so this provides easier unique, valid timestamps
diff --git a/store/storetest/mocks/AuditStore.go b/store/storetest/mocks/AuditStore.go
index f83fe3de6..34ea0c78b 100644
--- a/store/storetest/mocks/AuditStore.go
+++ b/store/storetest/mocks/AuditStore.go
@@ -5,7 +5,7 @@
 package mocks
 
 import (
-	model "github.com/mattermost/mattermost-server/v6/model"
+	model "github.com/cjdelisle/matterfoss-server/v6/model"
 	mock "github.com/stretchr/testify/mock"
 )
 
diff --git a/store/storetest/mocks/BotStore.go b/store/storetest/mocks/BotStore.go
index 26851420a..9b2553160 100644
--- a/store/storetest/mocks/BotStore.go
+++ b/store/storetest/mocks/BotStore.go
@@ -5,7 +5,7 @@
 package mocks
 
 import (
-	model "github.com/mattermost/mattermost-server/v6/model"
+	model "github.com/cjdelisle/matterfoss-server/v6/model"
 	mock "github.com/stretchr/testify/mock"
 )
 
diff --git a/store/storetest/mocks/ChannelMemberHistoryStore.go b/store/storetest/mocks/ChannelMemberHistoryStore.go
index f77709828..eb2260088 100644
--- a/store/storetest/mocks/ChannelMemberHistoryStore.go
+++ b/store/storetest/mocks/ChannelMemberHistoryStore.go
@@ -5,7 +5,7 @@
 package mocks
 
 import (
-	model "github.com/mattermost/mattermost-server/v6/model"
+	model "github.com/cjdelisle/matterfoss-server/v6/model"
 	mock "github.com/stretchr/testify/mock"
 )
 
diff --git a/store/storetest/mocks/ChannelStore.go b/store/storetest/mocks/ChannelStore.go
index 8bdd402f3..1fedb679d 100644
--- a/store/storetest/mocks/ChannelStore.go
+++ b/store/storetest/mocks/ChannelStore.go
@@ -7,10 +7,10 @@ package mocks
 import (
 	context "context"
 
-	model "github.com/mattermost/mattermost-server/v6/model"
+	model "github.com/cjdelisle/matterfoss-server/v6/model"
 	mock "github.com/stretchr/testify/mock"
 
-	store "github.com/mattermost/mattermost-server/v6/store"
+	store "github.com/cjdelisle/matterfoss-server/v6/store"
 )
 
 // ChannelStore is an autogenerated mock type for the ChannelStore type
diff --git a/store/storetest/mocks/ClusterDiscoveryStore.go b/store/storetest/mocks/ClusterDiscoveryStore.go
index b7bfeb54f..743f76f43 100644
--- a/store/storetest/mocks/ClusterDiscoveryStore.go
+++ b/store/storetest/mocks/ClusterDiscoveryStore.go
@@ -5,7 +5,7 @@
 package mocks
 
 import (
-	model "github.com/mattermost/mattermost-server/v6/model"
+	model "github.com/cjdelisle/matterfoss-server/v6/model"
 	mock "github.com/stretchr/testify/mock"
 )
 
diff --git a/store/storetest/mocks/CommandStore.go b/store/storetest/mocks/CommandStore.go
index f50d58a62..2a493dd3d 100644
--- a/store/storetest/mocks/CommandStore.go
+++ b/store/storetest/mocks/CommandStore.go
@@ -5,7 +5,7 @@
 package mocks
 
 import (
-	model "github.com/mattermost/mattermost-server/v6/model"
+	model "github.com/cjdelisle/matterfoss-server/v6/model"
 	mock "github.com/stretchr/testify/mock"
 )
 
diff --git a/store/storetest/mocks/CommandWebhookStore.go b/store/storetest/mocks/CommandWebhookStore.go
index 124ad4a05..fb2f2be16 100644
--- a/store/storetest/mocks/CommandWebhookStore.go
+++ b/store/storetest/mocks/CommandWebhookStore.go
@@ -5,7 +5,7 @@
 package mocks
 
 import (
-	model "github.com/mattermost/mattermost-server/v6/model"
+	model "github.com/cjdelisle/matterfoss-server/v6/model"
 	mock "github.com/stretchr/testify/mock"
 )
 
diff --git a/store/storetest/mocks/ComplianceStore.go b/store/storetest/mocks/ComplianceStore.go
index cbde5b097..43577091d 100644
--- a/store/storetest/mocks/ComplianceStore.go
+++ b/store/storetest/mocks/ComplianceStore.go
@@ -5,7 +5,7 @@
 package mocks
 
 import (
-	model "github.com/mattermost/mattermost-server/v6/model"
+	model "github.com/cjdelisle/matterfoss-server/v6/model"
 	mock "github.com/stretchr/testify/mock"
 )
 
diff --git a/store/storetest/mocks/EmojiStore.go b/store/storetest/mocks/EmojiStore.go
index c9eef9084..89ce7fce7 100644
--- a/store/storetest/mocks/EmojiStore.go
+++ b/store/storetest/mocks/EmojiStore.go
@@ -7,7 +7,7 @@ package mocks
 import (
 	context "context"
 
-	model "github.com/mattermost/mattermost-server/v6/model"
+	model "github.com/cjdelisle/matterfoss-server/v6/model"
 	mock "github.com/stretchr/testify/mock"
 )
 
diff --git a/store/storetest/mocks/FileInfoStore.go b/store/storetest/mocks/FileInfoStore.go
index 1fabed0ea..4d36ffbee 100644
--- a/store/storetest/mocks/FileInfoStore.go
+++ b/store/storetest/mocks/FileInfoStore.go
@@ -5,7 +5,7 @@
 package mocks
 
 import (
-	model "github.com/mattermost/mattermost-server/v6/model"
+	model "github.com/cjdelisle/matterfoss-server/v6/model"
 	mock "github.com/stretchr/testify/mock"
 )
 
diff --git a/store/storetest/mocks/GroupStore.go b/store/storetest/mocks/GroupStore.go
index b6ce4267e..14d34d56e 100644
--- a/store/storetest/mocks/GroupStore.go
+++ b/store/storetest/mocks/GroupStore.go
@@ -5,7 +5,7 @@
 package mocks
 
 import (
-	model "github.com/mattermost/mattermost-server/v6/model"
+	model "github.com/cjdelisle/matterfoss-server/v6/model"
 	mock "github.com/stretchr/testify/mock"
 )
 
diff --git a/store/storetest/mocks/JobStore.go b/store/storetest/mocks/JobStore.go
index 86041b40d..f52c5ffdd 100644
--- a/store/storetest/mocks/JobStore.go
+++ b/store/storetest/mocks/JobStore.go
@@ -5,7 +5,7 @@
 package mocks
 
 import (
-	model "github.com/mattermost/mattermost-server/v6/model"
+	model "github.com/cjdelisle/matterfoss-server/v6/model"
 	mock "github.com/stretchr/testify/mock"
 )
 
diff --git a/store/storetest/mocks/LicenseStore.go b/store/storetest/mocks/LicenseStore.go
index b58a28ee8..ac9540b75 100644
--- a/store/storetest/mocks/LicenseStore.go
+++ b/store/storetest/mocks/LicenseStore.go
@@ -5,7 +5,7 @@
 package mocks
 
 import (
-	model "github.com/mattermost/mattermost-server/v6/model"
+	model "github.com/cjdelisle/matterfoss-server/v6/model"
 	mock "github.com/stretchr/testify/mock"
 )
 
diff --git a/store/storetest/mocks/LinkMetadataStore.go b/store/storetest/mocks/LinkMetadataStore.go
index a3aa2bda9..2493e8499 100644
--- a/store/storetest/mocks/LinkMetadataStore.go
+++ b/store/storetest/mocks/LinkMetadataStore.go
@@ -5,7 +5,7 @@
 package mocks
 
 import (
-	model "github.com/mattermost/mattermost-server/v6/model"
+	model "github.com/cjdelisle/matterfoss-server/v6/model"
 	mock "github.com/stretchr/testify/mock"
 )
 
diff --git a/store/storetest/mocks/OAuthStore.go b/store/storetest/mocks/OAuthStore.go
index 3afd27035..ad611fe5c 100644
--- a/store/storetest/mocks/OAuthStore.go
+++ b/store/storetest/mocks/OAuthStore.go
@@ -5,7 +5,7 @@
 package mocks
 
 import (
-	model "github.com/mattermost/mattermost-server/v6/model"
+	model "github.com/cjdelisle/matterfoss-server/v6/model"
 	mock "github.com/stretchr/testify/mock"
 )
 
diff --git a/store/storetest/mocks/PluginStore.go b/store/storetest/mocks/PluginStore.go
index b0a051ac6..f32c79ddd 100644
--- a/store/storetest/mocks/PluginStore.go
+++ b/store/storetest/mocks/PluginStore.go
@@ -5,7 +5,7 @@
 package mocks
 
 import (
-	model "github.com/mattermost/mattermost-server/v6/model"
+	model "github.com/cjdelisle/matterfoss-server/v6/model"
 	mock "github.com/stretchr/testify/mock"
 )
 
diff --git a/store/storetest/mocks/PostStore.go b/store/storetest/mocks/PostStore.go
index abfc7ef07..a36721bef 100644
--- a/store/storetest/mocks/PostStore.go
+++ b/store/storetest/mocks/PostStore.go
@@ -7,7 +7,7 @@ package mocks
 import (
 	context "context"
 
-	model "github.com/mattermost/mattermost-server/v6/model"
+	model "github.com/cjdelisle/matterfoss-server/v6/model"
 	mock "github.com/stretchr/testify/mock"
 )
 
diff --git a/store/storetest/mocks/PreferenceStore.go b/store/storetest/mocks/PreferenceStore.go
index 45d02cf5f..9c6a4f8bf 100644
--- a/store/storetest/mocks/PreferenceStore.go
+++ b/store/storetest/mocks/PreferenceStore.go
@@ -5,7 +5,7 @@
 package mocks
 
 import (
-	model "github.com/mattermost/mattermost-server/v6/model"
+	model "github.com/cjdelisle/matterfoss-server/v6/model"
 	mock "github.com/stretchr/testify/mock"
 )
 
diff --git a/store/storetest/mocks/ProductNoticesStore.go b/store/storetest/mocks/ProductNoticesStore.go
index 7e125e25c..e16bc897b 100644
--- a/store/storetest/mocks/ProductNoticesStore.go
+++ b/store/storetest/mocks/ProductNoticesStore.go
@@ -5,7 +5,7 @@
 package mocks
 
 import (
-	model "github.com/mattermost/mattermost-server/v6/model"
+	model "github.com/cjdelisle/matterfoss-server/v6/model"
 	mock "github.com/stretchr/testify/mock"
 )
 
diff --git a/store/storetest/mocks/ReactionStore.go b/store/storetest/mocks/ReactionStore.go
index c2cb5bcef..50aba8bfe 100644
--- a/store/storetest/mocks/ReactionStore.go
+++ b/store/storetest/mocks/ReactionStore.go
@@ -5,7 +5,7 @@
 package mocks
 
 import (
-	model "github.com/mattermost/mattermost-server/v6/model"
+	model "github.com/cjdelisle/matterfoss-server/v6/model"
 	mock "github.com/stretchr/testify/mock"
 )
 
diff --git a/store/storetest/mocks/RemoteClusterStore.go b/store/storetest/mocks/RemoteClusterStore.go
index cf908f9c8..e6b95b973 100644
--- a/store/storetest/mocks/RemoteClusterStore.go
+++ b/store/storetest/mocks/RemoteClusterStore.go
@@ -5,7 +5,7 @@
 package mocks
 
 import (
-	model "github.com/mattermost/mattermost-server/v6/model"
+	model "github.com/cjdelisle/matterfoss-server/v6/model"
 	mock "github.com/stretchr/testify/mock"
 )
 
diff --git a/store/storetest/mocks/RetentionPolicyStore.go b/store/storetest/mocks/RetentionPolicyStore.go
index efde61596..7847ff20c 100644
--- a/store/storetest/mocks/RetentionPolicyStore.go
+++ b/store/storetest/mocks/RetentionPolicyStore.go
@@ -5,7 +5,7 @@
 package mocks
 
 import (
-	model "github.com/mattermost/mattermost-server/v6/model"
+	model "github.com/cjdelisle/matterfoss-server/v6/model"
 	mock "github.com/stretchr/testify/mock"
 )
 
diff --git a/store/storetest/mocks/RoleStore.go b/store/storetest/mocks/RoleStore.go
index d3e618442..8ae576e2f 100644
--- a/store/storetest/mocks/RoleStore.go
+++ b/store/storetest/mocks/RoleStore.go
@@ -7,7 +7,7 @@ package mocks
 import (
 	context "context"
 
-	model "github.com/mattermost/mattermost-server/v6/model"
+	model "github.com/cjdelisle/matterfoss-server/v6/model"
 	mock "github.com/stretchr/testify/mock"
 )
 
diff --git a/store/storetest/mocks/SchemeStore.go b/store/storetest/mocks/SchemeStore.go
index b29543561..50f6fc8c4 100644
--- a/store/storetest/mocks/SchemeStore.go
+++ b/store/storetest/mocks/SchemeStore.go
@@ -5,7 +5,7 @@
 package mocks
 
 import (
-	model "github.com/mattermost/mattermost-server/v6/model"
+	model "github.com/cjdelisle/matterfoss-server/v6/model"
 	mock "github.com/stretchr/testify/mock"
 )
 
diff --git a/store/storetest/mocks/SessionStore.go b/store/storetest/mocks/SessionStore.go
index d107d5240..90e90f770 100644
--- a/store/storetest/mocks/SessionStore.go
+++ b/store/storetest/mocks/SessionStore.go
@@ -7,7 +7,7 @@ package mocks
 import (
 	context "context"
 
-	model "github.com/mattermost/mattermost-server/v6/model"
+	model "github.com/cjdelisle/matterfoss-server/v6/model"
 	mock "github.com/stretchr/testify/mock"
 )
 
diff --git a/store/storetest/mocks/SharedChannelStore.go b/store/storetest/mocks/SharedChannelStore.go
index e40dd74cc..088a4ce4b 100644
--- a/store/storetest/mocks/SharedChannelStore.go
+++ b/store/storetest/mocks/SharedChannelStore.go
@@ -5,7 +5,7 @@
 package mocks
 
 import (
-	model "github.com/mattermost/mattermost-server/v6/model"
+	model "github.com/cjdelisle/matterfoss-server/v6/model"
 	mock "github.com/stretchr/testify/mock"
 )
 
diff --git a/store/storetest/mocks/StatusStore.go b/store/storetest/mocks/StatusStore.go
index 45dc91399..5e2b92d7a 100644
--- a/store/storetest/mocks/StatusStore.go
+++ b/store/storetest/mocks/StatusStore.go
@@ -5,7 +5,7 @@
 package mocks
 
 import (
-	model "github.com/mattermost/mattermost-server/v6/model"
+	model "github.com/cjdelisle/matterfoss-server/v6/model"
 	mock "github.com/stretchr/testify/mock"
 )
 
diff --git a/store/storetest/mocks/Store.go b/store/storetest/mocks/Store.go
index 88abc607e..f6d12d5e6 100644
--- a/store/storetest/mocks/Store.go
+++ b/store/storetest/mocks/Store.go
@@ -7,10 +7,10 @@ package mocks
 import (
 	context "context"
 
-	model "github.com/mattermost/mattermost-server/v6/model"
+	model "github.com/cjdelisle/matterfoss-server/v6/model"
 	mock "github.com/stretchr/testify/mock"
 
-	store "github.com/mattermost/mattermost-server/v6/store"
+	store "github.com/cjdelisle/matterfoss-server/v6/store"
 
 	time "time"
 )
diff --git a/store/storetest/mocks/SystemStore.go b/store/storetest/mocks/SystemStore.go
index c3f454264..cf852dd30 100644
--- a/store/storetest/mocks/SystemStore.go
+++ b/store/storetest/mocks/SystemStore.go
@@ -5,7 +5,7 @@
 package mocks
 
 import (
-	model "github.com/mattermost/mattermost-server/v6/model"
+	model "github.com/cjdelisle/matterfoss-server/v6/model"
 	mock "github.com/stretchr/testify/mock"
 )
 
diff --git a/store/storetest/mocks/TeamStore.go b/store/storetest/mocks/TeamStore.go
index 67933dbe8..e55b181b2 100644
--- a/store/storetest/mocks/TeamStore.go
+++ b/store/storetest/mocks/TeamStore.go
@@ -7,7 +7,7 @@ package mocks
 import (
 	context "context"
 
-	model "github.com/mattermost/mattermost-server/v6/model"
+	model "github.com/cjdelisle/matterfoss-server/v6/model"
 	mock "github.com/stretchr/testify/mock"
 )
 
diff --git a/store/storetest/mocks/TermsOfServiceStore.go b/store/storetest/mocks/TermsOfServiceStore.go
index a9d9d78a7..a11451cc2 100644
--- a/store/storetest/mocks/TermsOfServiceStore.go
+++ b/store/storetest/mocks/TermsOfServiceStore.go
@@ -5,7 +5,7 @@
 package mocks
 
 import (
-	model "github.com/mattermost/mattermost-server/v6/model"
+	model "github.com/cjdelisle/matterfoss-server/v6/model"
 	mock "github.com/stretchr/testify/mock"
 )
 
diff --git a/store/storetest/mocks/ThreadStore.go b/store/storetest/mocks/ThreadStore.go
index f6992ff36..c35f63d57 100644
--- a/store/storetest/mocks/ThreadStore.go
+++ b/store/storetest/mocks/ThreadStore.go
@@ -5,8 +5,8 @@
 package mocks
 
 import (
-	model "github.com/mattermost/mattermost-server/v6/model"
-	store "github.com/mattermost/mattermost-server/v6/store"
+	model "github.com/cjdelisle/matterfoss-server/v6/model"
+	store "github.com/cjdelisle/matterfoss-server/v6/store"
 	mock "github.com/stretchr/testify/mock"
 )
 
diff --git a/store/storetest/mocks/TokenStore.go b/store/storetest/mocks/TokenStore.go
index 6a26eab13..dd852a2ae 100644
--- a/store/storetest/mocks/TokenStore.go
+++ b/store/storetest/mocks/TokenStore.go
@@ -5,7 +5,7 @@
 package mocks
 
 import (
-	model "github.com/mattermost/mattermost-server/v6/model"
+	model "github.com/cjdelisle/matterfoss-server/v6/model"
 	mock "github.com/stretchr/testify/mock"
 )
 
diff --git a/store/storetest/mocks/UploadSessionStore.go b/store/storetest/mocks/UploadSessionStore.go
index 9067e3449..aa52f0fd3 100644
--- a/store/storetest/mocks/UploadSessionStore.go
+++ b/store/storetest/mocks/UploadSessionStore.go
@@ -5,7 +5,7 @@
 package mocks
 
 import (
-	model "github.com/mattermost/mattermost-server/v6/model"
+	model "github.com/cjdelisle/matterfoss-server/v6/model"
 	mock "github.com/stretchr/testify/mock"
 )
 
diff --git a/store/storetest/mocks/UserAccessTokenStore.go b/store/storetest/mocks/UserAccessTokenStore.go
index 4cb4bbe21..1065097ce 100644
--- a/store/storetest/mocks/UserAccessTokenStore.go
+++ b/store/storetest/mocks/UserAccessTokenStore.go
@@ -5,7 +5,7 @@
 package mocks
 
 import (
-	model "github.com/mattermost/mattermost-server/v6/model"
+	model "github.com/cjdelisle/matterfoss-server/v6/model"
 	mock "github.com/stretchr/testify/mock"
 )
 
diff --git a/store/storetest/mocks/UserStore.go b/store/storetest/mocks/UserStore.go
index 3aa5d3c7b..5d24b8226 100644
--- a/store/storetest/mocks/UserStore.go
+++ b/store/storetest/mocks/UserStore.go
@@ -7,10 +7,10 @@ package mocks
 import (
 	context "context"
 
-	model "github.com/mattermost/mattermost-server/v6/model"
+	model "github.com/cjdelisle/matterfoss-server/v6/model"
 	mock "github.com/stretchr/testify/mock"
 
-	store "github.com/mattermost/mattermost-server/v6/store"
+	store "github.com/cjdelisle/matterfoss-server/v6/store"
 )
 
 // UserStore is an autogenerated mock type for the UserStore type
diff --git a/store/storetest/mocks/UserTermsOfServiceStore.go b/store/storetest/mocks/UserTermsOfServiceStore.go
index 099d0912a..603e37883 100644
--- a/store/storetest/mocks/UserTermsOfServiceStore.go
+++ b/store/storetest/mocks/UserTermsOfServiceStore.go
@@ -5,7 +5,7 @@
 package mocks
 
 import (
-	model "github.com/mattermost/mattermost-server/v6/model"
+	model "github.com/cjdelisle/matterfoss-server/v6/model"
 	mock "github.com/stretchr/testify/mock"
 )
 
diff --git a/store/storetest/mocks/WebhookStore.go b/store/storetest/mocks/WebhookStore.go
index 18e5efe4f..b9c192e89 100644
--- a/store/storetest/mocks/WebhookStore.go
+++ b/store/storetest/mocks/WebhookStore.go
@@ -5,7 +5,7 @@
 package mocks
 
 import (
-	model "github.com/mattermost/mattermost-server/v6/model"
+	model "github.com/cjdelisle/matterfoss-server/v6/model"
 	mock "github.com/stretchr/testify/mock"
 )
 
diff --git a/store/storetest/oauth_store.go b/store/storetest/oauth_store.go
index c45136d29..65cdf9bf0 100644
--- a/store/storetest/oauth_store.go
+++ b/store/storetest/oauth_store.go
@@ -10,8 +10,8 @@ import (
 	"github.com/stretchr/testify/assert"
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
 )
 
 func TestOAuthStore(t *testing.T, ss store.Store) {
diff --git a/store/storetest/plugin_store.go b/store/storetest/plugin_store.go
index 8cdfbacb9..024cffb05 100644
--- a/store/storetest/plugin_store.go
+++ b/store/storetest/plugin_store.go
@@ -10,8 +10,8 @@ import (
 	"github.com/stretchr/testify/assert"
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
 )
 
 func TestPluginStore(t *testing.T, ss store.Store, s SqlStore) {
diff --git a/store/storetest/post_store.go b/store/storetest/post_store.go
index 45ddc55f9..79cdb3406 100644
--- a/store/storetest/post_store.go
+++ b/store/storetest/post_store.go
@@ -14,9 +14,9 @@ import (
 	"github.com/stretchr/testify/assert"
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/store"
-	"github.com/mattermost/mattermost-server/v6/utils"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/utils"
 )
 
 func TestPostStore(t *testing.T, ss store.Store, s SqlStore) {
diff --git a/store/storetest/preference_store.go b/store/storetest/preference_store.go
index 5d645f345..1634c5c76 100644
--- a/store/storetest/preference_store.go
+++ b/store/storetest/preference_store.go
@@ -9,8 +9,8 @@ import (
 	"github.com/stretchr/testify/assert"
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
 )
 
 func TestPreferenceStore(t *testing.T, ss store.Store) {
diff --git a/store/storetest/product_notices_store.go b/store/storetest/product_notices_store.go
index fd3e945f1..0b45a17a8 100644
--- a/store/storetest/product_notices_store.go
+++ b/store/storetest/product_notices_store.go
@@ -8,8 +8,8 @@ import (
 
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
 )
 
 func TestProductNoticesStore(t *testing.T, ss store.Store) {
diff --git a/store/storetest/reaction_store.go b/store/storetest/reaction_store.go
index f9946521e..9d4d5799d 100644
--- a/store/storetest/reaction_store.go
+++ b/store/storetest/reaction_store.go
@@ -13,9 +13,9 @@ import (
 	"github.com/stretchr/testify/assert"
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/store"
-	"github.com/mattermost/mattermost-server/v6/store/retrylayer"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/store/retrylayer"
 )
 
 func TestReactionStore(t *testing.T, ss store.Store, s SqlStore) {
diff --git a/store/storetest/remote_cluster_store.go b/store/storetest/remote_cluster_store.go
index bb9962ebf..4ad5efbb7 100644
--- a/store/storetest/remote_cluster_store.go
+++ b/store/storetest/remote_cluster_store.go
@@ -7,8 +7,8 @@ import (
 	"strings"
 	"testing"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
 
 	"github.com/stretchr/testify/assert"
 	"github.com/stretchr/testify/require"
diff --git a/store/storetest/retention_policy_store.go b/store/storetest/retention_policy_store.go
index fbdd1e21e..ec301f2e3 100644
--- a/store/storetest/retention_policy_store.go
+++ b/store/storetest/retention_policy_store.go
@@ -8,8 +8,8 @@ import (
 	"strconv"
 	"testing"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
 	"github.com/stretchr/testify/require"
 )
 
diff --git a/store/storetest/role_store.go b/store/storetest/role_store.go
index b86e258d0..7ba6d0ec9 100644
--- a/store/storetest/role_store.go
+++ b/store/storetest/role_store.go
@@ -11,8 +11,8 @@ import (
 	"github.com/stretchr/testify/assert"
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
 )
 
 func TestRoleStore(t *testing.T, ss store.Store, s SqlStore) {
diff --git a/store/storetest/scheme_store.go b/store/storetest/scheme_store.go
index a63ab4c92..e72c23297 100644
--- a/store/storetest/scheme_store.go
+++ b/store/storetest/scheme_store.go
@@ -10,8 +10,8 @@ import (
 	"github.com/stretchr/testify/assert"
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
 )
 
 func TestSchemeStore(t *testing.T, ss store.Store) {
diff --git a/store/storetest/session_store.go b/store/storetest/session_store.go
index 3588f1693..627033d98 100644
--- a/store/storetest/session_store.go
+++ b/store/storetest/session_store.go
@@ -10,8 +10,8 @@ import (
 	"github.com/stretchr/testify/assert"
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
 )
 
 const (
diff --git a/store/storetest/settings.go b/store/storetest/settings.go
index f08b038ea..c8aef6ed0 100644
--- a/store/storetest/settings.go
+++ b/store/storetest/settings.go
@@ -16,7 +16,7 @@ import (
 	_ "github.com/lib/pq"
 	"github.com/pkg/errors"
 
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 const (
diff --git a/store/storetest/shared_channel_store.go b/store/storetest/shared_channel_store.go
index c4d0d91b2..36bb2c908 100644
--- a/store/storetest/shared_channel_store.go
+++ b/store/storetest/shared_channel_store.go
@@ -11,8 +11,8 @@ import (
 	"github.com/stretchr/testify/assert"
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
 )
 
 func TestSharedChannelStore(t *testing.T, ss store.Store, s SqlStore) {
diff --git a/store/storetest/status_store.go b/store/storetest/status_store.go
index 0e30ddaec..9847c29fe 100644
--- a/store/storetest/status_store.go
+++ b/store/storetest/status_store.go
@@ -9,8 +9,8 @@ import (
 
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
 )
 
 func TestStatusStore(t *testing.T, ss store.Store) {
diff --git a/store/storetest/store.go b/store/storetest/store.go
index f814f0a9b..849e5656a 100644
--- a/store/storetest/store.go
+++ b/store/storetest/store.go
@@ -9,9 +9,9 @@ import (
 
 	"github.com/stretchr/testify/mock"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/store"
-	"github.com/mattermost/mattermost-server/v6/store/storetest/mocks"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/store/storetest/mocks"
 )
 
 // Store can be used to provide mock stores for testing.
diff --git a/store/storetest/storetestlib.go b/store/storetest/storetestlib.go
index a0a2f9fdb..917edf88b 100644
--- a/store/storetest/storetestlib.go
+++ b/store/storetest/storetestlib.go
@@ -4,7 +4,7 @@
 package storetest
 
 import (
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 func MakeEmail() string {
diff --git a/store/storetest/system_store.go b/store/storetest/system_store.go
index b49cf1715..2e77b3bb9 100644
--- a/store/storetest/system_store.go
+++ b/store/storetest/system_store.go
@@ -10,8 +10,8 @@ import (
 	"github.com/stretchr/testify/assert"
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
 )
 
 func TestSystemStore(t *testing.T, ss store.Store) {
diff --git a/store/storetest/team_store.go b/store/storetest/team_store.go
index 7f7960941..2bcdd6492 100644
--- a/store/storetest/team_store.go
+++ b/store/storetest/team_store.go
@@ -13,8 +13,8 @@ import (
 	"github.com/stretchr/testify/assert"
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
 )
 
 func cleanupTeamStore(t *testing.T, ss store.Store) {
diff --git a/store/storetest/terms_of_service_store.go b/store/storetest/terms_of_service_store.go
index 9705efa77..1a53e1013 100644
--- a/store/storetest/terms_of_service_store.go
+++ b/store/storetest/terms_of_service_store.go
@@ -9,8 +9,8 @@ import (
 	"github.com/stretchr/testify/assert"
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
 )
 
 func TestTermsOfServiceStore(t *testing.T, ss store.Store) {
diff --git a/store/storetest/thread_store.go b/store/storetest/thread_store.go
index 1ef77780b..893648002 100644
--- a/store/storetest/thread_store.go
+++ b/store/storetest/thread_store.go
@@ -12,8 +12,8 @@ import (
 	"github.com/stretchr/testify/assert"
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
 )
 
 func TestThreadStore(t *testing.T, ss store.Store, s SqlStore) {
diff --git a/store/storetest/tokens_store.go b/store/storetest/tokens_store.go
index 0704a1139..6f87a3250 100644
--- a/store/storetest/tokens_store.go
+++ b/store/storetest/tokens_store.go
@@ -9,8 +9,8 @@ import (
 	"github.com/stretchr/testify/assert"
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
 )
 
 func TestTokensStore(t *testing.T, ss store.Store) {
diff --git a/store/storetest/upload_session_store.go b/store/storetest/upload_session_store.go
index 5999ca59c..a9422a7cb 100644
--- a/store/storetest/upload_session_store.go
+++ b/store/storetest/upload_session_store.go
@@ -9,8 +9,8 @@ import (
 
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
 )
 
 func TestUploadSessionStore(t *testing.T, ss store.Store) {
diff --git a/store/storetest/user_access_token_store.go b/store/storetest/user_access_token_store.go
index fec7ff48e..32d6f9979 100644
--- a/store/storetest/user_access_token_store.go
+++ b/store/storetest/user_access_token_store.go
@@ -9,8 +9,8 @@ import (
 
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
 )
 
 func TestUserAccessTokenStore(t *testing.T, ss store.Store) {
diff --git a/store/storetest/user_store.go b/store/storetest/user_store.go
index 962d63dfe..ea826ad94 100644
--- a/store/storetest/user_store.go
+++ b/store/storetest/user_store.go
@@ -13,8 +13,8 @@ import (
 	"github.com/stretchr/testify/assert"
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
 )
 
 const (
diff --git a/store/storetest/user_terms_of_service.go b/store/storetest/user_terms_of_service.go
index d0ed6a678..4a20c9872 100644
--- a/store/storetest/user_terms_of_service.go
+++ b/store/storetest/user_terms_of_service.go
@@ -10,8 +10,8 @@ import (
 	"github.com/stretchr/testify/assert"
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
 )
 
 func TestUserTermsOfServiceStore(t *testing.T, ss store.Store) {
diff --git a/store/storetest/utils.go b/store/storetest/utils.go
index 7b8f06c3f..7a0a61ee6 100644
--- a/store/storetest/utils.go
+++ b/store/storetest/utils.go
@@ -4,7 +4,7 @@
 package storetest
 
 import (
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 // This function has a copy of it in app/helper_test
diff --git a/store/storetest/webhook_store.go b/store/storetest/webhook_store.go
index 08a0f09ed..2e8a5f7bf 100644
--- a/store/storetest/webhook_store.go
+++ b/store/storetest/webhook_store.go
@@ -10,8 +10,8 @@ import (
 
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
 )
 
 func TestWebhookStore(t *testing.T, ss store.Store) {
diff --git a/store/timerlayer/timerlayer.go b/store/timerlayer/timerlayer.go
index b03eeeb28..307ea90ff 100644
--- a/store/timerlayer/timerlayer.go
+++ b/store/timerlayer/timerlayer.go
@@ -10,9 +10,9 @@ import (
 	"context"
 	timemodule "time"
 
-	"github.com/mattermost/mattermost-server/v6/einterfaces"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/einterfaces"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
 )
 
 type TimerLayer struct {
diff --git a/templates/globalrelay_compliance_export.html b/templates/globalrelay_compliance_export.html
index 538d8517c..264026b28 100644
--- a/templates/globalrelay_compliance_export.html
+++ b/templates/globalrelay_compliance_export.html
@@ -57,7 +57,7 @@
     }
 </style>
 
-<h1>Mattermost Compliance Export</h1>
+<h1>Matterfoss Compliance Export</h1>
 
 <h2>Conversation Summary</h2>
 <div class="summary-list">
diff --git a/templates/unsupported_browser.html b/templates/unsupported_browser.html
index 53e81baed..5270414b2 100644
--- a/templates/unsupported_browser.html
+++ b/templates/unsupported_browser.html
@@ -1,23 +1,23 @@
 
 {{define "unsupported_browser-browser"}}
-    <div 
-        class='browser-container' 
-        data-mattermost-hover='browser'
+    <div
+        class='browser-container'
+        data-matterfoss-hover='browser'
     >
         <div class='browser'>
-            <img 
-                class='browser-image' 
+            <img
+                class='browser-image'
                 src='{{.LogoSrc}}'
             />
             <div class='browser-top-text'>{{.Title}}</div>
             <div class='browser-bottom-text'>{{.SupportedVersionString}}</div>
         </div>
-        <div 
-            class='browser browser-hover hidden' 
-            data-mattermost-click='{{.Src}}'
+        <div
+            class='browser browser-hover hidden'
+            data-matterfoss-click='{{.Src}}'
         >
-            <img 
-                class='browser-image' 
+            <img
+                class='browser-image'
                 src='{{.LogoSrc}}'
             />
             <div class='browser-top-text'>{{.GetLatestString}}</div>
@@ -25,33 +25,33 @@
     </div>
 {{end}}
 {{define "unsupported_browser-system_browser"}}
-    <div 
-        class='browser-container' 
-        data-mattermost-hover='browser'
+    <div
+        class='browser-container'
+        data-matterfoss-hover='browser'
     >
         <div class='browser'>
-            <img 
-                class='browser-image' 
+            <img
+                class='browser-image'
                 src='{{.LogoSrc}}'
             />
             <div class='browser-top-text'>{{.Title}}</div>
             <div class='browser-bottom-text'>{{.SupportedVersionString}}</div>
         </div>
         <div class='browser browser-hover no-pointer hidden'>
-            <img 
-                class='browser-image' 
+            <img
+                class='browser-image'
                 src='{{.LogoSrc}}'
             />
-            <div 
-                class='browser-top-text pointer' 
-                data-mattermost-click='{{.LinkOpen}}'
+            <div
+                class='browser-top-text pointer'
+                data-matterfoss-click='{{.LinkOpen}}'
             >
                 <p>{{.LabelOpen}}</p>
             </div>
             <div class='browser-bottom-text'>{{.OrString}}</div>
-            <div 
-                class='browser-top-text pointer' 
-                data-mattermost-click='{{.LinkMakeDefault}}'
+            <div
+                class='browser-top-text pointer'
+                data-matterfoss-click='{{.LinkMakeDefault}}'
             >
                 <p>{{.MakeDefaultString}}</p>
             </div>
@@ -59,30 +59,30 @@
     </div>
 {{end}}
 {{define "unsupported_browser-app"}}
-    <div 
-        class='mattermost-app-container' 
-        data-mattermost-hover='mattermost-app'
+    <div
+        class='matterfoss-app-container'
+        data-matterfoss-hover='matterfoss-app'
     >
-        <div class='mattermost-app'>
-            <img 
-                class='mattermost-app-image' 
+        <div class='matterfoss-app'>
+            <img
+                class='matterfoss-app-image'
                 src='{{.LogoSrc}}'
             />
             <div class='browser-top-text'>{{.Title}}</div>
             <div class='browser-bottom-text'>{{.SupportedVersionString}}</div>
         </div>
-        <div class='mattermost-app mattermost-app-hover hidden'>
-            <img 
-                class='mattermost-app-image' 
+        <div class='matterfoss-app matterfoss-app-hover hidden'>
+            <img
+                class='matterfoss-app-image'
                 src='{{.LogoSrc}}'
             />
-            <button 
-                class='mattermost-app-button' 
-                data-mattermost-click='{{.Link}}'
+            <button
+                class='matterfoss-app-button'
+                data-matterfoss-click='{{.Link}}'
             >
                 {{.Label}}
             </button>
-            <div class='mattermost-app-hover-alt'>
+            <div class='matterfoss-app-hover-alt'>
                 <a href='{{.InstallGuideLink}}' target='_blank'>{{.InstallGuide}}</a>
             </div>
         </div>
@@ -99,52 +99,52 @@
                 .hidden {
                     display: none;
                 }
-                .content {	
+                .content {
                     height: 540px;
                     width: 100%;
                     position: absolute;
                     top: 50%;
                     margin-top: -270px;
                 }
-                .we-no-longer-support {	
-                    height: 55px;	
-                    color: #3D3C40;	
-                    font-family: "Open Sans";	
-                    font-size: 40px;	
-                    font-weight: 600;	
-                    letter-spacing: -0.2px;	
-                    line-height: 55px;	
+                .we-no-longer-support {
+                    height: 55px;
+                    color: #3D3C40;
+                    font-family: "Open Sans";
+                    font-size: 40px;
+                    font-weight: 600;
+                    letter-spacing: -0.2px;
+                    line-height: 55px;
                     text-align: center;
                 }
-                .download-the-matterm {	
-                    height: 26px;	
-                    color: #3D3C40;	
-                    font-family: "Open Sans";	
-                    font-size: 20px;	
-                    line-height: 26px;	
+                .download-the-matterm {
+                    height: 26px;
+                    color: #3D3C40;
+                    font-family: "Open Sans";
+                    font-size: 20px;
+                    line-height: 26px;
                     text-align: center;
                     padding-top: 24px;
                 }
-                .downloads {	
-                    height: 212px;	
+                .downloads {
+                    height: 212px;
                     width: 100%;
                     padding-top: 40px;
                     text-align: center;
                     font-size: 0;
                 }
-                .learn-more-about-sup {	
+                .learn-more-about-sup {
                     height: 22px;
-                    width: 100%;	
-                    line-height: 22px;	
+                    width: 100%;
+                    line-height: 22px;
                     text-align: center;
                     position: absolute;
                     bottom: 0px;
                 }
-                .learn-more-about-sup a {	
+                .learn-more-about-sup a {
                     color: #145DBF;
                     text-decoration: none;
-                    font-family: "Open Sans";	
-                    font-size: 14px;	
+                    font-family: "Open Sans";
+                    font-size: 14px;
                 }
                 .learn-more-about-sup a:hover {
                     text-decoration: underline;
@@ -160,25 +160,25 @@
                     position: relative;
                     top: 24px;
                 }
-                .mattermost-app {	
-                    height: 148px;	
+                .matterfoss-app {
+                    height: 148px;
                     width: 188px;
                     padding: 32px 30px;
                 }
-                .mattermost-app-container {	
-                    height: 212px;	
+                .matterfoss-app-container {
+                    height: 212px;
                     width: 248px;
                     display: inline-block;
                     vertical-align: top;
                 }
-                .browser {	
-                    height: 212px;	
+                .browser {
+                    height: 212px;
                     width: 164px;
                     padding-left: 14px;
                     padding-right: 14px;
                 }
-                .browser-container {	
-                    height: 212px;	
+                .browser-container {
+                    height: 212px;
                     width: 192px;
                     display: inline-block;
                     vertical-align: top;
@@ -188,14 +188,14 @@
                     height: 80px;
                     padding: 32px 42px 24px 42px;
                 }
-                .mattermost-app-image {
+                .matterfoss-app-image {
                     height: 80px;
                     padding: 0px 54px 24px 54px;
                 }
-                .browser-bottom-text {	
+                .browser-bottom-text {
                     font-family: "Open Sans";
-                    font-size: 14px;	
-                    line-height: 22px;	
+                    font-size: 14px;
+                    line-height: 22px;
                     text-align: center;
                     color: rgba(61,60,64,0.7);
                 }
@@ -226,20 +226,20 @@
                     width: 128px;
                     padding: 0 18px;
                 }
-                .mattermost-app-button {
-                    height: 36px;	
-                    width: 156px;	
+                .matterfoss-app-button {
+                    height: 36px;
+                    width: 156px;
                     border: 0;
-                    border-radius: 4px;	
+                    border-radius: 4px;
                     background-color: #145DBF;
                     padding: 8px 16px;
-                    color: #FFFFFF;	
-                    font-family: "Open Sans";	
-                    font-size: 14px;	
+                    color: #FFFFFF;
+                    font-family: "Open Sans";
+                    font-size: 14px;
                     line-height: 20px;
                     cursor: pointer;
                 }
-                .mattermost-app.mattermost-app-hover {
+                .matterfoss-app.matterfoss-app-hover {
                     padding-bottom: 0;
                 }
                 .no-pointer {
@@ -248,28 +248,28 @@
                 .pointer {
                     cursor: pointer;
                 }
-                .mattermost-app-hover-alt {
+                .matterfoss-app-hover-alt {
                     height: 18px;
-                    font-family: "Open Sans";	
-                    font-size: 12px;	
-                    line-height: 18px;	
+                    font-family: "Open Sans";
+                    font-size: 12px;
+                    line-height: 18px;
                     text-align: center;
                     padding-top: 10px;
                 }
-                .mattermost-app-hover-alt a {
+                .matterfoss-app-hover-alt a {
                     text-decoration: none;
-                    color: #145DBF;	
+                    color: #145DBF;
                 }
-                .mattermost-app-hover-alt a:hover {
+                .matterfoss-app-hover-alt a:hover {
                     text-decoration: underline;
                 }
             </style>
-            <link 
-                href='https://fonts.googleapis.com/css?family=Open+Sans&display=swap' 
+            <link
+                href='https://fonts.googleapis.com/css?family=Open+Sans&display=swap'
                 rel='stylesheet'
             />
-            <script 
-                type='text/javascript' 
+            <script
+                type='text/javascript'
                 src='/unsupported_browser.js'
             >
             </script>
diff --git a/templates/unsupported_browser.js b/templates/unsupported_browser.js
index ecd82fca7..78b9985ab 100644
--- a/templates/unsupported_browser.js
+++ b/templates/unsupported_browser.js
@@ -18,21 +18,21 @@ function onUnHover(element, prefix) {
 }
 
 document.addEventListener('DOMContentLoaded', function () {
-    var hovers = document.querySelectorAll("div[data-mattermost-hover]");
+    var hovers = document.querySelectorAll("div[data-matterfoss-hover]");
     for (var i = 0; i < hovers.length; i++) {
         var element = hovers[i];
         element.addEventListener("mouseover", function(e) {
-            onHover(e.currentTarget, e.currentTarget.getAttribute("data-mattermost-hover"));
+            onHover(e.currentTarget, e.currentTarget.getAttribute("data-matterfoss-hover"));
         });
         element.addEventListener("mouseout", function(e) {
-            onUnHover(e.currentTarget, e.currentTarget.getAttribute("data-mattermost-hover"))
+            onUnHover(e.currentTarget, e.currentTarget.getAttribute("data-matterfoss-hover"))
         });
     }
-    var clicks = document.querySelectorAll("div[data-mattermost-click], button[data-mattermost-click]");
+    var clicks = document.querySelectorAll("div[data-matterfoss-click], button[data-matterfoss-click]");
     for (var i = 0; i < clicks.length; i++) {
         var element = clicks[i];
         element.addEventListener("click", function(e) {
-            window.open(e.currentTarget.getAttribute('data-mattermost-click'), '_blank');
+            window.open(e.currentTarget.getAttribute('data-matterfoss-click'), '_blank');
         });
     };
-});
\ No newline at end of file
+});
diff --git a/testlib/cluster.go b/testlib/cluster.go
index fd1ce7369..dea0951e0 100644
--- a/testlib/cluster.go
+++ b/testlib/cluster.go
@@ -6,8 +6,8 @@ package testlib
 import (
 	"sync"
 
-	"github.com/mattermost/mattermost-server/v6/einterfaces"
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/einterfaces"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 type FakeClusterInterface struct {
diff --git a/testlib/helper.go b/testlib/helper.go
index 72418f7f4..26299afb8 100644
--- a/testlib/helper.go
+++ b/testlib/helper.go
@@ -14,13 +14,13 @@ import (
 
 	"github.com/pkg/errors"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/services/searchengine"
-	"github.com/mattermost/mattermost-server/v6/store"
-	"github.com/mattermost/mattermost-server/v6/store/searchlayer"
-	"github.com/mattermost/mattermost-server/v6/store/sqlstore"
-	"github.com/mattermost/mattermost-server/v6/store/storetest"
-	"github.com/mattermost/mattermost-server/v6/utils"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/services/searchengine"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/store/searchlayer"
+	"github.com/cjdelisle/matterfoss-server/v6/store/sqlstore"
+	"github.com/cjdelisle/matterfoss-server/v6/store/storetest"
+	"github.com/cjdelisle/matterfoss-server/v6/utils"
 )
 
 type MainHelper struct {
diff --git a/testlib/resources.go b/testlib/resources.go
index 6b9c6ce14..97ab38f6d 100644
--- a/testlib/resources.go
+++ b/testlib/resources.go
@@ -13,10 +13,10 @@ import (
 
 	"github.com/pkg/errors"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/filestore"
-	"github.com/mattermost/mattermost-server/v6/utils"
-	"github.com/mattermost/mattermost-server/v6/utils/fileutils"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/filestore"
+	"github.com/cjdelisle/matterfoss-server/v6/utils"
+	"github.com/cjdelisle/matterfoss-server/v6/utils/fileutils"
 )
 
 const (
diff --git a/testlib/store.go b/testlib/store.go
index ee2cb31d2..8e6dc1e0d 100644
--- a/testlib/store.go
+++ b/testlib/store.go
@@ -7,10 +7,10 @@ import (
 	"net/http"
 	"strconv"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/plugin/plugintest/mock"
-	"github.com/mattermost/mattermost-server/v6/store"
-	"github.com/mattermost/mattermost-server/v6/store/storetest/mocks"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/plugin/plugintest/mock"
+	"github.com/cjdelisle/matterfoss-server/v6/store"
+	"github.com/cjdelisle/matterfoss-server/v6/store/storetest/mocks"
 )
 
 type TestStore struct {
diff --git a/tests/README.md b/tests/README.md
index 3a464bf03..920636d8b 100644
--- a/tests/README.md
+++ b/tests/README.md
@@ -1,21 +1,21 @@
 # Testing Text Processing  
-The text processing tests located in the [doc/developer/tests folder](https://github.com/mattermost/platform/tree/master/doc/developer/tests) are designed for use with the `/test url` command. This command posts the raw contents of a specified .md file in the doc/developer/test folder into Mattermost.
+The text processing tests located in the [doc/developer/tests folder](https://github.com/matterfoss/platform/tree/master/doc/developer/tests) are designed for use with the `/test url` command. This command posts the raw contents of a specified .md file in the doc/developer/test folder into Matterfoss.
 
 ## Turning on /test  
 Access the **System Console** from the Main Menu. Under *Service Settings* make sure that *Enable Testing* is set to `true`, then click **Save**. You may also change this setting from `config.json` by setting `”EnableTesting”: true`. Changing this setting requires a server restart to take effect.
 
 ## Running the Tests  
-In the text input box in Mattermost, type: `/test url [file-name-in-testing-folder].md`. Some examples:
+In the text input box in Matterfoss, type: `/test url [file-name-in-testing-folder].md`. Some examples:
 
 `/test url test-emoticons.md`  
 `/test url test-links.md`
 
 #### Notes:    
-1. If a test has prerequisites, make sure your Mattermost setup meets the requirements described at the top of the test file.
+1. If a test has prerequisites, make sure your Matterfoss setup meets the requirements described at the top of the test file.
 2. Some tests are over 4000 characters in length and will render across multiple posts.
 
 ## Manual Testing  
-It is possible to manually test specific sections of any test, instead of using the /test command. Do this by clicking **Raw** in the header for the file when it’s open in GitHub, then copy and paste any section into Mattermost to post it. Manual testing only supports sections of 4000 characters or less per post.
+It is possible to manually test specific sections of any test, instead of using the /test command. Do this by clicking **Raw** in the header for the file when it’s open in GitHub, then copy and paste any section into Matterfoss to post it. Manual testing only supports sections of 4000 characters or less per post.
 
 ## Test plugins
 
diff --git a/tests/channel-role-has-permission.csv b/tests/channel-role-has-permission.csv
index 98aa22aea..fbd385834 100644
--- a/tests/channel-role-has-permission.csv
+++ b/tests/channel-role-has-permission.csv
@@ -14,4 +14,4 @@ FALSE,TRUE,FALSE,FALSE,FALSE
 FALSE,FALSE,TRUE,TRUE,FALSE
 FALSE,FALSE,TRUE,FALSE,FALSE
 FALSE,FALSE,FALSE,TRUE,FALSE
-FALSE,FALSE,FALSE,FALSE,FALSE
\ No newline at end of file
+FALSE,FALSE,FALSE,FALSE,FALSE
diff --git a/tests/export_test.zip b/tests/export_test.zip
deleted file mode 100644
index 41a20509e71043506f9690e2ac4ac3f15417d344..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 386797
zcmV*2KzF}TO9KQH00;mG0000000000000000000001N;C0BLP-Z*p`lYIARHZ0!AO
zbL7U6KMKEpJ_R^0pTC4{0DX1DiDUV)UVE)w9ofhG!n2_$cGr+4bpsq+W`=h7yPv4M
zRAu4PXp&7fW`+^FmNY{Gg{rK~U;gs;&o}k`oqqGHHy?CanIeDljr+G>CI9;WxxcQp
zI=uM?|M9DTzRA_W{;Ar1o4onv&CXPJdv*U4{i)uY8=dcr{dxTD|F%D*t8HoSYIyV;
zT}P&>b!7JY<`9+ouGF_W-|5oSk=mR0joC#ek4k-rOs(EG+Wyx;eKH3fY135kn{VEz
z{l574Q*o#BpG^M2)cVb@-l=`1|24YqQk$)@ORT<~b=Q9|c~c!*{I1v+r9RkI?aWPX
zs>&RSD*B-JrjB%Th~76!M|qJ)#UVFU9N{liQK`%35N(?~vop1-b#zyhWf8q^jEdBq
zE{!@wx!&rkvVU!^n<~mx-Bgik>X@JZLFY!-^sD;Q-QH}~brIG2a95Nn`cUkfyINJz
zwN|y#F)XN3`c6j*pL3_nce;enw|@|+>&V<y&EYCK6nkCOMpco@&A~(szlJ~HgWku{
ziCe$DRe7%WZ@zK=_N#x=L9`EmHvUeR)t%WIRh#PDw0khH3cD-*aDI66&6``TcDe)^
z-bYoF*TENV8+%Z3biG&k&eX<K(fg*@(I-WDv)?N?uu|1<5;1M1jw-#2RBeyB*14{m
zvL&b>!KJ>_`@O0oUB~WlbXgXqecDbRqFf#12AVqBnQd)fYQJTt4w0(t;oBdGL2TZs
zt+wwsc@2x8v##+6tw@w`lyAOybJvu2MFp3UkG^gWaIV`Tuk`x{e!5b3M(4G*t9*0n
zDbe+&-M7y&->$mHlIv<~n!Fx3mG_N_c6zUKQycruQC?gddl$A%rShE>QTvVWo1%&i
z>Lxd|J#_EwVZ~8p>elAN=DcsLtnRJETFHK=wq{RKjsK_XsCf6z$`t&exvSK{J}h>B
zd{D6Qk*;d1jo?aYdp)CDWpC?VH9M8p2Gms99AXqPd#mjKH?`RIIMSbVxrNJH<obY%
z)XEAWy#KDSx}vEfvvU{LNi}>VE6>*1?jl`Okw#638^a6t8_C}vOG!8sJ0n#Nz82o+
zR0aRI_P?pEsPY#Ig{P}JrhS4FX?6zReQUP%^W9Y<>1%Q;exMLbeTe-I<n~^w11ojV
zEIK!IRp1)z)pc>Qu=cAIzw$m!uMWBn6}^*MD~al0KhjE3c&h%o((TvzuBl>s(1o=T
z(Os!@rBP_?p_&{uY#i7NUDM;i;Ml7{JAlg9G^MtG3m2m<YIR_lB@x^<`#WVH@xj!v
zy;fXRRW%2l?-ZI*`w1k^G3qNT=cJf+rm9W8wJWywQriVui`&#uRqUIZWD^XUsiIx8
zwI_$y6)g%XSEt?hOr0&V+Afr2{VC8(tT5@>_SLGXukeK$FKqY=DpFf3@b;(iKCl>{
zuGsozr7k|^-&XG%RqC#&{I&R)M}OhJ?30+_GoQGWVrS}avmSwMhO{gi7Pe-_iW~_*
zxc|9^Ez^6HI&tCQl-<Uwow+mB*2EFsQmaMa?+}o%^1;{god>wnMlf2DB1W|fKT?^4
zv8&VcOj8*YE4r`IyXMB!jCg9)D-ubGE65s?9xc9yg$hv5lQoIEEZ@$1Fz?X0R86%t
zccunqR+_@vA8QG6b8GgzasIo=(&Md&={)hn6oF;6yP`jlcq!1uyo+#qP@kHns*BiN
zXgm}Io^YK|Sryx@(pyy<w~c6+G$<!~OsJOfqN?p<T1PG5iMJ#4X)&B5UH5HKS|e0B
z#Hs1&2)EddvyFD*63ViGbecW}x5&X`hCNSJ4aK{6-`2&Q*>+F<zu&$4_OJ9;&#e~F
zD1E!^uHt=T1_TgnwYLgnZpGDLJfW^T@P&aes1$X@wnK=CJ<H}0nFH9ENCRZDsOKuO
zqI)0-1{{QED=c7mnt0i_#Q}5;B4|bnvG@X$Z_UoyKViN!x<`ly8QB*({25(_D>9QB
zA+@wAb`t_{X_a0<4wStoD2HT`==Cw+dXvM3$fxnv!sYX76gNU%HoNtp@lKYC79h7K
z_}j&Rp9G+1KqkHC!Q1UFWUdbdYzP6Mz&t3Sxv#vl1OI2S6rw|cVF;O^JR#bNabv6~
zNtFdBR57l%PqxBiRf0pQy6!k}ETHZUpJLPl_V5Gsh)4^xt`+mGzN?$kpk2dPx(|)T
zdBe@n4gov6Cp4XtM_7?=;T;eX@H%*_*)IpnR{{*P?oNQ0;g8|~N22_E&}9+gA-E?2
z47CCYC+NI+`zPWcnP8#a063?2ux9`dVl-Cdv%uvjQC_`TA`|5FH=KIx9<4v!JyNOx
zmh`DOvN^*dZ6PfzoNSJDNtjlNrTyIkqAhlOnlY=u(8FXSCwyr*oj58$*E#Bi#pNnE
zc{b^Y?pac4ox!y#cD-DH2iySYc5Xo*?D9aW!Ih33Jpr~ETx=^Wp|=6|)7>S)_W<Tj
zH;&;+*(dgSRUncB*2sFXLT{_4hD!yi1|gAE40n6A)e3Q?6|udkt=EGhM@K9iZ#Y5g
zUpcu2qbFG)izgMTfFh6Sy@ad4ED1pd8wP*MkJX=|oxV19$H5Wn7)mDZ{K+_ldRG=7
z%ueUE^NyGdiQRVwObw7erjG7ZX##`7cMFwcOa|6bEB@V}0pWjGFNPEa%dM4^gUQW7
zd5suLUE;pl8+?0r&;<|*Gt_wWnP4su$HO-vG;?^^(H;a!#R<rR!_xqGSHwX5TI`At
zp{OF0$8LWlOMxaS#+}{Pa63S<02UTIQ&{sI_p%}G=-@ixQ%PM1s2J=V9)h|){Sx&<
zJAV7Oo9>13J3XNM98TuV1)T!^78@-5a2B{w(b2~71p@`rVxfVu6C`Gzs`FHU;I#a|
z0dT~HUOjQMbXE7^9<2tAL*cIvD@(k|!FL3pu-x97T5oHFL)yx{RUOt+?#;Ee!;ZHh
z)s4ROyXHo@Eq&sLqA^@|KNStuz~_P?r(5Wu4gs`EdjXf?9OGva=c-!XrK*MOSSS!~
z9P1g<CXQ1rD%9atpCPvkH`n1S2uCm@$XJ;eFEW@O#h_?;Rdz+liNGSj;TY@!pica8
zT6G*CZ@diF=Fqi}d>u38sQRs{i0MVB_vr9(rw&g%U?wm6;%FdF14qn;j&W(*9yPV(
z+^wdw`U@mNK#y%vmd%}Y<CybiW6K6J#68k9Fy~`&3CKMnesAvBiRV~IK_ccgf>6HJ
zaR?-e=zRlPyDhMlTe*0ouH?VRo)=<2h2s=%D^9<iE#TACeRmQ-#lU&tO=ubEsNq|I
zzOTG-=+6q!>Q2U;RqM>Hh6=qkjkgT}j$Hu;FoJz{Vxb7-6IJhG3h334TCgY#Zx@>!
z@105GuGJOlL4jti;zT+ZNn<d=LIjjYbO3o3(v--kJ6fO;K@>u2{$j`Q_Zqo%=D*<q
z<Q7Vb@R5hl-`K|jTA>{ffH1DYG@J|iDsZm|bi$Vc_^_Yjv6mGYh)J@O#WbPWNdjF4
z+fdF?(17^y)+zwdOqvi)8&dYjn1C~G_ZAKo!ju-=#i4gu5w@=M&ZB2GLH1ObygwZS
zg!>OfW*<soKYYORaA80fJ%HFZZ6z8DU^zih@LD<u&eoJwNbGntI!J5aPz|!A^4~!C
z6U+zTG4ftSRIy(%<3rFhLb2wh26h>kS#LRs&Zr68LeL1JKIC@VbM%TtK{(UOqc}cV
zAYD>-@vmCixeg99pmNME4nnVnfdB_`$@z32#JeoPx^%wbFybh1ECd0gWeApoM#Mlp
zR>fZ=7Stg^%t7@<ft(Q;GB%+l0L&L6ewVaBuA&8sC=D1)*DV*}3W+DU`5kAK$P<hR
zB2C3klUDe4XC>I7ln+4+1_5Bk42&lUYk@A5l$Ho_AoJV`my=pWi$+?AX)IzJ+?@$Q
zuor*+LH|xGyWT>fVWJf>T19_XL(m_>PEN5PvkLo7zk?pSzc^O`z7hf+#%WOj$1+*R
z-<(Iv8tCl4lp9h+13Fb+ShQEQi~Rz*Ae1EMO98P-2`)g>;0~dOX{~;YJLNx*HqL4^
ze-@lX;`m4cCk|hs5}@EEKPu2Lq)reXd8hy@CnxdBGoW-~B%nbx#&|5$ki;!DH71ti
zA9P*=GbzI#ryf?n?@;PPUpfvL$N|m3w?>Mqs$G(kqbOrCW)!`Fo9$qi)xSYX3E=>B
zO&+l$%h}S9TL>N~+zJq5Vk-;C(c)-}h}hslgd!u4j174md%farGsjiQruyUubVERv
zya$3mjafRZ$Ydb85&{KLTkrrO)64tS7)T{Xyrqahn@aZ*NFyDF8$b~_D~Kslc^FgD
zl`gI8(&A+pAMmBakEB!eVqaOva<a6As)1B-pM%;Af!+5_A@vs^{dVBrE43@iv~q_A
z`_Tdk2*?yDR@_5HzB&Fhd+iN^RSE=EfULbINbyUMg3z^XN3!8YV1^A7M$WqtqEF}>
zO&D7*VJ9r23YbI9xojW>U>q$t@^M0G1GK`peQ*hK1Xr=Mr2$>)W9+C`3CAgXZ7WF>
z(1Ggsgh40@Hy%xAkj6)R3ni!uc16ilJo|B+<yz1U_P!9_4`<8aZ^_F+U~12jawg$(
za2?tL5_k1oWSBti<5L`;CCuMcx_t8u{^M8wgn!aAZ|!!*w@qHdPw0a(d-{cM)Ag?_
zb-3H>_@L@qmxrRN<85(x^Nlsuw?9?7{9v~F&9AJA{^m_?w!hF*-+c4tohhrDSN<RN
zEpNVgvsdEJ_?>q}Whkrp4?5SS+DG53T;0H5mR5mSw0~dK`tTEd$iCRBy?qEg)rv%|
ze^T|EU(GPjx_a}gzqd2Q`APQg`8jkL!H@eKQ~nM5DgLFrsLi|kpYF=yuClwi)739^
zac51Ney5tf)kufp+Q0(EAF1+}pPIbXY6n_*|K?xcym_ZS6s5>r{^p<E801Bl5l{{7
zm8jjp<k3ae6*@;3-6Cn7UUVUK*|a2vowXNT2JXlI${h)@;;A>!WAxzHUhpIQCv@rn
zCM5d|x-YsxA`k4M>zI%t2;!$Nx)RU?|NF21{pO8@wzVqnf2s|v3D#&WrpbT#>8{it
zjQ$9Bv4ptJL06T!(LWK=u<PAxmHP|IfAiC!*xBc8Ey6AJ&O(r;E=r^JKUKB1ACMmX
zyn}T<3N+X7XFpX%lkfae7<%x^coY0D;vfBV*HpJZRkg)@b}v4vdkL%f_qWBt{$>S1
ztPimF^rWAD(f1W1q>~`h&qc24Tb0KjRb9bC0+h5^JQgMW^`o)Bus2oR226jVceXIo
z|L_U~X8H>tqbmB&DkM|YrK*cE`r{wF;0aaM%ONR_QB6p7`h3Ngzn`BMwtLZ)Oh}1e
z49$I!Fp9HeF1m<T*~CTH;<ITkyNp-##`moUG!cY29Wxb&JGHHcQPaC-zwbdzo6Y76
z#Z0QY-Rt}KT9@U08!#p5V*yheC4C2PX<?+_&^rZ0`cdDQ3SevWUrkx*i||SlL_<F0
zc7dBGmcdEf6WSV|;&IWfnFvyxfSNuH7NNw9UBxLOBv)qpqO0h2NG^^_CP8dnT-K*R
zC>;Su4`-AfiH^QlK1t<ft7BCjs=6%ln+`sDG@;aCk>E`&eDs}oufRzEz1=o<;QOk5
z^w(QmsypPRCQ2ebtN6Fn<AqqGlX23EuHqGv^z6uM;O%K2F)_wyB6ujM%$bmLbc8*+
z;HoaJ5zfOUJv#pO<+4dX>rx-?<Bw*)H|o$6gPYIK2ASYh?Xa7Cu?)TG+!ST>+oGzY
z@3z~b$!nGOV5XOWNt32>UUU@~B5zu#@#6Yu0zs`WEk$V}z~CZ8N$V_+f|F-m$OGWW
zi>_lr7yc_@j*g(A<O{_@rMf>9`7TyXRhteF$~NZ$LO<er+T;<xHHfZNT9w<|=)0;i
zl|?{NPx8^rV4%yZ<_lqu_A(})#r}ehVw=r-O?x^cA{tGUeu2-J7<)95Z}ftaKT%%m
z6|g-9Ch?y?m^1qNvX4|*<nc#U?mGBr`B;4P-3RqS>rMueeN!h%8{R8<BDL35^rOBj
zp$1pg=EJmdkX}I4znL0UH5H)tibf{HSDg(OeI7Z-7la}gp|D<o$mmjzGDj~iFXsYC
zPau-MT$r?1O{wCK>L!Pu2&>x87E$}NeM<)-(K`i5`gfD7d~4J``fm5ZRM5WpA_!>;
z;AA2hN5dHD#WlfaL~Xt3GA?d9&H$DMbD%FMWs_i%Cc@WD0;^qI&`-ojFR+r=M5AXy
zL>yduSA6PZWv|W!i25UI{|>Kw#X|#}(QAp=XA6fectjVs8D{`TBgxqp+}&w~{yq=J
z?M0Vyaq*uxWEvup9*dd2x<Ff5T<fxqD|4tik+$>UC3r~-F8u{xDe%&t^^L_!oP+dy
zXz8>X<JVBzD|+i$#&mPUFO{2JWAD1>#!1im4U;5~UIEd`MAi%Hp{Xf=7Xe0JC7E>7
zXeglP1;T%y3l#lFLFr8aD5~{G1yD)gqTe*T8(se!)u);KCi*T{`}?XlOPkmHWRS!U
z>eJN2!7cu+=MngBG135I@uJHZ0*cSOh|}TF^RA<{8OIWTo_8S+<7<wI_b4s$5+C9}
zV=%b(vdb7jBQLv{VL0-<>u5{+033ONMLfvt^PfN1?tgWJ$VYXb>$s|mTz95vJUaEb
zZTtVnzNBON@s+~xlf{pI|4DC~*OcRa9^?g)|LG?8MVIlKfc!8r<i#cCR7^5aZsbIp
z_pEE^@H1b1?fTSch$%#h9uABi%ZGer9S?s|rOpQ`*3VY3{-5?GCzPxIaC={wt!r|4
z{~9tn5tY2S;S(5TFvsPRi+Tl44+2gvu#Quq(rNeclBnr{^vMOU!6d88rrJ4iLO1nt
zIO|B@X&{OD(FD|yz*F{xf-TC)>8pNEX6FK1y*WAE!gt>kG5X`*y6|c$y`(Rw5GInL
zGs*1T*V(h9OSu%>I#<%pBobv_DXB?NQWL&rUkFxuLKXa%ik9}KQt^%16PyWa;LpZQ
z{n=FQ68Jy3clOtOVUEu8QBucX(%0O?`E+FTqRV(CoB9m*XWu4hG*{>aKI0TB=S7z>
z2|V_Sg1%G~^k~ND%S~IlE_J?B@pW<E;f&I=aYny^m$YEeZ}61@1N}#HP<iyDu8OAI
z>MHtP<?03&K2i4Q1teeKfY-)AAqgS2W*UX?6H?fpKR%jn@%v@wwzgMs$r`VEs`Ef5
zbOXN-$TUVA4dgR@sWUiom2dB3477C%-_O=L@xSbAT6pP4_fi3w{-BF}abx;Rx?Tnu
zT_T9pQb4b?)#bs^bkj;NhK0@*Dw{%+#MbeCF6`CicIa}TXu3CXl9-6W&jUcwE05Fx
zM%8@<cTKF3|L9zx=s$Iy>-x3@i@q;PofoaC8^yc&qbhauS6$W7@ADgzYh6Zv{9_MD
zdKNC}v@FwCTIu4brQecVoce!_`JIzWng(GriG-(##QCP0q<yK--_#)6%K)XXu1CPZ
z?02Q!#doDeJZ<(UITuj+9$(V}N<Yv``*4znNM93+)V}?%G}82t(8X2Z1bC#g0ih|C
zwGF|c3tIn6hSVks)FyQOK7;XO4-c<B3Lt%{!L@x+n)tTZA9OdgmYxe7{kbSj3mN?f
zzw*Mp0*)i3OY_?k#VN1E(JOKETzF|(QLaf4NRtU`9ieJ2s1z?Q^(W$`7g)(d5K=wZ
zP3e*OM_(?7RH;Lw_i^29e}NwfQ??(AlK%U?$anC(04)6lUe<z3f8|$8CaJbMvbMT1
z?=AR$8H_Xq7HJ{@wP}!97eZ%K<I@A2c#*RGvtgnsaY)k$>`lFB?FHe`bno3H(GU|u
zuW;zma7d}L$m4_FnOt?M_#cagerwmV1K<<Dq3`U=+WANPYKevb^HkAy_U4(YE>&Ih
z#?~g7eDs3aq61l`*sFUO&RuX(pVwHm3oh#77U=mA*9CWX3W@3MHBF1NyJSf56^uOy
zjGdjD`YQ9l^}+1#<Ac739|(I;KDs>aN3HhT=32M$*zfJjI(Q6UE#TPSeu(@Gw98Oa
z7a?QXjQMMbYGU9(K!YQ>MK5SfyAtzCRz2+_rVW-RQ8@RY5aR{cH6e8|NdPs(X7Qh&
zEB)!q1y7~g-`&O^Rb3T%2R)swCFPIyEu9A5^iJ8rn})^yP!>0(Ivilt&xD;$=B%b2
z;k%%Ax=^I;72Tb%lvf<}<d2vN!PDzgT|7;DGFe#@x^$DoNDt2tA7h!mLXdQSDDqwW
z&Q!PXGhqhQ8DSE<rv;S$o!=VF*{@8lt19BS-|zGXy)W+U2VS<F_Y@ioT!#CaC_I|P
zw3X@V?9T%zo#w1eB3=7)z$Y&#`JL^#P`&?zeU(YVrXgzSH8}Sm=%n^$tK*-G+q|l~
z4AbIl{l353W2*rPoc`qB+8q-Y{r;2QHnsVnyEy4ta-<#snl7lOE>vn)Pom5A$x+M;
z9?*pJ_r<yt)Mx5;Ih}N;mgG$#fLBks4d)~f@8zhl$ti^gL8(Va>Ap%Nb*F1x#y=N%
zw^c#<=(O`TjQYX8qywY!cB_JEVyMe!a<_Elg+SElMAYTB=0cfa)8(Nq2BIEDM12-0
zYFhET_G&Jfpxu$WDHIZ34nIvz9Xtp=4Kq=X%5h4+P~21&*Cvl|ii7?~8#m3*MnC;%
zU(&)&f1p=}Y2iPV#je@bG-=L$(*&^7B;sY0M@uiejMuED34x>sF-@lh>!t-tE<&W7
zoZ0k(*s*@VOqI(mYeIMO3yI!63NwAVY!mf-x>I{h!VVL|vvc95-fmAn@Jj>6scuwx
z-^EJjf=8z*?TMs=PX#Jn45Lg}9bOEgv={PuBsLwnYt!MAPL0Yv>msH_YPDg~CE(+O
zc%&B;m&rL$4}wTXqH<#yPG22L!d6fand_;aTb&Cf^)-R|!M{}Ig`1)Z`eI&ey2|A<
zKqnCq>_Dd1R-Kch+9sf%pBpSa>qor8qp>X+3bS2M5xoZ89)*sE38Y7YqwEWXM%Oz3
zSshFsU&9RDy2BwY&xMYDLvLyUq~Eyr2IJ?pM(v~jDN5`oei3Li1qSIt`8U&HkR}HL
zUMZx|LYxYUP9ttFLQtF>-+I<nbj0fwjC>Yq;5D%JCE}v8sc++h>Y<AkXPd_RV^g=g
zEq$*#T#;|Gbiwf{msf`u0%Y~6sp2oFmg`AW-%VI0Ul^I43W<(fxhYhXb*%p-uvvQ%
zm(0qZCQh8tz57C-&?70LFE=y$KE6@qKe|&?&c+S>ShSmU|AAf@0wGAr{(XL9at*6}
zc`P)^4v$}Tn5b7PUz{<UkXHWu(a>dsM6Wn#Y(pkP3%z!2I);P@8Jsbb=&P*o-x-yw
z_@mzMI~D%x#{!}sZ|}FdEZVr}clK57hTQbxsZm6iU}riIWEyEZuNdSZ803P$`BIUy
zvmv8bEYf@RE?k^8U4S$pmGE_wMPDvF+Lp@P#H9vQ80He4Epql-`;Hba`VrqKV9{@H
zjeZyXPFLn8zbtDs!OoEvVrwP}m0lB^9thf=bs-N*EIM-SCR>^|k<iga+6vVVsN8?n
zg-nG!`YaNy2e_lh<`aFD#L>^iZJyu9w<@o6C#@(=&jpVD1g~kKqyONS$}H=;Y_@e%
zsy)pjG1W9-(hCUvHz!b8FK911i<;nA|I1;fscFm!K&G=XO4Ew9O_I);U}p9!c6kuJ
z^x`M=5KQ%ic-+^PnPj%Ns@%m}RhAt*bvCl;M|?{QQ2iF)`LJ%=Un+)bXCzM}3^$Fm
zsEIIK6H?6+2?m~vWqK{7?}>Q5#w90@885C89s-J<foS?tOZrQFt+!hhmyPMP(oP<o
zq0~V|_?C7M4&QlklIgT+;|Yf4CekwU6|_tgwDcU*PzKYBuj&j~YB~|SQxVMzE@>J;
z#QL<JNiVsEOR-;*Q&$f`ROhFek}nic*$2l}UF5nmndGr(>PM~icZGqeB4H279Nr=^
z)nDk%0#r>Rr)d)G%7yS!uPVN{{<&O4ZgQING~o6E3poQQng+o%B{t<k(C3xZdB{>e
zg9sdBpwro=M?#}7H>v3tRq8xGsIoTQR!NT@K=LQGFFMt5|7l;<X_!PW7U<~zY1H1-
z_ZNmo6NtmTR^?4E95{&%Qj@b9r=q0Oc-@OcpIUcs1TJ0hurCCj>esyQ$zQ@3VULc4
z<i1n}>E~u=>f89Hgck)EDLY$4?oaTNb{{2trA$+@n#WYN^@~5~=)0;iRju+my4Vbo
zuNb4W0oyA?Ic~LHTuDzY!Sz(2G&OWIWj1MoG|uacw9%zZvVXvtvzNX)Hpyb3Tm3OU
z=zLdnJ5FYgCY0J>>3e)pn@w`B4ZAD7(^XZJ6T?RrR0EUjf;kO@a5M&Y!QGjV=Kk!v
zF1=21Yr~aGK+4x7ps}S)5+V)7+@6O~`cjj;x3?vDP%8dt_B~Td9^IPz&)P1i({PDj
z*KS71FYl>?`%&MOy3%=#MAI|UOQ%HzrcSQB=rUeYh5Cqq%ccr_K?rFYu;jHS?xDQf
z1s#-E{B~Ai=?R$WOQx5~8&&E$J{0AR>VT&C;<2cyOE2Mz+WZo~R=}n2wf$hTRr}~K
z0E>>*$Km}vGkiLRnLaP}=|z_@$(~Hp=<0cK9Xc6IcPf@T&4sxn@$?F=#uqV}oTdp~
zz|V?=dTgNXt3*?}xzV|f%VJlWn?`q<4P>)(!KvTFo7%kw#Crvv`uC#PMZdk(2UFFP
z08lTVYS}?5Uv-YvD@Gby%4bhEeO9>Wg6_fP0Lp8yZfq%&#7XDR{{G5(2mGSy+wwk-
z52j~a-2800-~WlPY12)nGb-*!U1?QrZ=>(3s<28*cQMinz@mvjfoX&UF9b-YmfAcS
z&gK;uo$(_c0E}LAH5chy)RC_X!Jz40{jVDZeW{JQcSUovS5>@IxzSx5v{;=B2mKCT
z)WSi(bFURh==XcQtxJfzUAj@gCCHg}+VV62*@d#B+M6*5$S&x+UnsqOavt*;P|<64
zQnws`3h}e)CMR8vIGf=8dl7{66?O@*+dmvlo1d}vt^DP*SlZuyh`5>3Z;QMxi~Xe_
z(gcEN6HNEH5L`MPnp|*iUJLP_4?tZOx;zjzyy#jk)LiM6-J14|I~_7THUsG^i>v*t
zw!g$5Z?)dTPlS0#=K@N9Qrk9A`XBd70h4}fKA5kQMd}#c%g{*m6x%3WuEcJ-^!|k-
zd!Ie@Igz!wAiTX00BUc{#rT@(-o4MDANPyWNMCBOt<oxw%c9bqFx%PEjsAjAG-QzA
zg&}$LLs{&aZ5@5Da&@Ea_q>9miRtTUV5Nx=SrgLMpFdKXQtr_t!dtJT%rvjs<#LW{
z96@~+B=lOK)+LE_S>DH`Iuza1>$9aC{mH(h4Tk8IVHZh&LYHQVrZ(_)8jR5-TV7u%
zFMPt9`eLAn6!nua(KIrTzFss`zm}m*77RU{7kX^0>?`aSS>NhXS1LX<<=t&(2+2G>
z7aIC2zNcM?#%~pX=nsGVOY~R0y~Wl?-<8{2Q){5|E`p0*+Z;`snwba~x?E6iayH`(
zaA-;t(S-t6lYm7XfH;-#*%5&Df|_}1F}?F(q$h;VzSOLuccsd=x{CFFZ;HBZ!=&`l
z^Zwf~>EH21EtvFs_gdM{$mA;D8jF!~wZHFcYV-mK=|W&+iZo4qYO&a}uHqG#oUoLO
z@kM7tNP~pY3krODS4UHzUT|$ECPY2!8YT(hE=6s<Vx_MHEB)N4JXSjkE82NRk7kqp
zW)9b#vHyQ+I>|=g(QAXoMmMH{Gl>4HDJy*ulr)J#wMnKKy|PG?(ux7?@!I0(X&>>;
zI9hwrRlL^2O^DE%+|_>wAcEgGJ0kjW6OMNJx+v9c{I1mc&@*2oc`PvM^f|&8wP4Y|
zyVnX}^k2<(uT>fSP<+(oG}Dh>K<ZC{M=!dJ%j8|R>GdfV?q6I(o&=6waD&d3d^F12
zJnL7yqLk5P3=u~!Eo-m1=@mD<C~n%D{obfN-m8y2vux9|<!b*K-_wFkf9AIe)bv04
zI{Kadp!da{E~7s_<M7(4<E2UFMqLIyy|PJTOZkEWZZEL>Z$3|`c0oNb9egs4Or^=G
zhKHc0$EI@+v_ATB;S!*tqz#kKMlSu$Z0n+IH$Kw)?QMvWey1yQlV6-tdM)iASk#4L
zZteW2*FKD6OZn_$aIc_gvYgUqfskHw9T&g&=fOl{MABD>iVkMKEA=kER%Ncc1^>%)
z!K3f-JuQ6n8-A+*NPo=V73Be3VmI3#TOnNxEWNx!YQcfY1GZ;fMtd_ZLSsDypgrqC
zCa9U8423S4j?_BXX`r&#INw8%(AVq`J!n!t|M@F28b?Ogx~}iztvcLYYxwlAUH0N!
z$mlorJuO`HTmM!$e2qAxs3)*Cl@a|fcopkY%iNxI75&=s;{Mv@@JT(fT9(T*M(0XJ
znnaz}bi-Q1IOT$inhujRp^G@lc1c5+>C6GPFSW9*yjOX=Yw~U)(%B}9{CMBVLi!!P
zP=KVrsJ*T(JgEQcrfVh=QJW|*n~)lQ%{zL^^1m6yWiJRjTA+JM^wD$>&?|%VbTsq?
z2I;Fz(pLLxUDk13lx0tNZSz=Y^k?;tf3)GzckrqfK>91cSU{xjw%ek~Yn9j0AOChK
zfHXBn?LuH_60xm`K&9z2N1s1Z8i}x7@ZwFeS<@t#wpY0FInqcEPDy%n*X_@H6x&?^
zO&Q@IzxpTWuda6UZwbyCahA(nx+^V6a+_;)%66;tR@ElTi)&LwrM_!+M&&!DBYIM;
z57FITZMCXnyAImHe|__2TWUp6Cs}66ELp5q>)Cw$&6`py>r>@cv;MFB&%3>`LTBOG
z__q;8^4}E1Xy}{DroN323QOz!2kAOeO&z^&is*e~qNa{aQ|d_7S8wgh)xrK%6_J*=
zKeN+^_-$U?)uxCJ>XSL>sA_Wi2&1k>K6ta7EoVvVga64(RH`iU_@H+tS8w`$do`P{
zlZBPA;%CD^^xNdkzn*E&I+0qxZ*@_tL*&K59Paea)REeo_l-K>hBb#cDs|b=f4W`F
zb+t83UdIutV)~0J(sh)ZTeFXNHPOLppV}xLzs;L`r`?YVY1=l|{6_2#k4W8ovtF)O
z^Uc|%PDH`@K=)>=<DZM$ysF!B_X+k(MY;mfsbDM2RrJ15m9hV;qwBrOccwO`0{Lv}
zNS9?%+DoVRdsRopAve`k^g-`U9o?EOZ;JhS1^W`!I@fhmMwO}Kx4GL*`^xL4+Npy*
zF;zvXy3?hBovroZt|;}$Hm1pPwOpskQ@3$YG5M&Ilg9jKbuf8+t@B(%V_LtTw{?A2
z{p#QTt^R1N!)KknfAhZI?fZX2J^OE)`6gS<*0aqbU9YorHd~BHOOh;-bg_EsXLh8;
zIV8vR({p`Sw%M%Lo8^;_ulrr(fsU(?ZIM@cTZ4FNMHgS^<`Ai!xii()czHH=mBJeW
z7bJe0oBh5y!0iE*V|LND+21Kp!|~hvgWh`;A#W019-Z%+%3hokrF}8mq^smPOqDCz
zr48#8pZg6f^|q<d*6L5X+?pD_CswcO+Ur28O5dri*@N;hDpI>h7ge+^%DbX86`N?(
zG<lInx!&rkf@fYg)tKo{7wa@j)2Hso;O!5{P1>4YRH^e=HC1iGjREDAD=SFwt!TJa
zq??1Z6D(FJ9tKS|s!GtnpiWT&O&;y^UT^EB3QbVWsu=CsL7~pvHir@0pRJQ@zD}OJ
zV|`|aIE8Vm1K)aA79Y$`=XG>fDqUGD*&LkVMqz2Jwa_1QZgd?LJ5%_pC?TJ!s^*~c
zooY!>ROwy(Hh1^f+9vzV5ur*p*(%A7=vt4Ju1ovc_`0~?g`$8bw4?KZ>t&4}UxxT?
zUKRVMR`df_fq>=I`$*f5hN}eMz@NWY%}(JaRqD=IzkwkK!okQ#1>!#3mTcC`#cX38
ztbU~Dm+zkhdX5(9VU~jp2)|8E`pYi(>TO<`yoPJ;ufEcyssprC91aDdq@I;7X6bw-
zRywrLpuFEVaOV(1TY-VAv)>m{@$Q}38ioIHr%Gdg@ak=D*QPAePzR}$op320yi>RX
z>sx0!n=RAD@?Zb^xckzAX$Mu_s8ZMQp(t-ucw^wEdo5xwidQxtOl@^>QAPUGm~1by
z^(tMQ|N8roI0Ff_zq^e;s=94H-sVyC|F;4^f_P@j#cci@D{Ud3TfNtLeA`$*JXmP1
z4@I<X?u?c6T1R+dcIB}YWKD`bjzH{7eOKyRo$qvMYI`&A?y#?6jX?~W!2Z8e?w-E0
z`s$!-?|MiPm&JTzC!M78bh$oBi<QN-$>W>ip#KrN*>HVK1-@yecfnc!;Y8BQa@XAC
z;Kf?Bbg(KdCOrW*0*u^MWNJmKiyQzA4=|+DVz1=9x4^p&dePp8U9&ZZri!df)~`v@
z&1$h(OHFbNzLRgQ@RTeZF}vWb1H2QnL2;r{TYRHxSU=cuMVkOB2_zwgU$Bq17uIen
z?;2boKuqjhhJd2=_A4uSce;G1OF%A>z-7+ug^$6<dCUbofj7Uf7C<5P|Kn(<D_u4@
zV~Y>E6lNExhAS_*2!QX3vMlUV>}kKv;oF6>l5&H;0MgTYVp+OKXNj~@)$Ly2$JaDc
zw(FF9{P;1xFPgf!*5H_YRQ2}u|NiiQ{ki)7&p&?qoByc(^QK=m){9j(7jGKWS!AmP
z_;6d@)K`RibyaC+@!b9dCxk~A<7on-sUr>dz&gp+deI%RXX1XEq{|9I1xTTD58yZ7
zH8%#4^uZ!S`cLhCyo%wDS^phG)l{`zK3!z|4duOh{t^&NlnioG5EHP!qrK~MS5y_;
zM`2UZ<8LbtA%0d5iYwOCgq!szYsxFPL5LSRda=ogSFnN#m!scSC)sS7Eu>t1RQI`#
zEjSIyMYz9!#N79^{2V$Nw`aKq;s=3R>@cj=4*Jtp-_=cNP>1s3c_+;-7Wxgh+J3V)
z4AwfC+QbpbU}X-*K3~HD*MZbs;a#ra)X|M#n8iu}-CL&$=!#3{B(@HmG&H;{aEVbz
zHMLt<lv{nR4)i`j{eXW$C=1k@U7XzocoH#}#eQ#UqujrcMFHE3Yu%Zf+}Lv{Dq^Li
zFo~txUmQ64Bwc4qarC*$xA$>bT<fx~LZfem53!VzA7d)-mY_fqrDcWG%BbB(Rl992
zs#;h?>*~ont3TcC%~o9(P7sha(Djf`TrQWZN8!vKV0M2f^4*{Vi=HH&Ig)ZaeQj#+
zSv*XMuC)TxIp$4eNtVqv$&(qLVHcfZc^=E?vW`EhvgMI^Nbes-=O!IcCWjsTU<W{`
zEY?L}$&oKAfE)rDK<!Z$F>N1fbd(4O1li0YAP`&cZE+>sDzfFdu@^vqQocaa&Y<^c
z?9z2<)l}?%F1N0?{8@I6y?=QHu*5q<7T{onf&O9t#9ut8Tb${@+lx1eyjNXY6BoPf
zm3KIV%y_#L!Y`{uyoc;>6IxvS8`u}8KSl_&#b&Wt&gV~+#_?-5WL@lD5UGSKhr|@b
zWQ2)9rNiHOlO~*dDJ$M~h>)1weJ8#qm*O2emsmW6^)f0q`*OhS>@T~(MpX-@<yN`9
zcUH{-jS<&mwak*mI(zCN461}yGKBZ9e~HUtSDKrq<>-jbwW9Cn4F>?kjdMH8_8tsC
zz#=>C4xu9JFpl`T*(RB#$4EKvt8GhVZsJnwP`#1pv~U)oLwD%R6Shd!Xm749$|sr%
z{?|(uYcBnXkQp95J1MAS9Q<@BwD6Z5m^;QCS6&5@U|F2x)gof)vMj7=bt(k}4e+wl
zOSn$KF7K?`M!4yZ3$UuNTiU%=du<Q@sT`>4Gs5$1vr3ZLB5)VblD;$5ZHqgQ^gd}}
z3sKFEYy#?a756x|8u5|-1TfvfM<zsh-{at{8G-Xl5T*(LQ6nM8uS1s^Za(aOkqa-u
z`XZ=W_v+gDk@A<t{?ZP{s5rcSz|*mAM!q#Wd$Pi61g@=SO>!l9H-?pVF@o59o8yC7
zC=mn$zlX74Yu`EwNr+rgmd#z=%RA1qO`5Ed*$F;^Qw)NYwadbbWK{x$fZPp$XudeG
z_-*d?1>;F*?LdZgRbTZlZ?oE@(qX-6kVo?igA?OZL91e)41a8jN*(+~vCsqg0kf@@
z1?v)R0DTLai+}B-z4j6k5b!cX@3l4p&w-o<W1nR)e?^QJTyGM8!6PGzLLs3bKDx=I
zPn_1Z7o1@m8z>DF`wpE{;Sq@2Z68IDmAyCTPyq%zfP;cUMYqY~4B>pJEjayr))?b+
z83*=D0~g$h2)gg_+Z=pF4Eewn$L*E$QbTzj3@{to{Q+s+WXnJy?Nw8%_@lbX+f=4?
z3+*fY3F8+tbLSS}fGW|MA|Au!51%#PGC^6fuG62;(JKI4#3+XpM6hmR%-o=KiXdKs
ze;yhjp-f{kK`q|j!bBfwymE(vPm@0^m<i{>nyS`U@J<(xBli@PB%Fv{T<pPegW($1
zCgF$JuSF6JZZjcZf6iBL^AJJf`UNVKzvs~eg<>4_6z-w5v&`2X6Po2_xsaii`c{{^
zQt_cF?{4o~Oh^P`2og}i&J<VH%l+WdLh$7(HwSa&RX#}ySc0l{+K|kO`?=UF0`%~u
zLxz8XH{OZd+uTtYd}bg4PV=J?j2h=GFuUUU6Zi<$M2>KAei~f^dyWcVv^#wJIruQ<
zS^IZ7StpsKo^^Ahb3Fh--PyslYihnqKJTkJgtSZ;gP@eK0Y$M%0}_0Y=!C$SJw$@8
z_T54SO2?6K$kp2%Jw5z2r>7l@?D8UriGqtkMz1n8<z9h7WTwHz<~&Lm`mlKx2=kq;
zbs7I$VAruA9;<<$0qjbLTB>%q#&MnGl?f+z057Z->AB*6gVESlP#doTvIH1Au?Epy
zsxTzrc{`v1e7+YvB>ei;dqf<7{j8YfUdD%!s$j5&H!HWN=M*e%x?~T`&M{vC^AUPt
zGfG}bQ~Rq2A0yr#P=Qtv#6HzbI5TWdbtgkWTp}N@h`nNWL@Hnl$`iD@3?m+h2@VbJ
zj07BnF6b7c)q9&GN91&u^cuxV==%Xk#cy+=8W?$vWO*#+vvip*<^vg?-HBY?2PCs3
zS*@QZ$+JV21Y=W$TTbCUvWTeZEtc`be2uglI^m!zL!EIv6(*U_7R#s75aXXW;Iog#
zufG5B@Q2^s?!UkNukXgP=oZOxwS1Ob(lDuKC{pa*cW@R|D{M_kUKHBJ3;=)cN7$m-
zY%`x_i>H3v=^37=h{2S!?W0gVtZz964Ct&CD6&qx@MmNq7-}C>l#o&YYLS5x!0n2?
zW<pvZ{;W0yBw%&#bzgfK3T_Q6GF6!v024)!tWKr4kf6B?bKB0R7itmK7ewHE3Ywr^
z3h)-=@F%TNBDIL>&@K-kM2qcq6cc_w@d>~z;a)gW8(mJfI+MHTr-E2~D_{yfo--+m
zj$w?XThG$va{YXPjDFT~Fg*p?T4Kf=aI#JvkPS$LIeX6$Y}hw=69V?8_RR4ZcfOt_
zv-#r57x4rr^mB2W=lAig$}61@D4L>^BVqla*eM%KIe|PBcF_Uz01$Aob&GI;(I9~l
z;Sjvu3`J2wkzLB`t5BqL&2EbOm!8a6@G5dLSj2=Nfllc_b}{HOUE$^D<K=G(@IOaG
zB!cqJA{k42gJVyB`OHC&Jb-2eK#9t`2NH3>hM)@FAWT|t2&fa~r^Fub$P)pBl3P@G
zZAYL?I$vy->1=j(sq+QFBay?indx-1uy*?S;vOAK<{0YYQ<%>J-VKJBn8LF@kxN*m
ztR-e<=_FCKz4l<v%}2L2<Sculm~ScA82`uCGI(`2R^qWtR_SVfe!bJG5g6L6UyHwR
z=C`keg?ND=HQCh|jewkNwV9=}7eH`B9x{iBnE$}2HPT>$b0W2P<+&!uu{-nYb2;p8
zw5YlO3P^6ji<Nt#v+oczLFRz=y5+_JTfxMxqpBrwII{oq^(sv_&rn|z%Ggl~$mAb%
zUPD?C<j8?mW>(O`O!9;9axzKny-90aWNHHCkpda%d~t|x8c^3F55l3XF`p@2t<uHj
z$v)EqLD12pO$?Vc?d(h+>cON5&Stb`k(dPt8`%x<VJi_R(W0^qU^=<{-rBm@m(-*+
z#28r?o#ln7ysmrb;8uo{iJ4OY78rR?Z_2$AbwLyY2}r3q3Y(~*v3!WtVzpjA-+8vP
zbNb86WSVMF%d7WPY)F48VroPr5@xZ-38cE-<5t_h6U5aBwx7+jRkD2Y^&b}Nuwm0^
z8X9|39Nk7e?2AV{1&uD0B+Ml;9sBOZY?-E;C;K!VwdZ@nxf?uKfQQP?UPI3ri$pa4
zui$hdyr85(OpHCreao_Wwn#ST&;03pszt+kAJ@(HmzK*0b;Xst+g4x8yASFJ@sv~h
zfw=@L=Qsjkl|}rXxay-=V_|Rp^TE)59saZ0{t|z@)q3CB71CQi0_kEh6fS~<R!)Q%
zlj!+!vrN(_1F2IL+Rx3-)VJ|XsqR}5SA<bQ&4W4Ct#UUAnxOXLvOrSgpx9lATO2k#
z2NZ(OuxTjh?EL+X7X3sqZulR}&*$Va5ftS@c`j)1`DpMzZaHWQWg=xAJJSZ*+*@A<
z=OA?*YLzJ4EPk6)-V)^u_`5EcbWAwFAo_@>Fk2?`+2YBEe}b<#6hLFyr7I4ZPmZk?
z--jh~H8WXoDim!tBI^f301@aI;d6Mb%oI6g{9uj1wh`r(amX529Ym=$<c>QeuSJ$e
z<FYMVqEr?>*~0=a$j9J>Q_Q7s4`~51N0B&^#cmH(LlhNW16bdFuQ=2MRSF>O6gDR$
z;G{|@j*}4VX1Q3;R!{aOAJoZ2AI$zfKIr?F>a#{qq;LX1%X=yODhKJul;38yUL~97
z)9fwfheUaYFtM(O2g&k$JbNyql)hS=l4D4Z_)tBn2kQcb5lhUPcjPB2LF*Jr)x@?G
z?wq?ie5-tq4-8KNZ|E?%YF$Y8>mtj6S$vGky0i`Ym8-Y8ETO77|A7lQyix#{tYj?Y
zuDHpu?||pwM<jfat<rh=WTZ1F1+JqPryULV3cyg0*^SBVX0}e|Pln%P-uFP5u^lZb
zf&wNwEVJ`L2TqJ7J!-9Kj9!PxukzAMo*TI2lupHga!Dei*>}veOz)`bAaRL|KH75!
z8$w39!ir%I&BsE9VWni@!>S#=fj*hsf35XF8>ihdwH4hG@zEM+3wQN=^%50;;uYg-
zOO%ABoDA~KX}=qc4=K+ui^Tx`7;AN~$~I{_e?H%K2<PTzt7BCjs=6%lo6y&xP=r+~
zB6XB$QnA~tm2@+P=hM|{IbS^kchx~XM^eQcR+kBDj{GpbHV|@Sp@7H>G%8}Qe(=dy
zV;`O@=8MJCTPQuqln=!6u`Y+1I3`nl$q>*H#0mM3m4!6dnD~ehU%eaa-L=@vX3O;a
z;gC+!g8hr0%x6l0QL+S(Q@mgkJn%&2F9Jv650DTZA*a^MEJ<chZUHbHFYz51N8CA5
zO4gHd(R?!d+;uG=x~ZJ6s&tG9))kc+S$fUt!0J|CR4QC1k*(<1Mek3kQ0H?+B7|20
z+Ffz(C?v{QPtMbb4vZ76?2#LG)8JQ7ssmM(5W;77hunoR=3%u;v+U^?wj;c<e=DD)
zF7@F){s`FQFx1a#D5iJ#fB*Z3Pk&wg?dE^BBQiQqljY`EEt5~X8e~8)j#lh~6g12S
z;fR3d`fnn;AlVgT`tX|-7B~1a_pp{+dC``x=OeQDEXz8rVS005u$hXN;k;e?Aqtug
zl+rJKNObxz{0%AbAX4xQlV5puPntlYc_GOjD*=n$m3OSEq+BKq8-EKZ%pC<As;+&B
ziK8kgMIBI0JL{5gJ%{31`CUQgnY$1Iwej8XZikC@_8q`%xj8A5^nq}sEbikQRsKWu
znCpr%^er?4<VGq8f)Fy@St=qctl;!RQGv7d(CH+|rS)k;=*d%GD~>5gZLf&yw~vN`
zmuZ@$Plh^!dsym&?1I*<uK{H)C9PA}>+FLshb1}lgj=gtURIV^6T=QI;G(!srrfVW
zAmADfg<|$K*BuKAO=2xfxvFGMFy2M#z}Nsu$&SjQ*cq$`2Cu;y`671=kcZ~P$~3h|
z0Heebkt(mpAYHP_vgPdQnT!vDbc1Cx??rtflF+Du?4NrV3H!YS#qlnX!Dxwkzl?nR
zY>{NkrzfNie!L_CCDc0_m8PRcL=#Yn@*1#UhB`p{irkF%ZNA0yb*fba%LT<W;~TV?
zW$Q)uveGfw?yp5337jM@Y=s1ob^ieYQsfzLoED8f1T}xft}s?$`2;tabfSC{MR2LC
z4k7}XQmn?v!r6SYT(6%@6OH$hEcLbCZdF`1CKN3U2E3>0Ae1l>#)3YFQph@5N9}?r
zm^z3m6R0>OwTR?&`=s#IqpWJWSg#lJXXFw3q)v`olToFdJ3#F3pn7;0M9#oev$=sE
zbehO+2Lc=Ew;<X1Hb>zUw6m36tn;QHhe*|!NTn<5pAI#aZsFg)-(JtMtW|UHf6h~L
z&>=IpyZE&#+qqC^BdaEFrOIj!jK!4gjV)=c@&{bdA`){<nM0fI@}or&@Cbjk-mK=&
znUv7i-1JCy7?*E?{e@&dQr}%91kC{!fc+%o<B$+UjK<7jHeWBF-t_i?z<Dt78gs03
zj!*3(&Oa9@OC~VD#lcp<U5n`og?b|<WA`mtt=3t(7`SgzhxGpHVwtus+pSh*{YLnK
z2UXX%`eSU7eDROIe(>{TJ)5o5+1Qf;KB?~^>&3FK-pD_pbs{~_NRq`m>Cqp9El+!%
zk*-$jfo*xX%#G(`_A7b}_(|d$?-%CLa>XPCZ~-RB#I;uP2sIp_wjJbKxT-d+4XI2$
zN~bT9bhdtS;B+)dGno5tT~r9D2UYnLd8WknSe7_oPrWD@lHgNFgJznM?+d~nJ~u@%
zIVbgFfq^GFf-3IH>ie;DyY*(ZNS@KXX$5G9l6`;eSOHORFPu3bTL8z6eb6jRl4bT}
zigvV1YyUMtLyhhCxQGHhEv`!TIVoVMyx|cz$Lz3jFwBST7&G+7M{L!6zDl#r^BwSz
z3wH#~_;02@9QI?ew~lbtAQb_<RYxwM9I%!VwfEM6gS1Re0f}TrD_<msJ((LB(J=FD
zlO^-{`LhxG=;0wQHfV#w-_F{k1@MH+=Tfq);Bn^~R|!X%sXp@<V!dO2N4i<9=TA>%
z>q6n487oIAfYYZxWJ$7_EmKIg%;vN8$brw3`QkaV$y;>ZK=yIF!=!+xKJ9p?MLQ(3
zb6yq)KBcV<ilu@;45jDAaNXF@G_`D|3ibwVwJWyZIFTov<PZkL<3fA+2$8+50b7ZA
z?G%UNY`*@y97;3R+!jGyj|uE@y;&#8%Lwd|00o8_tuM?0N8kkTKbm?BQ>RHXdxnW5
z9S3x@ukrYGd)Tm*MK;^aH=8FrQYRE}9x+E?YQz4rp5Y49oom*=r;rcnDw(g6?8(Yx
zJi!|o!GkK>9`eZtmu-?XooAaQSuEGdYLkw9+Iq8DENAD3-W_jb(CGz!16fNS`lHYy
zSDkYwKxg+|J1octrbfg{G{BU#G(rc-Vg|kE_WH6Bl2Od-b*9i<wdPAvJ3U%PgY&0$
zzPQ}yMIoeN!oQ)~sS&SeF`I2RPcKe<FyI^P7Nfa0iBBrp8DY{~r%ylrjBXjyu|OLl
zcy<XMlx-el8#p5q=ABVraU^rM*wBo)Z(USZ!0CE32D#lWPH60&FVbuPUO=J0xn6CC
zNDpb_dwzE@TP`+7X@*WZW6x8T^UeG?SyA0rFvYX?_p@X%+q5U>wTaHZpEk4Ly=yy2
zcG}fp`eah>dgOA8G0#>7K*ccv*vqFqYocctHraeWJ1uFzJr;Z3!%f5G%9KgH12A+Q
zzs*^xgbfyXUJj<timZaZhKcDS%d*vae#$HXhH;dW%PrkS3rT8Off@Pz`?206!90N@
ziLuZKfKXkl+ZiO?ziVz3HnkyVyq({{g+$7=GiCMIzql-&XR~F%><zZVwHx7esH-VK
zmb0U6g(oc+=+qAp-+1N$V?wMb)j|Z$mJULS$4@z3FS667@H~hL?{-NNTsUq8rK5~#
ztaP(p&sIlr_QprCpy_pPB#Nh-r$YXM@8ltADRDk*j7?6qoN_Y4CKA}b8?r)NZ3w=A
zr&>XH(M=c-kPYLwj`WAXw{ujGMB_(dcn|3(G&e!jLr}rm+0ksaSgcmE_vIic3#(rW
z*;762F)7FpY!+7WXb<g#n6e|xeqV4Erl?sGe&kl9hA>j8dc`-J&F8a4DwWjm<TO$4
zgNtl&R9H{uqRS{C)K;zU<tdC`Oi#HxW4!IIXm0kZigzkEdS7*O2#AfP1`{ye)-kCb
zQ;M41Flq~_VrC~Y7d2K;$>!bIG-d2Q&erSYe0_dDXrQ4)Pb`g8ok(bBU%UxY{hKg{
z0{X!^A)^FaFVCI)TKog?D<=-$$~LRzCVPf<6rJ3F<CXmm@l#tdIm5y43b*JPkK`{m
z^Z6=!hLnd>d&!_y6@BeQl)2RdT_3JU!*U-)tp2rkfF?<WlX*i;k4O(O7Zz9mPum&s
z(bO^2RHG{g`pr2+0kX$%06Ph?;5c@+K6LA^$w0QcY=)i7gBFNj+pxngQB?AQE(h_7
z+kRWcYL`OTtUYcJGK>gh`9MAnh2$kW3rFd51?m+QHZmJ+Q#4POv&DLo4tXVkS?~Gf
zWSM2{sAK3*boFb`W71{T+q6;6KWi1@_dF$ALfS#_l<R#{-99ujyj-rASvxZPe;yXp
zU9Ohvr2S2gOA2{ldxoK*lSH_pz_82#K)P~0DB!Y+(!MaqQ{F3TFKsHH&I~D*4hacC
z6zR6se)0^SPk1ZGVpFTdX0v?8Jf{9#9BlcaumghlJRd>ojvBoRN;=skX*Cz(%g%TM
zTHeZpbeGL3Q^951LBe|>yB|xn84R8UxP@8n*#6jR9L(Bv9blk|qH7^TM~u{1t1}{c
z73}|D%W)c9FQ&hEBj_98``+4uOyxh)1vKb)eza(|ZA9m5Y#MGc2AUlMSpj20l_slo
z)=v34qfiY7JUi+~W>5I3Vs!AxN4fFbbgtlF_te+~qXW1zAGT2tPWCaXeUZ#pi}{l)
zv7f-$T35`MDC3COs&>=MA)wW1>L+{oL#HU~13_|T$FqmM@qN8Ju~90Du0{7jwZloB
zVfC2Ub;l6J<Zx<UIvIRQh=(c3#3;ayP<8FKe3+*^DXvX}xS+ehn8&`HFW1K+(SJY1
zTXTC&uCGuXF%9@8h2<M4h#rkTAtTr#s};Jl$gnJfCE0Cm(BCsSMQM=4d<NH+ySF7)
zMQ&%)J0mAem+NFPmu|WJTor%R`<6$jTT?9E*hip>uioa?sG$f^e;{0<*S%U1E#142
zRkli#dEc;}R(HQ(YsEY?2%NeZmF$E9RRy-Ue^g(ZE|>GoN>)<!7vTIl<ObpR929Li
z^-y2l|FX?$vs#V5jCd9)MjXoKv@qu@2rJtqhhYR5w36?oGSXF&Y=YUX_8*|ZT3i5%
zlXvC)G~mF?!%m^jAK{7`mmrUU4(y@Iw+5^2`?qVpPJ?j)gPG~_ayae>f*2UAS0J&d
zQ0&pQ2A-1lB6_g4X8Bfa<^nIDyq~1BM3et^D=c<l5Nkq+)XkAZ5)V&}p5(^3Rr-qO
zW4KUVI5i;f*05aLHPH?7V;E0W)NFqj4DYGLU{F~Kt*9X=aEa}i$_T5up%D$9e%~<P
z#?6Je@`0jy*wb*}lFXL#APBGr=e#b;Qup&zFpi%L5RlZMh+6%3{P?h;_hwme8ICaS
z;!+UB=&J`=r#s@5hEtFmqISa3=UERl$eE0QpU=Pr>Otd8FNJ>6fVKTJgH4A&qq(bg
zzXq7ivZcIYLp?W0lLQVv=cW<>;ry6(P0>Nn+g!B_=o=-i30kB1To~3cal7FnPDaB^
z60*fr-HAVeZ-yqxITNzmmAV$9PQ(ilIPaT+5saMH7$zBZ=n5K~OT%!1C<-I4t}_}1
zxjn?IxF;AnjV|sEXb7{2`%f`V=fNr3#l*M8{?NKG6yb-EZ|<r@gvthk$?XuRk~9~y
znn7g!{1Oi{ur$Y0*<6t5#<2qVe$cFr!N5`d?#_xSPh<9?LUY&M@mwLa_jCWa-&vRo
z>c>Eel1UuiP6~+y*2`KI)<>X_vc3-gdANdvN@x@l%7Qp@H;0}5{65<|pDm@j8R%4j
z6=^<m5&N+DaRAJwI{Bf(7ZEB6yi8J#ve)k09E(NKsJkhxRp><^2^zo6J<df0##7HC
zlMjNsMf$jL$lWZg{x%mhkj_u<c3CboXsMNQ=k6`dN+yj2Z9iIb`E|v<7QQ4n5bf|T
zm4!4l4-@8kY}Eb|3inLv;ePe@4OjFZ)N0Nj9gL0V&O9>pw;tn?=9^`<&Yq#0W>2av
z_0zml`$NmcMdd)3$2kMXmc2-pi^cNE-BTV|N^~R}j)^AFWK`7$jG)OQ9yNp>Fgs?P
z4J8w<TN9KWNfFXZ*nW~aJh7$sYKmozYt(m;>y43SpB2K0dn`?7o^9sq^<ZsMrBxo6
zMb%pjlx^ml`DU~>snd?A=RwOP>r@nWsO&IW)AN*7wirnoYGcZthpcC-WxF`3r{1cC
z5&IsLX3NoU3R@2LJY}=U(l*K8N?~eUyv{@Bvst!DMk58SW|@7DSuPi&1!SXnS@uDj
z&0={p-q6#YtLHiCVm`jbCq!iCvvjrGv{yt=dbr*hEt46{3Y76uwn9PpP-$+%MV5@l
zuDdKxcD~05;aRdtm&@~41a&LthQsUZjAA%5@GsxyOw7xigR#P`G}&xc>!*+I7*8%9
zBFu=K@qP`00#6B`?}z<_eew^H7h|87X7kM|eKLzbmJxA`wEuN!wzsO>#amUjt0r2^
za<_(SEK7GepD(jxoi)5=Vq<+*nyqfFFpxOuv2duxT5X7F0VKiG0Px=jWV7Xbk<Avf
zQ-JKL6@N!kFojfjQh}->1DAv#Awd(GZU8_;BxiBAUEvtev;4)QFq2hMG51Ns$b6^g
zH?+M$PbZF)=u6~dT$P{R%}$DI!X`)36WLA;ONc`t><e>5kibQ6hjO&8f<ebrzU4ER
z?ep;KV#3nE*E%Pj9mFfoxe%b{jU8{}m@QUmmad-<o3@IfelBuV->ST?i!}!opv99Y
zrUiKp`azRKj2VS&Jzr$)ob88y+qgS7+<YHJ&Yu~IjLCaPbw#=cjx=afY?`1}g@V82
zmR;FLh5d*D$Act;pNE3u#<l=`=PR|jbL7qxJ~SOtRpB&ut`9>6gya0N(X4+zju~*X
z?;97-WKNsA$q73`XZ}9yPzo)H!6~Pv$fM~7^YtQ~pP?G;0o@z7w<YkDD*kBpJsIdu
z{cx4vn7^2&8*3Jyuezf@W#SiA-<J1zd@yYkfWE)FMimCh(=_0g=hZri;#r%(&DrDg
z*--(%g~O056SVQg+$oHBSWAZlCQh*(O$eB;moKNrjux(Z7L`-(I!$*E#2@nR@SoD0
zdO@B_`@@qwkiC>_mx#=;K{UCyoIIWf###A?i&9W1kYExH$WmF8Ii_cmWVw8LLG3BD
z%rH*U0lz3iX_(-G>JUqyAp=9h#8|V#Z%5{9>`UjXB;CxP>}EVT?_{_=#jV+by99P7
z3^5d(p@^|lj`0Y(j@i&C7$--gA#oNtj<<IG<$G%AC<o28SfmtbUtQcHhA6fxjU1UO
zXf^6QJ~xoNb$NWFW-s6_e22slgiFYrKqVLy;9(58JFU{*BNxc!PzJZMGC4{M{D)P6
zzW;uSW4w3~W1URai{-r2rt0CcGoIai%-^wlAT~5$>RjtcZlH>Ap{aYPyyIC=x)#MS
zaNJl`X-2rQ$K^bX41ds62LH}E{QgwMO-1U^`kc^M4cTc>PY_dKlrBS4R~WdWDhN(i
ztZM8>%zf$Iz(Iy2o(X5lJ=h!X{(<2GGj|0r3(XbwsgD%>r;pfFGOEUJJpsrh$!w7&
z$EM2s{Rkx#P%yGRstbBF&M)!oF^0y&s4IgP-v+1HhiQu#J8^*m{zec3y0G|jtx`^t
zO8|&85HLdS8k?NExWdpXG;f5U;m3pa2Xa6crnADSI33|yi7-SJi32`dq~f<Z6n(Hs
z#`e<%W&`y2(@BzKvt=TaZ;m-RXsJbvocjyPyX9dNj3R(72y-P4vbFs-%+>VDTu8O&
zoxK0s|2ebuY_>Qh4C@nVByS?Li#riFaR;xD{FI=Zk(=;|zIYH87slP%7n}|SNiQy_
z3uy`dze%+~zMfp6#ilWwYim#_O_miRgVIu<G&Mq)ctmN(DW$0zAcBw`f|tnpWS@pQ
zx%doWwZjlI+_Y^gH^+CIDyh#OA{+G3IHV)SGFQFXVo8$Blg&)le!VMIzSUK%_j^;c
z%VD@jrpy)*FTowcycrQbB#kS6Nz8`Aq&qRNQioY~tXNv1X(mIY2ilrVPoxgQyhzNG
zVkj>2x$CR2sh6MgWWT7=JK~QTH_)^_3cI2t%YmD;SZAwEpcsZ=9F|CZ(0iU;gZ~5(
z?mxqHK3~nBMB??kfyZP)+(FEGVW;13w3wkUn;cZNv#YL$Im1)W<&i3cod>`WHbbYG
zUx*BX8_l2$*%5jSjWI(w;lK^Fk^003?cL8S<g%OEC4-`i=9W$Nz%`^aqoYFRvn<`r
zH&1rtPjQSSkKGflc8ZHy+B2RflEs%LxNbu}6HpM1in3WeAr-fkny~3EYX*l9`t%&=
z$+<Ibh!wG9JLnU;M}<<k+4(+dj7!p#K;?%J@!80D6Lln};cu*9gE|UG^Ml+hG!nto
zdszSj{*4u3(6?bCR7D~MJ~`bA(nLVlVlf?!7s}nvQ`-_qC4{7SHv&MwMNsap0U9J*
zTR45ta-tYIHt;SQ@&g)pOg0y*MYhPE+;QlENeM?LvI6((459r-B!I32pmDI>{;ZMX
zN1Y7FmM%V(&t(abNK^qBCQnn425vAEATU51@5Awx<2#&Xn=E~Lc<WS7YA^~*mkd+6
zsIPL6U4^&<)SrhWK3ao6Ou4ftT;aGa$^#1e&l`~|M<kU+Tpom@u;ak3oui&OLle99
z0B%CBJ)jO*3`Ca-ty+{K`H47=oNx(6TUr{6HN3ZOBPY8^vc)2K#*;nXey3C4+wP#~
zoKBusjj<)<SJ>mN45yL@URXKin9i5kB3-5}#W7Iv(D%#pW!lba36mvSrmW`~>*X@(
zYh*K20n+z~)w+|2@`&V*<$SiDcXEBgjFz4NLC<s2d9rGMQ%?tA(b#-oY82RLIBM1M
zZ>UKvlYSs3d}loZaCEb0OG1k$O}Pr2(T3e^alR~Iedh{tg;vFpp}5rnRqAxrxS7K|
z(*iJ=#RopE*cW;c1%VT=us{jpzb0tF5ft=PzM2Wt4LJW|jEtm1tQqjLc8gsU&faNi
z(T0r2c3@OPaFsNd#)SmM!a`@*ntUK(iNtEdVP7DJ92HVeeJ#D|?u)rvZWyrrB=LvX
z+cqfMbVp4p8aw=xwdMI5{g-T&&7RmIr{6~zoSouVi;S@Bh6=mG>lTRxHT|a_72-Vb
z7Ws5a-}uEcoiAqT^MwdnR{zL!M9GBsIo?!8WML!Ft^sf4psOqzY`MK`MM;}*A+KY1
zgaD6FoU{3ClO5}w`1irAz<{5S4N9qy#)>*5u)6TEL=b%*^=zK5(#?D@K~pGLkR%E9
zi9Bt8d*3_O>*f4J<^^$06)<+dZaCgsM!6)*?8s7!ta$jV%x%I75!@ScYGAiyfJQ0-
zE^EL<T=LsR#YqLl%3i-zoWDowaI^|!vG;GyCR?_u3j3Q<Is4>!13A=-dwzkp#8Dk$
z6=l;A|Ko0UavwQY0Sg_ro5C6`AEU+H49sbJzOxRC-7pFwTCiOqfkuu97!tuuVNy~^
z<>P^QP7u*<P2sPg7>0m6M`@G@<H4KoaH#oQB@hB@OSc!yob%Tqw*o-lRqpz-UMk}X
zis$f}=so?NM$gs#t(#cYBOvQ!Hd_T*%foRlG@QQLn_M6$WWnffO{Mi=8V>&g1~vQF
zk<8cglbE;B#MvXsq@B5#WYByKBJMrRMMS?xqO>s(zusi&`Wc6QvBU(^h1fMP)opva
ziBM!5Y!tRT^z_{@M5pn@a0EZ4iIeqUhrH{@x3&l7Vpa=sh#2qXP8cmQ!5?(p8iftT
zeqq+B^*7V;R~!+iTTWi7Mjsb51MOn20yW&N|D-;eA~8gM3#?fx3ScnMT8W+`Z*v;_
z@3zif2eHfe;X(@%#R^;0_&(la35MA+OIEA%*X*>Cd<W{z-1-YDBSyfh_Y~BC&Jf6;
zIk_w3{1QqiFs_H7if+wz?0RL{dev$9b*hh?Wt&a5n2!|#jJe4fP<+Q-?QXZpp2w`#
z-T5}(KB^VclhW&Hs-ui5aIP;nTIk~NI68y=AF)h%FvTvY6=iLLwlU~cAxLgH^p&_s
z2>yHOgq_G%BLV4i`AZb^o#wFESpLXnwVo#@&HR;hPJRQaCy>A5_8J7S`{AVVjs3r6
zc8b+IHEH}<lw5OFEiG|mZ)TfyvPjm?H?*vq^*PXB3Ru!klNr}ggCfBUzhpxdS$QDq
znB(?f0gCjFxS`p6Io~|Jm*RsA{7@AMy3vAVXq!`TbO5z`e=2^PW0Hqc;U_zm>1MH9
zZ=T+BY<yh(-c%~SF;IpVd~)D1JBA8TX|5=o)M*kc{B(|WV{o5gwoK9shH+FnXr}AD
za)un#o}uD|8uVe9`G!Oawtv18kescJ>>We{MI2wWd-TBsSusxsiY8VcC^gW<7K<H`
zTVn<_U92`)dVUnqse~GC(;?#{ZD$OHmvb<9C;fr>qBm~iprr?j8|z!+JB92t2{ylQ
zN)fynkxdpf)q>bL-W{Z^7`QkP%<ig-wl%Kc4%-aTykU3}76)LXgK(ZYx{ngOL$ak4
z8%X$b0}BCfUcJp7djXH2t|FNFP2-(B85g<6U}GN5Vwo*B>GCA=IH0@xo6WTHpu6v#
z&)4&{^h-ag``+q);n4VV<y^ObtL?SHi{*ToEZ5m-y<IwOP67&pvts;N!D+)dE(>C~
z`jXOfP+NrjbL`C+N~J<AV?{zVJOpAT68=JO4*{8hjKqdyOPogHZYt2#Bo3SS1FrzT
z>Oaa`uPeF1RFWbvzxK)RD1$+EGUu{F0SAOvS}il${|TMU^SGP81Zs~HmRwE(CqeO?
zrvAfESF3Cp)D#a469b@ubO8;526cfBCb>OW&M!=|Fdjlq{fJc@*UuR?tm)9CApPLx
zt`xiAjHz^|knMXbXubl@GM=W-8wE!VfoP<73KVjb5cW~BC6hQ*7?aq$bJ-?IHjnEz
z-kmWtTqOfFS8VA;=9xQIbTio^yN+Q;1I@E^ovqHFKy-5JXmQ2F+BsR5+cS6`lj=5U
zh_eW=G>kbMZ$M9>;v%+q7%ub~e$2|?)#oR&)$?VMK7E`z<%bH7$~%zy69oWe;dFpA
z$7(l*M&`@eCQYC0Zk!-)Bg0Kv7p>S?SC^Z&ZfoT(DrhxV0@C<=Q5{S`sG$(nb(`Zt
z2-F^m+CAoOLIDL4ds3$G+Pbj~fufMW)nY1?3tw}BK06pBMi2px^*9NCQd66LPF)-E
zqtnfLnJ$h5=tPKJm-=uYe}puEL;C=5I*R}1Ahooe(kePUYMO@W@EF1HUdKD#tT#!T
z9!p9PE5c$6S5ImvSq$(T(fnFbtbp`2(SQv>#w*cuQTG28AkUozw%uY$LY~!Es(N-t
z)D6L@1`Xzeni5~@$uonT3c2zroS5ApA{DKG2B-eJKXq4IbVW3>8y3FP?G+^taH64$
z>QGI&%Z!36$P;^!&7~<eXf<!mmeStsVogrrb&CzyyA@ZFa?B~(FO{kv?}>p-pXDf3
zY|Y#kCgQ%$C5<fqy%AwsYzW)i@+!+_SvC)v7!J0sJb4J+e7(pv%k?^0CF^7}n{E1E
zyqKlS*^y2+0=4Jpm68rZ?+Uw0Q=dlsqZa;!I2P-V_-&2|gNk`5(GojFHrUI$f1R`S
zGF{8=HNDK6=zM^{n%=MaJKAR1Y`xe7mwsrbGO+Q4TwPBzr(U_LrPy5&Hg+lQvNxvL
z4Xk3moUb;g0H;&46^_=;;$VdkGP^sE98qyX-etDRvc+uq<m|lhLc61t-<TySNdm;s
zO=}c|3~WJk{e#|<$N~z!ig>!69NIx(xsjdKAW@dbQvh5at7lD<WS%VA?Xn)eRi{(F
zL-h|1Q6l3j8q6r<0v(@3CZec<zM)qzSz7uWT-_-F5N;uIVGuDzcKPaUP6^sv&%jAu
zL7|H;xf<hM*UNQwEacS_3hKs0v78BQ9irm*11*^s*?Kjf&m=Q&1UI%@{CY<PUT7_q
zr>m|)fMaFOUCCe?ju<*2a$+QG01(2)%}RP$56l5N-)T;ag7hA{5-llxt?=7iE5fWy
zcDc3z-QC*EvvjdIZMU##gNq{iq#ycs(dRs9RzuAe(coh(WKdU$-Z&J-S<!VW+j)>$
z_Q%FIQsA-YgJ!c;wmwBsk1Mrf8A<4F$&0pi#19oH0IBC7zm$b``eHG5kFsQwtY?GM
zZN?j+!2{OI<C(%oMrLNoX1+=n$4A?Q)sa1qSftC&bewKix1;&WS+ZFzHj8#|!q$fz
zX>ORMv)OFEX~&eqFDdU;9`BmGcPr8vjGaBYg5%x);1TO}`y)DAp=58=zK5iXO*`TG
zag%w*F9Xpcm1#AS#%m3oP+W=`r~|wqsKe0HlTjIe8E(zCucesRAE&iYTg>LO+2R?-
zPj_~rr-Pwjwu{ziE&6vb(<1hPofNE3?=?GTenInZnAIzMNN{K<g$@e3xMMx#yPO;n
zT&$L9vVMB&*i(V-(BKCo`w4AWltLqUuuP*r+sI1M3C#kt<!mv_)&tt|gd&7ATPDlp
zs;wkCRS_eJCuz3KR+~=y$!{N^D$;B@pRJR2?#jdKGwg%1RdReSLF!QN6V}Q2rW~CB
zoh?_h)nc>{>-f%YX6g7^+8lM?bCPA!R-#9%O$I&xAjhF$F9#fHfCMg?9z?$nzogl6
zG0PUcb5pvo7`Q7RYz`RVVmDOuo@UGSe6~4hcB{JP85;)22XO%CZQfsrA=I~Q6Cwvu
z1d+6%1+LR|8U%Qbs9cEeaZ-{6zZ4b$K8MJRfq6OEGTm$v$*v4{Rcc3BTB_-N<C0V=
zQ&X=D>sdMdj*Z=h)-g}AO$UeflrVN$TF~LhslS?%<;4i7BKKtSE@&t3U^e@eToy;3
z3Gp=cgJj=>po_Uac=A(lztqDE%NAuxDfAIAwaWqvQp0>`ja+-_UFBGAF|do9MY=gp
zK60p)AH(i#vej%o+bq)c+G5Vdh*h3%tag2JmeM$U8A?qegNs?X1mUosA&<2WSi>Sl
zKUKD5^J&OUIMF&t_z&7H2`)j3m(w1xymA1Hh{?v5L(JeIOGJHXj^;)r%VqX-Mr;uL
z*gcU^tFbC?bZ052h2w9aDHLW$`B93Dl@J6$V2i2ipp8r&`)sBHt6TZM<<E(E3NgCn
z++~mlqKTMz)2+mC0SBvQ9rhP66w4ZDkOP-Kk2$(ovR*8bp_1B`R_y+EnryP!D7aA7
z?Oxx<*SakG+SX@TnkMUc8(g$Xb3+u+^NhuMw(M(K|8QwLAv!wP^g`rwi2DU0MqmKF
z9v4+%6k|q)Q3}m_nvus%^w7zp?!T_$NA#NFL@k$62Pnv8#ZYz?<+xtqzf;66k6Z^n
z{1djMv8Zcz?IV~NvvvycRXG0yB-{^M81W$1%Vd!*p3g_>FXkMoV-6y3lo_Tt(Z{1c
zXHD(iafw7Q6kle>0Ysv%07$`w9K9TT2Id$%&?amLQdF*36b=JucUM1+ZSI1B7>>Sm
zZ7g!x34s{P&Ppnrx-Ba)6*c%^$-*=rjKAhQPbkD_5F5u1E1-N&ncBNpEs_mn{Xdf^
z@J*4amq!F)r{(rJ47kO4Sk&V(%vC`Qd~3Gx+uR=x-404dg(hNl!>$4j)`M5-Na^n|
z_KO)w4@ozRY_@*#JvycB&yhKxm@Q692miwgGbND+9?V#jXttcM(-%N#Lz$Brn~rqa
zPZF^V#<tzAvB36u4Hk`%{9{t}$mgcB<tEuYA6n{@{UPLyrzJQw`~#0A@xQ|>&lLm3
z?)aA`=_=dI*XL&sJ7qls)mf+e6<LyOX3I3o=Gh{f&(<R!mL=;fo1Om#b_wDm@w<Y1
zJzx(Zkphby2>Vlq-Zw=M7bD6+i9`|k*MLRhAi;*Tr0<=fDId`&Kk)$TCc!vRb5&ol
zOub+z9hwHTL2%7C<zi!NonZe!*G3bq4!KhJr<|byJg#rrVRz_?J6&+EMD7}k7uZ)Y
zzs=jV{<37k&xCOQ=I0cS7`$Y@*{l{%j)aeAS`K#81P#TTUg@zU#6_CTmy4&@JdKw`
z94pik(|o9B>waHIcotN;xr`=(logK9KFLv<Z_@Q_HOmGZr52;t_uK1k04nrwy5Y~B
z$86TiPGMyad-})&;F~BxvWQap&HuGmtL$+q-{d4r4#lYdNRR4dy`C@U=}AQt!?_&3
z<$+7@@7cy=z23|gb4f!U%?=9tFbV`tBURePjcSLrEbnQWjH>+Y67oszzrsW>WPmEY
zyW-UO4xcMr3z45Hs95yEa?cS7T*{L#$j9TXFeEoT-^VjEg05<^R)YGi3Rj2+%ut3e
z=V)@{i?_M2itx>5Dd$?^D%ow_UtKRfJ;%77&og<9$Ml7GJWTNyn9ZjEap^v06!?Bt
ze0)?_>uQ4>XG&ckAo*`#t;=+o4o2_&I(a05cLk^fuMjC8qD|D>yj{P@$;`+pa>nY=
zvXaGOb5sk7fD84q@S^S#p{QTx&J8KY*^aPP_y>^g?VIFrZz=GRxHh?PJ-bb-&y*U-
zQnq(Fo2SdusC?0j8y=3E<6p>0SlCwuQhS1wSG^bBHlr1{2PQ|q&I5z^ZGLOEejWjn
zKs9ChcfV#cPggUU);Z*uV1DV&cX_#@*3Cg*uBN8;E<WoP^t6v+@qkN8#Hyg9exzL%
zkP<yugJ*ldMQv0-<y^^3Y9}aMaUpCr4+bIK1~oK7>7i;B+R~RMqm;mm0C|d9#V*zb
zu-D{X7r|9<YSC3}VBiY8G~SSbW0@_NL00fklwFzu#|d?Y5mFxvZon$?7AQ3ydb;+n
z1Y+E$#9U5IjXaXo|Lc}Q4N^u0rjl-fEd3iX`e~Z1lT|y->ft!%)YOO;5B&&lFk8=-
z$tq1}=?V&iS0kuqk*wC6<jLOP8M*_omqtz<1}9k+<Is&O?#yz_168alI4vD0U2l@*
zdii9Z;8dX<V(c{2Z|J|tq2xZ|iF~D^GLpABCl?Z}>BhaNT~I0Ps!FP{MDY1~xt`CL
z=lAJ4^u~~Ru<o+#@xVbtI9VbtQOBOpSujnK#d7_OoNPZme^BL(Ds>$nit<LaHB+PV
zSnbrILT<T3VY{}$JDzS8jkohiXW1r8o}Sfqa=h|*otOO#NaputYZxjNp(QL0#(FN%
z1QaS(?GAX%$Q4H@=x$mHh(u6jbuFMhr6WKOa*6`s_%C*7ARQV<W)jmA)EEHe&v=4=
z3H*f?nsA@!yJ9spc{moLKp}$T-_6d|uF1eRB6iG=#Lx#rI&XJzk@Q`H+j7qqMovr%
z=Ley((D18(J}5<JL?bNbi`DuW8#l9p4?6P?w>0{7uJY}Dj9I1?aVG%DsG4l_s?2Az
zS-N`0m|e?wcN<0xehuk2EZkuSoeEP<WaX0ia=n<Zo^PyQ9~D2`YE%SU1%`(C32qGE
zPW#XyrVqgV52jwrq<+^#C4h2VHc<1J8g}<p9Cmde6WJHf4pK|473D7I+#+uT7tYt&
zdXu~;Y&xNHMwl<mcnZUyBDn(?k87&u^W@AZW>~Bjvn*{_M0tnf=*<4bdXcO)>*F)~
zTfK|>p0Q5T<0R#+-s?QRZSs2P8QFZbY1ch``+yGV_7RJ8+1K{XKO!tj?0Lj$ouz%%
z6K52nwkZ#EP@8xF?;7Tp_%@MzRS~eZ!wZbrV$TGzuWm#KA3^bvDsZ_$D4IlXcRTh{
z5+(n;M~glw#8=yUJINzfHOFH_$sF~bfW)x3IhO*W3k)oo;f7=6ELuB_aAGXzkS&vJ
zv3hz#iU%p=q1Y$}*Q!nqhhwsun&($?_jsJ7#_GUJfm0-?PhGoUNYxQ4714~z!Bk`1
zjLsWcAiMX$m>Pa&s}q2$p9@JKAdQ*Tav6Rw{|!QKx~2qDCXJmYl*ulxL=jJ!4xHIG
z#*PApVbwnD3uoGe%XJmY#9PZ|0+h*ub_EF_AFCU&E@`?>*UvbycW8#jU?MxfVcvL|
z?&B#mLu05g$q!P4B$L$CA^|CE2}?UahIdxUBAq?GaovMmyx~U5m=`HJo^!iwXu5)5
zE8Tk0-Uu9987_I7Q-!nhAFS}Xb{->^Ii1h5EPe9cj5qZ=-r~o1s;P;hfqQ^s)}w86
zi2FKQAbBBuvQCQ}1jrb?zya<MP<3p0Ei$>T@Opb?AUImgNVEC`8&R3c_@sEQOGTZ6
z5u>ojw9sOH#D?My|ELCZ9gbCWJU0!44P0X;Q!B!`J~)qy5DB+z+}L+;{f1bh!!}ym
zX9dUG>Y!^YHB~t!Q)_`kDvt1F9{Sxhx(Wj^E!Wwz%RHx+QW|2C4rh0QUg*RF_;L9H
z>iVyukxF1?90&g%N72S)CJr?5m?S2485eZ=CJ#FFwA%LZ4~HXM8kyf7csZc@X<5QT
z(z|@05*!Jr4vxd{?IeZX5OBzkk>WNgVg=Uh_F>K0e3hnI@+3yS4|@#t-Ei;@?jhb~
zd0vPQyg}#P^}-J>UW`RczV$Tq5cd8YAr~1dhF+iCgU5~C4NH<>*1PWr;$;&=g}h1S
z1|x`+0Yr#(&|S|TfLNK+;%;cYo4vB*d^>6*7`DLxWx~J2O`i~lBU#`cB#P^u*9^GW
z(PrVyGX9Ec+?=HAY_>_4PmX$wlfy$ns^<!KWSb52)_LleJs4RXsrqok(p?*@F$Q>*
zCX3YzoX#-Y<5V&@THrOJ!SrLW$GoMD1$6DYj)#B61L53ouO#X8QOH_YU#+NGPq;2F
zhaC(2U}#(ch~U7)F!jC-I}eF=XQGv>doFf0?u>UG5sGXvpU;kUK!29)Jerjx2RB66
zO3xx@$fuBIQQ)C)uuJY?0Y>L_RgVyJ**aUM+5E|uV|X825{oPjq?=MV+h1BYMKYI=
ziU1lNT7tA@*09OYF1pv#3aN733t7X))yIRi^!nb-UOwhiC5u(EI5z5JXfT8PKxSn`
zWXFUt4>3eBmuWzR;^AWn;uoAZ%jqDX9%-1j$^EdnnoD>nyN|~(5!tW>*Gm>Ih}W8-
zsnm<rI$NLA4)tMSjv>F=v$91nGzsc3L;_XlWLv|IKjVixix!ILf7<JVw}yHqA5C^&
zt~TqZM}vpyY%neB6BUOK0}>k~JV6h)><6M;=$f)~Xs)RnLmj3R0Aep>j-z(zgkDgt
zILr<Oq%iyy6Y|LKqV$B)4@V7W(y)t<pbgwoi7{bbvT`#>@i5!@H8oLG2t&OqN2!l`
zcNMw14HhBfQjvrM6XMee(JAB><kz5w@**E|0Mm84Sgck9bU*uiJ-;?jl5BK-=+UMS
z_91CHYxCosha7K}u}C+w`Fe4D0%;o&^gU#ibOINhrF4c3_B<$AEwXl-AnNgR#>>`k
zqGSgnan(dLo<<+CKuLd?JSu6P{Y24XELyfmH_J`>jM1`IAodt;JxE2{3ao>E;UeZ%
zaWj|9ieWc}Ajw;Wlu+b|eNt<$#>_5g%0Pv7Mdj0bsXWCOf(wULz$B}Yd|O{G*~1R3
zU@uMXYGc~fx?I9Z)t<~~!J>h+^_dlZqZG$YGz~_M#e@aw63SRMZ*8cP#xV$+rs?_&
zUgv{2j3YHl*fK>DiQ!C=stzDmb>%V3t=aPMIh+&G6I{@(83fj5)0t7*cRwMLNh@a1
zgBXNkO@haTKoI9f$X4XuQFA%(t^^DJ7(j&UxYyI$1erX4)Uo3jh}Hz>ur=)^aBGnA
zR<-C*?%P*E+78S?bZs44lOIiGIExM)HZjA^t)X$VHQ`u%C;rN{o91grT?;8&dQ4oC
z^(<XKW8;V+DxpiZ(l(0D&8{xqcd&+7AWu`Upo7U^XbUZs1eM1#cxr@i!fYu7#-NQ6
zx@n!_Q_&ZaYOj@W5d4*~qV7|@k+MR9J%GI6;Lx0&U>t*+PR)94#68Ti)qFjFMxfit
z+faFL+J>BLE!gH@9F5s||4xa)qSlCsq#5lRl~ZFWlS_g!53{1#!y54jAiL-pbEgLA
znc-%mTBeI?(YzMJCoVWCpfvxPQy%o+s;$mE7j2au>q8o}p*>jl_MYN>-O0E#MKv_L
zg4uS_nkKKW&~v9g_il8$3nqktQY<$e3zKHae7Q)Tp2jy`-utsI%lo)ghoX8MciY$Q
z{Fq2C7n{}U7>bnh|2g+I%!=TI7AzYP)J!nzokG?OgwbW>*bQ}1Zdo!Qw)!ZA<#IKf
zFBd%x#jaJ^j-33u?G^{(>_`1n^>D|yWVuXdi=boNP%63;M$uPG4(@`c#9q$?k;KN^
z(Ao`4bPw#*VbOq>R!7htf~(fm*fjFxGFz`^n^W4=5rDF{8k?1XdyFrqvPTQO#Z<92
zW8?t15eXiyR0(qs!>}NE>D=d+u?5WpYo)uCF1S~5V&f;Q`z4#{oCn7%IKQg`v`<A!
zL2)9dV{ut~EPBQJU>SjTN<Ot<%32m0${-$x84f=3B#sB~jccnTrH5Jokvl~#;h>=T
zz@c{Dsvs-k3UWmp@boyA+T0Xv6geOx%hhtV4lY5jN(c&r$b)fd<b|A#+U}w5ax-AT
z?ZPlp8m@~ijiob{q0&t;ZiBN^>4=2d#~Q`{51egQfnGThV(O^7;B<RSSC`8qU8Ji{
z)naD~65I%A-G`$jL~>B8RVx%*s<!`PFHlegyr&$Ips~G2{eIF30RXXGgl`8nEJ-%2
z`Cyi3E7^%FjHq84XD(tNb{JshZ&D}O0@EIvpgfR;9B(W)dB+RjfsGZpPPp1oD4enw
zsBD5k2`5&A;~#WsJNUtERejZ(!9z_eAQQwr3sn$JSYTz|Dsm;Zf)MIpOMB6AB8;ZF
zk9wQqz%^$SS{YDK`AsMKHYay8SP0I6XN4G;?*XNdZW1ZeU0;e*PKapjgKlCU#ej*o
zIh`zf(PC7s?ysd?F6Zm@6T=OIg-Juh4>9M}^~TafBV+4Wq;}X{l!Z4ya*3()*0o1#
zs<~@aEb4NgGzA{)W}CLenwtyo(_>fSi@X`7(joT+N`@yKa&jDGGSFKfbp!LhfcwUW
z<5$vPP$~mbT6__Y#S*RgnQ?HIm51bzqglix9ax}<kP>^z!Ah{ts~_G<529`G<JAOh
zf)~mOj!@26+$SABt3%xt1r8AYhnb<){3Rlk#G$|+pVH=RzRFhF?CFEt9!OIkkz5*$
z<@<wcbwXKFx>?SX<jEfYXn)vaiK3NvAmnsYpH<s<P+CBTL~kEGhOpN%Ffi<(fL#z$
zL#9TcKDrMmia2kJI|E9E%5;h~!uJ2eu5niGsB00wx&2Whf6=a~#g9{y1cc(g=Z1m2
z3hes?YNz3GKaPW<Tsp~5*K(K`-YzQY83{%#=h<d;Eav@4ff!D1>T=5jCpuXkBH=-d
zX+$zZmI>+u#rNOllmTDWLVupt({jE{R-5%pbV)jLsXh58<4xCsKEytC9w&1yJ(tZv
zM#a_JT+o8=Ta!0~Mv-I0SGt%btLICkX_bi|LG5m09o&5Kq+*)KL|t1E6fsT?w7+uK
z*<*yUk6*55vn+c))~}}<z))%gP8}4SHgxTfbA;j`7ZlSeovlQ>+_@5NO8DM&(rL}~
zrJv(L!LqT(l|v<@Pc0Tly&dGU)9@l0`XVR-Rlju{jAL>YNJ6psPh__N9@vEs4e|G?
zspZ@dq0*b60XwJ6>Rrn{gQhCM6*3ap6NZQ60p;7z02Lkdnr=9ap7AiJxch1#IgfHA
z#<E^7HtWR^GV|}J&}v)(i93mq4(q%z3#&UZ(zjA@n;O<|2c=R2vjo<gbh(%(r#A7T
zHl!9)<G=Pbv`*LdsY^M|?C7LD6nB9fKqy?9o=Y2cF-GpNLD?>jb#iT|6gR8!2Al`P
z6_obbvlENuX0bkXC$y5o#AK>C0u#U-R<K15G?QrdN^*Z^YCMhcr1x@Ss;|)D-VBcQ
zv!E>KF^`v%5s!db+`{1s?}U>SbPW8UQ@AUUYqO*decAhd&7$Z{aH6O&1R&E&P7m@9
z!2ieFzxBqBBw3>HUs1e%gJSc3c^FL2VCI_x%=7@KA5RH5pcJeWs}+peB3Zc;{pSy8
zcXwW#%8(N1uFTw9K?O;7bF*d3)^cYnIjiguqGoCW{dDAGG`O;1SEIp)^{B&MY4kj3
zlyo3zQ!1l-HLE!9Y>uLci(M{{a}bzXnoW`<$Vh9_pdR#?tugFOl0^u<(P6@ZU;51f
zMBz$o3m8l5x~!YVF=W{>!g4(CAfIz&mJFuV&71mhX<gTG<wTIZrVG@+$c7tG+S$V^
z-6{}0T(G&g1P83-5%U6oV0p`=9%k2^@p)wb8Yn-ziB~-y!|;c+3V7CN>q(Ynp6w1z
zo4$>n^Kxd=x$-(&ZwR;>ZE{kE$o6AwM<RP24pj;OAJ#idaQp4o(&R;5CtG4$8>v3>
z2q7IogaBDL%d^`ymtFQolV(<m?;wGumkv`@PQ#P_7m2V=?*<uwOa|~R#~tfR)aX@H
z7U;htatK6bA6eLTOJ1H>mL<*E1At#&2gRXll4d5$?YXu6TjQdM?N)v7$2R)42g;w@
zdDAw%0)1%Bgi8ok_eZz4Ps_ZnvopU)zPv3@1RECU^Cx=AZ{Jl`)~O@)wn^=Sc?GcI
zU>pnKRu-fCV2S+bd2rHKJ{n=mW97XQoXWH=&!CrEbETFIe59j9{r%1~53O4$dX0EX
z(WAUYaw2g4uCDy#of=73Sn$gBYJU-c6bgKRu*nrZ$k%d{=W7Q;AZWKvRar=EE-v!C
z%D=Dr@=8xvu*2JZ{fljMvcmPiRFnRSH00&*Fq)tG2p}w7T)r0f^hQrgli1q;qP8!#
zs?$r;BSj3DCTu+T#8!ivLv_XqU&<=7pA>jXj<TMl2SO~1vW!zOt^1}|<uO|K1%;*H
zg~f}9!92N0Sub;n-RN|+@5uNyRko3dp~kgH>!PSEBu*v?p83yK-oi)7Q?bMke@bV&
zRlELd8plnxW9jqxR}dz;>?NkEKFqmyceTVVR&@(Kj6ALC^znJVuLIioemW0tmg9-C
zyndX*F|En6;v2n1`8zqHD2K)6Pg@F(21DjPBECAtSRHw2XnUc`Kqx?@Wu81PNO;EQ
zWIw5~ycpS_(3~Rv+H!hg(=W7P(>ST(gWEY}+in0Q3jch-5EI4`#IOYnM=yaiDMMuB
zlLiY7Y=G8vTIXYpZhpabY)Rrej?d&YpX|sU;JjUHn6U_Mc#RGFBoKNtZxh`cp`fF;
zI!+hUHo`x|3QuJRq`E^pOoOx1lh(tL=`d1y;V)CZ3Orxi&}2QkVQ=_=a!?qF5Q?(C
zPMS{e_#;0J9esJ(_<PYz<33=vZdp)pBcX0koo8j~I|F}ypMC=I-Ys&C)(BT1a*!-H
zXhfk^D4O2Z8AXq@%*!NwJiiQgzV_&sKqQmMtKEvVrV=;V<%g}{KF!s1{XAY|b+%W3
z><z1IXaI!5TbfsOS$tp9XEpz54e4E|%h44dT~f>QpgVwI-F_hKpR_;4ju#SK&4?j)
zr~019cCd$z1yJZbtK+P$zj0iDZ`xsBv(7T;p**o~{-<aMpOf4w@;ph)Z@j<lB<#SV
z%#)MHnv~i%h$Ere2R7tMua=?$yleoTLLnio^SJtkG-cHS{<!}h{n~zb#0VN(LqA|2
ziSJ0T2@VVL$6q;_P+@P7aspE>&jW%sP713{8_LtqHp|m0tK*{lK25gGx$!*@PuTJr
z5sBB~y1)sk&=H8aGktFol8`f@<yb4<hl`0s-G_r<N6!N$0=UyyIay2ge|GO@)MoOm
ziSsi1zWQgYMA+kga>Ez_0m{DEv*AkA8B9NxAAlc%C&>y^=f;roDrvsJgY9#R=>Vg?
znuFFG(vlXl<a-{oy&q^=UCI5NDAEx7eKa#(&O}3Zb@Ij*RU8E!BK|sOvPStHyXx4y
zK!+d+8)MI14Qe>g47N+t2>5-bw`OUp*yzSX@=W=j6-5@O=|N!lYp{DGyekcC7N!vm
zb#t6U17GHtJs#0Gy0ehjl}Gxy+tr8TWQzcCfzAqV2O7PzW_rk{l%koQ8|9;}B!c<g
zPS*<{Xv1cas>iMoqs~fQ&L`uZ#ZZI^e8|Vg*x&tx6=f=`Kn0i;MIJX*at6xRt|7m_
zSzVVp8nL*z!iN3p5<kok2J;ML|3M&;l54q(%k!WUCj?;Yq>V0PJO#Kg)a|=-pG{iS
z>6z9doENSIm#i1FV$Fin*{RO8$XW7FB*<>|6tbdB>NqctWEI>)uqCWB;t>RwH0KZa
zyGnGCO&Mu@5N3}QMQ}LB7m7_gQRnj}oSbLk?MBW=q`g2b(~-n#@Th?V&g=zARN#lH
zPvN2;V`O~7oZE%Z{6ITQ9;en9g@XdRC;I_NWtu$0pbhshP}Nr^d~9owQcRMZggclg
zcdSlA6x{)TL+T<7TOF=tZ7yZ`85HJ(5&H5E_@Q;Y<?5N$ec4b-Tp&QH&;^ymYmZ!{
z+Oek-XgR=^&CALQf*Qh5$9>Q-3p>G#&&7&6jNEyIp6(BHNAEt^jz4mxl9<-8Vh3Yh
zLSsgg?V=tZXmL|jb@@00G7PMHQtbvOG=r}!PQYC@@)0?{ha^vmD$5_v)=xkkyPX-~
z1CiYi&F?sK%yQz<in}}yEmKvVJh;SyBue-kCgWo$isvByG)|q$9dH8QAt?&Iznvrl
zCmgX(Fw2pWt}Sk%%%C0>)=iwGX?~!%_}4SBUhLm~3WX6>gDI?Zw>tz_{#!MXShgi8
zI$;o_Ohsa)LXNC9+9At`kQUx&e6V7<!zVOuO(+M5No1H^G!;c-TU#ey(IjzPJN|}y
zwu>CJI!StV=8B3YF1%~*cy5_5Iny|THNex%oD}srUYeAAiTquwi5YXJgo@MokQ}dF
zc-~}3fv1cllhVdS+6=m2?c8bJ<n@`8;?u~}j&Oq}z^jUhsZdLDj$A4@<W01f<pCqy
zs6I{nBv&Y0S+hodV5#1H>;p7~Xh`&^N@?o4u9JtS9(JFi?=`U}7x;^#AdZW`8!U%K
z69NsYsxH!R>?>|n(EFe*jIDTHHf&<`VtsAkU0t3Bjy~LmK}Ig4xEq@gTkT^XdN3Jq
z_?w4c^ch5NoA$Uo58S{%M8ew?JUGS8WzT34qYIVoD8sy@pCMtfJWJF3XoBUh-uUu{
z=_=}mODRoWw#yzB1lEa!EC49<Id@1>$jX}mE6=JTEvknC*1Dy1?9qk{#Exdt88PMg
zp>-AOY)1~sI5*gtv@^64lccHh^2jjz+)DgpqjjhEq}@u|V<@}q+r5mvl_}C5Dr-VL
z5BlC^sDh70F;_lXvPo9w@h<hnLwwht&f_f2eR0MA^tHZ0yCT*fAV>Og|NZLkcschF
z5(dm~Ij*qnM7v!MdQE^w9H_R!5xSLZ#!LCuMS01rnUCn6Nh~Di6$;bcVKbgDh0>y`
zs^%MU+U>4TU^`#o$=Wj8wD0k}*{T&3VVW_JVJIdXPvHO-+}GzPpTvuwE5Xt%&eHT7
z{pq&1|3~}&kGCy%b(SUi?YG~e-|zD@zjPo?^jkZ<zWtYf{^$Qa{_Fq#x4-<i|7-kT
zzlH$cDvi^}Ys<6TzoUt0C4taBXh{H>)GD-m(FqYyj>W~&p&<z;k__x)ssimBg7ndJ
z1-nJggsRniZnZ^Vfe6>w3pvQ`%Ts^70PooN^#P)yL6?!1uv%G~Cvlm5qjaRloISFj
z-;!_l=ISuVm?2<BX86R@?m&G#5zFBxEF0UN({2crK1V;ZzrO6@ZnDE~beIkI!2w1C
zJD_UPEJ+`BQCK5HOHFSd^x<rqGhp6vvDh1&4JXz|R6F+MO#8tkc=`_1L{(>pc;|ri
z2YdM{8ouQ<X5m(;6YtDJQ~wu7lrxk$)J2^<&Jzvea({1!{<VwRkJ~tX+=pNNM9OM}
zVf&48Vx?tS<Qs|d@*G09ndfy?`CeA16Qn$^o4E3Yqg{*0>wW(9y&a=#JM`VQ#baK?
zaZ%@o%F&k6uyKJjj*~5e$AhV%jjLpNT=<5Uf0*n1$vouX<e?J>g57%X0U9Sr%tM8L
zi0mtk(denYTBuQWQuh-OI8vosHZSs-G;d^U<p4^M)WvdM@2sU`_3-7xDbz1pdfjI=
z$n&I0%5t?3HeR8AuYJxF4hH|2d;FJvOFMn}jZL1}X{00LPfqf%M=UiB?PyL0J2+1;
zd#5zvE)Kif^Urxw*G*R1X5Q;Z+y5GUbe&s2m>wp~cCspux&}HkKN3)Pe{a<kasJgc
z_EAvegv$2I{TzUjET!KeYmE!0wsX9~)Mf^NM9I3?t&@bkB-mo!rv`7%#uD>&cW?u`
z0@!|}tOXhlOJPjI!b?6W3E|pI1O5)M@4J*;Eh)v&xNvK`RpB$PY~r*o|Afrqz<Hd;
zfM${+mhzsM*E)?Z=NpJ&P1Hg_OES<w7jt@kUE<B9MX||YaJm{UVji$9pQ(kRaS(GJ
z&qPdo^TX|#tSI6lJ8I9Id*GiUU+sq@-V7X+faZc7Ey!Z|ga|F8x+%()dhyZh=|*QE
z%gQns{I^Q=jcesu(*zwc0<P0dTqJq^W%dzaug_h7zkX7k6|NvShA(d}fZ8TaT^4Dv
z2Z8zS4I3Y?(`1zteK7{+ReT4jkV*Anw?b?sYkPBQz4foQ)-#{#h+6^Cg>)duZY=1@
zo)&RcmPbW_KG>IT_<MWnhv=mnhR!Qne{ln%M*WVb3b8YTSl>3OC@qqtD5~^CGt<^b
z06@)?H)%+$3xD3w<O(WSNpd{q_*7#gWUg%wh!;tfHT7ELbfZh4gE_=w^h9Vqk0$)~
z*aQ>}cg<WFlk2uwXlW7GSyr9uYd$ht&EA}pc3U9ax2NC}4DJQTQn-^Il<_H&vdPN$
z;hxlIp}@_tc+yLdISK$l`MCXO_Z}Hhc7$l2T7sBE*gj;Q`BCppH{&k%#Rdj7`-J7R
zd>2<5a9NXvqAlGT`bl**-S7m)7kznZEs2xJ6Fr-x8-qe%si6`k{+LnC2V*wQlW5D~
z2Y4Ssil~-m@C{#Ccpd7BNbS^@wTM~;gu<YhjnOePGT8k*Dgk~un~cZK^Ptbr(?II(
z<AstfQ+GNOXRb6N5$VW%ZM*Vl(kf0JQss{Hx&%{p3nrB!!^p6zRS*D9K(W75;E_>}
z4(1&xwKjP<@O}pMM!*wg?V?6H#`EOwdA`la=9rVA%^-XwTBT%FyJm!rDl*ktcn$AQ
zmDGfD2W5wRMctquBEbYTNk>vnux@mkL%4R!Ln5&YVMtK)-FeMBZ?Y_traYld<AnXz
zyZxPOCu!-3q3kI!;1XbPP2fvU*@w>=(1n%mv#a?c+<eWg(O>fegti^d=AAg_xJFe`
zPwEuhZSoiJD!8m|M^y6MF3g*($ci(k+9wM0!?flHS%he;5(fw5x1-*@>YU9hOOJkt
zc%!Ncp3%G@tcziHDfC&sk;$&4PAW_*E3rW2I;2_?2h9k-N^=hFcGPAce+4ilAZZew
z{_|i|%#9Q`4emP%H(e|31-f9+(Jjy7yv&MXFNOboY_GR%bSjIBtS+`X*q^Ja@+>Z^
zCObCwTUGfRSE;KiKEBFE7h-*#Bv0eYug?A~q;|LKiQ#(I@hsD)vl34<!~}>GYp&yY
zIyhsbB>4?3MqXq9YJnD;N^FCx-IXZJ9P7<l6Dn)cyjYUpo%Q9DZZ|$&RYd@Oe{biH
zHu|mob=WL3(=>0Axb}5M+-n3)AD62XMeH{cRycz90@s%*;wp}}YF<02vTT<jdT)Q*
zy~?s_j=LHMdpAvsyeiYc-VMH+BCpHB{}NxnQ`RTNQ7NP`(xLE~WE*)BGl>syilvzc
zDqhbrY19z~1{#nQ{GW$b$|j<@wKPg02bB5!m_nWGbyRVd<$1Q(H@m;|L-gzYwh4FT
zRotZ2Dt!IrYcZAW*fp=`Gc?sf<2Ogy836Y4ZPP5yvN*0E=J1?=ly|3fjVu<?#$Dq<
zJoo!6I4F2z0cbjdfe{1rcE|+Ld)0=<&Y7kTrU^g{^rJdGO|zo%+hyDJ>pn}J>Li9Z
zB#{S{9LMt54F~8%Myt#CN6aiJ$j0watY;VTsiNu*2UG}RkQ)XHPs{^y1WihEXyA=0
z^LL%A#LrL?<$0XXK|#oOYsE5`KNmW@t?VdWzZ+JD5^aW-Wh-$w>`KhdJ5K>Q_lMal
zk){!Cns$uAiZm^fJU`VJ3xP^*G_mOhp8KMp%2NP?qfbfgvJktsPV>C_2ExON%6!<{
zYbTwPh1W*|S0+xwSpC(hrG-b#8J4_Znx!z_U$ZN2qn0RvBq`3CDvb}UEiCrCD?emh
z6<e56T2lcndC1eMMD$ZjA5XFbqtO65>!jrGDmHL6Y3Fif`m*CoBD2=1;_it2phHTB
zHNL^s4OEQGPon_OaLMv2mP2^i*bdk!9Z|z)*h*#Myjaq^6L>d?FmZzL{sa(vJNAy$
zG=r>GS@$P1`<}3c%UXuM2)DBw+uMcW<A}eBwE?00v{NOnbUjqcXkd-KeQs=Xo5wUX
zAg@6K0w@*m^%7DEdH_rZzO1C2xVg>bEJJZKe#tzU1}DA@$&SXrAAaJk6|#W&9Ga`>
z*9{DQr*YntW!)U*)A~9YFNR+tLp{7T=*e#XnyhKcr1?WZc$IM+TE00nvyR1HIj5jw
z@OglBP728`V?iwo2n7aBHX3W<wR}c+Do>j{DdUGH0m2XDSox36Q38ue>)4>_7>8uV
zVBZFm_%(eH22LRBER!OscUf#G%(sh5ET2xB+%NZ5RbvaH1krT=_~^EJ#>;hzW>tOu
z<#T0YR;FnduZU2q{&k?BUM^E4*-k0^`PJ~5!jHTm{_)Yjy2D#$zGc}j&Hy#Ab8U1+
zo5#Du(-ENqDOoyeTFIdRQ4v1vLAgNSR9t5eG9eyzKgoFxhdpgd36r=$P`%L39s50-
zrRTv+k?X!?bdir=h`E78ERLHhtG|!&{;5fxFC+4&RUTK3zel(8r^CQPQlZvZj(LwN
zRLw^oyk{;0nTah9x(p=C`f}X6M{sHJnFR(OCPx;MZAY>Yp8H#8QMIHmjt9ez$ES|(
zX$FSHTi0%mjXBv=HyddeZRJBMqC9AB<+%NnDRMRqOnBd~eMHcR7ME~VVOP?5UZW1?
z3X7<ntpOTs2x}G4&eMgnea{kTLoBPE$k&I{MGy*yHZzXgv*)S9(Hh*U6*37tg5LU9
zp`kl!B^+z;F66&}9t)PT%ezONQ_Ag73km+*bSz9U%nQ+kIah1sf|q6}SXvdX?lh1a
zy7!$`mKT|$!oRc1Fj7&A0+YhEH4lw(^%zx+pdr1+nI#Z}0=ZQ2X3T-oRKmhZTn_#f
zMHjH%SR2|=FI8Hte9hKz`Gw5l=LKm4HyKLc_W{4=<KzBuak{anUoV$|g9qS_pUxVQ
z@k>4oB5q=dWjwZ18A8~3A5~lz>-Vwky6+p&TWAgw^G&d+V`c@*D~NRj>(E{KP3vJv
zhZJ=SmdCegfKU~2lEshB(DL!;4K#0p8p~rRXqOfld5)4W(k)V(9V|+55zV5~>7)@@
zSXuGY51ose+>nF9GSK|y2~-FV=5imMZSa}nVti@|FT+?#D@3(r-{0@ck4$LQ#Q`0G
zNlHrK)`i3rV!u>boHq|UZJwp%?W70zDtP)w!9`Bo?<4+OH@W}hEg#4k^1O+g$A_B3
z?8^f`GlOv$V<f4msWTxhe?1N{r^Mrfc=aH?$x}PL7+rA_5j0|rPQovlz>Fa@kV2M4
zoxohq7e6;XhaBS99uVJ6hQP-)?+v(_)YZX9V+OgHJ9xD4<EqZm{85*>C1l=JZ5zXc
zAf_xlw$;3e>mo_c>1FK~O};|$e$51!87+;@^9I+)3wgm(fq+UG--ien0m5Z?o#bSR
zF9rRHSDI*@8%WKkxA;fGx|F$a{L08NH{><WWGsC9Iy)&gH&~7rLQ<DWR-Lme++Cw8
zkHg9WdgeyD=_GfNB*$!X%0sbvKZ|Dz9{^4P3&#K^zg995Kg-qen?L#>1YPSL0x2)Y
zA%{VxKSV@>dGd)x9=#Vhb}K3lnC^IPnP|Al*qe@37&-NEGPPOsJS_ViGC*`aSKm5(
zLR$;EqfAa3IvX1?smrpiQagFIHke<IR1orkT#>mJn^&viG|o?%5uCA!*t0RQo3L{@
zo3M1))`kAr%1G8o@HqpEuh_=mat$1kmJDe*TueZ93>5EIqN;{RgR-Pa<0^Z2QYG9C
z+LQS~EFEsM7cB`<<$`S2GPUfoUS7D)i1im+5NJ?@b&Bu61){`8RjXAGs$Dj*NefJK
zsdF}!=@OVek2kJAWAZIu(u_gTsF|~+tsE&+r`h6x=9hTxTG6&UVj0?WU5YPL!{Kac
zXp$t$$~1}p@FYo=)n!&34-3;prup^XcP^6Wakd&q`NObg&}e>7x|*f%Ae1w2TTVmA
zr1vUHwb&1WwTtl_8}!IoL1{Y!Xu9gnSTLCJ_ty#h`c${UX!iOAP<I1^HCka76_UJ_
z1`5%Tl`BWOOFV0AT?%!JR+Xl!*#{5qv|8R^^?d^ho}|ZigyDAva-sMZtt}r;#&{cl
zp0*@}2@`@%Os^IG*Q7}h!T>pNxf7Zf5R3OPsn3?w_v@)Ot72$ZgV}sxRv}{jRLDD}
zTMa<m5@YP`0(XX?9u0Vrz;Axvk{>5O>QF+Mq;=L*-&YcEv7vWcf|xWqK|LaoCan4K
z)G!zqb2n}ZDP5GZ0Q?q!7Esu9`EMK$A^l-qMKm*k%5S6U8Oq~^<BQ4FSH@2DI8z5j
zSLmG~6inl2<1>&98wPEceO2P+>j20>=g|edCOUlxvX=m5>*O#c8)aNcpt}f9&*<9`
zM`&opIDnfwD8gzI+&j<8+*K=s1cg@<3P-D~EV4MOzi*X!(d&?K&$)x|yl)+RLSd!I
z<1+Wve0D}^Ha?s*aa<g8Tmy+gQRG>i)J>@WdTXcYt@|yyb;I?(tpl=LsVMv_xnF06
zziwTnOpD+&awu0RioD6Qz3Y5_#hg&z-m5w+P+&T*?c|EaBa_^nMC3v)lpN+snaAIt
zCEzDyyECIuKV5q(;7Wsq&cVKvz%m&3JkT(!$T<ML-ctSoxlB`MW!-!WLg`TeH|0OM
zJv;r@PgC~+t=VOtbRW0-IKBP&mvM>d<G(anlcZ^$HAzyGby78H0A(wiCeD)GsNlF4
ztUg@DNs$(QRQLl^CsmwQ#fl5@7ym-X-z8rPmk^!eXo#kY%QQ=mXA_R)1oA4bs=NtO
zOoI2)#7W{$1pFzyar1l(F^kx7G6uLL({Lce$m3E9NIpXe!`k%SrXJdNA#ex{0{$_g
zb}e-2CLIpAJP|8nV6!S@0!YV_%X=~)Fu({VTQp#^9@L3Uem`@=TN=;??dsY{Q8Ly7
z5lbFI?cRHILFOsUY2}&inu5#c`J21-KgFyW87$1j?9>|9Hcpq6vb%+{fTT+6B=t#S
zXURs(r_*BP61-a8YbC$+m9nHP^Wc@-`OuB4WX*{=px{;VB3)$@|7lxQ43xJwE>Sjd
zwRMTl@7ORQFQ`l`YEMpa>htirGY!Zh&FZ-M1~a>LR<k>A_X|fQlmVLAhc7fwS!Z>c
z*I!R{|AZI>jgm+?j2zGIr<;9A5W)#`$WqAP;EH1Q)^v}FXapXU%G8ZYaV#6TZ+Qj;
zF5<Mwi|XN5e74ltOL9h;_NB@WNkdPqPR1iTMw2dLGJyxhQj}V93l6onolI%MrA!Vy
zJ3;_zu0*BtJaKbN;xwUq_$9GQCrJf3kAPthfgEA%mK?$iI!{9n%>9*P6St$;pW?J;
z8$|ePjFy#c6|r(be_a9Dz^UM37+6wtVnO!>*C?zYfeG6elBy8I520uHFpo*047K#i
z)hk+TJJ_C1qmb1-2(8PcsG6cUMI}5?9&=lGh|ys!jr|nBY_>QtMN*b=mB;27@F>O>
zGLxeiA+u3rJiEKcI1?@b3dgrbmrhn1U1aR+Bp0aGn$amjZ-IOjJ$c@yY%+!I5939M
zKoH@`0NA`BX;3CO<jOo9rX(qwusI!1$9MsyY$ECkW2b|NXiQl|dKO6f!Czo&6xDf^
zRp;9;ZFD^xXbBwK3<nI*D&pWw+zwx!hH#5EoBu^prg0fN8b;g3CDdFYqDM#fVboi>
zrQf2pq5%6+wF(1@oPlJsV=`)T&~`)Eeec`XNpi|=&*+Jm)>VfK*dT=cz=Bo$+@YHx
z;?{aU-F=LVB@2ipQ@%{|OxTISHz2-47<b?oS=2(SlqXhqxdRKq(1KYG(38>-A;Eu)
zB;ak8AjgTqvtsjCULbV7EK!U*EhuS2qiVd-pxFih<d69-;+~kb8x2q@3zn^>D;pa-
zEC7xx0a=YyY#HG$XP9U-O+z^aY)P{d$?BxCJ@mh~um2wX_SSXpzHRAJg_%AjGlcmi
z>h`+Gvd5P^nD*p9yLZ>55d$3@GI|B1XiJnK(-0y+F$;M_DmT0mJ&x$Ho7@Ud7V+7;
z;7P2)`&8qN#B3&Qm*o=l=1dz`Uh#$Aii4gx(cFd`aEK<yzU6n>E8a&cn<0`rnl`Mr
zBMTVF!FQU&;}(o@Y{rHFRIFDb73v=2;UqL7@H>PfZ`^i!o;4|&xXvGwlkxIBJT!0Z
zhkt0wa-p4~7PsiZbvXT0g6qqpIqMmY#||e_h!$juPD6V<!o`^sKXyDv1p_e}^vd;>
zJd9%(@L=IjD3yejv7`l^15cPRiSM1}v6(=@^Nc7$hAe2O31=>Vi;Lu=-hsk(Gy3eU
z;16)Gj)pFpwHo*Z_U-^`JZfpcJ?OWVHzp9`nYo0IlhOrhUlC+WTDrV**mQ0=-@$ED
zPEju@xM4=mH$cX6(wg)2nYHl*r;YxnB-msc8CauvR@Y_rFg^3^KHICS@GU~KR)VVK
z_TixZ4f1!R-cOGn4YE$z5@uyurg8dkAsH&T_vV4wyapCMo#oU|Gz=@<nsV0Q881~P
z<<H_)+h38)`cq0tq<~8<gc)@E^3-0j<RoezY@7ay$fgXk@>Vd8Im{5TR<lNA59>;`
zlrmi%AqMi8Gv?eQ*1H`|ziC~k$|@2)P>ouY5qOxo<-&qSal}-Q$2;Ke2vL<Sgn5lK
zgadi3#CEKVND%U=^+tGzaWaa1pBfU`5H+1pVNUZruZwT=8S>rvc7)hfwG7?X!HX1$
z0)hCE#aS8qE$ID{cm4S!E{oXjBmCjU<mcu-_P{(-W<W?X5DX1F9pTqSQN_tO=+3Mx
zX#FW*3sV_Np30^W^+OK}I_0Pyuv&qZ|2h%B0o2_m24;L!cz8Tmenjq&D@G>tU|sej
z)Ya50KyO#YXP#79{z^_mOgjm!#k8!;CV70?{FBqFJ6lQy`Eb5RVw#A$TQgNx-om#K
zFdZNa`;M+55v$d78c3KFrSX8Eu*?6X!m_)OgSw(Y)D^NKORPzQSkcem;*ayZO1^Po
zc(WyVKz?#Xjv1s`nc2W~FH+gU(;)utJn;#Q)(M?J3RtpRW{;b(QraS~hJC!XfV>Y>
zyt!|<b2OQw=fUJc%jT4wN~*mwb&3LHGB)69ftr0r=csO6NJxSktSqzq@!aYBEXr@~
z@0*a;tUM#^B`l>TrV%8Bc~P-qVkpmeawDim%jjYnskT;;w}CI&cPd2cx~C$ct3dJy
zM#pLT*sFzT=V~-w!X&D3()eifJTT;M-y=~G!OdSGMvJ&D3uXyBYc~>9Tn-flagoPI
zp!S3B+0RORT9$W^xnq%>-_p?NbWzuSKukuSvPQxl!`6g?wklsPkpa%fNMIN(Ky1VS
z6dGQNz-_ImD5+P8KVYgnjGh3a(?N)u*~V-U4{6M<!9iM1ORN%14sK1h44kZ@=BxLO
zYpT8Z;V-lXiZspQym@%9pP0JvxN8=@VAd2D@X#EQc}IeiHkb(jH}Tf7#)3FvNAvPa
zhCxfm36m!h_oPURCdnU8@;;es>_02*I-s(ZoH?YI(B2T1)AeH}J#Gm6o9e|u3@6Kr
zK{Ssf^8*j5E{n3rALgfq*#?KqRI_@l@*YS)^Dw`Hwy12Y_>zg*ri5ghb{)`zEa4{d
zZzQ0^+Z-R60m&nT$n5ALu!z)ySl<BuE50^C32qmsFwvif?@d30Uu8DRhOXW^ix6D9
z_wE%-W)VZ=7Mr?_wj;q5B3wOA-6{LytZLG<sSYG2&#i^CK+{ey?1z<ucO(`BITvk7
zSt+dUU|l2$!hq(T=w<bj1^$+k!H#WSyPG)~F3@O00vc-Bv7$OPv0e~m3=v2g&<NhO
zmF`};*Vi`snEOrn*CtN0EIl5CaxuG&OJq$^98(elD#v+~BpY&7UoQ>3XK?-R?ezBX
z`w-pw^>CHa0$c$@nx!#~L<EaXS+_)D?mwa9E-Nfh!<UaROk!Il?6s;j+R`k=JQ-i#
zKJ2!XEzdMd9zMZ8c|;wCVnk{=-^Dx%nICp9$_8~ZA3d$8rlx8~NHIarq`at#qI#Tc
zb-sRC8GU-K8KHwx(Pt;m^)QA+R#ieL=yvn7uo~?Xw}1J_i=6QnA}%55OymmeWEf7z
zo%_kI(x<H4K#7=USyF$aA@h3hY2Q@N<V1p&%#&&H^D$=AaXc-%N&X0}GMttXAM$rL
zS;jy>k4=bGcoY*en95NPA;4c{yUpfECtMk~3HP25m2OQ-vg63Jq3HynLoKT2o0D-+
zmB9%$LslZ7fW0ihIH1@x>;;Z-oHtMr6$nXLmZo`j%CziInwRQl&{<jnE8l_gN{u?F
z*;J?(%Uj2s=(kR|P*{}{Bnt5tgvU0HtqgS6GfTlal#8SHiQa}zmQ4aJG<f?w$QUC2
z*dF^U%km_49bdfz--$OY2Z64Y!Y`3vv3-k69ataCP}%+FtZn4%DV>CK=1B&O`9;7}
zwhR&rrVtD24r~L!Gbw^m|Cll>hKZq_Yc$VZY+dNEB3w9ZHX#<jxukO3-0rW;tE3#+
z6jO$nbRVDE4UIPr2s#TmUbH&n!CwqEGkzZeaS1kb!8}x++j(bMm6g_w>g5Awj9%`)
zyC8Mfy3!sH(zF&b($%DV#iWkT4I~Up?=7Lmr6}%8%uqx^ogvwb%hB%V4UW7)1aO>X
z%AzF6gn8D*Wpc@zK!yWseo7`rG=ODVprfL{6oZrkV&u`vkUK0KT+CD_jiT^)sH{xT
z)J3v{tUDwLODVSVZj;P$E?g^($n_v`Aj*~oLA#24|EGRnxo$Bmm=FY2G7~2rj$J{E
zJSpV;@|l492=&HZ9F-Z}px{PD1Muc|V$O@3Lh?aAlKJPbbnUN1T)|l!gy1MfV0wd#
zcU@XzDE`SdbjE&G@J0LvqQb;S=13$hM)Zk7$#4>8_fXd1X>@rWmK(*zfo6l<w80_-
z3-o?a)SCWy@A#?mGIvY0O(i=f$hiZSQzWbv7`8NP!QdhABDCbC4wY#SUV-bVapbLk
zb<sv`;~~<dkyX{do!@T4zcYidk{eamGhK8)X7^{z%C{zIydi0!NTE(@T-*x7GkY(t
z)lG5AtMilXtX+>t+)9(Nd2FY(-y^jho(J52nzq@W<UM5n45qV|xTJ(rhy})0(3&g;
zs;#9OsMCi_fiv{C1D9SengJ=M`>D9QNVgJ0W_f~<yMCo9*z(EbAfi85pk4(zPB15u
zIH`&{Zgzm1(4=}2r$v#L$FR%6B<b?`x{CeJ|6#~wjnOV^&!K+p*TS6cvIMN#!qCjs
z^8X<d<b^3vtD)BM8BQ0q>zvXza(ZZq9qg0@l2>xmoKQJyfB2Ip4Tx@WN1-~*ByioS
zx^edo=w3uAjR|o?o1`!81UymTrPPO8i86MIB_^F(RM@Un)y9ZW78x#~8c7N#L{yZi
zr3Id6$plH6W6L!5&UaoyD_<4qr#%qF*|2{3iZu2CEbdUvn5JdZWcBwoBe(3re02w1
zs^klB4Rt<>s!Ez~q(N+AZwGm`k~>;+bTHUx40sKm3G9UFq9Zbp2GCZd#!2VuCAykI
zx9EA0VVwIY0D~PEna&!XCq+|Nk2jM}H>LLkEJ8B$|9AeczYafN{_+2`W8i=+<0MJH
zk^HxZcCX9}_2z#0n5Vbs){gh#X=d>`%>7{>2k@P`&f_m&6Nj6|2g=oUK;0Qcfq3IP
z5;Fp7%@#}{GLGW2YCh_+a66fmL}(ufIxu1d!bn^ahyr~#8F2w}@S?rxOqJO{ZhDyF
ziqjfkk5rF6F%>!<LzzfkH%)eAhj8w#eIml{bmu5vrSgf!k9b6Ovs-s_WhIvv6>0I$
zd@Y&sbllkZrNN;n4n~%D<s#rbCMR&IhCPQc=M76C1yAuIC*h_Mh)H<<P~M_p6W+f)
zF?~}yy3rQp;0+o@Fh%E^VVMhr!fjoZO;SF*D8ek(1MZ%-nXitlE1*!$b{?(rrQ&Po
zjm#MwHHtjJix$$9P%%@dRg(I}jMm-1w?lNDht1|@oz_*c5}RBLt_1v3^E!)@V%4i%
z$;Si?KkF<m*JeEHs{}f>b(SP+YaqA$nAzZS<I`D@Z)#EOOtWrWp~%X7N2u%b%XBw(
z@osm9t#;=U$EiaWA{%|f_#^=Ogig$Ez0UsPoO0P9$A1`N03^w>S@$UTE8+2t&u2~5
z>^NBO&gZT#lcs4?e?ODoa|76;h&mO#E4#%wvN<}spaMmnlu4fL5-t4Hd+Xyx)A&ME
z>wOm>Y$Roh{nc+O+r2TSYxi>hXy2m0eRSQ;(+%mEOp9&869bWDRpeh_Cw0mTU|zcm
zW2WcubS5*RjG&+azck^aJXnEk!2rg|&B9pDUSR&?M^Yqd)qFw5{55kgOC}^-R<tAo
z2C5L1I;1G6lKOqwIUyoSl{Q6Io>Ir(mDKyi0mN_!%<?^L6}kQbS&~*x6LZ({#pKgV
z_O8Lg!DTS<LLX0R%TXuHTmYLwfPu8L<&U|#I$(LQ{jKvNuFEsh9%3JZrwCOUv}zSS
zdLF1_!h##i{~Lyr#o$TD;R7k3)=mYQUrLz3+-c+6H)++JG9CUz;jnIYxy*d%B+FQ(
zAl1(UW4Jmjp*AV1a?ZJ8D3E1om1fDqWX4m0Y<<fu`%$}`Pe;(M703;5ENs@97HLz(
zM{Xv6@TRs@w04zn%v6~pwP2(slm*wh6|YRbPMlYruXn(tvd-h3<9!90Y<xZ|>afmR
za3V5;l05ZQBEL$f%}3>3QC**5182bcbn~3n=jp-*vF2xK^)ciJ5z0nNW^pW0GL+)R
zWnCBX_fZ*F4pZ9?g%E(Tp9DP6nG@3+m-cfvi9egn3(L}_!8!xeUtIbyRq!sY=0cxi
zz<{MR2titzKh4_0;1;tmoLAo0?Ug3VTAdnnunm{p(6Pb?-Xk76q+GykCgqA#&q4YX
zp&c1#X`DT-XZwlMWtTj~<RWZ=Ku!ek1GN4q>d4Y3$1y_~3<ch%Y0@KVyrXt|AglNb
zoE3=MTkXWvZ!F_FPpij_qqbYuyDCnk(*b=Z=u!*kRQuC>NIU%`QIx`kj`<WS^*Cxf
zhD)GpKa!2%B>eaV1Z?fvjUg*0@9@TfEj${j_)`=9MP62Ql7Bsp_8H$eVg;Mv?3l*G
zQE5Z-TmKrF5h7oR+V&%P8ijR9EO$W38BDgYHaQr^I3_{*4jW5is3S>;dA`whc=A>C
zDXZ(Ji=%18dJTQ+0O~;WYH3IiT3cr3--OP2iZrj{gnC(!4y1rQr+J+27eXhQ*-xR7
zX*^(7Z+%tF4e+C2oEgnoP8O1BlT>9=KHN+?!?xI;LTg{1NbzZTZhZDz>a?>BjV1se
zij3j+SBVBfUb>6=4c4ZUOK;aUC7wUr#381=frD@a6KkQJ3J)0FOI9Q4sQp#W)qpp*
zoCbKl2jW556iY_)<?m^g*&Xn7M~`(b837x6(W4O&8uVpC^{Bx8RYjH7$@jHsw*U<v
zI$ziGZfeS77yY0$GjIf#2OuVBrb)fT+E5p*NaMQB9tO8Q+44Uex9MibbO}099Ayv#
z@H`6eM_8W@mBPo7-9a7QM`^a4gsGFVs^aQ9CuTpFk6@BU1PFG74U{2Gku=$#U@Wm$
ze}Lo6Y;&E_(KJOa6PL``GsLxP``fs=mG>rGA7!_%*zz9K&|V1LVgeSr2}xG)*1xK%
zsFGPhX4a~D3CU=>coB(%zoV9XCx89ONflV!uDeFEx`{U~j{?R9n9a^gRx&m3pG%+{
zG4bpLMn&TUMDx!ZM>wimtJVvk!=w?gd<A4-35*PBXg9MwZs3GZ>#VHeZvdVAlVgoI
zag2b)w;UfExfvX@EE>%M6!>b0dOR~RI^1o^vN~z%?>Htm5Vj+}7ZE$37;>}g(N2>*
z56JeA5J|oHkv$=J(sMS+UwED_&x$O|<5T+5yBd~OUP$Xz9{+*2B@K;Pg*B`sT)Q=X
zlxIa%#m!@e?5mkc&)~uBPN;-0uBs)_poy5;J72>_Q%TZf->D|Qx~aosS`?O+C`vVk
zNnCKakL3E06k?EF5*}tAzqJXrYn2NSU3|05n^0I|uVXBh@E0-6k5;E%!o7Ju7?q9t
z5IMXSJ`t=W66y|7bg*iJoN_Rq7K5%Ub7LhtTSs6UT2mOc6<$z=u&7!QH~^2JCtpRS
z{2v9VJgJ)U8!Qk%p^st?9@05%$KJl+P|6x-SyR`4Cc?HqtSi#lB9fzcBAlJB1g%S}
zQ@LxF_c!3qPebQp{q|6<nig@Ae0?iq+e+)V_T%bz)@>hA;5>g5^An>fLYdaZykeXT
z;!73^XlY1$3nqJ*6~&k??3`A3hEAosBtv+DnRjuwjdB!vHo<FMpj(;UmO9CufwBX2
zMB3CzTBm<*fw@~n_!NA{+?xX)WJcD`9s>G2ol5)iA}*7>d3Y^;nkBqPtl^ab6Aisc
zicwz}QoSw66-F6Q>KSvX(0$iQm6u1J`seOD44fVa2ux2a&2r1Z?0!naSi>&OY-l?`
zMcQVLX}I>O9KbarZVyg+h-Wd{0|={=f0*Z2M#3HqSja=Is(gjJydNw=J5P~4G`pYL
ztih1N_FhZ;H7UP_pU5u^aafwVSD3i~qy$JYijm#bQ~t%|ZGxCy9hR;?^K9Euq^FHK
zDLv_oy3j0dMf^s~Dt+p&h;0N8_$toQB6+yj|HR>Vz=Tz)_H9RfSu@yVGZF$=?E{KK
zbt@B2juPae%A3XyI;PTa<#IMYUgSyXQwsmGB`ZXS-{vK%mDAy>pYG~xudh-kHK5{w
zuKfM?=-2jR$H}!$^K#`0>)y;eG~|Zpz5Q*^$+b?)rt%+&OL^tOd*j1-oNc;TettoQ
z>;J=gcu6gg*y_z6xGg0e_K~G2Z4{_FUqbOePqM5i9>!CHVB4NH!q7SjAyi<QzCS3%
zn4N}*80MGH0}tHYuS?LC$+|#tv#j|hc{n2vC7%1r(dLD+nKufcP_Zb3D4tU_GVNiy
z41M0(<zKPEqxgefJ(T4YMbgy8!(i9>3Vko#F?~T1Ri5y?C6ycltrBSHsS7VjlJ=?L
zsEU{{L(Z8N%SDZfmlNnvnikFSe~&(;6O^rkvuQTOSP{se?b4FQa4^kHldMUzYL9>A
zzMZWPm-R|T{*T4Svm_zcvC{?Vmy%6^?u!|z#Bz0VT!MPfkAxeN4zR_?w{cU)86e8+
zpdD^90%@$bw~JFgLRQ6T(GTOAw2~;KZY!FxIHP5E90#<?pWYC;?BAu2bdOYCWta$A
zLSWra?YM@JFcS^TGQ^&ii>k%HJR|YJ>YrSgv&CdPl;xFqoF(5VlD9!JIwC*XxM5z`
zQp-D1E#qVb!6;2vR89IrED`1^Gr4*zMBra?V}Z(44ujkQp>Aoz`#3A(JjwEhA82@P
z>|g|x*mt}I%qqoNi+X5|uMW*;I=!1vg-~Zz@wmXnrz`UvvnL~yBT;~)hs=F~>Webx
zP5Fl&MG_kN0be=-w0QbUn}DrfM~U<tD`31_pDMZ$Nds`SZVz@vldU4`TK#s?tR5n_
zm81cHyreXS5q_<XP>5f16qR(;fy$x6C4MIMsCbWb28YyQRh-XQF(h<QXGNA54;Pc6
zyzZDD7@A!F*MGbH&;S1R{;zNU=f8&V(IhXMZ*+NBWoL(KfCPN{ykzV^(h|Brzk^x{
zhS?$e9aEmm^PpaLx(?xRUG`E~^g3TM*A;D55}ANGe^KN`o%@B}A0DC$*LsJIDbfpc
z$3I9Ch;7CcXx9uNc<iP{R>f)a4XntM#hoH!JWL^SaMbFO*hBHq&;X5DnQ#k-`+zl&
zV}v=G`iaU!w`ksWCvk|12q&sETJX`PMU|8fS5Dyrc$cNZhlFu+wplINOPwNBRaKLI
zfiyw*X7&vrVWIP_uq_r(?we$}B^Nqs;Hn9Tq@{WYF=wKixUWkbM{5YX{27_5>m-v0
zv*`KFb=DJ`6>^7+4``D3f#Z?{_ONYg^k1op<33XWBuwKt%Y37&L#q15C8{FJ{CMZ7
zSa}W5jf>QE8A2QT*SGfL8ojn3+t+|Y`fH|cK1t!T;G^k1nDm5bPwXZSNyiX6hsrc5
z8-FbP^EYz>8`yEcvRUTJf`cgOwwuD~7t_fU@_wCKlvTlQ$W?;&Q}@%kgw)y2&`L*h
zft{0EF0q<*TwIH6lM|CzSNHA;y2_R@lE~WgB(|90CUlrTb}a5eoe`?r%y}SN(CK!E
z$OuUhr&XLiTy*U&+|zEkl!jA(ilr5qw-0CJ2zDzB1uMG7j6b)b6beFVmgH$(d_50i
zbwd2@qa9wmG3wsm`@5GY5&h!s9OI$#u`ILtP%3@b#=+(>a2UCQd9c`hj^j9X4!_10
z#eRLvc?(enL{$FcLr68gB^E+B@V}R*c?DkBj-gJI8!ch{Bj-Q`wuaGF9<{NKSGO{C
z?G-gQw7kP6bOdKIwMStUV)xy!o~d9&$tG)dZtlSdN`rd?7?yILqq&W-J)C%ifGtP~
zit%uUO<C`<O0zW0Pbntb%!KcqQh|%{R8?<)7N}PAAFN;NsKUFgMOK?v%8k3)KyX_d
zC7uKo;C65QD^=A$=KJ+xEqwbcJrR64T0=m3&F{ONC(e*q&}w5l6?L36&ba)ZtA~m3
zlBYp=*W(P6UD?Z*Ukx`!{zMdXS!scdlRHZS_`!W7{YTEzV3(>rFWwzFbXq(ZCX}$t
z&#>O|@AytIFCf{mcC?&tT%>l&%8(SieZ?D|#ERj?$s0xBMap7VnwSj|`1B@eO%qb^
z2xZB4h(p3MAgY~ay4Yz#wR3uoT1~Y$wPm2s?R8M*d1K|q50F9(TXyIipdLcEVKq3C
zJoJ5mPX(_WClRgCuBd>?oDw#{X!oc!2g+xN0;jbCamQ7<mQ0)A`=Cgpq%PiW6d^F@
z(e*<_oKYKJk>%?F_ne?D8xz;gl73xi5QH7K(Ya8DoMny#)V+7!N>(TJxwqnTO1huO
zlD|4}${LtGb<>3?*beImsvLf_Qf%Xj=7lUm$(<2A1hUQ>1KwM=QxsWphWQ+JFFSI;
zyI)tM8`1NCA=6>f0Z?GyxoDOHEJ0K>J;#2q6fDPtkcvx@Bu!d8oMQ$dn?2`rb;9J_
z5g}u0m|{7=yNSl2SqqSPOp`gGe^|u~coJxS(~`HiRnstLZ4?RG7cvt;YUNe>a6GsV
zb+)JCNMZPSXkXx1u}hUY=-Pn+D=_sodh$E-dKiV?Tv;S_-h2!A>@w+8Jk)0lj=ec(
z#qL1wh(igVk|E@wZptcs7=I4m(f$x6Ir<rWXO^Equbd?~;Y=Z{DAN-`YQFp@pSdP7
z_spD_75D?L+!ejz#BZRpKEBJ559t7OT$zN4dmmr}rWm%4d3Qft2*M<K!zkFfscEIM
zc4Umy&2Y({+~ExIN%GhbqUa*o_2qexJP6kc9WzWd_0Bj5^N_aS6d2dckSQ6s4G(K`
zaYE>D82lE5QnS1)(zx1{Xz$t~`nZo<jD##Nt2AASHEsa;`>Z;%)<}v&`%jo1qvQ&%
zJXjF)CLKTlQD-N3am^rk7&Xh~4=w~+i~uxo`ujtCC2>m5Gbx7@Nb^c#ed*-0-Rx?X
zYf9bf=m=7&=E=3bUY0s+F<$S646*qVsv^!Dd!!?3n~lhwnjYBFl>j2<uk!k~+2gXn
zh=jTP=aP?EC56cGQ|)e8wVFvCClEmUmedM(Jm+~3F7iA%a<$u!AStuVdI9ah_Q2=9
zs|ZIoIW|X2PK#BfybfAMcuOXYRQdOoTt+<AOAJfiERR<1y(rv6=K#mf;UbVSYj6-f
zfc6^UbRoh|h_1C)jF{W*9eG*Sm7}iKzW1+P^!NMQFivY>ym74$?7)UgfW~GIYN@Z5
zjnxa5ajj9Kv+PvZN0YQl@Hhd~fdjO-zr*^YzWwWLM@2-&&uqO&&tTp_rVysej8aO`
z4B~GkuSd}i+6E3?8y$5h#B&c_e~Y8)!Q2vPzMEaNY0ye@%zPxs!OIWD5#d8cH#!$C
z&qGg30nbNj11}3+5wT4mCNG;TEt4}6eDLmRIhyCeW#8-)c;KhiA84n_$g8BuQwwPv
z>2Y#<fBLPTrtSk;`%Ap*K5qAMdi(J&<8qXb|I*}5R>gJP6lq;&X&e{ZzdNhbvao^U
zs0U98iHkQnybtYv;zr{BYG=)NTDSDwc`9)or?$Y~^~<rKm|0-1Q~36auWQ%YZ>PyY
zi7NyMBG4^c04xJtZ#67B2lSfnChMx)*#~5{m2oaw>R9#<WZV&mwoc<1pDe`Ai*9z@
z4x;B}(>5t`oXfzua^prgmf+Iyz<r2simGO6EouPP6n_a`D7WJJMsNpIU9li*<+wyd
zT5D`iPg=&NIP5B!gK!V9(A(KgRb13(cJr%@{K$#5l|UifhR~JyarWrs%}*96fL?h_
zJiyNIi_1@gFsF8dk%YYypUOOO+~9UQ1(;H4_H8^nmQV}^rm7~#h$FG9=ru(8LO9ZK
z?v1N^Ii>KHu*h+apC<%y<@7=e%E;6k^84{%qu+rY2Ul`uG{a37@9!vITEaV0c0}F+
zlnW3Fpnu?(H93v;=;h1MVI4W>3L#*fal<EMj#sm_zNF*awOYi3%uWVuhM_XI@As$+
z^*MgmX2dVD$ENwW<kI&59S#=8f|Os2^FmQ~0e1|PikcwMG+j5XEQqXYku6${py*1R
zDug-|Nm1A79^YYqcqb`~YOfSLt+-zlX;OlU^1%R+r%b<bjWnz4EtbRixvaD(^7_jJ
z$j`FvcPDVMwMV|48joC!WjFwF{MilU77o9UimDr+zqP_+`~#63r?~v2sl&-Ua@-vp
zJAw`|bZvByM3yp4B@zvd6bQ-v3>^YML<UhI#~6mcvC}UANc(EYL0qbZXsUTpq(^Ea
z=U!@9)W8~M=)2so0CtN2d<uf$V5mJ|Oq7>#Rb};`0D<mLR;}}g))5^<OE>+4e!z3z
zm`6|>)IKK4qLo#MKgH>r{2?CaE?#o95`fzEIKwx*5?<dv;7hg9Z~gm*ApNrV(Z|-T
zdNc)E$?;GJ&7>UYyv+C?c6TC4Qw@uJNkj;)v5*wct+1jv)O19uH;2l7jJQQW`7~-B
za5(6!g%f>whC0<%%8UfHINiORWWCFYS$;Y77@$eH?DI1`nWibyJpaC7g>7!zPSvDX
zk72nHB1l8=3QWAU?l8-eIYrL{>TJ5Ajc#(?k>6(k<!zF@EFb40e^QukH&F+@5^VeM
zI<=vLAV^A-Tx^{RYxa+(vx#sf=%B*bqMSdbvxv=TCWp$y1};y3m0}%tqCZW>7zVVk
z<lUNS33N^65)xV%sEgL#Ou1troKFy`lB`IYJp20KzAt^c-4D|074%mouINM&8?;(H
z&LOIU^<!_!9Y_Jp?D5*s6C#1i;GR!n)2b<}x_WrEpAuGUw{6~ZD`VNGhH3L;gl8x*
zGO#N<_ZuO~D}@IG<Z+mGiU^;ywA8RBoFk!Yc@-p5gPmI2aj~=lY13YuCZ<WbsPVz%
z9k?Z8L6R*9-&!a<6?IuBM>N4d_`)_;_uspZkKdz@7A4C)_`9Py2AOe|4rVL)FHdVC
z&Wh|8Hzs3rH{)7Mt_nX$f_XomSYkj@Y|+j;A>EYLd6Q?4ukTNua|Z_0zc}i&mcMUc
z2kO6x#0&e&I}a+bQ0k;fRwMJf48rxt(=2Z?-_dPdrrI9=#zpcH6jG0j-GKPBQ(tCv
zT4(jjC+mxe_#U5myBeYJKnE`Cf!Z*@AZD)}c-x{KKo|%yLOfa-lOn(r-9_&%4}^<6
zGnXV-lxNvsKsdHZ?1zgzI;h!dySBi?RB30ISpv8<$?7Nz*PX21Vg+D6d$+lBpdy2+
zEPHr7;nTyj-TZ4ebUS;M-Zi)9AklB#gT!Q4%j@e})T^6=HE5PJRh~R<U>s(uA2_W$
z&K~$`S?*ez)Lch#Fe1XCmM@rdEU(<N(p+<25%XA<J@Gps=UZx8(+uVEj2Qz;SqVJS
zxG9RVE)O_qe?8Z|5@scyS%?ZVl@-~j&c>6vu9dP6k`=DkSbmta(Kg~-+!R$&mi5{G
z+7FU6z>`(IGw2=3cSZWJnq46r;6yD@1AmF+agV**orh9DG)XzI@hu~YMy$_4jd1K0
zma01<i5z%7M5`P`{LXFm_g8KxQK2nKGH`LZ-^I(WjhGG!Dl<TO!K{JC`#HG%nET7~
zKr(5TguhGdjGLk^le|2MxNG;XeG)0a4dDSxsAndwP`9aBh_X4v+9J~Z9XAk1ZHzcd
z?1J5_Mch`4C~nHU$*b~6t4i-j;<+M+_?ud2?U=qP&~V@@V^)iIFCuo9Fo0<w7k{So
zcS%V`=ma>`n1~a}Q;s-8c_0S;Jh8SmB<yq~3zJAXh(FCacX3H7AFXo;c9VY0a&2bY
z07EFUx02VC+q#v81Xy?s-1IfApmCB2xU(Y5tZ1?m3?9lVWVV6|Y=>BQc^+h3ehJMj
zS|@J*<}$0Y!cqVZ4^JQr(bFe?M8}H<w?)J(yjQWchLEzHqGX0X^tX%c>jJ}(SxItt
zbWH6n`mD^#gCSD0=C$Ahvn{<oL3zt6$9f#0DqD^Vk_ds|VhepB@5qqzR-mb~{8YE?
zOzF0(n*EEah1lsDQ?>S?%q7k8q^`d~igODyIAXZ02XkQelQ+85qqsG_L8SI7#!jTu
zPpA~u;?yz0h1-f!J*#oe*7PWl=T%h|r{5qRy!EsW<r`X0SITE0Lj+h>Hd)s^`I!Rs
zBrshJ`FrF^(!`I$s3+!)4-PPVYqmnczFC-4p4L^K)!%71=WCkmV~Hl$qP&I=P3QG2
zf6YJYZViuGi6IV2-pgvf=t1401^|l|C_@}ZPk_EdmK!P>Eld@l|Fr(J(nQ2vgD#_h
zxBd+N9y{2woRB9XQ5u&`ntc5t+uB>6WWbuZfZM|)dEQWE`=TCJH_n&2OAXl!Byc}w
zE9D<O5BBwI{(@RujuEdTy+pvG`8tqCg`Q}YG(}N8T$O$nFWWb(a~ju{;tj<BI+Aif
zpOwy}WSuNz3(uQ~iTqAFoF-cm>5<M5)5uUE7z8txYp<Mh=wy&|Rh@KTr(7%_z@PA!
zzt9BG8Onwgg}Q%u^03gPhts?Q@gFqbw1X_e(3TYbJit&5lv$9U!Vwp0sl;W`6y-PU
zGhcsb*NdE{u(-T*Fc?U!=+Sm}&!-LMy+JdFnP9Sq1ZjZ3;j)r0#3FcD+1v-HletEw
zW{r8;Bq$wtj!jin<u^D+tq(;9RozROIB+kw#vDevedwz4a1bO$L<_WmpFyAt)o8$(
zK?<FtUo=lx<dVN4E<9^UU=?lf`ZP$}n;EzWR=|3q*oR^|+o|yt!<k;ml`P@7Jf=6f
zQ@b3&wPYHNgpNf&yIX_>s8KNY#*`)t?v7k$9W9qSiQ}^QdNGSNO=Wz0?|zS7x{r_F
zz4dY<1(u%K#NB&@3A8DW5J$96&S75-u5U10ji30?lg<{tSDPhJMnPN*Phm84kd<*>
ze}}Q++GzD)hR71md4tIxFw_7~gUl*9WV6Z`F^6?R9$^ND6M+yZqDTtKT%HFx7YXJv
z?BbxBQx-Q(n#2$1zv1T>M&PBa#=Gaqf#Vw}vaBrg=HX1{M6A8u=U?C3F}k)x-}%xK
zKm?Y~OAFq1Jf<WV`|=Z*M<AeuQ=N?F8Y26XGt*9CS?169U_(&UBmgs~Ggl+`itvg-
zM^WLNg<i)_5E^iS#M3i!WXoX78Zk{(-*pv32+s7}{Plw*5G3?zWl9M2ODHL}s{lZA
z!|R!rXi>&R`MBp~cxHW%or>F>1~=dl+pvh#h3+R48FjG3xzqMVCJ!MdLc^&uG1W2p
zVizy}B3BZx)3H66_A@gkS2I6vby|rvWVD*Q(Wy%(l53WCr`atzbra#p`JzCPg%$S0
zRZ;JZHp3GuGIBH}76K|EJbCPHK+_>+h$I3-KD@Wk+uCr*DYbhgr7-B3=(Mxg;c-(I
z08}3w)@d|YuIj^rLmxaGA;d1~8$dBLJ7iWJ!3gRPCwU%M%{MwBd0q0Oa}NPEF^VIG
z$i~1`^gO8O0;6m=;Q^aGEZLoxb(NKVZSo(Ah<QTw>(4iN2I93}!(cyy&W^v2?e(^r
z7`&TJX1w@tzw*=x)4YfZ0E|{1HyhD_UH34C1)-ur$&61|re+=S0eI%i#)tVIi%T$w
z&lM0yXlmrbl4V6HIo9a>fHO*lUkF<w1_UQVBHMA-QJBdUqQV`~zBtVQsun~i0}VRC
zcU7}=-N6^`33gYaGD>I(<>F;t=idm7Y$(HT(okl~gr#fm`K~Ca@77>a>vBvVr3+<;
zbVIOinWshK550WhW8ej0IpN2STsG<9PWw_a@RFZpYI#F^1(oa!ZGl_qC_D*F1<I~$
z9m$2WIi-}7gPDqw$?XS!h*FgKD6<=g2Sg{3LGEy@33nREixVKREPb+&(0_w{1sflN
ztLb`pbm(!FSx{nvhqRU;_L$})OC!@cZbp%(WfsQ|@1HP)w5RdxD{dj*Wz8BVqSo_Z
zN7H58^{Ud#aK=flVR9b}SL!O$9|)DM35=&aTzZ|IrP_O71eF>OV<SJL@q9K7>!+0}
zlPPjRv_=#KW~=6iat@qJ(gtvCFO}mmPr@*F+QLBB74&7E48jDmGR&cCDbW@Ofzi~+
za<{n0ygg$`9dOXBV8}?i=yub5;C73=$x`xw;hwSjkze~eK`P{-cx7b}i~-QRv_u|l
zHn0*9nyxG#jBsKI4sur^Wcg2oH!&X%l}~X|HOZf9fp^G((sAgva}|o<?VD#!DMyRU
zdwP`gzzhuOSe_tVNvdN@<Rneh<=8aIYbb$8(=1CLCvNXPz5BJFoVMuBoUL5|u=u&Z
zv>bNYKC+z8$*~zy<^vXU_u;8^&|G4A^)%ds=M+xq-6Mx$im5H0*;B-I&^mr{dI;d7
zZMA^e<v7{nlw3nBUzV8mtwH&rI~GWGiYl-2X4kvHpY2<Jyr}Xr_1y;laAk2ep6{v{
zz<9J9(4-v3bcY|jjHqa*DqM-BNzv5tcXWw1nGU-KWR&>Lj$$W^*%~E&If}?4`X9Ku
zp>|l}E<|i>{3&eJ+i?&4VaU56O`^zR5(iW$B{qo(`NNZ%zn%kRlRS&#I(|5QoWL`0
z?Z>a}M>j>c`^T>y=cXf_8Y%mp+A|ZkNtq{U9`E_Nc}sTV(`8YtYV<Fj0`LRqZXziO
z(eidFGRYCk9uDTju#J)D;pyrBCq)bX7gehCAM+FdJnAZG8sBH(^UooiNgpU+%|<OB
zYDk(C7<ih=ZUV+T?-+y4$cq)-N7<&CTr?$DgN~uy!sg?mGwZ1SOKB1^m8|NzsU9D1
z|Mbkk{!lm<^>F7zVQ?*`p}Nx(5Nkfm8DOJPIv$+{rIayb+5;40#dXoAfDZBDK3oX%
z(Xvo1DSI=g+0Kso3YNEAawBQQsWO>+q5TP_#gJZEgzyY>9mu{uf^L?gPlFln7PJfL
z?x91fD$3@2v_dVL%Qbdd6;+Z$xmuu3A&M0|u5W};xpU)y*!|V+HRSK=+1B|-K48!c
zP55#Vqe`1w##kUAHAPuf-w2IusmL4*wQ%|;%y@d%BJ9r%G8n7tohk|#4E7}~+kge3
zQU4Luvn=Tsw$bdgxI>RDjq5mjd=-8=^z7z_yvJw8M5u5N)r47E=5hY@?AEPu)T3e$
z-;k!OW6uOT(=c^(G4QBzB@nsa<Y}3PGP63V%IaZ@t+S1n!-ly&0Swa`WHHNKHEXeO
z?yrHHjGHt~nr}QT6{xYD)W6?{c6w`vElQZaF|=A?5hyE0-(Iy!RXMp%&B&G*U_sL5
z)QNZ$vv+knyUFzou~M3b3TCHvvG&EmZeUik;2mi*(7_j`y2eeO#p!pD?)|K9vpMzA
z-89=GX-_rX<t_Ek?mZ+v-V|9=opZU_H#t#HMmhi?NyK7|GV4u!yr!tqs<HZMn>WkA
zlI^O{$*ZUcyiRO)$rO}hG`p=<*_2t9*MDrzV=bGs?;Y$MVjFW@4EmUCT4ks%*r(<k
z&Y#&w%A8pW4DvdeDjDuzDnC0XZ78CqX^|zx<IRH8rQY5M6&#0nyFh@q3<4UiG=Q=+
z14x~ibRY#hAbvebh*`u+(lyp0<R)HZ`wB4nXUiWXJuDZqXfqCUSwV)IQGFLif#=KE
zs?1D3_B?j3Fu&OhdW0^Sk7;BnFyf@Oj=PlorabS}b_V^HPNmQXW%;&Oo<1PVP-h?i
zNu<?K=9MK?oHWhDhxG{<<zO!5v^H;6$7NEbX`EJhT2xIH*f?1cH%av{NOU$8*>QL<
z<OK{648YULI8Scb*}}Bs2XpCLe4$p3+4N;t>WR8UG|5Y4=V`%#1Qhv`gAnsqPod)0
zUHieMxwP7bhw*piJJFCQY<9YNZwQAtoB&`zpTEdP=m$;})Kc51-@^UE@wPg2xgQlt
z;ZE1-RHez0N|P-UIXVs)z#U<J;D9XGaa&m&&LSCUWO5$`7J<TK1G5Jy=9*T-gy0)k
zFk9zkl2>V7#N{74FSoYjo^0emd~lxdgC0IHPBgW1wEZK&Ae6B}{LPt_{^gT!>t=Yp
z(=(I=?0nZLu`0)DaN(h=ff3}io}C8B56q;!{$uWa+v;BI8zib?9~6%;z^hwdFOUx(
z6zA=J(xu6cAR<F!)VLIF2bp6cSDbFbtsdByO;guRn(P3@D@bw`0pqyLip1Bg@uA`q
zUW(E`&=&UH=W@7mEJ)G45Gd#5M}156SUWqc5ngUkqgWWvO2^M6A*Kf+8p+_-V<J6m
zdegVV-)MX+RKd`~bA0}r+}2O|a8}TpWM6jwI<s^n{jHxTJdUkBp2l&K#AS8Tm*W@H
z*wm^ICk7!Q+Wr-Jndim6zOL<$-o(F?k*BR{B8}s^C@TB4_c{hBydmCx;u=jPJS$MK
z=}wWxah1nK@rR<|R`<*k2Hq(f`24}J-7@n`W&F`^huT*gbJjwaut!+O%ySmDXa6!y
z2|Dy3RBJEH8@P=IzlSGzX-MQwUpG`)6jhVN<@W(^YYxMqkBE`G@!9ZgB;4h;qjaIa
zTCZ^4#LHW`NSI>2nnf<4wGSbLQUXhPBPW9UfSX9;R>Y^-aP4S9#jzW|;|LUfOR6s}
zj+?^rL5Lj`V<I{^Wb}15l$|BB)7F~%Rj|{jWFMSVw+>U{93ZpM-Oo@1D6XrdYWB{W
z^;pOH0!@)t>6X6P7cMEkSlvxW?X((=hUjQE0#c#v(KLBpKTh#E6@+#*D)3yx=;Ed~
zEzO`ys36^6XcIyEO0j(7Utmp&prbV#0I+p9%Z{_nzyeE*GZ~$<u`}r1FlqjcUubfQ
zUO*Z3O9<!;)D>fBZa%`bl0;i%{R-0#!ZG?(Qc6!W2J+U19Gh)6@GjKQ-*}OeYX^+s
zDUc^Pk$B8PY+*4{++G~6p=~EqnkuVdn^3J|w#ax%^gJ-K22(7(l88j+mwdHCb$yc-
zO_qOSVE6SJcJ%-pfau9#lvytnp-Mt!5ZIShRb@@~^{B<CrWu)2r8v6G2i?tt0_kQu
zYTCAv;DiA<Myek1>JHcAspM{d>Ks203{^7Sz}1BhQIX>+j&r~H=5bNP&3@z4X_jQZ
zX~Iev(^nYUxK6WVzTbOx@Qyx-8Y75eqY!0q_p2J|9Q8HxqOQ~AVf-l!eIH9tk&Foq
zyy_UshM@v+b**`KuYwJ#uMsF)t13>C@=qY;?56Gt)$-9sN_SB78=8dKWaiAmDIIj}
z=KW2`Jv}0Z_RYb{P!4X^Zo0?}o5=z>&^ZQ5s<&p{^(jU!r>CQE;pD4E0|jP(B5OAI
z(=S~`oyE}tjF=&_<fbU{bVbSw2(ZEbiig<^r!GYEl}rHSQV3&fwIcIR-Lw+An}7q>
z;v6Hx+ByywIOO6yuB-at?R7fU+$(5JbHTI8<iQgGx=4lYK8hSYvo6&R2^e3JTVbN3
zj)&0p2-8oqrNU3YVc`2yVnFcaolzmId`BEdU@K7e$2DXsn=ayM*iAGDZZ<FOG<9kv
zF@Klh^W=&KAeLm@-MlTrO7nyGE^{O6;`lSR3@mpO&j=YwoDK*5FmIcc7zz8D5tS?E
zxt#PZ7XvyeN0f`PJwp~DiIOTr64bOu2=N=Wgg5y}j!lxT2NQm9AsaTk5(L0~SX5=~
z*nbyUQVTx?7L4|_m>mg@7QOLU%}uHAC?0B+A#BwI(>;VCIM;I+;UnX@Xn6!09YgPW
zQ@98O^H5ACxU3`N*T>}vUKZBHh~)z*9vQm{DBD6=bJ^5+8h?E?>(BdlxBmV2=+^!2
z9m!q0wnsIulLf!8POZqft@G@q3UqowgYiWmfgRJ2qIWx!cDx-ILTirhJ{pLwrKX3+
zuRWowkXKorm){7gd0od{;D9P%7FE3xeg*q(9<Cj<pl&~`VltfW)S*+gM+2fewz#40
za$03o96x?QpE`r~R$YH}h#0bA@#wIE6H8E%LxF#VxXF`JJ+vb2McS1_^pg0|S~1I;
z>%73?iIXaitFI?EZD?ZcBe8VL4#J3#$H>D%h-OM(HKOGr&(A*d4<4;SLLtaYYrcm^
zA}RPm-y8n~Iu5oq4qWI?+%+M$Rth$HTrYnnfD8UJQdXOt^AbP}b9WTIme??&yoNU;
z>@j~JFq?-&UyQycMC@13plDeW7`OFfuk-D~JUwdL-vmwLQ7>L`_&uKooHO(KXPAb#
zy>N<q)EeOba(vQ42tiS2MgDjhdv;=LH=seB$HhT`OCHOeY@|WUlmYN|qC^ACS`D^-
zaYw;<;gA}CKZ)F(4G(}$c9VBv!&(Y!-DORZX6fTo%wfptkQYpJ&-TSxlv*&Vv^;f^
zaP(_7-r}v9aAtS)9j24ZfHR<QC)6%e7~8B1UozpM{Y=t#W<c8Mt2x3@NJM)cm|7})
zlbh$~EK|Ri=fQMlXR$sS5tl^tfXeoW+3)reUX#ycIj36udER`1`{L*F^Sy#?W$DB^
z$2gov5}Y~}j$nvG)sT2iuh{(btQZN7^N0)wt8n^RK7=){k1$oYPg|>IY95ms69ox7
zk4^%I5VJ`H<=R_np-^|Ek;o;2!ES$YU)Pan)K%_=Yr+g&M-QxVbhT3^BEDRh!CtVf
zKn8{smYm4$MtVzhpp!L}ot0IYCh6Cw8gPg?k_!9NslT{dxAfvT|A6CclTnH5MEK*~
zIEAK{>$1+0<Y7qiG+4A_?ucWJCVJ4EBkhDxtZ0fN|Hjf{3m`v8tXX~Oel>dpJ@-hJ
z5but9a`+$1L2`VXaZ}_;<ByR1$4-8*_31KQwV`Ry+!#fyhAB3#R1{6&+ik6y8yh<F
z8<(n+d_~0ii)SwVd-QAj0ez<R1<JH(s-OcIw!{C?P2I=dO_f<3r`6#%2{-%Wrp%LS
z<%ssh4V&GW(LL|PcJwfGEIEF<0QwdOyEUpp#JFieKJ0aB9d^1UX&81Vr8ZawVdi49
z$4w+CR1B6?UM1f+WwbvRH@$uQK18?PAJ}wzLzG)lxLyHh?(pCRw?7<z_^*nsgs|+q
zPSWb(uoq6Ach(i)^^B3AvN&fh9^rI~d<+j(hiwT!iASv^vM~e%vIYHh8Rp?<i1NbT
z?^!ApPE-29h>+mI69`)Q)AQsHWjcf@Qg^(Mj*2%qBebY0PeuhyPCh!PlCr7t;$h4=
z-2XeUmh1r1L4Kz)r`nm(dP*Ve#?&NVm0w%tTbYaenEP;YRn?h~<4Am+-nx%&Y@^%!
z@sGFPH^M7?zR3JT%sVgq*7f=-b=jm%`Xxd7%uwpV95Ui()HFm7U}V`at9W#aDpOUw
z^{+Y%531*8Z1cl)1Hd10Xx^lfMesa#ATbTM1bzg6p)5f2EC7HpI|p=`+=O325O}&!
zNzthQs<b)*0&*BZPAx*is9FNpMF^s=CY}E=yJ(tV+{|=xl?@5;=3195(i|o${|xXT
z!LkIaCejRpha(T4f;&b%7*)}ORg@|2SC&NpfJ+En&?la)eBUj49`Kb5*1(KwD&c17
z3kHHrmN!jSKFk6-&vDux!Q=_1-+uco`u#pn^GgR)Oux0$>)U_%=YRfh|NndSKbpV%
zuh;+ge+1%2Qq)!BL*|AF?rYI(U7(Je`m1D?P5{YAQ^|noQV&xFvaBJ6_PHJDfw8+@
z93@Xc_|CT;;=C@(qh^<xqS%xBcl?qJ(}IEJt;Zi1byg(JIY&XPoMv^~Mg}AvO#IlS
zoY%IOiGK=4BBBD8YWh?$>VlN`%hO<|Ga&wf4G)SDg5@CKFz9pN;<hHM%a+0?%U~)g
z=EjDMNLH}{m2Sl7v%tmVD`5A|$3uKOQFtcYiXSI|MEEUOo;0RE5T+>3@4Te6s1iH>
zuqO|Pctop;u#kF<{d9RA=85LPWHH+?j`wO#w4HB~H)VWkl;Je;urClhdxr(FnY5hg
zudW66%?;cz?*z-^b#@>pUrwD6S$3yqDiAbfp9ftKR-CyfYHUb*A<aR2_~B~c(^b)K
zoDee@Xkkmd079=B<M_!N0@YH39fKk%lYEbk?+t2ge7Y*3k9Z7%xWYUeS80;0_F0*K
z`I`K3WzDQ+jBYm)Co+WRHaVkV0LIVmBsFS}ijt%BV7tjRi0uVH#CblZcf)8&e|4El
zS8n*t#KFMtg+UB+NBm!g0xXS5-FwYY>BSWjW~G@G4aH85g*Hdrr1ckgDxD5C2VG>m
zA4iCmhPs{yUx)>J%6NoOjX+b+N~I6%m!vL}EPJ?1c_QK2w@W3_jpgfWQ%#OgXYzPC
zK~P=s1(bm8tnuh{btRwxF%Vi5uGetif_6K$kQMckXB>i=k~}Z#;=m~U+><-KW;SI;
zXgA@zXG`pk0p;H5{=q%Y{G?qOVOALwXGf#Vx4Z}DvEGM>alX!(twPM;vK&*_{)v3B
zR3`$4DwT6j(`gI`;r9<!E_In^MS6hi8E5w8w2402+uch{#PhkOW)Q$cGAClz0a8$H
zHg~rs9uyF<mAi2WfYyIemODVT(-6>p+z+wH>Lx>`QO&(!iH|&y1H?Q;#?Y4$D{%PE
zpry-XIJ2w7w~j}H#%X(KzAo#$$rAJZ_cJ6ZuCcYzU+r9-JMOpaXbtZ>zq!h?%;uT<
zB_zwCI9)x+D$M#Ow%?LipvceNq*r{F336zZ+D0l3kmx|2StJo}J+CH?<1;yFxcB#Q
zf9Z$l*ZXbD%8IylhP5+lqAh2}#b%6j7fTRC|GQs@{)sQd)k$dk#aUH9-bD+KW&GCu
zzKJL6>DRuvt!}0pKt6&kU~PJmH#spF%`(A4Rjf97mWUszY?aL>#K^XxZ1ZR_vfBlf
zd@VBPRA-`sFDwoIwINnfomM4G{5<v+&cip*6pQ|T_dQi*16gp~*vyWRj~X(7#)}x6
zK34GXsbjAHvPwk>gX#W}BXcQ`f9Dj8YSi)K*OAA3lBCMMVK{EjRnznuH;yNp^Y}<6
zb3ynq;sF4WUk{R@z2Sg>D?|z58TruTbTQ|GjQb!nABhua>k5CyFV>v+gebJk8s<{e
z#wh&-uqW}5;tjT(2AIFdvDyzxPMDWn)Ee_c=J7M~Daf_VNdkHB+(wF<s*1D6dEJkt
zZ}#~thjuHz4P=74<V>&!nE6F}h%&z5Kuem`b)0>Jh2<)0@1M~K^Bbfa&E~FXL4i`%
zKjseqbrePG<pBn6u1S;f3*KS4VYU|pSxBK}?@WN*K+}d}A2Z2eSqhBrFd{=WT3l9D
zQ$HM=J}H~IH;qCsQe%yQ@=o7VQPj&}_I>xXI>-LreRQ|qqu&5mzWI^2m6%7tMY~cK
zHt}VBsSdIf2^?DI4z{E$#<q7teew__5tnIRe0^cQ>fW!qs-`v>Y_N96%cuat04|Fm
zz$eSgB(5@_Po@=;m4e&&Y*J>WZ-qfzo}D^y8yo9f?=H>wZg)ApY)a9MlQBqxl+%<K
zGYu87TIKe4FOsIV)zmIuyCv5lRIbOdD+Iy%VdvU;S*6Jzsyx=|$?^~QA=A-uaq1=E
zq5_}gcbun1bBQg{f^;~9$!^i}01XhXLCv#d2X=jwM@d^+lyUNnb~tMxp1*yx!)rH2
z-TQlg2hQ5oVa^N6rJsb&y3;sr%H(mr`=>$rw<TajZ}TvDi}9Dg-`|Ge_vo!1#%_38
z5uGO*JT&c!c{(SyQB+Nxr{DMT_U`ql@d`PtL~k)U#=LdKCgyzBf{+vT0I{Z&E(WF7
zGT}s6H96j^<SV2PLbgGo01rezwbv6G&q-C}X;yuGPUO!k?&o{h{WGPS?N@P&)j(29
zjj<M-dg3t=C+yOb#mUzZea`ripBeBj(z2|+$pOc0%j~M;^8wRMLeT-y04!$^eWg>?
zi1E-k4#mZ%-U?Nb%~(G@^;ck88Y^rP9kLBf=>5Xq8fcCN^;)Xcx!%KS{Cpjq<y9Id
zk4xizA|&tS=4O!4(~4O3mC_BZ_I7tw{lBACR3>#*#}D7-sS(XRI7}dD!qoL%shN+S
zQi1oCmU;1=U5ro7x#JuOMPJ<6B+0(K87zdy?n;x~j5YLRxL~k3n~spGBMEJIG>H!9
z(PrwJ1f6TExG4PKYO+nM0KW0zB#rZ93i)9MoRn2w*O||(cdy_a*xMH=;xrF%>U~Dy
z##PFuD!0DM7cL%eW_xd^Q^$n2I1Q8<*p@J1T`lw@;<8`_DM>CwWLZO%Y}`~$p7;iT
zpMMD9LT%g2*_oFf6+Y8}GEaRY<gSosO_euapFpgd97i%?*x6oTCEYC|7VJ2(ah2mH
z%ydZ9JaHNz?7EMV)S$};7J8AxY=*H1Tu`Q&%w@@)$(z(>$4i=0l0=Mtinn>-VP{p9
zCyzhuPlexIM$VV<G4rLyuad7HlJk?$T>)O3N2*Hv`@84&Ycf+j1vn2S=zCcq%9Hc!
zVBK}V7G~&3fccJ~d-C*_DN5~&w@ijpc%N1muH%dCs9Z(Hok@<8N~)Bl8AM>bTuZgf
z^I(-ZfR%|8^B1B>aPx%y!@GApA^`y5a0zWP+#}9&cJzY+3%@RkDo!7sbvO^dBm3kZ
z?fcCuaiNz=Jr%~>ZB97*Hu#cgp?U9F$-q2q;<PBfZ?E(BvZ(x5_($Yfk~DFdW?7yU
zSsvGc<hY6BB2T_PIbP2l?TOgZxad;5&?seVCP?vZ1v0&?N#lB#M~J_f64;H;W_4U|
zIgOf$!+`N`k~L*q=YE2<q9TS|PqU_qn|w<l(tekKAbyg^aa|=Rpw~b6YS+WhJEC!B
zV_Mh+Ed_`I;d{|=l$3@(4r9@=@5*6gPr4t7S{@NK2$4+EO#=H~==O}Hbc3x?ait%w
zAcTeyk{fqd!{@O*OB|XZCe+3H0#A<j11ic#W@Oliee0CnJFyXjL=40nBO<XfqsMOm
zlWKqga4T3o`#iuc12)C!CFD<Gv?VW-JWluOC4ri^K39UM_SdYp)2GC*b2qx6?l0Hw
z<^IvWMSuI~x?4MN>7eKGosRGi_9~#3Aim=>bAMHmW~-|5^LH7>r1lCZv(C`!5RzTi
z2xH!$ROZMtjCg6Y=#ET_LGo_KD}kY*7(WsgR8@Rgo<n<M`XX_RaWNVc5%(Z`HL}@;
zQcZwoRFz_U5zqtMy0f?~L)4DyFCOl8)lZhgczGVI;RWfgnVu)%lP(3B6N@h76Q7iI
zU1Z7EmyuhL(g6hp-njC+U3w3a6s%w%iAWLTOCKXCC-vxQK_;lb;Pa$q1@EgLT-`e4
zI#`1|S{0Z!%VOw)9p)si%Ow9sWNW)?zMGT4V$}x+X+B7}TCNXT+(qgDWTr(d4Gqw4
z*dZ5+Jk~#1W{7aY2&SX>aB5#nxyru?;yaqkIsO^MGGThog-IN8lCFjYZbrj`W<D8~
zp%+OrTVd^yw5;kZDZhS4Y|P^ASoi5{rD2Dfd({)z63<CW$>t|8F9gW`X?l6l6lLvu
zb^gcBGTZocQ)jiGu(@g92?370jN=S8(Qy_U)X&JvIL)iog*@oeVQp_*B2UsXD4Nb^
z_}1s^q}VdrFkfM<1GaIUqFj%Me|>VYZguRf({AGa&`7GkcM>RoQ_KVr%u3jv$i{Ys
z2}6Oks_X2~e)Ylo-l}7FxbsU)<^G2&1S_x$K)+!72;9c|sMsGwQP3<5q_IWPl!v~#
zhQhK5(!R>Xrm!Z>pgY812`jekx5f7;inMIfrnYeXp8ptDFJzeqkgD3=+7sic`+0d1
zR*cQ{;JdP|;4pC){KqWfVaO_HOa#-pcAi#*e1c4|iUH>#b@srNP-k{+{|4v<T)vQF
z6JWSvSAqjjEzV`4)`31vrh^igZ1Pa-zP_0A5>@(0zK`TT#z`W&y`xc8Z8u&}lI3;k
zROx%tFhqBjuL~&_rc*44A8j%0I&OgDWGVE=DBr^M1iIPgE#jMm+Elr1goq+TlSY{D
zBA+R5Nag&<fk}Ifqp=y}GE{3~X5DM&1yv80;IotqLnJ2KtYT_T&3|_9krd~AclffY
z0uWNEZSg`8%#zvEK_J-PN%dU?zNL`!_&WWl;~|U;B0#V_Pspppx{(&i_HxLRGOeAH
zcURiYW*7JtcpAlM>n&lOy1yjs;Th=NM1|%~1{NN64T}L@O}jnMQWR<2G)=mDJg>hp
zU)W$6sLD^fbpD{_?F@XwU>=-GR9Tywkbm9zhH05)nfZqMvkLkPJw2bjD_2!qZzL6Z
zO#`H3jQF@CRh}sHAPPXPi;*EtIiXE9;;UmuOXE{Kn`k`Zmm-vgx=3P$wTifN0S|QS
zCmHgwOPW;tcY;=uH1=s8aoq?CyE{ZMc7npz=|}=f%Tl|T=9}q{T)Ehnf&!UixJ=wL
z#QrO~W=j_Z#Z-8x(8DrZRfNIj2q>ikJ)ZaXyCf1Om-jsp2rh%cYG*$!Pd&ouikkD-
z1(Z1H`W=!efNlF&Y=NR0DQoV$t*k85Qwj*D5P`LHo!cN8r8RB?G-8)1p1}dhbrHW|
z)6}4rBsctoZn>s)N>M^}PZ__ZJi}AGxVgkT%@UXnLYL-)U+f4-tiI&|BtVo#wjAkg
zR-`1g_T`EGDr8@jR(YBx-!MtE>)gK~8zsw)dw|Bah@>bOHsj3d6+r}iH_NZOK*O(P
zmj{wQ3EX^K*V)Pz>+?7NsoLP+G{yKMCSOL5q;L7Y(D_=ysyjXlQf^kw7R;r+eQ(;c
z7YE5Pc0yoS>cZ|;84-C-5EwUv?;LUR(M(;Kwlv1fQO#gmsxe3<fb>Smo}2fGW@(&a
zIg`4mEJky^yq+*xLeiuDBbI03Bv}0bS*U<nC^AM9Of>z+<p|Qc9HBjW?hG#*^bd>I
z6JBCPQD=4hCwkfM%<Y1g9n?6mzMQ-!KyWXc$LS$wMCcAQ0p-A!Tw^)n__*Xa8)*2a
zb(K}$;H<Q9D_+aSg-S+JY(#VtUkbT&Iy)Qv2G}Yy1c?+?oaNsqIl7HCA0=qBk)=n;
zB@}%jdP(OQ)?M(SQ0aIdBp(6ywuqjVq-m6KQ59@aP3#%)uJ(JQd>Gpl3$DTL=oE7$
z-dP`TP27CBPvFSYfUwkb@B(f27hwsaz>7&;IXghH5NGNbz9D8hV(=O`1+yxSv;5(0
z`{~h!T{;x133l&z7@=aRVL{>Qx;zh<)~~5OLDSznZt5~E{)DV&x52{DCLLLv*AUKi
zr(Px>u@cKVuH6{=B2N`Zd`H{wwpoR?zBv7ikWGIz%gZGiPuv#u%UpIq^W-`4`-`EM
zIsI&QK!+*XXTiNvncZV=4KR!zpw4UO6+>8~@VAASj)ywdIh2oI8IMGbXP#AIHnt)X
zd`=s&5@~ip9ow<45qwRtwEHL8v5MpLND4;4uvjXp(9%oOGW$;PrmdWFkCbnb2Aaa4
z$uE6C%ukU!o)k*O_!{aJ$7!C&kEaEn={y`x&vM&=>V;NOJBXXhi>GV>P}`;OXA?tM
zn+(dkd|k8w1scFSp{R_y4^kql8yaeFrTTcli7hnIDRTLJ{S{FP<B}G5@_Ab2Wxm&y
zJJCH_uF!-!b0-K{S((%;TGyY^gF3+|+~W`b>%ZOp=YM~D|JS$w^IrpxIjgFy`UWRl
zpFiAgE0-H>5m3SwxfWN@1cT}YbE@TZp>1r2rbHqerN!CTd~}pC?jv{FDcJkq5)^R3
zao99Yn!NDYR$uVc)(!JrcMFg%UjE0Yj##Gr$OFKVVsS&#@TWLBT4l}CT-&Uw^RjFn
zuKTt)sE&X8&LoqAOwkCQ9-R`!#6^>t)sVzWqlu(}ct|Cfgk^bJCe1f&o0T5MrkDv1
z&k6(wkRfChO96o<{LF?LC(fHNzLUHhwPE-)gcdDuF7#l)30Zn1A|Qw0ojf+D{iqWn
zOA!<ZJaw8D->HthHIH#Lkc_nDxBit3Z{{fw1JXDztH-&7pEwY<Tl44&_hBY}Z5xB?
zNpmP;W1c}`2V@qXjEIa2WihB=v+pGdJ7>l=e}Cmk?$Fy$nxc*$cMds&QS6p#qDqDp
z_7o9z3FR!egbCC%Vp^V-K0(>D_+-r7vtB~;9eE*Q57!F<OgSo~S~qUfQa^%+=Ah2<
z(D+j$|7lt^>mqSmtYho5RaN<UlS?3Sj`OW6G}UVGam8f{&OWATouqXWv`TUhhmEVG
zWs(M|RW78sd6g_MYY-X<P18Eh>n7;fw8on@u2jV3D!W}>$(NGcx=tP!{&iLlX9Zer
zU8qi1!v5~E@n?fJE>g#7`6Vl-PU65chR+q*x=5J@DhOYlVdElAUe{maadMho-_5^v
zL$`x6Ygh;EQau_d33of$qSG{cNT#Zu5}*?)5UK-gfQDEgWu8ov!@VF|stc=OiMKYl
zH7#ccZwzE>Sze@B@^G*0%xSaFKe8^3oS!OiW8Q+CwIZEt3=@!RAkIfOZVDr7r8j!B
z&ZG{PI|z&kbAaha&fu>=N0E-ZFl2}LiXj3jx`*Qo@6q${*1x)-9#K--7swKj*M`ke
zWJ%qE6<1!DWgN%F&Vd%%$$4GnMU#A=>&OZ`b%pCq-G=4ovI`Ja8P@g$lm&2-ZRR1k
z>*)F@3t11v4MVwCSyg%UxcSv5TPVBCNfqf?QZcR|)T0MjXaYVN)`HjRHFEYep5<VH
zYy+|^PFRgZwFFXJsJWRoagiP|4GxhhuW*Cr(8O(BmF5PVcBKGjNbFl*tE%GU=wLLz
z8^uMzD_;GLF<59<Ud?3(KiqS^d<RAe^x6ea)$up_6(Y~bMLB{m6!<UNb5`Qy{pwUB
z^Moa<=~2PsGx$9A6zNvbO1ppB)`ct5CaaU;kMVdu*TiL2cqBf^LS{jw?sk8YAq5t`
z!h49E+DcS>m9W&(RF=8s7&(s_g<1Jv241JzV_E)-f15CM=*Z9_17Gj59&ogT&XI`z
zf*44|$?Uxj7II{rg&au}8}=S9lF+Wpn<}dwAL9;B>+Q|JlIyw^_oo_Be1_lv11gVT
zAABNWYY29=MJT0j1{cP6962TdxTWCST%P9a<Y=cJUEEY<)jZA)3d6d4Jwo8^&g@@E
zEKGbD1WjJJcSZy%TEP)AbcAVZK7XNB6<Tz;ev{bN?xqW6FE7xzpxBQmftf#UnSX^x
zEf(o&O=mc)%W_}B9Vb$@ia)Q_m1b#C<X;bxZV?O*R7Q=tjA=?+R<Ypb(4Cd66I+mw
zv>0qDlxNgc5kC%)oxn(U{Z4SRawh<qonUl=<b(ULp@tW{t1PVxUvuF<HsIQgPv#BC
z7adfSuWuh9l+s4O_3wMyR9Tr9MbJ7a=;4`^d6HGhmQ2>?-_oaW*aIG+QHEKmK*DJT
zhaGAHbXWGN<&7?d&EMu<4b^a#DmGMR#7&*ozO(liK8>vo_l|U~aKXCky1(l1bM>}q
z$cD5mdsWzs+`*91(g9^;1$;YzdfXWX642^tw#)E%lu@tg8O<2AlVwkm%MwcWUU1tX
zO(CdikY`n%ByqO0*+SS>o>gVFo?~1)tshTAW>uXhD@l&ePcvq99A^Q`+})ANtd6sK
z^(8idF$e74xJ(|Wr5`)~7#I~y4x|{l|J(rHNg30gqLNtR&<uIn!pV*%&>te^K}8gD
zjs{4fti;rv&=FT-j#6-3@;az3N1-v&(9WS}9cXNxK$cvl*068jay4}X!(?zv1=UWG
zO$1dA%A#GETk@8NMgv1gl4PPr8`?^;0;zTvh+W(d0iH|T)NxZk&g=<waStdB%Abew
z2<JrHXYa_&%vOhUihQU0o0DflMB~;c>q&gDT^2E};8{gnX1&8z;hiEMy>pU3S%tW=
z@D22XvJJ5AvO)?Z#Q?H26HVs3JTZLF+<O|Q<$@;U+Eaj$yV-TkVJ;h<0PH1Z=0?HE
zR&;GhWZ*tTI3&okm}GTD#><!;Gfp8%p*()^at>m6Ri5r@dZND4t^L^6S6V*Zq$^SS
z&xhf<DwZ!2$a?;|f>gEyhRqAHa>5XmfPO2JrQ3JZREcBrx+@qc%dOoSn$b$$(MgeJ
zCBg)_%8@IFfZ@u^kp|&35WD3+egVRg5xykB>`CT|E<Rn%Aa?!L>lrX_P3`L-%nQB@
zV`VzuF)5(ZI{GoA&Mlk5W;PoXUkBdZ4nQ2&WwUN7j{VJdB7yRpfLt1T9cdccCG_Hn
zF}ng5BCbn+V~E#3=KJ*m)K+oz{}6EB612hR+#Q$`Lnj1GX&%^M{c^OmSJ&y$yAUoD
zoMnXy9_L3mtQwXOkIgO-&81v+=GVID)7@m8a289635JIbHvtj=yO?Jj#m0%xQ8bI;
z=9fPcCvOo*>IeJW49KE^IeH$%=V&=}X4hzBb8a=St28b1>Y(-OQNnq7(hxS;jN(=i
zeN(W{Tsc7C@xxeKYchG*JKIym%YrVOv^i+L>NjLvvYs4{8IguZ2&-!ESJX*foRLT1
z8K#MrC!hAqD@IzM8b(5P2%SGzgPi;T&rQ5C?}Hxj%Tiz~4BtIOl1L44Iw86}l$_UP
z-Bd++1}gqk*}Dst@#dix00fA0M4B{7(klJNW{x*@_4oGm-=p8&y6)XuLRS0O2o&J4
z7{XMtxUP%p>qTrg6}db)$Tg`pEYsO!Rb0nSk=AvV#&Hq2y{gQztlG8WIi#H=Raw+o
z?9)zGJda}v3|ysHDWb2ga!3qHsw%Cj6~p7u7HD33-0(p%lVXLbsFss_q}B;|a14``
zI8el)GggJ$-!!S>v^pWF;7P)W4YrIFSP70L#b*IR)Gc0Hf0C{xlrI>Qw!dLnEoaDM
zF=m_`mG51j5c(pfFQlzwol9Y{LC7`)1*XovnImJnM>ZaZQLm+*Me&>az=?sKJ?m#4
zY{4haS)9pXA*%safK?8V9@Ix?RUe6=h{FYNPGSG=evO1T!P?CfT@60qYr#mkg6TbK
z%-;ucS{$W0;gn#gH^B$H@nf7P{UF!%z$|C$k$-d_f9pQ5EabsGQ|f{CI^2_B6u2cq
zakQ@DIC-3v{Ha6jpb_dE#FQvY68hrkM@UanHxzbh-uhQnSVcr;dC_u)pX%S|WfsSk
zZ-(~y2XpFxIhu(@;)dk@j?uhqPRLnBM~pkfH2wMBi;&DQIXSDE$Ia$HK~7%lw%`)R
zsAyp=BrD^4^Grf4*so20mvYP#9)VY0<wcV|KB94&ad$koB?a!Dvi(YRvLzuUOOLs;
zeiZGZ&?+eMr3QGo3w-_=9PsNgt=AJDVKgPcq3AI`CPt>9f5*6=mYx?{R`Y~%B-jw5
zxDS(z&jZmyRQtvq6ap{-+@tANQbCW^)(Ne;ye#9gIND>H1|8Bd`FvWwDanM<!|G`y
z+!rDmCTBxog@)yEOJ~~(s$32u;+1ppWz=7--<-H@Af-?7$9~YURgK-V^FjqG+Q18d
zn_^|OWJGtlbxfR0i7pyw9k%fBC3^{jE+9B^5x6uLK|ck7%ViE|1)2)a6(r73rDm%*
zEX%Yg%JhgDZTrtRCTTvI8uwyY5A)<eDvFfA5H(~z_C2Yp;FW17MB$uGx}XnuCdCtg
zOnQN%T2Q>*nE1aS&_M4+zNSr0MskZ9CxgvdXpdjq^FZ@-;41}hW)_k!40$hah8_YZ
zO7_KAm`bj`CkB|8Wtqg)V`ckRe|EQQKVL9@($^tdj;_ZQs`pQC-?H~e-@?h_JkF)|
zTFgrWmWZa>=C7cE4@5r>=~l*FlYR%?kyf%*zoAlswFjvKD0A-!q}Z%M1$N-CtN^AX
z&x9jVJd^*{zed8?Lk=@+pXIPJEhnSp>^>jxg?DAWDG~mF?2n}{4O5#yuVv#C=mo<=
zq0=a>iz1J|Q7d+HQhl?e?j|a8xIc<BgQP0236H$Z(5*E|lBfS4ac|lrIkH`e{gn)U
z<k&-FU-+p-(@0}RQj*cMd|-|}LuQ~W(Vc;)N&v5`-q`$i8Sd_m#Und1o083AbyXz_
zi~IF^&pr2?{BDfv7Fy>nfa&f6a=|nYgBE}fEP+8F{}S^~2GLekJD0yE?!Ml<1nT3U
z=^6mt<}_aaas>Wc$8KJv(r03*9SxQis5Q@sR#rx&95Y(S@dsR$xA;;dd7aitb@!m(
z?V)U4hkRC;PO>D=;`@uNut&@DTibt$-n#C*;#d-3Vm|U{wJHI0|4x6)9Qa`wsibVO
z>;q=pZ$+;HuJM8bqOUI~nYv9J-DUkix@<w<IW6)U92)O?##<uGMtzJ02gd^;3P9Lo
zoJ78)R~|;H8p9gGbQU89)}jiW%P*ip0ZAcPS6?35r$`9kinef3!l5OyRuzB&LMa-#
z&N+0(I-iCLE9{RVCxUBXI=-Rg!duqf7N(9S!ooa~(8}5;?NjlS>-@4K(A$3<LjX}x
zHF;LtZ&v)?nV20>1H%lb!xL*br@PF;YG@4dIJ8fiBlGtJ0(*yA&Sr@qQBTaULm|9u
z@}|7o-XqN8Jz_3T?ui6dJp?sKsRYiBY#N7Yq!9r=8_T6z1ul{#u8ZUo<n(U0`Cgub
z3NmScO7e8#kq<?R2`?fEVrL@9_dtYV*X$MKN~kK<@*Yo!vDgm4vKP6tDys0x!4Nnd
zW!<qqzvK{zO<;<PFfOC*t*b%I@Mu5iBtUz{hBtI`F^%WXDe8B414Qm77878u!lhF>
zN+_YufU^DZ-`%Ce9eK0foVjFmTqaeTf+lWJHB|_@%9{q7iec!=@k!QOTaFfnB9>D_
zdnp!tSxOj_bc*5~rMYroSl<kF3MP#fS@S^V<mL*^Dx2+Y7O0UEzU+{%%A%^9G`|Zi
z@KTr~<ew)`Ob%vlowle2dU#1geW-IAjygSomD(9Gagh9mbkrF1(kWUHHp-A2WChN|
zF2i8V&LPG<Fp7k^#nuB?i(Bchkhr186<l$i#D_qg_$XI-R`P>3$WZ6fiflf!eJI{&
zSgj{d(z1@TJuR`f{`sYSJ4es$+m@6-o}^U<=if~oc;bs~U8N~vpNsCPk-7B0jcYV%
zm51dpLh1;4lErzt(j?dzhYrR8SWdk^?zdr4yZJ)uvNZSo(!F*=^fC{VM=tppl4nvd
z>RMe2Vza&Vs+u^fZn=6lNt4Zl5Q$CbYTupreJ7TGtj^<j;}dL<M&S%2**r?J-Rg!W
zC{+*JoQu#p<iBk?1Gtl|3!krvspWh0IA~aK{~Cl7>BItVt6h0Zqkn)vEEzb=Q?c^R
zo|Jx`fM|PiG^6C?z+}9p4niI%F*)60i8D@@2kx9j3ZJKK<T%OFI!!EBZl5KzJfTg6
zOyzA5Oa#DmF2@~)-M)vcNJ{I3ao9Anc`X4tL{py}qsCt1Ewny%_exge=AS;`=^HC%
z(jLb$)?>S)^0TC4QqS7aWJBdO*TWHguHHA^Q(2YGeJH<2YV(-q>&~12y-s%u5$sus
zCL-p~+XC`ti^T-SFtRFN*1+eXW!q)wzGjKD;m}cLRxMndHe(fM+^Z;i)wjj~<&YXz
z<!R;1dVJsmZ}oFFCH2TG(ZS2wa|BbcJ*FnW>4MUSax184Ot8UvL*KD5k$A0GPy$tX
zXO+C9&H{JbkT^+&yFezm$I(auz6WO4_Aa1*2UY%ZJD!xQ<r~NohwLHaGAYvHZg3=w
zbB<j*L~qw|UH-yOV!!?`Lx}m1RYjeBCM|XaJI`yPBPhF216X0SZZeV>z2Co9{L7=k
zJN<%4PhS7v=g&%mM$T{n;{6*ZCLoUeJf5gP$BQlp{A8*VmZKBh_vOb3!;2nVb$WXg
zFo7G_F0q1KjycVwOB#d?3@G$vxCpvs+@#lb9$*h|H12B0t*(S2E<3=rqBEP|CTokd
zuCnA4*kdcvpx1VOYop)WFN2q&8d?A!q^x>ku^Y>h6EW1uoLY{b+}L5`QAGOX<GCUt
z-S>#<EewlX$}cClWiq1S91%o76+{$fdhnRSp(FG>;IU+?{rL7NU|!E4bPm&Z>+v>X
z^>>)ca@GUCw;reK%mh*JLnlpE+;3!jgRJkK;)v5oR}6qK5&Y&S6VmB5Glh^|kHG;T
zLq`0}2$1#jsLIMMv#mN|2${x8;A}{<x@<lNCF?HMabfR`DW65&mUw8;u-6eZ5T|uq
zW$_L)5O&**v$#&{pkSe2Pi$N#Ns@X?i{Xah@Hk7-xblB^brUPug^dg4S)K<6=JB=c
z%o;2gsq3&Z<wkk4aj7z|(_<;p!<mIV&g!^~gW8`#DFL|7N+#1EoY$4JXOQ@_8H#sc
z&xua$c5hk~C?3U))iXp+VGEPRju~BtVJZSWhJGX;L<!dBRI!aoN@lndNKsmI76~<I
z<Y7XYX=ZJ|-84z7o50vxdaWx}e^b)w&0^cs;FWyfX@(?_!O^KvmqnUncb^*XV%;CN
z%7|iTx~1G&W!M>Q_J)b81tm&Rw-(of+jMra4LV#y@wKj+CTsrOmvbO5W3pGv%VGy3
z$z?Pxr(q=SnwvLZP$1@{J6#Fb1szp+nrpjI(Boik3Go^lcbHu<Q07M(4K2o!jtilt
zN$by}fNvGpM{GjnVRKWKavR%`h4retkVHJd&laV!CH)s6R48ruTI5-5Kj;jaVB|w-
zQ4J1F@}j+QC#2BM7ixj%o>Iv}&r!wpp(w->LT5U!(L*~KW;V4dflJL(Zj5rD1R{`>
zO)@>QT7sn!`SWxFoZ_eyQlniZI>{o>-FgySW99NslC*(hoN{ICuqvHz#rd|fYfN=}
z9E_%IZ`#J>mJCQtDE1~<U1w=^H-YEY4xf|wn2_tTKKrxnnCrn3S-PvcG%gR0MQfz}
zd;x?A%#~#-=1+*fS`1YkU3pTTk8D!|uw(&G__Y?$@4f?CM7&yHz@oV11biX%*1ziC
zH(`+(gg8!ra?RYAf5@(m_sXvob(5vdCzNO_?V=s^2XcpyJ%<0iL;(ENx492gOj%u~
zMSZYjHHq965gyrYAI}&x7%&@9g;^!3aYi<mp9fmhgAu8G;}2x0_E$teyR$#c896i(
zj?4T#VR6Y49%o84A{Q<d>ueLUWPz^qeU)uJqv8X(r9lHyj%!2*>9B^5^Ae&?OFDCf
z7M_{&=w0!XWr1pVC)O>z+O3>5&FZ?W9QA`et1^(P5SYa@3^*kNji(JuT8q}Ygr%*!
zY0A1h>H@D|eHkb^^ebO3T~|(bb6-h<4P^izH|0&|xznq>RzEssM0gnT!C)EU>-%c5
zq{>UD%HGZUad!^w1%Dx!$<71kas9`nf~V{6!(WzT@vRGV9ER@qhvjMyzxUJ2Lpx3F
z^UI|hrt#tOWBm4NqR2m-`>}m`?f&}Z?K*$`>r4OT<+cCvGX29pO>c9z5o7A2j;s1e
zdUI2;(lq(5U<3a3b&G~j7j=^6m3{G>7iov<Ql{W_@F_3oQK*l)ynrv;kO<gGR7+iD
zegN+LYdgLC!$18)8mCFz#Pv_hw-|pKuFL=Zi9W^n({C@=AJ_IrUsvZZzkbhu>4x@e
zT{mC9wLdL)J^u7d^H#on{qozlr!T)YU#H)`7vI1B_}YE_?fIuNn}7Y*{=H15bD!0}
zKmYRE-{)V8EX%Gx@g0AA{p&nDUFYH4o&OsDwf)<dzl=)+`peW`x-t4Xd;xsn^Y1k;
ze+>Eb`|#`Z<+tqoboo&={nIaRFUjt`zJ2{O@9*jF<^28c_4(Id&TrY*%jMUqDW<vl
zt^2Wee=lA8^)LPKmwD{|#QXg9`ulU={#H!CoV)3Jo=oM}w!M7Ge*Jy#KF6tj{>{13
z|NcM!`+vrA{pFYJ$KRjMQ{Mk*`nP_3OTPa0_aDtK$?rcwELpA8_G|yAuhXXPUy|Q0
z<=fM_see2TN%8&ZmnM7r-tOGwf6jJ#`TjOPJ^lXM^Dke<zW(LcUoZ2Qm*2|gYU?(?
zHqC#^yByo=FK<cm+xMrTefsh1mtWiLxAFQ^fBUg>lm9vIvMOH6=4lv)U*4L(zh%EQ
zzyJO`WasAPW#cv_D&27GzLVf^kQdl&OT2JLz%>Ol6O}hqd~-T(G^EFwWCyH7mN#%1
z0qXv5Fa+()1q$6JDVoCXQ@p?Kxp|cTAbXT*(V7g3&BpwW!M-x7o4ESChgx;%4`_J+
zGC4#froobcCeD|W3Zr9Bjf=)g!-zlw{=CIkMOPWL?wA`SZp~hwU)!}F%LAL~SOXe}
z-b&_;M9>LQaOylS@3%O<p@Vm*`i=8G_&_?xvVkwqXX!)OP?~3P6DOabD(26v99q7F
zta|@-{I`Go_rLt}e;fbhOXzu;Jge@1p55KD=XD>L%)1!nBOd&SZ0+}L?jMX}6yb<!
zMT<I0#*WnPB#?!q!twRhl}?g%PW|hR{bNRu0qA1TOyn`i5guS<GeZMRopJKuQvEgS
zRv5)+u;~IPRvK|=t<#sH*}#m{p8fLo%s#iM3U}l1IKszhjZhFBGX21o;3!dbUC-pp
z<y8zDhHF>|v3Ha^gBDVGQpIs`zqP~uF)sQ6R#|D6rzwvIFCG3zT9GWQ3B!=4<zs)X
zs=ery8^R#dJj*}vEMAY=`|W8batcx<5R${g?OT=|)8xo*PvWD~sbr`l9*j={2txP*
z5D|GnV|RWKArBx4MU*U|fDiJohxTHa`?h0(%=*Ux^-RTHKGfSP>!PSX(L#7HAnswq
z3a-Nv)J_gg+3}V?G2QLbnJG*Z#vz$h;xt9NjNN!Tx<n@!cI(cni73)h&^HV2<~q&O
z``u~Yxtr%TV-mw~OAR;aaZQnBv$@I%fHYekg}n4msIo>W);N!$ZlS=k*fWoeI;?yd
zYNy+-C9Zf%-ki1`I9-sQ{8e;Hz?K7PNroBE$|c5482#16dV4uk@Q7-kc+OJ5@{=Q>
z=c47NC2ADf3F*ha<Ej(QH`PA4>W#rftEsB`{^99x2DxwaV?O)LbW+UPp@+tt1`J0^
zGQ6VXb|BuTbrR>kw95ZDN{==!QP)+v<^8dZ%I@myhSJH)|MP$TU*G@l>i_-n|2=Qt
zM-%6b9gFg&-`4+9aQJjf4tL`pPP3{=of(s{jlT3ijPof1$~Ed*>`9^I2*+0}7Fgkp
z+67xpf+DT+EXlLGK!q)iLwD(4e?*t=hxdI9o5LnxPPmp3V-DDMIz0~Tf2+G1vq;cK
z2pooBFH_vz3BQ56y3+)gr+Qx7SV9!WkLHY-8U%%?=Q3zV)=q)Y6X$u+#GgPv_1eMv
z>h2>o(0GVdR4+wW9^Qbo`a&e+B(BmXZElhkJW!td*=S41kO<aW%niWe>%6sXlDNv#
zG;^#ehRxn4m29+fJ2AfRBR2R!|6e$|xb=$q6EG?Wsz_$;VM$$>k;9nC$_Q-v&9U3L
z^Eyq^x(?qtbp$b;waxpDOU7wdWdGAj{_PL#lRPw4Q{F~^dK9X;@6d0@>SXUZipq9f
zmp2r>TwgC9rBscKE*)y!?|jlSYn-m#{-PEE2YKnr_CbR%JY~tp=DInmx4gG9Yi{y4
z;gx~-kGAPMGCYM6XTanavDRgwoC%oa#O0-b*2-by1vF(-+$6ajwhY~!CUyowwXcoi
z^zfC=W-2F?niqMI=RSS!c2;?jS4EQs+0V{w_xd7B0#y0K;w}l>Jq|Z6kyT~k^U61r
z<8KSs@2H&jC^VQCTVR%#`b_HEG?wD!)wT$5Ea)Yvh8@8&$9mC+Hj*_>GSJM8aa81G
z!q0=U>>x*X*1}NB6zWv~e)Bk(+`@~T7>lLir#lX+C?si7<wbROntwZ5zn0AMlLyqX
z8ch3P9DzK?W@;=0Vg<DUvS?><;Ks1hjuFvAjgS})X-+FA8YBe+is=E4ODaH&ydFjO
z$-;LDk~`cUYpCS#k|WEyf|9d0)7^N`{0(IL&=U8}9YWXU!6YhCvTjHn5Y{+O3+N3g
zwG0jY@ydd0jzB06g|4!0;yU@fS>`R~_pkH0pI)LbZ>@X0P^BQqsns(3hW_Wqm7pIP
z-!<=~KO-PKn==UW9Ai)g^KnL{)Y0o=6HVw3GIpS?j^GQ;v!tx^&x5;GRxbx#4G3;4
zbzlTqwR#akFSJ2n+!bc1g=GrkBQjiX0c#onMVTN~w8rZqP83{%MNy_{=IfvPEH*(C
zHh#Qr(q?C@>H}Z=9?p2gqxUCuW|Ya0(}NbMAYU?};GJhYwcoRX={MKz+(DQ`O9)O7
z^4{GTZa2SNZc3XSKu0ExN`Y)nm>khpHj^q)Il%p>Lua5Ktl}(B?zfD;{fyeff=Q=I
zB+2!afDN8Gk3<A!o_yt3WXE!5i+yK}90HGeA}%UMjNWMS--3LSL)^)cU!EsFmza$l
z0pP4-$1XCkVQnw2Bh4BbTQS2M*m_VwXggW~jVCzRP^BLeBQV}H$CFK|2{5o}7{&@z
zcE6tc&>G3BA}$UI*mtgxz3seP{QRtlik{hkPEz9p9_`!Q2Y^a2duWoIpo2ZG@;tfb
zfRM?UeiCZ|INmLuh!7(?kU3beUeyb+VQUXkZ!QP5{}9L(F&zvPl&Wq#eU=pYP0BFg
zQT+Xm8{IpB$cX9N<w$a6w{)<IEN+UdK4|G1M0h8)aplFK;i(;D$!Ewn1oD&aJLkX?
zqT)K|<3N_Gp||<Ii!90FDveij!5d2XYERm`eQHcHO?`5XxHoST;S-IhD9SH36Ur5c
zc+WV9%a)O_9!PX}MXWX9_=DiLg{CA%V);3WT+7Xi|H3G9m)vsJuDjZ!?&32=mZVA3
zB)2TzcXrw??c103t(&6D_3cZ$(!Ei&SO91t6E-%A-RKZ9aN<i8jv!$71Bh(kz#^Yd
zrT~?9vz#cfnE|M}hTz>SO_R8|zlOMFX7~V0#dY9!AGApaV3c4_M%jL(HaAu3fcwD~
zT#5<T!e0%$dltSxhtpujlciaDzrgwpET;o=A69R~;_#W8*W_Y@EEVf(z~vQGLIC(f
z7nH^!N$k=$UY}7%)+QbHq;jhB>p5bTP~PdrR*ZYeqf!_FwKp^zOhzfi($*-T)#e{1
zfWU}a`;JzaYe6>XHLgQnHY@TvP4myoWpA5pWCpB^sxDs_Qm*K6z(Q=J;R8_@;S}h1
zQ=0%H<B4|x3CNh21zSo~fQIW3dPhl~HdT3dE*D<?dwLH1B&vJlJC$Mk$3)O}lEpl_
z)$?is*LRudz5{Im7nu&L!#Lma#?>Gylmw^c^8ei}kad$Io}<uV!>Ya$(GqqM7b}d3
zia!)ZHB8_JgI*R0h3V=cfKzOUFqsB=Q5e1|vMkNhEZe~j*1>S=0%e)`E&r7a%AuA@
zk!4wt<i6#qi@hHU&lXu$RMqmO4}@or;rk-X$~4K3FEKNnXXB@vA})Ox#g|UGZN0q<
z4cslb2st(Tig}@w#L)j?X-gQ2z3Ol_py<nfGne2LSAZ5~`=cxuHn-P44#xW)JI63{
z`#fKKjRUkd#VLQvu-qT#-;T(&U3#tj+olG`L|N$jW2X&R__LFflPgF7en_mvCpbWB
zjrN&%#=Irhiw#odTlfq`7Uxx2-9702-bs<Y3PuG?DN%DzbJugi8*}D~=1@pZ;wsDT
z4#~ITyGIf-f&)RcB;tTu6JXpO*~=ehzOioxJryb<j61USC1lAu<)(K6glmH=PRjc3
z^eBAv@3wlSg$AdOk<SCtpBNv|K_$5*?PSNJL`I%XX9BGKb+_9z0jLvnyxBBE;5zEv
zP|9Xlw<r2!-Nc!Mh;ux!ygdEEa_|1c6SG`aU+bjwL5x@UqeMxtBi^BnU*u_-eTEsl
zuQs{|fnlwWsg%4>emKChwcVlJI9=%weuV&6K&Zcz!JnT!vB5T++D#_10wRucM3`^`
zdvSGGh@qsUIqcdEf8S=G)+mz-e1u$}xWvbksOF{beD<6i5_2zy3f4XC6YX;XSz46_
zX7;fbzb*YO?#)t5&Vf)S!}>r*xNI8s0Hy0o0YS_wXK*W6S|v@EHEDcz?6|#6z~(Mb
z?VDdg$VxGQiMo8wRyxA^w-MSm_MS72Ivdi8gZfLkI@9TK5C~2zr-9jzo^{}oI*_D0
z8&9;fIHiYo>x^HK6m^r;cc0^7M$R51^Jf+(FzpRzLqJ_cuQ-IZBzaS1pK$1SrZ78Z
z3(%&sLzh=))CaYH9I!(64|j`}PYVNAp$Co2s=nXb?wv^G?u5^byh0-BKMpkLL;4|o
zXkaPLva(6;=ZU_HBK-XF1`pXrzxS{Hr-V{g)+6|?Q2~J?NRI=ywQK{932-eSBaeeU
zhr21H;$5V1R@^`5`ObuTSJId|64t>PJ1gjRMv{DPbK{}=E`1j|Mz|3W3PW)bC&edt
zh^};__UERxp~6gDh`1-VMx|tnuu%B=E;>f4LBLfC)DlaWYMMWHy+3usukEEDqNi>c
zI*+da=?R`Nu!4;+xpRD>tH<)Kk;=f?sYzi&hkKpZ#b=D8tP;q#>r+2OU#=IgU%)h0
zJiKiZryPGHrHw5W98EDvzB;^xFwiW|tE}2Vs@~eyuP^&B)$-GI)A$IJi|ripL$f3+
zil&G|BvUKyzj2MSC=wrGT7hLoXK3RRRg%TN60`dtUMaV6jXEt?`p2u=*u}b*3sm_^
zu-J2X3W-W*N!G+g5rhuIPt#;oz6HGLHC%q|)+I_XBssnl*9v+ArH_-M3Vz)^ee31t
zE6|BJUSVthwXG{P&FW5EJk^;O*tkN{RE5umc3-OF*Sm3rv@Fy6M7E*vQRG|7*xU4h
zy;#L_f=&?j`ry(!+j0*A6Xc?(!UGrG<f0ph%4;Qyb$8dYAoat;KO&ZZzwAh1(E;9e
z;!#t_H}Mh#!o<Udatr(qEO?0TB4F%FH4p~+PYyI@pe{bXcpQ<@VMi5{(*c$Q-5m;9
zmT#VvcA{dZx3VHUyrLesCXD?+jtTr5Btq&g1mhfmJT}co+ZC&Vfjjtz%=>VBe!b)V
zI!1<ri0fkWvcgO5u;FNN<tzF>!_cn7ZUmaDA;fJnhnAzGiL3jD1b2tUf3!n%o`+4l
zA*}$GvfB!<VnaHR)HX?;C&k@D1UEJDb~d%i<9s3*raz%<EsOKGXzuRdzOyXZx4h~m
zM~)Kv-O#U9c%Lk?f#KyZIRUrb+#OgiR)L=j7(hr>!U0$KNk^I7MwR&`>=okR+Ex~h
zBO=k-QWeg$|G=J)GEe9~6C?>3kecl>zqor1t-?4h;wHVDmmUV<&)50OYdc2gcIZ3r
zvmrEwB@`$V6T%}=+H#ub>4Xl!{D!S_ANKqdp9nz<RTigN{PB;!q9pD)pqRd%szXa)
zfws)qLa8(-!s0UGCA+LRtGolnn&Guz<A9HFUcZJL8f>a3RhgFc5kd72zN_2Eb<N&>
zM&bV})?e7q?Op+75h0C0=~d)e5|;<$tFV?cocz2FJ-aa4=1w2Y{L#F9niYAG*XfoU
z=`YvsD-a4gd{SN01XOnx2@xdc+7+dDu>H>$NnF%6N7;8aXMEYM^;HeSnI-`Y8<QAH
zlq4&oQN2xf&*gn&MSj!V=ezKZ-8py&z{_@0XbWJ<B`&G@^wlIxys60FT)WI5&_1fO
zfpK^ZEX_Ku>y>GrX2iZC;`-;4tSYiC=E(=_*HvuW>&4wJLXjm&6PIb0<yn#CaUB52
zn!2cp;-;N@V9XC8lE5CE>FmzBnOuqhQb4HrD>KYaBWrTyzh*ay*jn6q)8s{*HMh)I
zQ-4SL$p|!>_>B)@n+XmNgoy9dpF~FAiP}n>nVWvUNus_hi(eS&tdYY5c-kV}PIu<%
z#DBrQBqkuVBTKd;F@ZM_yId|c1}pH)JoIXMKt@)L1gzZrjhH~+X;#U$8x_~pp1f1!
zm;<`|zNON2dT7ti*(+u*1o;933Fd1!erTca`np{#=1r3pY2Jhj^OcbeN)-SgiEnmG
z>)#uE?Y?XFL0G1hZ5U7M(s^>I(iU_;XrN<G6mFWfi^$Prxh3kLli~&z8=|_2pBGvP
z_O;@g<6%%Gbdfv2vXbD@*u|P>sf{*ew<W{LBXE|Ki3<-e?YviQe76tnv}wrP)J+!W
z&0QzfO3?NCBl^<5d14g=QR@`ys+T^F9U8BqAYyj~FCDMwA<J;F;Oo!SCGH1s6}6w%
zGm0N4A(RnL5Nc#KNm`fj-Hi9!oA-x}JOZbNo-{-{fIyFu;4-a~53s}v^^kY<mHM-M
zC)i5ZNn}I<6(a2@psHem+(0PDZ;H5z)4M-U@bPxkP(;ZEe}VWN{u+|oKrx%tMOmkJ
zvya}{_ufNiInkBk-E{>9)N8U1>^OWD$_?|ph|~KgAcJMt!Ay-36X>8u5YR>n;<$h_
z)e?Q+4D_d8?aB1F?lpSA1c6l&Vdw;YNzofAc|B8WCJW;_gU|B&iXhBW^w2(8WE0)M
zmy^Pog%vi*<6w{lJh4no&|dIP^tT{C2~BzCbzNok=k<2Ixsd%@x?}r5h6Kz}Yv5VR
z8xhe2TA`4IZJGqrq8Hl%g(Jl9Ttdsb$+NnQ@7}v%su9vuHblhjDv+dr_OPbLG!cak
z)iwp<q%IOb01w95@m<pxVEQ(lj7+Pzf)!833K=kRp)8I(D?)$D-;quAI5n3H8M0?`
zbc0OX0P@te2e^qx{Fnv2Y&FciHbjX5*f%Q&1A(D<Jcr5RNz&v^a`%z?2g?7ArjixF
zfQRPyiat;@xC%Mt$(jcs_F{e--vko|LKK%IiQ^)>|KPnfE_lQOzs}U>vX%fe8OGYC
zkHdx#3Q;_5XTd;YCT$OdgEUL({C-*6Fb`xuLSmAS6ik-2ZJ$o2>DggQt++dM9cQbE
z2S0@qgtU+hdzf6)P-6l}vzV>xNeLkaZPp})oG@^68fbQ+gpY6Y6^>m&Gmw#_EO&o)
zjlY}vVlMa1W53d7gqXy#OAwFfsUlqhI5>*?K>!2EL!FUtj<O@O-t{omU!io;5TeKx
zaSmF@w}3+1<rK}e&Q#6}Jon>s__v|cBF>w%c2pO4QDZz))uCj0ba}_-7y<~DDclT(
zP(SwD-0!*DEw7@<lbalw-`RTGS5~k!2Vo?<>+wjEZaSobatsP99fx>nT)RWI>|ik|
z5dGq@tY!Hyu4*wHUn<~AezdTM_%s*n7KQm~>dA3Q9D0}whrHdOY|{F@k#bzrOTBn^
zvVQAW(4p)Tsb4KAIUw50>xD@I4=yv=A3Gw8y`gbF=(Wr|Js9O&f=D<#$<IQHe#Xxa
z!=7gtk+C&^mA&g;G0ZW?1+kq;q#aHKQE8yio5KkQx)J<_s>-gW%#{DQa34o*(=mn-
zT@z*@@Nq`GJd&ra1gS!(5-5^7E#l9Z{r69}-GrBnk;W0To6(NU*i8Nmr<{~hBUf-J
z^I~bf9S(?dnj}gAj!cNG2;7v=(hh8+G_ITSGmK+bBIR3Nh+0INdeHY=pejfT1~etX
z?t<eb&=XTBgp>i@?WiEq^Xy<6kSI_ZMnS}uNv;&3PgG}Y&i3g(AaPtc*$E+a*=D%M
z`0Lwk<KXBXMma$okX6B$0+cH18!LN^CsQxcdbL{L20Kp0dC2K;kd%a>aO1lGj3c#D
z={H-FDF_warb>Q;Aoo6*#b|Obc?hX6$o=c7$G)v(?s2@X;%3QH^1FFQw^kYsozmn$
zu=jP)&eI0rTKaLI1q^u0brd~I=_2ES45N*qnj)@}I%z&0Vpv6yx9+KXer}_;x&OPz
z7qAkjGQh`15>`ZR<iXU}emb!lx#2Q8NA}nw9JZ`qaB2~vAfk(YC-SHgP4lLX>py`K
z6VjxytRR`Mfmehf$l?xCrB4VO!qLQufmA`bk+itwrVxzF`I0r4r49qICp52-BzcwB
zch{=#W+(1;1j#<0l4>VLQ>-BASTW&_SXIo(>ky$<yn#4i8X5x@$6T{&IY{4*azO6<
z0n6xtsG_E~=%clhG^Lj78YlsCKsgCGHRM2f!Y&7h5;-{?H)My1-iR;kj_R4f{6M6h
zYd)a3k~$&s24!@Kd8wd&sID+nQ*@?qB*&nc<c&fHe_7^b@(H?GD@xvem?BHIi(~Yp
zzv3f4G~7}YWttQpA4*m!?m@2tKi=~Gm;ZmIuME_qaXJ}aPsCm=$p@1D?i>+}g3$I-
z$1LBSLab>ltn{xUQyAdR!0H{64rh15U>P*vJEOYBt`x*>2(6!_$kO=Zr{z{}eKT3^
z*y)b$+N$XH98ezzIr(uo)N#|C+zJal=TR-23p~)8vX>5(5J^$gS$6-iw%>SOsn_q@
z00FzqY7<b1!Czymw&hTBay2~-IA~I8uH`vibM;MWl3Qjo2+(0GlBdf>TfMuSRP)QS
zpqyHVRx)?#FckBW1v_4c+RSVid`8Dq6_w^NP{JZR!Q)%iEu;ueky|^Ewd*9CrE>#6
zY$y2HU{YLFRe8T|#jQ#4=Fa)qONbucY&IyrU_Tf`^a>yiMHMH99phs^EWJah{8?Ai
z(1WngC)zsv4zQw9z-U=?K$2V$Rj}0pTp(Bg0=?1bID7O+klutni>gZF;-<pvcK*m7
zi0g~MDAX=GqedRRQ?)|$&mqUeUbm_hCkZatJjt`TzF#}<o$&AGx~0uIPQ1sX$H7;9
z7N}o{=_afgeDwxxw<L}0{7A*&KUUP~E$mB=YswIafWe@$5&6cl0qU2{b(f@Z6Q{*3
z>+S|XU{4BzTEP&i5#anbhw$etuB-F|+KS;^;DEG$vEIErEpL>ykOza{5%$9HA#G#J
z@#2A#rbCaem3)2Ym|-X*@H$xMp2q>>nA<z&^&8lGRguJXara>nrYh`UC!I5j*YUv*
zG|0XAJHXgLpPv)2esIA%mlVjQG5R|%HBM^=+`RZ5K_aZcSvxu%(AG0NC35BnbRINX
zX|Z1(F?sYl`dLpWqIB3<XYbsI@+J57mt)4U78Oe`h(EaH?Y{sJfG_e&E@o5{yDqLU
z-ynTcSmY+AEHCU954@zwk|I6QdI(PegMAFG;OE(8STCQD7%MCoj!kO9YVnALkF`Z+
zO`5F8>gJ|#Tq}j>=%Xy}!fLEbr&wA<xYis#g=s=@x(daBjN6*717QVhRYH#2C}E}r
zA9DODW^O!a*;MXu?qMp_;gATm4tFk@6-k*}rOx?FH*`CNs!fTJgu}`7@<5~nwG^H6
zq&k(>17dQZk<h5m@@bPizq3iaNr+rqKXEi^{Z1o*xASBvCQwd?Fp_*Jb3YMs<IL9L
zl~x1855`ts4Z?WzIFKvRxpxVM*aHFt3}Ii)bZ<L*lBBBgqPe@c-!D`)q*xEqsGps4
zp8_=Jc<^grN(BzoCQq8f>Pv&*p-#=R8zr4?*<OoYvzxG6?E?FCAmaNpcd%ly5y#fG
zBTQ_%lj{Hzu_-lIq1qYq4sgIYfOW@z!I2%^cwKdz6^We@+(YsZgu!%?&H)vFa|iTB
z@`zVt!i=Wkk0MU`IAB67ck84A+c#VkX?;_I{C*JJABOV_6MO~i&a0Y^-DH_;@Y#8l
z5G@CA+$G}PGS8o+bsopb-2hV<w%s!mF=Z4ixhs}p&!$_}wYJz&$di{Mx&SQsHDovT
z)W-5-9?n7PUS1V>UEED^4yVTlx{M*G?SCEr?O*@>FaP}C#(((|c$%_^<NAK;!R>&<
zPFF`6Q<hr^E)(Ke(n4ymDv1=h=QL4a8EBl|D({*Xb=K6$-7<7HX;$pWDC(`-`f#3@
zY|;^6&LXMEsdS88XRoBhg2I6$p$frt64^#XeZP+01RCcsXb~$OqUN0WHuooE-Prja
zgd571=+YZ>Sjnp_&5HZQ8{UCw@A8Iy7fRPv>WVJnk(%rnWYa+c`L%MyB8^&@Vqd;8
zy0U>YH49;M#EV47PAYGN&e7ds#FD3VRc7T)pwi6xVQ$_*eUA?RhtY0rJ)2O9VmCl$
zfJf?`2?34DVlL-6=&kR)DY87dZ{X0wrw<DiI3ihTgFY9G!Z6=ckg}t=TIWet+)qOZ
zO`7dCVF*rJ>UKr0DV2{<SOLBh{0eET5=Li-Ar;AkFMC_1HH?#&d{P|}aS}qdSqB@N
z?v)ZY;d&s`(HSo%+`$`5A_qvzK&RCv?P@Q#MW6&DAcP$Uu}3}l?z@eaK6bktJ)W(B
z;{t=WzRcT!IJx263_ZLD+zlZFIE|C6@_n^GVCihypX{w4xo`XEb`}7oFxe`4p6onZ
z7`aXBxJjGr?uWd2#CQj5#AbAVX66P;UEy)4;G)uhQ2@4|{LUf#-X^VZRLQiX^g6Ec
zJWu}I!uO!I&~&W(Zu(#jUB!bF!BU_#!GPwltk)V_JIgXcFhLg?gd;;*Z<SXM*Oz?`
z@Giv<EP=ZDBE_(bk#(H0@JV&jj0RB(=2LOq1j-h4I=4>`t8qXh^|owjl__5eW#b=8
zjeQZ90QnvYXQ7T}(v(F~-@O<@hsW*|HlxW5LNg#|$<H*j2RWoC5k}$y@FqDyP=R1%
zR0SJhNtTpN)!d!^g$vF-1tRmsv8~gdbzva};%<SP3ym~ys=Q1;uf4go+c%q=Cc`w3
z3s@#4>j)(PB(kjONu;si40mWnkc-m)Q^Ye&UP-gKC`(@tXs_qFlc6s=9j&w|Tk*aP
zi*YEgc&S|ANbb%E4S6jYhDq9pI7>i`vN##G0{S5$)RP__MGG(?K(wCuoj?!pj5E&L
z0Ct)sd0sXaUq5oi0jVBwpfLLT4lxD4G~N?-Au$YI<*ljNi{)Xcp2*IvCRNhZx7{jH
zZwPaPbP(BSOv?j8i)}|aq?hG{<}(4!<q%P)p(@5l&8g!q1bR@9+HYUjnFO%SsgDJK
zxg{d+GPek3?O*z5YsW?A(Hm?gIM<vEn|pA}Yf!hUGd!%>V&jsTaEqwb0Xto+(C6cc
zOB_>j=OdiL^|*zSW=UF<*_|zvO`-+a!mahm&e-PlhUg5{G<qBe2{8*=&M6qH<1!8C
zHb_ETUL`N=_H4#AxpBh;tiZus)MfPnEW4mM#gV%{wZp;G9Ev#(&ktgCWkNY6M26go
zc}`?OQOB4$!g7$>&{lyja{E9=j<X#j?ViKx#Myl;m&iDs+Tq}~LqW;l0{F?1AAyW(
z+}#7~fpWVL>Br%eI<1=|$&-%<YFAAEZ5dtEb%B(R)OTi*;aSd+5E7Y}ab4cM(B73G
z9N^8I3^2ettDcx?`@l}4NJjOP*E#CXq0~1oDztO_qz7MPen$?}9rL?pxBJ}7>OVPZ
z*_a0KN?pHz5NcF4X&m1#zjW(7?H&P#!>MY<Y2l?A{n>^POJ_BBO-ts>rW4151O_HX
z7pG-Wk*?bnM>L>!#qbpsPn3X4mn#$n(xj}?^zK(0E+cl-&T$e9L$fH?8Y?joBH>9e
zuQ_`i_2^m>iY3bs%8B|aDOlm0@MzZk9Zv-UE~G(*g{gsVL(8*Ct2p}v5gV^A-4on2
zq!|N4IL}KtBsNC?D?ibuq<mA}B@^x7PfrLVq8JmCTH*XLSYE_jY$L5nI!liOjUw6E
za_OP~aB9Sg;hXj{fy9R)7YUv;CsmxGaygIFs_`*{L$=TQ5=ojjNyxY1wr_khFt=OK
zA(42=yUCuN-}kn$I=@A4H05zHONIB31!&izf}|{rgtAcOn&xSCB-MJ`+gj}iI%pl5
z%67vL@+O)X<g}K+e=zF`Z0WM8;<Wrc9M%`+*_0+R228XkOukC|NEGTp`#{rgTt2C3
z0IN;|Ni~7i$&>NeN7>81H3F;5S=VylhBueTX`a{F-Rb2!E2ot~k8^BGE(T8_v*N@g
zb;jKwKDAFQgDE(s_Az?rQ1>!9D#Fx$g)Lp_V5Y{2_G!BB_M?ttXX-os`=BW;i53q;
zau?~!nkNW8!6T3hFa=3$_@6O$qdYmCs}2lpQwUlNy#yG&=NSqX<BUKZO)f_X;l>5#
z7Sl&TBWdC|Pw&ogZwVR)lY{sU<-7BFNSPn>#iECHQZjz)Fv-lc+7JpdaoLpF{cvZv
z5<65wg<THPFtBEbs(&2~Y&Ld4r*H%lm-xyVy$2=H$cxcPq_=tUw~MZ6lWv_bJVDOu
zj?N=O#YU1q52nnRQ)V5Sgvm|GGEtGzh%YfO80f{Ku0V_a8cv{#B&nLiDOb%h_U31d
zG%^4(x`Ti|%I>cbPev^J8Z)^QrE*kG652*JCdhR;g4-~o?R+BxyHV+Y0gm59q=hVa
z1hbPYVjWlVG<48$Q6Jz5MmSK;u0AAHEzmCn1cnz234uHMUvh9;80K;4h{DdclKLp~
zrZ#htBz0An&6c~u+VT-OfpF*w{HdKB2cCpKn^E{sf+IL_KaizM=Sb?<G}u5<8X!fl
zXo=M{vjA;6`4}+FK0x?A3*HNgS(xE_hXjxT_3lmAefh+E|NMU)KpDiEmbFK-e;Dbw
z%B6n}mZUvGc;E+?oPKP4F4<<br=s>^jxp%^Bc@rIq}45`Yd9cY+G%>}evg(s;Ob>v
z_H>8mL-b8d!STs$t_+jpV4y|f1^Cg7u-Mq0Pwwm0bAq!g+fEj+8`CxT7UHn+K)fRx
zj<tOQzO*th`QRy>K~%(19nsF``=x`PsmsP+hq8t?5;X{+3p4Rh?$}|EV(Er=fn)HJ
zh<4vkkAvtcOe9FvV#~=@>p~$wRYUp4F4}Nl;h?zLmmv%>jhnpq_)~X_N3t*T1K(i7
zJ4RMR_i8nY)Mtt)0EX7dftTc58I+X6M7VK*7gJ|()%>ZP*FD<{r;JfPlyXOS?7Mrl
z+yb+yI5f(YsD<P}>n(Bot%Cv#VEY|XV9RpV0E>=%|Bb9=AYG`^CaIIVF`{>kt~_<q
z^dow1FJGU!*H<^o)q@uFJgINToOoF~^atLQpfSf_uDL%8vCWM!+cboD$5~a>pE>g4
zR^a;*mts0*4?6A=lLZ9^M+cBJ+&QX;Ttv>P<T;#1nE6@huSnmetE$oZN|}_d_bg$m
zGfL{R;S+Y3Jl{MPW(wxdMa##Z8JSw)KMR4<b+t3Gp1g8Y-fM-qGPOw0F+Nysn~=)l
zG%0FdIe5=tXX~fyruLnaR{pNLZnsdpmdW<df8e5Bh0w#nsI``coYGwjMJ(o+pt{Lw
za>KG^B~x4SP3BlHX@E0(=$B}mM`9x%`DA=*fwC^c5r!{?q<8)=Sf1@U1nM?TR;2g$
zgKj#)k9y9WkQit1Zj??i;<HP7ax(RSM{}XXnh1Y5vyK&!ql|aKq!1lnEq@quF5&Kt
zL@|aN!nCe^!ckHb`y3{nn8iLh%BffrEURDPNqS?TGaLit`d~vF$F*J9coK;PJBepa
zd8K5*m4+v<PAh>P<P~f?@n4~ncd1DzumS=`5sAXaN-?mV%#b-$+o6Dx#ZCPurHOmS
zD7rlf>(_&quuIZ%V;-KiyKvH;v&pe1c_tEHT_H43Q$sT3pY^;JmK6dn&$7<f+!81a
zRI~8blswIovM!D|jp1?lCBFljl04F;?K7a{!cQ`#_u~MFmgo+*LRehiZJOkDmHeSf
zbaUisf6x{oR3O;Nhv0q~b_Y<T&O6m%J%ko`RX5cKSa00gR7XAHOZ(<OBeZ{M0omZ#
zKC!(x>FNegg|bPq>flt^%?I>mAl&GP>+FD6)&$T>BQ6^h`)9(8+v+1WRh(r-bISm)
zqlU|zZ%NL(^GX;OHa7-|Zc`mTX{w~C9jSwZo=Iqs^56db^1uJDFR%ah@_+m<J5O3x
zsU<!h`2f>s9kotiMT1g{CNEg<3sa2>+!<}i_TF`o7pb{}{Zib(as;<P*!6hyyzQ*~
zT0izOO}zKc<Fs<_Vn>x*nIxvn?bt@JAEq@(FbZPxI7l~Q)czf$8&1(-={hH1<6<I?
zvekguk%G0`_7abyjVG*&II(N`u-Bj@PDw}TShqVLzk;^RtaaqsGL54LmViV0DFL01
zcI-?495HC;a9dHYu2*SNQP@~YIr94%N9!w%QxL8M?*O?4_*c(UWHDY5zk&p7rm3>X
zeqbX?%WvGgdO;XPn6ESZLj2^k84zMyawpq}lZ*~^C*FKX3gBtUpDiIwi2Qttn^X*(
z6?Yav*~IaNeef1%j#F963lSZ3hDl`FmYUpP5{4-)=fJRL_!Ar64?HcokesO%*+))R
zfO!JfDkMMz+<d}}2)JKDDi%r3Y%gl(@ZZJUjPN(ez=YpI|JzL`?8f5~#OmuiO3ZFe
zM!~M7VP&S!%ojZh$=;razx6xWA;dTM3D$B%fgWk??8M8YjxDQxUJtxt0&S20i~Nt&
zjbi%H6-+qII3p4Ng}&lI1r~8*xP<Ao+xMGhNnKjup1qMhIn8Y=$1H0-N@?mCaT9)-
zuv8}<_PmbLaVNn){N_e*Lc~z)Zd0Gl$c#R53PGJRMH%rXu)^j(3a`qQkt-WCwGiSt
zs$C6sO7YC*<TR%U-vYPE&ccXuXNKXxT#h34vfSO$c-8jxtAmYyw@8yDGym?`UgqvK
z`r5u;yf2I^%PdB$Z^`Av8O?LrP|Mb|b1R&6NnejzwD|H)j{}K8U$=&X@b%-ru>2tD
z!0asEI&A`*jfq>lqE^rxH&BTu`S9?M?y}ham$R&>?;Bm%kO$bIV2#o(b0~^@T!$d@
zvP!e6`FPohm7>TEiEz-&Jgeg}snRq~t2`~LrV11*WzrPYCstp&NSy(b{k}H_9O6%$
z*?k+51DNTf=>skL{h$p8;z>nkywr*3ps#XlLt7DZJ%YbvXO328R_WF{W(a(!hkoE)
z(0z9(sX(}IbtmI848ah~XE{{#H^k8c7XzZ$5gUWGC^w;mBrfu#bfW8y%#Y$Qz2UQ&
zaG)(?Hf}Totp~=<dK}Dm*v-n^z~tY_lDVNTF_AfdThCI(O?pdg2{E0I-Y%o7=FvxY
zj*mevI>)6H;syz1RdDR_-~46%vV?bBGYpQwf_FsT;VN&PwFV1moMlxR*X7+^tk4UC
z*cJVH^^<KVJs>;4YJse`%)Z@JgHk02ksKt7fLr`VB-zenfaR4LOijlDF+t%;D03RL
zESSkzAM9)zn^#7Wmb2!#=3I06B8=D3(T{9LQ)qF;>?a~b+`!o^&C<y);yOgsOH%?4
z*c*Xs<KwU-2lDV-e1=D`k|wUpH2-*d^cK2EY11@6|K>$}AWmS0IU=JTb49|Ns8KXU
zS|*RG<RiU3SXfTuPnVQjL9Q+CbEea$rXM;X6WCU16{lH!cLV6w=J3uy5S?98kPpU_
zgcqEgVop?bQ4Oj)oOT_CA~X$E%7P1uUA_3<(qNIOJV@Kuj8$N1$>ogf^a#iJ^&U++
zEnkmLHgm3wJl~H6p}Y%RGU)I{BtF|onh-1je-5agfO822t-yRs`e+gY)j<=uM=4Q{
z!@9zt8v4>Hy+QBq2ECcOO7ip*=`fqKh6lVfQhgI!OFF!kSH?5rR^H7eF3%z3xvWgH
zCca-><6Vz?gbMQt<$MxH#i+Fz5{gaJrbzO;zg?I}__CyB(aStc+d@G?VI#WzMsw`J
zOar^ji|);n(g>X^X_>`oes{%mJN@7l2B(JTwf+6QErfsm->%hvZT|8v&wu@|p+;4j
z6xops#+^^)HLA7+fB7R}PLH{Y@_ldvTGP{Dw<-qnd+%FqQN}lZvM%5&e=^x*TjqIp
zFpZOGg#ZE4^4N4xg+Sv3P+Esr1gvJt5wV1kX{8WbEK92_sqZeQZ<!rADo*&=Q{)}$
z3<RX@Z!f1GCYgxaKdDO^7?}a0sNMMyrNFIQ2uVsu(jHx2AAbXkChB3`y&8{i$oo{8
zvPCv2YT`+vEjD;ozGpoWNciPx$%T#43C280L_ptVc{WY@!gSQ6s_Q!bykO>S`vbD1
zK<M~dp_t*XAcih9$I+dcjpOEKC-51NluwTbK{o=gqe|)`{>0esrM%q1`TEvByO9u~
zM#4(*KOohj-<LW(5Y?M9&Eory=-bb#ecT%RxHBnXo9|``mLmb?y(=XG$=2y{aD2`Y
zDsv*6j6$)xXE3H^b)LnEZ#W_+ggXts@xyhJRsJFI$A*?~iHb)wIg%qMKwEYb79<Y+
zx?}Bl3XWrUCi1(PR~jNmT!J+jE?51Ac3>#5uj;bO<MQt8;s%SKeFg#}Qyjh>*%>IY
zFrN35^@zYCh+pe_6rIyFF0=T45xJYE*$?tWQVk&rslYd;{B&$=oloycEiQGlHqbaE
z<KgH6M?H$R%A$%MhhFEY<lI6X)5)2%4}m*bk!N*v|G5={{9fDnt&M(fzYLq*FpI=R
zR_IEI*7`mG#B-&Jr^uAtjIm!?)A?#Ki8pTOael$v3F)hLD&o+!fVq8}U7pK02|DWx
znYO2go)AJJAd19<gP_2X{Eal*EI#24b5VWlg9Yu0wZ9Rlcv8<GdUnt(1M(GGSsI-m
z(q6(GZ|q$J^m_Ird;vx4JQj(o#UOMZq7i5#+7YB;@sfwIds>o|MgEy3)NOcKs3de*
zWrz4*ndMFO@c^o~$9DO7Xx_rac)N9MTcTr{3ryWvR`s%IxRHVU4j#0j2}mM11OJc5
z>6i5w${Et8s_IWT%{E1nySKL=(OY}Dx~CboR+z?w+%=X3Wvv&hR^mzfxIrDtBh<kd
zduBi~TUnY0aCw`!b(bLjH7=UC&UTeytZdQxXUjAz>oPPi;;o;p%T!4fe|jaqg}v?a
zWr#O#^*~KlANk1kq&l$DHR=$FCW{6b@i1c}P7!JPcE+gBJs=!+d>MB_(QrYsiEY)-
zW2B1@?c7Pjh?sUVShOUH*nD~%m}PO}tYli}Rh|3o`~C6qji0aUrp&xA|6dZjdi;^J
z^+k%LNn?K%KE2N4%Rj6*r^3A6xJ;2Hg@2hpRx0c+!963NJ)>3O8MNviErVt_`sR1R
zZT80!v?d7(9Fa{LCw2X2>(&H~tt?_9O?W$@MK1Qz^|u4{@?yI0manFnorv9@J5B?w
z1K)KdR(7;pfvJ;bUpnqsD0DNkHZssfWw%MyH{#T|nMl_uBm%*qyQ)9YamtR~6DFgB
zxo{Qr7$waF0T6URh#p#cGh4i^(d~2TISzsA%orQ`k1(93KSJnF>&!Cp%>Ww|@IXK@
z<zw99rj!&}k{{uj{}CoWQXY$X>#lMv+dVzlb|L5OldK{5DKmb6NeN`@(l^{X*ODdM
ztkYXP5IYrnV|Ya6Wjc$a;4n6Kr1?d|a3YR>(L5A$^%c(Cn_woj1M0R&A<j)p9tyfd
z53as0&D`{`IaJl#p^AuBxKu)t1GY4fXGj;E-;1mS=;%`kfae(ti8@VK;gIqfM*Vc>
z($}qtC&MX1uL^~!=1sm*mK1ed=h;nT6)R;3D1ET1Lc4DyEi1CK{3r3T4Z*-k7c?9a
zy%~^l8k&|NNIOe}Ug^A+077w1Y>4vaSXVE%AnX$x7K|GV*+=Q{w*8<Z(^`0q>Qdx?
zw==|<&e0NWXGiG`HOw`CTK=-FlKZpyaKKlUeGXa$NZna}ioF0yD+X)%v(Q;!8Bj`X
zK7iYTB$+sS2yj!Q-CH$fS{02Q64`dbx6RZo|6O3N!74%)ITT?$vau6~ip*iP@7ZkA
zh#l>E3@`F2$v4=Zxfg4VK|w=Fh8s6hrCDlkWEZ|M-cdpgHz^LTa`+0w?80-7Z(3!W
zfWQe~3-^Oe5D>5dH52h5wl;cECh;v~zIRDd98L$x`{y}eot%LULhoC*68sV9%a8n6
zqIJZ@Ijbl*GY7LO^)YYNMqZ4%@Z#b0v}q39N$VvMCO321K1&AFpC8180m~DpsQ6i}
z0HfMSr~;a9ZDd*n3X>vhiuec_xgl{dy7CwxFn^Mz*PcysHj(G*>n16*$cr*{cHnOR
zn8XWLMW4|3)=&Yju$_N8&6mx8!x9b(&(GWLZ@5m3%_ihYfz&Qf$~rFYmKI$@G`>0i
z+K}0<am`t5;~v7Rk-c;dUp=niNE*8{=NyrU_I|a_6y0cGFT~+Fwe(aYBFOUTe4;T8
z<x>h)=A}oPYa2GIDSFI-svJ>1nU}cX9%Xtt4>G_T(hDz-AF&g72VlF&|IN`!W~}l$
zv5|n6)1i5O6Z%PvQU-=~SE49-9GHS4TXn=CL<1#DqA~KR9->V(MVck`$7>#}XjAK@
zIotCV)%Qph10wFXnZF{Q3B6{3rW!L4KNGD~bFO>EGXNK_e00$^q>6}jOQ6)j?}a@8
z8o%lt3|?pd5SG9wubq#P1|ht_h0w6p+L4OrkTH1s<Z#3&#zd-PAzv5JR#VRyha!7!
z={ch>dK85x$_Y&H1sz-vnuj3wJPX>o<c*q#3;7<{o4SN8EmjUY5qOt#I0Va-Rhbn>
zOH$9XJrexQGdy`+WKCJuNtM(|6UWWQv9jDynODgTIi)4&_UzF^%d2C%`;F_@MN{6C
zd4(sNcC$=k<iIQ;M&yXO*;wFr-yc|PK<Wkt2wEyBa1|@U_8?3cAb@cKYZ$;!B+LPo
z?2`$2${7zfv+|}clfrLit*}>_vETanG_8EGCKr44S@RngsnVi2z6j2hUAl8WwA<IH
zi>mfH8tyebg6aAiP1+QR58k@haN2PjSIEn(DMBc6I~>qW@}?={y8L`j;#Mc)fLzd#
zYlf+w$rmed5@tzWR7dQjolcS2VLb0kIlXb3kn{kjq?y3toDk-Y+b63k{dL?dG1Dxm
zvMRIC%v=Bb(!QOe=l0Djb~%ruq>X3}5#g_Fjv;?-TUIyC(k#!@^mvT5Bg7X`$d;%H
z{n>wB6eY*Q2sti*WOQdbpdc{8@D0dOZ{JUz7L_AIa3u2z$C|ie@w4K%p0z9MzVk>J
z%t*kW;U{}0BRfqSyEDDLk)T7U(0SZ}V*hdx&;JL|2go>}n&nd&{9y37-;fG`l>yKf
zA$}kX1Df<4dm}VgL8X64rby^QJYqK9Vv?4bJ>T{umk<H<joC-TTvw{X)oNWBDO-d7
zF^L-9CB8vdTHT6AQiDhT^=D0ZL6+=nuvyGQv=c$AsdFeYL^7d|#~Rl18vr{=rRRP=
zP6CnFf;l6ksi57>jAm0I;PFZME5o+<M3BxwCFa2F+Tr+0R(XyR-*T50-RC#m4<`$V
zGSDw}Vg!=x1e7{Xvg(F~U|J~n5U8RA31R2CC7QoW`Xjh5NrDFRdVDBaM@KpkOPsFb
zy#7Pk64Vp67rD=Q1<6YVVl*%k?FV*Q2Y!oIB=pi5K+aA*dNMNFCgVaEr@2Vj0Ff&5
z^HgTE4si%3q$x!gEeNfkh=d9MYwH5?1X4bi;B5#PItTzMdobrxlu=Q<8Fz{SWRFhR
zvZ|XT|Ga*yNAKPvt4MgTeMMNmCSLIt25^L2OcjXmPBPK7R^7wUs9BojRa4zf8N8W}
zxjo_{=B(}~pIHG1jR(QyUkkm?U^A-i-MVrWuFVW*M(q<tA_+_k^SO{WOF9M?R9>b{
zo_^kf+JdvU{G$w%&mAPhi-AMfoi!liu`O(<%PdmCoh9?iio#fPyM}UFr*%?gpF)#!
zBj>(0i>i^jQUcvY{UNmP0zC<oMh6+V&?ir;`~zkP!q2yxN)ulQ@lZ7GaGJV^s}O3W
zj%imV!ea~p9;beBE~K?{ipd?4obCQ}TY>W=eKYDxSyL!0^sMzZ^f8I62+9bfXZ?la
zLGz>%MoS=YT%nb}8~S8*Syokf_b$DSptz%@@w3ykrgEcGsU6lzMuaQ`M-+LMraqpp
zIg>F#-T2WWEmFVq{$S?SR@~aPxOZsDko7F32^5F~Pg0ljap)}Z3bp|vmk6&1njl4y
zrE&7{J9mYE9gP^f5?M~;4mOUXW?}pk<}J-K=rRVt%(P1CxVcSW=I~^JekUBtBsgWB
z0}mTJwnWC){IOtRGe`&9e-nsItFmdTKc?rhF(9;t{4J$nsd{+cklN{x<f@PC$XwEy
zqZKmW0<Szt)2yyOzT4(A#dn;$bt(`i17E+kGEUK+EW5AuW(HS{oKb#ooXqDXP{sF?
zL7|%V$v9#`(b%84WZ~l&G*oQ?fD4PNFON*rjm(bOHcZE+ApQ(ODU)ji08fBgQm+1?
zXi_it8!3knxqL_xG$UkY@6FVuhGPks-w*vDX(==^=#g2oMN00oYoE(K73{p@4}p+&
zV3Ea1QN-29v+h@Yv-Y)r?xJ6>FT*(bA;HBYoUtmRfk1}BG&a#2RnSD&z*<m)K3SlU
zsjD)Lo4Zf<cWBS;3hHt#;WTCyk+P&NO3$HyrnM_2KGwIK+&p-;PfU6hz-WiRAXH^~
z`}R(_dG^3=`%(tU7KQw3W}p$0MbshU(8$0PO>$jGh#l*u4e3DJl@ci!qP|lvovg^*
zRX}pU6k(*H4szq3wk%A_GTv+cZH(aHXf;ocZjkotVPb$}f|w39k`dCCaFv(-S&XTu
zPA9H1k57>jB_hkq(s!Di#?hF{+c~H^l;&BLr}vuzykmXuV^VA7u1@5D)%F*4NG*R!
zEZQ)p;%ipda%;jzfVEq1u+%hlx32(1p`4GSv<iz$WI(UhzbPW{@u{by-(`ujh99pp
zaVXTi=d>^;w-Xr(*F~IUdFJc<{SWUbAN$SGpCV4Gyh{AZjlVbzx3xsX`Z8&p<g5PS
zA4~mjm_2SG)sLp@+nd)NH&KcM$FjAgXrxm-l0y@6Pj^uBWYP~QT3OzrH5vyt%~+NI
zRt#E~qV=ap+CzrQUbK4?lLlbtJmbWwZK$7RaB|M!dHFgQ)n(hxYF7k=a}6@8Pla?u
zMrlWvr2`wnxw=humbiqzVt9b)mNRr$OnJ<7pm_MW7d9sxNE_lMHQ@2)G61qk$%bpl
zr#5fmJgx7CCvU3R56mzOt)@rkWDE?US~HKEx{5zf*=nUUaa?ou?SssWn00QH(j*c)
zC26lKj`LKGuCPa)4q^9dO{S5|1FLO7OvwIaWisMXNxGR<jSf-+ySj}VSWn&CK+sL%
zI4SP;Y`Xm`?9y8i&pI=WPc(awoNM2V>>Nk-2Ko3ZoTu-ZYZ(4H1<7TMO4RR2sDkK_
z<n_xL(8`9#Y}l4=RSP5kFWW~TxaPr;n9zK-V<T&r6foM%)M(_y(k8698fXo(rOu}P
z-_%)Ibct%vdNt&?K=`SuDlhWtj{s~{RToX=18l1~-GDt@Ue!gK=Kf(#6q#-O2Dv{g
zJOIBl+EY`BZ6-}xD;zcIRFobMtwx6kuE9AH&TJ4V8xS7Il5I{d>og+GQ##>oUIm>m
z)F9BN#5b~*KwusXiLq$d>d7u|t4^w0M2(F=)!WrUlyyjVoWuzmvOv;R2Xu}!7x*gT
zqPVjZnmV_R0SAgtU=GsjxYt8BQ5w)1{djy&jxw{|dUhm`#@fi3(KTH(=h{^UJhoqK
zp2m(^^d9Ar4+!0dguLJ%oVMvCSS?+p2!_Q#`mQEp;lEC0A5T~-|A1>@VsQ89J51>d
zl^uL^*-@v6r!5#1^E#_e5dom5JGIqoNoUJSP~<hzq!!X0n6eJ{dNPbe?cCr2VLlkE
z3v7I#q)5`lSz|~3j0(L_4haj&nO?*{RzJqG<ki<b=0;vsP2S{|xiP(TZ{65Nm-+4M
z%a5)6-@I8=mW78FJB#aJO{LA9A!`Xw6>pS}5JUv@K*edp<miFM9+`;1@k|r^)8l{*
zrx~FMbE+<HV_7ly&jaCUXX__<n%#nAzl(TyjL{Rl$G$7tm2`9>eN0I^*E8GINR94r
zr%^8vjG+l2@`flnXaJ%C{qn`kk~LKx?@o&#A>d4-96fs4nm?kA>@;x6fyOyK0OuC-
zA<w7D&N-ZW8A3D@Pm#1%-eyOdSkFP7mwX%u)E#;;z?24_4Bk3fiHdkHMO7&6DC?$4
zl8>)?{Mn-Y(wtdp3<+usgMC1t$Ffn~fc~Pw_fU?@0E2a6hLfm0tEIaNIMN4nAW|{u
zgo9U#V9F0qwjDTihHJ*3j%$}dl~7epoMxXVOtuEt_KlxWVFYYVN9HCVZ~t+4F=I(+
z%SBk|?Uvwq8YgM?3DY*PE-d$HuQ^4>_5_yEv<j@IwplK406-Lgzs2X#>2W~1qpJ67
z4CiU}{%mF0uyp4-C(u~QlC;izjh+v9MXScjyk;)zG^%yjrS_O{-ZBBcvn*5FqT-lq
zi)yk5mXJ2|pyl1I@Ew}po<rkXMO>#<n%-Svhv_i;o&p$?jfWi#Z277kBK`>B8~Pi%
zL`2u6dzGO?Lxsi4RD+F?3K`ZxAJPVUPu%Y?Zk^_Aaz_1@<5K^K(jsKzph6yLQPF|U
z$1<PuYv#6{_`(F!NFS<emaB<5j&fUURnfJGo}UCIwG$4&Id6URqD9j$JQifxq5t;C
z^Wvd1F>kW+6G@v}S=Nrb6m}1waHQ97a(8C+FR3RIHgTp&oZf()&Fjn@t1ta)@Ev4T
zp4`u1`Y73Lk_P1inT7+o4l=>Xf;-Y#0qjQ{$C+uZ$F~9DC3|uy+>YgC=lAB#5n`K;
zkPym<CY&ooe|PdkvLm8dSZ617+OSvBfJs0UM`_*Je(JzV@wh~k+2QQb04C;;?hki%
zmB~M$wj~c%naSu-lE4^o8*vM2F=PNlu9P^Pa0)Lw+G##4KzALOuLsF6Wm?5|FWqp)
z5k$bXXF>prN>ms;j4DVeQFTbxd}+=$XdT&;hOW&zPEN?jRE4t_eA~M8_;?}$H+%<~
zsZl*}oJi)}C=@yJCePyg8xi4b=D^TSjzO{r;VyYMt!UrK<_Tr&Wmy(+@$nqvbr!pQ
z4mfvBN&1pg7^zroA-l>t&?19rdbR$wAcoU^0n=h5q(bouvo`E<!oP^w8uV0H%jyP8
zs4U6jw7kFY2@@hO?c103t(&6D_3cYLZ1;jM;uog8LX29(0frWm=+pQf#=Q~eb6fKQ
zXN2AdxG4J6^_@wijUTS#tf|7&sCvcyG7#HghN;I-hFxjpr(oH<g+OIhkz{Gw9Edxv
zKLRFyjJZ%#w>umB-+V6TkU}=Pp{qv1;O%BXVEf_0Od((*NO~1W7}bO9(xKHlmqC`M
zvHkw5x^PTm_hcSPjDfWo2vdR#)}tchfDtb`o0TsoKZ2roa(kj40%sE-M?9zH-%)Ah
z>zQ*22PJV;BwA`mz+b1?1xGcFjJ&X$abfiw*AHThlxfu(zCMHyS!E<k2fe=K(O>#!
z_<t%JM1vyWhNSib7WW<{OQ0n&kf+`D3XLn*Z+Ca*foIC_MUz{$Q7nOqh(-k@{?fQ6
zG$B-y%6vuR@V~RB%CyOoy|H%NRI-+Y_JxR{GJj55ZYUGA1a;xK$Z3IYne*#cGDF3<
zNcwg3hm!tkZV1lybS_xqGn5k~UB8{@Eb1g{ZUL)rp<OSTW%P1=y?EH79aA(-lw~I(
z5fb2G3jr>-&Fbe0-{V@A3QFjcb}7SKFbS(Dkx{<K!_F4cc4haJKtz2goCLScP+n=I
zu1%>UD;tWjKjq%74-?1%1*IWbN5l3dGY|8U6sk~04lNO0S(pXDs-}Vidpj^PsWwqd
zQfgPI_R}#qbk|W569CsCFjHD<526rp5ez4N!w20-YgM-O6`Hte;yTny4~iDYO_4Y0
zhbcvbWw0zkzyvW~u_72J*$XaDsH)tQ_~K5CQ#5lmsnnN`KCdnoSrelKeF9_PRFNt$
za!O@y`j2dy&yhw^x(_}YeW_Er9Y}H|nR7Sx617QPfh%eyXky4T=jr1>wAxngjWuLK
zNp6yr<tI%2Y`Ju8t8zFk3ey6Ix&gW>4%wACsGL+l5+<Pb6CMD-6%3W$c@bB6dUt;R
zZhh_T)&H|QNZ@*d8tGBLe->ujB}JMfX?1s3<DEL%yJG-s;ezs9gbM<(!62rn!y?Sn
znMqNYwYZ6B(6%YAi#kuTolxuR<*t9c$?Gih<KqU`=u_U~rG5KtN2QseK;98dU1OQ)
z;Y7oN*skbjQSxRIS!*NEl4)Ro!G<-ToPf5V0343fs-l@T%ZHXePNc}EqB2ZwqY@pJ
z@wkAchGZnrCjMj8b4C#?N?w1Nzl0#QA}^9UyI(dwG+%a9wW~dj!|GHm{Bvl@rb$|?
zoW|b&5buPvH${MHRve`hI#&=Bzo!@tIaW|A*#k#tARS8bx+(5A;C^>B_N*98n1V%!
zv)J9NT9xXi*pc|^!^1x=?*@MXrC0!UZ1T9t%A2I*56IWN>mi|b4UO3Dlj&vHE<QaD
zSd>3=NluvR7DK1W>ojYuOzgHq1+o?}6T-vTc~R1$VCfh`L3tdy?+=}b`55@!<<>%~
z#C4$84K&^H?WahaymD%2HUhbRciW_t(<{8A?Fa1!IGUJrbOCfjA(u-Yq|{>U60;2I
zVmO@*?RXfjA`7eQh>&_)(YZ;XerrrPZ}O&0(&7)*t1EEwP#zk{7&M(G!x<_E3QC3O
zbgH>6;``!bz&SEAZ@Kf;DsQUAzO_&{&BTh3QlV!m%|v)brgb0)={J#|)+Nh*2dirZ
zrDLdoE2=pC1cTdExpbtNh9?a^3lQ(%(P=dX$vsKllto_OodXBYN*bAaYTtZbtifuS
zn6v_Lu|fmPLQo`(3$o!z`Pa*jBi@KGO}MNP?f~E_oMBc-78aFl$YxMudRWDJt|1^p
zcShG!e1Mhvsk@DE0Q><IG?3>SDuL-F(m23vn&Nd{CH27!{UMTI&UOj81fIG&`#ki`
zcC3*=ANqsZ)}7ocnf4hTQ4_N(2rVLy91k4zyrx@i@acD_*MuZPcV-4AW#Chj!Xy62
zvMo4)R4{8tY_F)BtaL>io#{g-`}VETjH}H9=FNDvwK7&hrTUWOg1wGRw2=eN#{HB@
zT374)S#ifm&D*&lL<&Gj67LO)0B6`qz!CQ+`@!;iP@jA47}gS6p{s!4Mweo<G85~*
zGi1hD49p((&*YDRtD_T=BBu{%jv<FXhJ8DzMGwq}xXTCwz*NZ#qo{-^O;x9;2vbK*
z0^*_*#han>vm7R%9z^PS&_Xanl@b>a#@+nLP13|k<;<(@StFBfL~HuP_~PxPkP&KU
zWe485&%_;smdLl6_BG9Cj~nwT-Nh)(Sib*5i=g`UvMuT&vFYPs9KxmOO%ts5ta07Z
z?w@>ni4iEy^lf%0@TB?c&2fo4S353W4?964iKL=rC`?N1e7QU>6Fb9lY^<vQof*KA
zsWF^^9Xn8yhlK?z9H%@mtk^_f2x1$zmDR2!_GW1(04u&LVi?hE4>7b__Lrd^!MOXu
z^V;dB?sltaMyNZp?oAK<X*?i};>Aul%<KBT!GXO}@OXIOXA5XST(BdTlWc{fs=lnV
ztZD8}8E;isJc1~eFyJWLawt%M6>=3^b>z3>e49g6hB`~~`r~;u8?f@Zd%C{0FVQb=
zU3c*wQl?aFuL!s`IDy2DGdTFL63!Ja6HeIDSq<mXvw=O}MR5<=9IEhBFfqWaq^IQ+
z-4yVc9W_$l4Oz$0B<<>2M!iM5&N<CFPs08b9Q!sH(ww$C^k#BF)*98xx*q54klg4L
zst5sy?*bYjVIuj>bt(;kUU`+L$>(hkPHQbOYa7)7O%wQN&X5_rGI-nW3$Xvey+k27
z=<~CR5uU_WYl>WjUB&=*o|M%j2cp3bgsstQDGj4IG)*!oA9va!QX!?qamY3{TJt11
z%i%b1md9CncN6LMLGlA?kSYK^K*7J(ob8avC<O?#AJA!G`8x>8n8y!2Yf}{EX9BaE
zO@KYr$|Iuo=LajM1wD1r-?9a){u1yhhU=xMwMuo+Kv01hLBHn7;a432@<p6y&HWNR
zA&}wdAXrX1l5RFEiznKUj1N(+Y}>->|FwiN4D{SQ(YzF;$Q^&?j)*G#Kr_mCJS=As
zq*o-ZXX!<>{Y5|UrGG|T0rS7*+`^*7oMxeexK83Ey<h(8CZUjD-rC{08>8;^wZD3U
zwTxS0Nv^X?vWC#!gu6*Hhi{4zi<&x`HJ#%X$ww5osPL06$D}Ouo<*|P1bk$}T#?>q
z3tm4ZSbhsai%JS#RRjrTB>*;IgDKasQ8mapiO`4loMGLO>ri}3iZqRzkI%eT<ljU8
z*q>*Z-jY{E^_>+{(22;vBgIWoW}h)~wpN=z$d?&4R_IQOCw46VhDHvCTxNM@3`xkB
z#|{kQ8jNG(`wD&II?IdC=y0w@s&>0$+RKEv$XTL4<sx&g*2ohpYn$#mj&HnijR=8o
z{!u&41O;{pw#<RP#Y`0fu8A7`faSDoEzOc;6Qlnv4A5(`1PTl*_8lf&I1#+;SS)Mh
zETIJhe<Y`-$uppYFbl+CK)QWa;~;hw^sY0p0~9eK((&Lw<@b++O%NpjzTCinkDIb;
z;?$eAmg+v>f)qDp9mi#Q=z`=hg0`-Z<y9Pzb#q~|&5IN(Zku}>E)#m|5=~L~iZ$LP
zR?{`>%T#HVH@;%cimm5bmu+69&ho>TvQkmmx=PbzJ0d(E5J)!4^gXANzd72TONz-w
zxwP*ffqfh>Z!!TGHFXfL`_8D9X$vr6tWyPJ1i@!2Oc99-rLTF_d<viBJu^ZIuXAdT
zO!gD`voL`1Dp{m-7BF|W=2h^b*uF4Ok{4N$W$|7R2rv7r$g(C`k*8M6ekF&paiKgd
z_Y|M@gpD??Ql?4c@1M_J`J4SC#~lbt4=c;63boPWfaMEL=Mf_izc~9>5h#PrGFAZK
z=7&SX2z~H4&C4pksk6A&)O6rQn6T*Gt?W1`MSI#z#2|oV!7|&eKf8=83IQE(8QWx9
zUa2KfU;%RFY}A)BG7Vd&TqYtAQP#|%OkH*<?4-%mJ2O@5SDdAJ-6XeQ*f*qT0uA)z
zi#PheJU=HkCezSDRZ30q-0r-wVDuO2X{IE?NeRy7TmW1e=G{aolynq~A?)LTF<4SY
z2B1TgY?`Nam4CdV_loi2^Fd9!ggQthoke*pKjg|juN~1qPu4YLpAJ~aEMKgPL$4rj
zsx&`3iEcG3AY>A;>4_?G^Z}9)4LNcY<}kT5|LLX;VG$>J?#RvU19l#9ZKSy|%wlao
z+-wKsO<hz);k4g&d^9|HbqE9+m~5P2D9uJER@E_Lvpy5s`T96O0PI0G%(Z7T#kXuw
z0+VK<OF@}IqTwq+xCu{wWJDoA&z0knN1*{W>bZ=rn+*gh()MuG0%+FG?f#<~p-0H(
zVs87Br)gZ<hT{R}2mEXRpT^KKm=S#`b6RwM1YijIqS6E*jd3P9_Ge@-IC7jM<$_KN
z+$ZT+>cqZU=zcTvNIjIr#k*ZiVMn?*urG$NAjUNs#Gvl+RmPwm)b$i2rjF(^{h49+
zZ{khVs`?r>h}(HO(F~iz)N#!Br;gOs5iR7XCB&kQk5|QY8sD;unA3v1ST@E|I1YLb
zmeuoJ&V}6#To&cN@~796VKMb#dHxf(ImE&q;ZYAA1h~!FosMh;7~~O+Q07KG9@+L=
zE2}!Sw|)qTX&S@BsyN)M3Ntj|-{ZI(c_4XF2KlD2;?dX&5-hMEID1VUSImO#1GW%V
zvQ~2G64)5&Uth0gy?;~9V}!SPRx84u%5@|`KyGDqZ`YH6=<c(y053)saSe6&pl~id
zw7!N3zA1CJ5zuZVSu@)VQylJ`k>?7MbTs<o8K^^%Btv=LTe4~HFdg=s4DniY#a{BQ
zPJO%V3#U<KA`Kg}G0bGmS!JhR%s``2)TBYTC*v#+Ek+pY=I`hEfc9ssDuMRLmZ8Ld
zAEg6f`nufcM8Q?!k+AJ14Pb5Tnk>!YIy^LNPh{rIv`-j+<q*b{UXBwAmbj*{@HIRk
z>B)B}vj;znKd3L43KwF$ar9kYmro2g-VVTkqk|j(PMqhbfpb#R><6yeOcCEXqJ9y+
zz|~@ZkhyLnSM@lc>jvyoYekA%;Fw2~H&t0T@lA{~tL#syk$DGr(xNb}c0c5>CTR{U
zI0tU?dxt?>TKnq#T-<i&KunBIIb5(tN%;*X4M>Sb=X`sw=ew2BlyO=d;cDAiEJNQA
zL->W!^tsNsLb8B`E-z+j;o|-w$chB|FoAm<c$pa-%*uGKty6b0^s-8w6My&EB~=Yy
z(JOi!jQ#HGE2C;>I;9jBm-z>b(ENIA@rd(adjX@YnyR{Cgu@<fW<%Rt4;BZf_Jre8
zF=Rd=JR9K*)Tix-6~CFNy`#SMc2)^3VLv-`Tm!;vEx0&tT$}G7(U<nkqx^Hw5r-kU
zL)HSI>1EFQ&OG(ER0lc^?{pQ}cbb&vSZUdK=T0O7;u0nteE>N6;V;p@62aA$e->6c
zMJ70B@E+xKQlYciKkVIufDRh_n`ZpXOUz;Y(U+jy@Io_;el{{2x$M*9;82}eIF&hy
zQoHO$u_|?_uW#K`_x#*OZ*%|m6$y`Aoz&AD*#h{HU530VlQtIc64S&u6LL)WR3|3|
zaE6aM{My8NK!pV-d-n$Em%WYg92;`2$5q-{)kTr#@63{Y35>TZQ8nNpam=)RGP|4<
z>xKtbrz8O+%(#U6%ndUx_+-9dtx<L%-iPhNP2U{VK2m=acJh^^@9<R8J+SWufxO!b
z5f0R_XG!MTvy-gT5U)!;+j-@AUc}|C+-rEd3di*>!32w0Nc`ybPOkNYh~+TVLGsJ?
zp<RN8o)Y8@=EAEo<K51rZr+{N`jIAia~i689@&Pi1GvZ(1E}>-P;`#ZGjcjn!DQJG
zPm#%Ul_2g(5fBdJkNI-W$jRt(>bq&9SB+9GpwgtYuSrmdM!eL+eQS@^X?4@U-+Kpw
zH`$Q_0CywL<!i!cEH7a38}mFKhm!G}H^(LuRZ<DNiD+tq1U&>p^)?eK<9PZ~#4>{O
zOUq!BaD1EllMRFv+xjzNaIF!alRg^x3UU>ow4b5BL~K~c?jJ6~a2;8=<2rbU8*)ZY
z#PVd$KyRFDFz7(xCfx}<%XDX%wPid39J6XCbukeRld?@zfX@-GG?wZMF|>|V{zXp@
zPfbyIrMw*S0g+Swt{!;&Y?n^$v1|zLrW+fSd0bR^k$*fnXw$uVr_QHUiV3hBJeQNh
zDT7a@@77gmf_>spt6}B%$Rqs}Vu8|QQm_)RBQ3q;bYuj`$P>|Rw)3Prwrjz^VF28c
z8}5>FjYL`sHq4W{PK)wxzUMnBvitR`eWP;DDG^PGS+ppTrq5&j*Aaj9JYNEx)3Pd)
z!|u#&k9|u^d0*|DY2UE5RlgfNJ0xVeTISY*6Eqzlha~(>CawalsUlB{qWJiSKj?S*
z)t}qxeV~z?lLXa~%mWMrFG+=lQpXxKdT1>s4Ara^&s1$<LUts;!DJSl{6^k1DBhZ<
zO`X@x-5wY3Jm(KZW|YlG9d8;XHEM|v{i4SKB_k<eg0@JAWL6brdE~!-=i_e4m%9`z
zOUM}1UuUHULGsr9Ghi8GKUwtejKz`w2!Y*FR#{p#ds3>dK;YI7S5+OLfW3hv#?$r3
zdHWK1oi@jmHg<>K_~9bW>+<l21NLocS(Ry#_|I_b4b*Yo#QqKZVLhh1j(*c?8j+Ub
z`k<>R4&wTl<;yg4FUc@e`;ZD@s{oS$>lG6?ewwssiu*_I-Zeb6D}nDhaqs}#k`HPY
zD`zn~+IO$A?F{A&93Rh&e|%uOSpETOPcSvZ$-g~K2ujgSQNj5%&jq&RP|*)u-r(Fc
z-*F^0jkzQ64@8wpgC5bR77z*Q%Zu8Rvt%j%IR{U4vM|n~BANw1O;rcw+o&9VF;*vU
z^Ti6lY8AtUGfspt`2#W^aTvt+4hSyX#_}5U6m(zia2*0#R!LD64eZxXTA4dX+OAEv
z>HF#KMT2wvSQg)arJ>)Oz}8j0?{eHiZzON>yzvF;-v35!$d-;||ION^3P#-yA5=^H
zN~RKY_>a9K*e*PY>9m}RgJGF>YzIk8`1Cj+FAOn6GHz*|>ONHOrFBxoO}Xn7?vvp*
ze!ecM+BXYd(MWI6U#-)mN#Y<Qb;EFQ<5Fo6m;QOUx|Achzj2YgTwmma49r)mMEfRb
zfa4H-^P#hZPhJ2Re8R$wRoSFz67PI$_e@^@aFrE#>`TsnZkn*&vC)=_Yu``I1!IB(
zC=pYe$jp@Dzf;8mB#4Jipcs$yq$ut;7<p$g{@TuOZS;HlW$<!rw4S;$QMSd?&(1{2
zBlCcr4C%VwBS`GAs48R^1U^HLkJWcWHCL7wY2&LY?X(*=ez+{+_;^gk!l+vpsEhDm
zh)2m<U#3XwB;N@k@BiT8afQP^PN%4<F$h4c>v3@PTMeKOYI_hOpbzd+Dnp`~d0M4)
z@riTjTPg59LxGg#34>*A^;P553~}|GULZ*kpd3jIkxC_mlu=97j%@`Z0c4?W(9u%R
zfIz4@LWG@=pg||rh%6}yqU}UTn{2rTZboS8in%&BQz8ZwHGcxr1V}S)nL108vdq%z
zZbiCxCX0KT{EnBzhCT>R-ARf*t!fWW=Ya`IeJ(ry4M{d;kd$IZGJf7t3xfutd;&9M
ztk`nn1dF{}M@wM!v_#Om&d^naCV*Ova9LC;GIV$BML~gT+BLKCZbl8?vV`z?)qntx
zEh$R^NphCwahZMIZeFQM>^Y*qH=<@7eKz7v_wrFa1pu<Q^VuJ!*jf_nll9~|;{gVQ
zN79kwHruk-WHSqJ&C-LWzt06VXk1(w+vOL2GI_hSTye*83;@)@9lOT?QfPk8j%PAl
z{G>-Pu})nN2ROm83P8pdd&=FQE0WcDR;A_Lg=2W+WADqGmNHb`7)VJA8+s&$b}pYw
zz7S~>2n_$`DHQ}Czi8^}02|dD#TAbacRy4&1kGdFD{XxbMUlltd{=9^8z)E3bbl~F
zeAXcaFz;500PKkkEO_R3kOGm-DojFQ<{f6VfZ^^Jcz;lvK9F0)RoxWz=K<Ag8)SEq
zar=W}__xQAMQ}EJaBw=p_iH`ju^`EXr-`#d(6CXCM}-JYiAgnljIp0iAoIwSOQ-!#
zvquCm5!!j8aN&T4%*0?sQGy+(SF9;wVirx&AY-UKbK$^24n5Hanr8E|OhGU3P?qks
zJjW7@iJk(t8#=~{BCeCF-YG7QDubjblDY~Ed;2ig#znHcu6D|c4_v_BF8{s#F?7)q
zjXIybC?^%uU{!f=HX5*SUWoD}`ok`TwEMmE%r$Tp(cnk|K?XS6C$c3C!45@!P!Imv
zKK~Z|{?c`?n+Q`@6-85}KJM@i<%6s$(=uNHORI`7Ai<DTOD3KBP?vinGrMeW{d65y
zzJSBWuNzOZaMv~jXlkAKS;>Ahr^Mg7SL)kCT*P0(KIU$IJNAKZAJ=iQ601@yz}2+e
z`02DsGT)MEjpI2Iz8hD`<D|JmJ0pwhqA6DD8><x*Fl~(MGAoMU?EVcZ0C8PsbrH0x
zI#%LXu95@E;NZOk5#TJYn>bB&tSC)jU8$~bT`8$oJN@Gzmks8J+t}6JLFN-Uc7^}3
zY#9F4Yv7P7n>=lry;Xm>){-iYle+c+u+^Fm9#mDF)>Y|W=f5O-{-6@N4CL~C3G=pk
zk(mnWl+lnC+TtMPotaR4?sToxJT17{EIGdtw*<~YG)HEYY3651E=<D7?MYN{Fpi+#
ziM2?@JWTuzG&1B&WzE<<RE%h)d`^65LumyOZInj=uz`wKWRKx(VjatEt!`4H<W?P!
zRB=)#d3j46u-4hSbkj}Xun<Q8CjiwYRfLy{1*gP^2YKD*!KHi3$*BI=*qu-MB29mp
zn-PkN!CwV2ax)ZQ4Lb0()7&md^sTTVF1~3hm}TxB2P0Pv*pZf)LN!4mVF2wc^1O`G
z<P(`fo5=pAjx-kd9<hCNL}!q=xa_5q4l+;$U_M~04hl$xK=r<X)Yg~6J@8)AIH{Ym
z*vsC6LNjTc#(5mhzHF;!;~Ht675+6m&8U@L<<@1&a@DN#s5ZW8(8g7=Dl2YC1`Z!6
zkF(N0>b6S}DeSkd(o|Kj`5MTu(>Sf-bk*7OPm0@?e^}^nm*n#EN@Rn*AV(CLG!-<N
zMetS&q2O^|<YoDJdwY#G9Cvdpt(dnij@@3&5lUy-rb@rg4#P0<aE8iE+~x#7rc2#m
zpjst)8XtL}-1d&bvXHpLF5S5wyuNO0@lX=r2Iz_isFZbtAcCqX(yID+oO9K(+dX-G
z*cLw&;Micf_u!Z*bs&)7a)#e{lz`+30G}Is=dB1U%vvA>anPcQ>-<lZm)@t6i%zGQ
ze(UUQYxF0rxTV34%(M~${+?KYpiQXEe_~oOO}9aVPUf)`?m$u@&HN)N^@PU8Gj^nu
zfWzZ^*Yj!sa>*H?$acaOZ%9sSLc6lev#Loyp4zn9mHUlXO6XeZP+4nyYJx%og8e7D
z$qvnQpc$Z4a!Kd<0W<HdKZGtI4fkk@kHm0fpWB}jYVjy4rCd~Sb4WB{7?SPJwp@^{
zg9>RV9cLT1L@MQs_C&TiJmYI!_*`I?NMI}Z84{LP`7~yG@n7IVi>Q>ugBR0z$#O$D
zds$_9k=-2&-$e-DozKPcxtjuOK8@2R&+a~n-o-oEr#Jpg(;;8m*Gu;%X0S`ei|qBl
zX_Plva;N}!=hIxz{bVVMNA`Ar`kH}TXhloN#j*oW7~9fDEiAW+9;d6UN*afEeni_v
zUe?Cr^c0GDjD*#<920v8pST0C`9Qk6y_wv`=mdHYB)I}?W9SV#`;q`pDm|me!ESJ!
zYMn)5L_^PT9YPp)lQeN%ejd+ab*QciFGI-nj4vFbH|B_3*kcbG8n62C{F%^xm~?(O
zxZI00sp`7}PWZsujWQc`1nJjYRryA~H|SIbDaJ)vmPzjGz)OYY>+!9Byo$?o)irYK
zy#N?qlvPqDi9e^Y(LwkR1G?@ju;V^wD+<EFY`c^8AfL&O^rGDzMvZdww#zatGpkr|
z&|Ux8K-LIKp>vE-IXB_7<=-glICJQIyS8CO&Zg>0HC_atIpH}qPxyaZ{>2hK@mCHJ
zW&2yDRgzYFTw~L}qjoO|z!9tp?PGO-g?zO2M(J?c1^6G!=cBP0Lzlom1MZ4ZMT0lW
zs(M3vk<>@EbO<gaze?;s<9srKtCQusP;+ouJ&5y?){{Y@aL5lMwKwcQI<Y)dZd@C#
zV?=4vcbN8B-q6Xll{J^*TF4nxX`Sw;nGUwgm*$KFN_ZUX<TTY=M(Bv#3P~{7K8-34
z2p8GacH&n}uXJ*Ua5i<5in467IB%Tov&R(w*-*H*%MLs6Y^F6lugXp3prWku+!bQk
zpPO~lRx4@&EHB`_iJqjwn#=dz5?CtAs*KYl{X=;9ifX^J6`5FfhT{Tw9k3IeB4o10
zTs*O;f*Ys}9fT;-ri}BtzPqg3O&9h&`3{v!TC1wZNd%YZosEzW{rSWOhQye4mk=>J
z_=jz|)(>XXo@s#H+4YnIt*=Q2{n><uu_0K#Ft=s55UG*A^v{teXk;V+kaV}A<VX*y
zy<pL5!j}_MmN-Xnn_yEd+S8DF=PSy2;T^-Pp=67zQB&xJ7D`@LWz`gSgEcpdHtp%E
z3#St1Ew6(ikE!|-DWp4=9me?V3D1w^W&Evsy;VHDh^xFv(z|CcZyGf@1Z?eU@(I9`
zR7^sgfN4TQ-0dc|)<pr(Knh(Hd0yvtr_k^0MC~z*P*qV`mt44ECDolH`5o#lg&wag
z(>VD=Fn;^-c7p!PG<_Za>8GEj-}`Cm-lFI0<)@{B?%pofaeDdo)3{Wz<4;Xq7g<x*
zby6jD(!_BSitt&Pm%iQ0`=9a_5(5J2D+6nrRjJXp$M?ddrMo%?x**B06#apsH_7Vc
z16l^}KgG5sPVrexP<Np?*0-i(eL1da6hP*JDKk=F<L!F#xdE*hSU(&T%~s@b$&%-Z
z8{;GCSoeb&3S~V62eE)u-J%qvzt^*d>g?!N8XqQiQs66@B0E_uYah4F3#Fr2gqmiX
zmut+&27EtYSB}syY4rns%9V-g?$KHP#s}?y6Z{HL!1-|!qisjLh>vV_{JKTkzs`$1
z|M+ur)y_Q3sBk&Kc|Y`H2s_E+vP`S=&o;w6D934kNYx`ekakw@5M*q0<hp8ii?KQY
z@C|t8jytL$dZ3#8<kdq*;U`VwIKJQCHVic#0Tvd9!Uo7ZZHV(8hS9RF)B59|V>Oqt
z-+AS|Wm0_D#nc2-={UrTV5$aOCsDeFlUi(UI`VNdV;kR4Z@-fs4uxchgcO;5oHDYf
z64C(97LQzlOk_CAn1H&Hs#c+mO>4U)f1#vRbhvCO$FKq9H@?e*Ri=3$jc?>y&y?s1
z8ZqDE(_Ga>QN(x8LWKL(H>ekoi-tj2teilLV|2v&d!AW|#IUaLV<QGnQ^?CVw(d+z
zMy#Tiu9YW(`*;j2ubum0GTPALf}x`o&(s%IKD^SI7g5Y@FFZJJRPsogGNSLl@_@zW
z9%_7{NTvFc>s4;7VbVOQ(x&*l#=urH3)oB1uUCH_2tibMPc}@$4p{!@#KPXo=fj?P
zs6@+}CMnCiQ@|j}ahJz#A{O?DBp0Ewq@9!i=^ijfV;*7~W2BG6Oq&{$GFof<^HUg~
z6cdF*4*VNJCw@^SabADk>hPvW4w^=6G0P1(&?zJ5PRYeWtD&lrBEBE3c;~dS)1ckx
zaj2{+3@9O*PJ+<zt^Jw^nujLfQ<jV4R6+o8px!`;kDIDowU6HaVs1h*j+#D>raJ^a
z?3|j6%wgZoxESDhalVVW&wy_AX92f_D%|;0n3I|LW&jVFr_?YIgo&gIn6=}($zsaU
zo~gDFQiVz>KMs<i^1K=U%Um{*vjPS^Q*ND98pM2gID^a{7xM_QxS;{u(9TGcIL_0%
zF`aNda^xD`&VtO6PX~ajk3%b#7~+x*>K`L%67#IN_hCb4LtQ6XzGrsn;!T@BT%^at
zDaYon%O%o$HFCA0$F8#btqbLGzBNh_me(t?CQX2DchLG>zUINJXwoWf!c$N#v3BD!
zSsbr;%YWoDRkfP;@qL7SE6a_`lxY)i5)RJ{Etko&EI561sPt51O_gTVmIUK=TYaC<
z$OQmLLp$+K-dUJ+a%`iqTLh>6*1c|a-m<2Mlj@H-TyC8ZM=|1NKs0NTG|jUnNs6*g
zswNGkIz?P2pCHn<s@C_^2WX~?Q#YPr?As73)5LX=>`^~%kR!|ECMk+ExbqI@!t%H&
zle7qu{X=tMdE8W4wmDDxF(1Q{l=fM5rqbsUj{pK8L1>cgaR#Et!5qoLpKl#piOX4G
zI@xQGoUr(Z3HL#~PXb3<nZ-r^3DDElZatu~nASOR-()Z<w5Ic_Y_d<3G24~}+T+Xf
zq=QCF6;Z#Au1R^17zE+ezF-RcnUsL2gAjNZWn7k7@$tF&*0|}u<rO34LTp4(1JYDs
zI3sF;9_(tJU~+mP2;bCQPP3#+^Y~9%#(N*1)diq>rjbe<b)Y2x6*WQ8<cUI}Hz1F3
zp&Ff9@$k3BmWj|B&i?7gL;E9Z>MY4VQJ!Q?+T9flSAH(y8?7NPx}*!G-9uGt@Cw)!
zoPg*c4cbYGVN!5(Bq@tLi{no?!#%X;sDy>eL|bFV`A4f43t3>dOAuXJM^YF%MmNB_
zv*q6eZka}{cbpiR21Xeo*>Z6n*^yo&g33sc4!qm6%(L<n{0{tgyC?X+L7TO-2YBt~
z)b6Z#qG6a(4to@Js;Vgx-`v1VD-KIN*1lcF>Fqjv*~np*E0k%VcvvU7>&w)6m8=FI
zz0%BM+ihH=$+ML<#K)-?thzWyo1;HV%hee&B$k$7-a2OG_^1Fqi_jNW9+XC`RA#T2
zzrk}<?bx44XM3D90Yjyk`Enw72jdN}PazHCO#~+$pfh*~&@|VKUBXvgVm5Iz9ex`P
z+K{$okv3_We`2e3b1uducyF}dbQ}5hs3Q|#%@YgLmp+8&jsZD<SaQMVb0ocHb`3;x
zRmULi)oyhYAg?e*HCzW38RGPP>~Us`REjM)Y7sPZoIylEuOg!5<K?lzht`0$O@V50
zE>^oNHRbiHb>HY4Vp2ASoLmadY6@x}o?ke$d*G?s8ys8WBq{QvM#z7JsNiHXX_yc8
z5hk*+W8l#!E+}04;(JniH0(3E*-w;WaasiA1n0{U<Af7)W{%*iFdbKzs*v-K`kj!Q
zvGA9}o_u?|zC|X1VY$l<!z|+zX|6@Wsl+`+A7uk;3Y2UsBY<f80e=XadX6h3WD{G!
zOByG2kteQ)sFfP>!3EiJ+ZQXdxUT;YinCEmxMD*NUk`d$X4hgvgL<Xp9vVFkD&PjC
zH?EIyvLHQ=Xx(nclEqaKSLvQ!1orVR?Hl&-Hh#J)vdYIg-!&+c#dTZ)?!3CjM+SJe
zv$oPn(hs77%|!LWUAh$$BPe$bDcWO|febex6uuRA=Wv$MFZjDQujffD2WBGeYAA-L
zy_~D?hj^2Y2)Jtb-R5FdRB>74zAw*COx&C1ay>gm*BmYXZR<!@yFL~LIl+;Z;P?OY
z_O88=V@tN!Us3wwy%-+89|kUN+c01QzQ^_q`~c?Y3#H^#@mOMZC6lMCJ%8R{yknD0
zQkBvGbEd1SrA$8djvcXL#absg0MMD??f3Sc5oA#%ahAt+;$eGAnvX$iZEhwk)T4p2
z9+Ps-dCZxb(5EMH4YoA#A4|Xg#Vk1kAU#lU+K#@{_;mqYM#mN~O@y&89C=3W?#gSd
z@~pBWD4Sg2R>ZL{u0R4inIGOI{CN;u1KsoIw|X+PX=c&Teh@QWDW_ImSe_SkwvcmK
zglp7~!bG%X?PWXe(cb0<MM=$zbHFycjEYITXCNQV`2}1jv?^^aiH~CAva>Rd52?cL
zmUnj`CXxvzO)pIZO(fz-(zSHdKM%mmqul()UgSMKA4t?uaGs2o_R^#>Ns{DoZu@~D
zpN)fBIjw%o%es}%NBJB;@lTX-?c7+MHf8fTH1c6C^k(4XM$R99{1N?mnQqfd2hE&6
z+S}{*|N4*r^3VBSzYRZMe*f2Y+&R(nCP}l$!R`;J=iF;haa8DTRJ>A*0eT>MeDEq~
zD|)6Tpr8BBi_9VG`+P>zf{nMy#>8W5MVuA-@oa-&wAeWR_A~f!2Ec}fkweVPTb2z1
z78vp+sR}yHWs$9f`hlMyK4=|{hnYyTeWU_$UR}D?7TunAB)fA0a}}RVy%qg!Z?8(y
zPlkf|4;C<eMctN*VJ2clsgy4sMby7BQqE_L<dM{chQMqHGC%2gsO=m96I8T<7L7__
z2lHo)nUU*Z=g6nr^bp{N9@n0;Pg<mP{e`}dAzpoNgGvVjDL5?dEI5)~qw15+s8FQE
zrr05mBj|rAzH8nFYH&!7D!(krswtFBKGuyWU5-dCH6L_XnErb2I4hF0D6`_>DW6a4
zqY;kM{j^5ilMaQSxHZy`ZspNb3T%OWQ`Isp^CbVe)wU43*g#CoG62>ErPlM_lgWk4
zNPv<FOd&xXP)CQF{0PkHsrN#7N#rpS7O#S1#{~+01=5gYi7p4N3yvqbGjZtEEEV;Y
z%x;Oovq8X;A;7b^*Q1x&og*8DH2^XnR>IHT@=wdE&O$Nv&s+#AD*lEeVY0ej69KFh
zP(Te9weie1Z^tH7Cqx7<#03yDKE$#kf{?I2keOy-C34+h)G?TLDv<<;js{Ebt>%D6
zI*I$7<>0!ri)tLZ2y=1OWRS3j00I>MFpvOaR~?A+NHcJtgVY)eN+6K<+1+#xL0Q9f
zBtnePMo@sRJ4^Y~>0OhZ0%Q<#ExOkN%i|)iiY;yb`)bxn9#=_P@9K;Ov2*z`Nt`Fe
zh8wP_EAKn<CV7&SV6}JuYVMODlRPQX?DMR7kAhj-x`vW`3h=T(q4oz}iag1xx_Y?P
z`N282JC!luNt#bX8$-9;yt-XG!?r<3E3=6<7@YSR_}*wpu&Wei`AEA3r0<D0Y~+ug
z`7E+I6Ee2tOCZfPv?<!n7`Qwh&ZDrj*B1tWtP9gdG6G96z{DznXULCExKsb=-hAV|
zAD-HmV5Dqhz~0>=<o+6CxX_?s6bNFZxu8~S(1Qv+9OWq8P2JL}PLnwMeA>@~k2o!b
z)m70*>jXS7w7T89{<x^>@(YBvR$2}BB;~NPJQ9ZN5+nP1_Q^<jQ>10_g`Bhx=#uVX
zCx88y_y75S`u_IU@BiEXuydrvWs-iSmf>N$4-Hvl7c>`Th<j4ei-F^bQNr%VbADV~
zSrt~*7U<}gXcACrUiMj(oTt07{WY^`Xl@UR=5D+J_N~MB9A`Qi&}whQ4RF+^-VMn|
zi=K&$lgJ#4j^}na7WeN>p%{@Er&u%(D9tRR_o(jyr(q!N`7Y2mgu}x}VqK+0_4o|%
z2Mfuq9%6s?o^>R`Ht%(3h^3GHWRDTz<QeeWRNmIza*lre5ca6e8p7Tc=!_XV0a$V4
zO=Vrl=!$b!Jc(X!EnNwVtD;TChCvm&0_qJt4+F~s({_MbVt)v(Oq#TQT>0a891E;$
z&8F`;e>ceuEo$rr0}Tg9qNV1826;<(oZ0j62+@+#&+xMZ&YqJ%o#)9{oLFmY(`{)o
zi7PTH#$_)hG%(k0sFVgc&^_)jO+rZ_9zaOl>ycM^)#OFFQRwWcNoG}%#$ZByzqs(`
zHY=Y}<VhM97h#+HZ;Q!-HKW0EZ_{8Dd%9s>pbcxYmdqrw17m5toZ#>NOyw@+rDr~1
zL_@E&uffq3+Z$S2tlV~1msxB}!VR}tJkb!8F(8Q)Jgl!m$*bOlWTB?@4ESOwPbkmk
zd1%kfw~z%&f?`JXe&uG8B+m0s=^Sp4(Tbg^!S?MrZXdjr2Y((&<8VGaNT8An60{*X
zAdivOb=owK%Of0*r*{_mq+B&jms&8K7o1Q18G39%NjG2epq<cAR%uzsUpGP>BKb?(
z6usNvsGKXeca(bRra;Y-)5kVsWpispUc9;%P{XEcBSk*X>&Rs1=<H+A)0tFa689`o
z1?KRB=iKGoUoec!hqyqYFyv0zhSDWX*5)^?pmRWNpxuh%*U~%CT|vgwK!}y!1p3<Z
zz@F4SB6%HSWenK4?pn92PF%!IQ#?M$@j*c4URfB7Y}qahZy;mhG;Qz&$v_)2^4G~E
z+maeuvJY%VFjA!w;*|zy_Hf6dY?As5i?ndhtsnv#L%g;+O=oBTx#^Ar7{zh$-Lesj
zSLpX5J~E=Kn(29(kUlO@nQKQzGe}LM)Df?#4XoMiL~A6<Y8L|)0wN{;-cRj|J-mT@
z$`9ehoX+5chbt2QQImpB7V9E=58^h@!AJPTk_B5pO(afLaOV9aS)oXrU0F7T3QZ9V
zpe^e-HEZ+oqIZlq7y??HRk!km(gNQDu$nrp<A(vP4{rK>&}4sdxQ@%DO4B&4^0cU$
zYOgj<lPn8s<B!am*J&1)3megJ);yf5SoxSbPLho|{7-!FtC)^ZX3g;oy&;rjJ@>Ak
zqo|APRANnR_qd?9n5bM<Rkb75eZ?OYjMAKk*zkGPv_Q!CbE?4oEm~50NMM@9S=HQ8
z#o2TZHmz{-JhuaKl#GoX*0==3lk_?y+hT8w;{gWifa7IlRpe<_q-9*&Ic`<q4r09b
z{F;N5(I>(78mOz`(BhBjaxy8Ufm4JC%Pr5#pxpTB#$<O(Dd7W!>nAt|NPh*P4LWKN
z>^mWBz{wGG$U!{^i;)vY;o+<no)q&%-mT}ziv4s@AypiR`T&YRpeqL<llaB#vxCpW
z3sYMw4|fu{TFn$D!~)|7!4^JSFEy@{?2ziZ-7q96$2+lo+4%IbuIg&Lov0tqiE+<l
zH$A!4!Xgw+T=~MJj+<Y!8}%doce-f!8f^-K$*(FTUl;nxo(Ta-0J&K5TQ|4%)Sp?$
z6e<U?x+hFf8Yz&1c#sN}3Pou{iU$s6*l?n;VFP}isBqOG8z34=a>d2E`6}#$8<g44
zuVcSYwc`yN3X=xtrl4jl3Za`Y6l4^XoS-%P6AJ2?27D)lQN(iUx;J2{Qi0B!qvJ?t
zH0}9+a;t=kKvxuZem_LdgW)5JN80?xD4~Tkez(-GvNHX;Qa|W(-&xDZoktZx(+v*P
z<WcOcCATslq0j>j^bS40xVv$94vHN!l(7dCBz2KidG>WMbMUOT(IIO5Xibf>_gJz)
zZam(sH3&_c>@0<(EbC7ghyGx8yUC_TNj$9lJCt-bJ#jlS4g+>l&2{aQ8^w<>d|>_0
zg$GH}y{P!|jYvE44Z&PqK;hp*-jh5|s`BAd;Q*(3Se*;OQ_MOu!ptyQ16*;ii7dR&
zpxe!n6H8oJMe`%43<EPZd3u-OBo2M1Yej#BiXov5qe4HEa7aV8wMlO;XZ9bwob3>c
zH9vxNuIU==1H5q{C(`&TOj>qKIhCW#CgpQTc`*-xgEItTO`u>QnP+N!-BbyIQLVjj
z(xh=xB@Z`ejutgLCa{3iwM3JHtO15hq^jZ3#QAUaX8A!8=0~cZee`7Js#|u6GiKWI
zOe396pVy&HO*j*#W}uTyROqlH4;4-_jo#?UAKtm?RO>DS*B$Y~<$LT=pg+>I(mUVF
zj6b#M4PL_e%tY));*+8qcuzotJ%hMV!^HJ&QJxf8@rBIiC0k>i`N_QriV~ax>gM+}
zB8(vJ?IAnZ7)9ay+}J-^gO{IRAPY$kbe^ChVi@<rq9FYM;mj)&V6d|ZB1JB%b_MyV
zqn5E`DRC*Orxd|#R`-q$MMyZ)9bj=$EY@8Gd@@TFPctw86KEE}=<#NEj7fcrI~P#$
zrz_>G(evQuG@-kP&xu@P_LftTRY{#cj9~Axv9>4=cCVWr9Dx|}@0|<5V3PJch!`mC
zdSvGgwv_>mlLJ_ER>w`9J??q);W@Gc4RbhfP)Z1jF1Y)>c2?XJRr7UYajQBT8%{=;
zW`(D`K;!6P`i`4RUwDX$``>rk7W_fO%`ARFU?>>Vgs%batsx;2oFXZoz_il9%=3XK
zDhsWh(pG_s?t;6UW1-o>U_bOcz-knn#+t=hEtuVuAuFrmaR7P`aoEH^JDgENDF<jw
zjyEx7rZG<1lH}xwEsCAn%F{Tmiiel%ezLq-Y>@N~P~FH)kz{xoDVw8ycT-obALQ7>
zO$2UEn0!>rbF9V4h|fp?30YzOG*i;>5i3kOWXq{B0~}P4{a&v7u0e5~6xHLQ{&2VL
zj_CR12J8Vkk%JTDj+i0@lk+?GRisT`hWB-pj8kM~Qs<$HRG@p|;@Zkb)J>fg`~I*G
zKHv4q*=sQe=qOdKCIuqyxt1qjL5zV?@?0~DBbf)9GxWO!O_o+!l2qwd*XW+sYL-?_
zRTf|0={Zj2Gs@f^7xno&h_z!5ADLv8PXfcCK-5N<oiwWy(ZEq4qu#N@wq+@B=W?VT
zD;3kG`=oEu3$0^gLN8^hzI5}))>7sR&ti#gdq-7TmifX)@go|(Nm@49QfT_0KG;J{
z(yC0#Rax^-TvqF3-woF^t`YI2YVWB(p%@U<Kx_@KQy@C=&Dk$zKV*`iFKk|3Or)k&
zb<*;z)$<F%R6R^!eL=Y`*dprH?|@xd6&K0las~TR``hZqjN|nK`=Fi4C5uoW9@8b5
z&~ph$?M_=Dyp4A6JWJxQFbfS5vMs(OBELq<u6133D={Dh^FkQUq@Ea)s6^k{(Pdg?
zRrdK=+F>CPOey6RvYhy3FZ-$DI(^(Q=lGGbb^QdGU|Vrsn*GGI743Byf~uIgQsb%z
zUvX%)?c8#fm38vC+3|itz14W<mhp5W(LtU#A)s%MkI<B9o|m5=Q9=f8Nc=Vx!DW!M
zx;;lvfnnPyFwvX<V6=^}i-0u(#&0G@T|2d}0w%=SyPg<)DnLQ;kWgq^;UrcUw)vhn
zV(SE5)W5+}wcpFFlQK(-@^OOWkzu#Z6byHYct-I(M9+gbi(zz!l!^a4gA7=?fkEER
zz1DdaH_7Km@kM02NBvcHfsom4#fQiDoH$ZcxSYLpqY`p&vPLazZADY0ul(YE#8GeE
zsj|0N>LjnLL-e7|NoSL9GuH;Y3PdnQB{il%yI1aLPAeCeWl2@qvTh3opjM)5_)9Zk
z{j<{|i_0Ut5};Uo*Y!%7hgr0d9b-86X47**r{WUpSJT8vm00z>J5B~vXZ%De0SdVz
zw}{R6m@<Xna?2uyn__VDlWrQv;aMnL`~7VOnYr?T-7Dk>9DiaV#}-MexFFm}Ar?df
zDT}&A&35+FjkT1iLZg(hz4`HSH*a7<G_({=v4m_Zp_%Xsq$IjKTjCIpC19z?8?_t9
z?u3T}$2iPgO-*U)b?Rr59Wdx)XjoTB4o66V;f)rKAkf7Tfzyq*o)FWuiJhdZn<6dC
zEx)8-5p_xt!!C~F<*MRMkLq@wSuKLV%)tef)b83DOV9ar*;k5ZtC!^3*bo3M9NQ3p
z^b#2kDs(!@nS=lkeDpj}mk@V_Xp(H~$2?B5&me(qC0hMi6b3b_Pq#pQK%Ik~I1}C^
zx5?+z()?H0c&J^=eZ2_33-!gh6^1J@*bTHr-*^xUYg&c)fwv>qgiU9Czm}op`J_to
zz^x>Xwr;>gbP~??qA<!K4cxPZ*gK%r06gFLaT~^@iQ}Styoa=30dMFs8Lm8?-|*&$
zSbHH4A6yB{e>EhBj>X%MIp!F8IDg7N%yWl!NMP^blvP?M_hbhC_V0VWLLLbIp%%$=
z9FZO$-5}%U_!DADGOt(A6{Y8aFI-b93XUjG290fQ^US|VnmU?kt#0)yPm1K%1VtAw
zd0X=qG}&}c{`d+_)1s=9$E){`2uE!Z#km2mZXI%r0l$<9<52BiMkDmy(Z5(oa&PhF
zc~*Skq|x%eH>G-SQs&vo+7saLo-^-68>M;l)U~LtxKlhAahw(9!$iI#rQ1eYKx6-K
zObEeWsH^jTR1yvUwW!`&S-71=9p`DD-jloj#XH3#-nO*1hj2Kvaz(qLqRbH$bvEFE
zU`-2Is+(@)+6+(Qr5A%7a9HvhV0gr_1k%Zq;;9oKc=!SHS&SKQr58+<abCTrfLUZ^
z9zU+SuumWv{~X)%dpL^Ik3GhJN96OjVqZ%1Jj`bzFo1xTU_6GH)XoEKJS8@tF##WC
z@2SK|lGWwsFUbX#aKE%Ng-X|YX%Q~$k3jozla*x}KO8=Hfw=8qkKeR$2)k%<h2nzC
zza*O+5XsKKQYhQ%RxPXsmcQR5dAyK~Tj>NJ5_jNgO7dmmx|u@(k~#>hDp9Fad6qF_
zTYjKvfX2f`Si1OO5o9}L&~IcEVW?LfyC^%HBR8wkctnzG+(@_!s$7RhWJHAoy0wDE
z(9pxw2Cyz#^?8;mqC?&%=3-d%@z56DlNEHNFs#og2y+HZo9iPUw}5@m11G==lBdol
zKX4eRRvOkagzU~Ya|e9NswS<<*!r1#@7}s0`aTV}RZB*;ZyIlO`>UT?H)UP_TDEyC
zywZ!qb?891jwcMzot)ktqSQdVe~;{Ir|E=?fi+PM)eJ3Bg*}Rk7A#P<CQ?}N{h}Iv
z>Wz+T2TDrzq`}nzB1Wc3J}+@3@eFfN#E;^E%bfsG#&sDdpMTh`+01OAlUQlvx^<}m
zEgbuI#sFS@I^d3-5k^0-w*b;>*=t@2mom*{8V@&yqNjHR*2tbJ5D3`IQ}Z-U%lh-r
zmc>!Ik)@iuq!=ctkMz$wn13UxF!KK)6e2Y3=5g8CLY}-TB0G&1RmVp<2Uequq|J}@
zXCUEy>)uZkJv(U$iT<_*JW4L@X-^&)GUwvd92HHW(B{&@@pj@6*ohYJMD+<q-z%h5
z93D*0p;_qO(OVR0RwQ4LFfDWV*Y8)@3+<dVExf?cvkE1+EQ1Q!6*~Gksf!f^nC{{g
zI`u&IV6h^h5uM!B54MGa>1R#vj8~h_A+=Hk(nd=&1oaKkYHMGVR21a<!J_*?^B)kH
zaShS&2Go#XC_D1JMU){$QyT)dapcC9D4~x0XqnrWND!xyMV3h;5cG>q$XXHT+7B1u
zCGi-gPBzbXb3(Y8xK?1<Y|;z=eqj8BV0em&JJ3Rw=UGxcd?p+x7Tjwejxudextv`!
z!1FOvm7@+?;IN#gQPyKZ&k39^G@V6b>LTZYF?PBa_N%g};xFj!FE{+X=k=S<zkT;u
zp>#bW%tPX0duM&rSyt59=SQ|R^}WAO=l=FR`gU!7*O6B=r*cN%iDU=n_^mAgw5wCq
zA2rX|fnu^Iui`J9X5&|4*(V$PI*l=CGBqbQ20nq{KoBDyW5SCxd&WuI0e}pBw4gaG
z%qm5m51>|AlholHamYC)_Rt#SRW!*CZP_*nRz4xi^M&ExLT^1tL)Sj0OzN*^?1toW
zoMZgGyLH#_3}+~j3~8WffHsjm{-i#gSUU1~VA=e)z&3!+%Dp$5)oGbD`NIT~4}i?u
z)11bUMf&R;1waPjg^(~38L+-Nj18e>=To3JB~Jw>BzB@-lcYsbe|}4B-I#Nga7SbT
z%!VLornH{Nk*(^)^MEJ-wwn<-6@3*9o}85*Fc$}@@bum(x3%K~h!YsW9K5(l;QZ|l
z8KkJ1td0}g!@oN)z{+tjip8U<F7+dXW(-Fdxk6mOh$Qy9E1T7=18#{FAoOLR^159N
z^%qq1L|#D&6DX2s?~{fpA?xdxmltL8Yhs=Ym+<zjf9;~bU%n4>sky!oA=+RzJD*B4
z9A+&*I1>(gLYFh8wsPbgG5E-;Dvry0)s-&8Zu-^@U39&iul=_vXu!@_4`A1H<KcaD
zJ998jIKkSH6F-&*#FC`<r5UK0;9NHJW2?L>>*B~F>V5|5HrET+u=w;y??xl-I=)sV
zSy3EX7e~kM{WOvT+UTK8OvTV8pkfq;x2_xvt;1H0x}X$<<wfDc3VO1LJY!{4x@k5K
zWP$03F+!2%O<p}-2pvjvw;KgCN<BJ>#TM?t6{CTVItvwHE-;sf9DQC<5zI5q5S27&
z4YuFrw8I&R1Fnq9Be-p8M(BBf(pEHC>4UJ#6g>}yamMKkewGC#I^!8VXR}9IIeAuA
zS(SVN+_v(TymOEbgk+h{Kop_wh`cD4G2J2|a9D&xW_SbJeJp;hwIDmB`<6)GIw=A{
zEnWQwU^0*Q&PxL4%YPrejWDYa{d^K>PI^I*G|CHPJO`m$RIjGMNQPOk(JU?tXcVTU
z9f|`4CjwhmGy5Dn8z##EG>M>i@0-w(_1s(vLBrjQib44Yf!=&7qm0ZWoU8x`^+y*H
zg?m*{Rwq^Sg@lx~f^oC=0#GciM4^t`Q%qjX$;4W$FNuqe<3^79*b$MCklOjV<6*=P
z5*{GtET|!9yYxHTInClS&F=)=yVG`dOY-Q6UtoHHHt%AIl%Lc`A>}nv9K+6{`hO^T
z;@RqCM4|0_mdo_2m4J>?a=_qHAXU`i0EU%=5=`E1X{Uv6=ov5`puvLroOmC4=+c#1
zHT_U3PlVx!{7bB3#f?Rlo$aDrpJe6rW_6k-52YZ7&HR1~p>d3+B89jVCV}^fPYZ24
z@J!ufM-*{YWbvIrfd@DJ@{Tu$OLW9h&J2F5rs|3Ojy8HMF75`fknl*TXcBEesvxoc
zoHq`K%^uzLso-oUQ^ixrfYcT84Z`&4vxv+>t*NlPhgr5vkO9|R1Pb8&ow)f!ilaTq
zH31C5^Tup4VF@$%?I%pJ0Z~J#C06Wmy<<{ik&oJ2CTR(S43938{hDn#KWsL|wSD{j
zJBb`q#MAx02Y*yaQIzq+c<BBuEY+B8aX~ssg77f?tPQ*(@TW|3#M-18pQfEkATP5r
zX&%P*Kd`?yA{yd;M$BdO@_nGk1zC{Io+MfyLAdfNubaI2Lewwp|J-e0N<uBxrZ?~C
zjr`^db%|hu^P}NroHOK_mxVQyl858Y)txLaPx2zo^9`)q&o!_8a?{k!9#ZXbt>ver
zahf!1i1~W9w80jTu00%zh(B?Txpso5c~U1?oo_p#+I`w`2`H5~wlzoN=}KuDnPQm^
zs4n643rVvyu8W6Ki9nka;pYWnd03D>uZyfH>pH2DI%(p#+1YAwQ51Ro`3S?ZXSk_W
zX48O4>MvOVG&=zDgIGt*FYx|t#Z8viW%Y0kw9oNk2IGoPAqYQ?c6>-S`efBcx}TJ4
ztgSmo#6)Q%FlnLG!rFC#>erkzBKSlMuCp(|ky_#}rQ_joCU<q9A-{JdC0U#|U%-Yx
zuF~CIoL9AwFFbVW3L&b?RoQfJDP?(CWpQY5_6fJS6r5e(`s8VM3sYfJ0bPtpB0==h
zPYA}mTI6pk@Z(@HrwzwMBRJ5GXkKS|)>PHwn%74<Q`=~zxCI1dq!|%ut(zGLtRoVL
zIh@qN-f^P4Jp~Lt%)n2!FjztA2^teJpW+aZAIgjCZjpFWnah@%ACE^_x~J!X;Z!NO
z6b9f8Ju%IGFXbxhB#p~E0n_9b_f-WD^p$3ckbaQais>-^%!qbTkP@DPk@^cfY^G4E
zf;-w<lS{ou#;!eSoHcNQqk#GSL&I)2LhKPdl``~%Z;Sd}{msCt@?uE{oLFg!UE3zN
zL8+9-$(%s?cL?0NBcc5RUPV3VyIRowUF@|;Zo;54?p{~v&3RcjWfoh*z>T0|Kg-F{
zYDzo54X27R22vj0Z;}`5{6P4}Os|vmL{~03tIEvsytjw=cz#_4n{GcQZAx2)8e`*E
z)~p0lJGBMS6aYAa8`qTPh4V?-m>#7dBpIfm42x{IzCgk#=!>5RuJn0bp&n%WF28GY
zBgT(I?(I4VR@T-0e^yXngXhFwKELj1>lGzU<Fpz!Lj=<z7=m#}4tqx2Xhae4Tl^!P
z0QfH$6;`jLiL0b&>}_q$N{(czrXZD27~0WoI-bA4ZphV;PN8Y5=P<4|I4MtZ-1zfX
zSYtT)fTUz=sHb_aJp`1VK&QGrm>7eaJa7hLs(`iw(H0?f0ehi<r|ArvAGX*xaSwng
z&UCWMxPkluf-+)W>+7S)V!uAN>NPPwgJ)s+)=Zclx7J|Yq*Z-@l)*h5eia51M~z!)
zU_TG0uPep>$aGM0Kik?8MNy_ULiDfS+v_=cZLilLMgTidUTy0JH7R&qNDEgNoAF`T
zi1c|?FC+a5vFSIfN{jt(=u=@Bl;Ccj69K2|-&<CBV#D>cbO>bk9D3J6eP2>v=TsHC
z&wM!@>4?+NJ^bE3x;H(ZS9n#Ta<g&1G--BdjtFxzHy~mv4O56vRi^!L)IHhQ993K=
zjXU2qjPGfb5*v)2CKfRBx^;JX9jCwMmb93j-_E(g7s=HbGLp@){4(Gl^qtUum}Asl
zU6EI19S#wGyskLRgxund{pOrwAWNk)Ymdp1&uLfj1vtx63F|U_duzw&+zx#g<VP|<
zF#*@kS@}>>akc(8PV1!QwmIadW@~9lqCpJUB9zbkV=h0;=GJtGdi?VbnDo6h9=KYm
zcQnzk2mF*po_vA2+TuCicZ{WtPpPxp8<ezBkW-VToA(Gd$pCObkH0F91DR)z#A%de
zxtwtl*QML$8Pc)MG5~w9PFj^^_4pI~pyu)&W$Tvb#GbgFax$>i2#^;;KQ{MAat{j3
z@AQ<?IIin$TTY)tE`J+Ip*upj`gwQ!r(ot&*MUs|xuAyR!(bGw%O$lidd;3eRG)Lh
zc>zF5h4kC+{p*Q_HF@;dA7zsESgM=_Ek$Y<p0d!OS>5${=*U;3BP!2aJ*-M%rE!ro
z#|~hck3^G8b(SRcBpygYrW#zAuC>$iFozQeVCMF^%euf+8fRseG{1Cih7<T3wILfu
z`muUV18Mi#bOXu|&c;#ON#~0wXrE*+AP-8}6G$tCpu_c7M9pPnnXt8?J;(`e1`>@(
z=95LWF}mg<F~E4#4qZwc<-D*49Ou)4Y}VxcYXUXT?uJs}@(qq-e<Mr>TK3=jS2hZ?
z>2#|)`SdL2&-0#k<X%VBx4<++I@0g%M+ad5|6fp&0a8_Ogx8T9+D>b)%!(xb0*kX{
zPv$OvNro}mj{>6;7LrI{9r||)3wy(9MNwD9SHS3tw*9|d+u^kvqwejkzXZ2r-74D`
zMeMM)Sh37>g*FBrse0uAV!Z_pNh+nF?(J{Cx2&`|UxaE)pd7*ccYzy=JMa6!YXuzX
z5SLXP7mw3Yk9X0xMZ|eDh(SPOHMf)cCwZFWU$bn2y|8^MGn6AWCZSjkDzKF~$s)k{
zr*QF+7D|%TNuGT{ov_kE+4Od1c-E}HPNWDhu_Yg}7dOX3Z}}w3g>x_l8k2<R>-9o?
z5BU~+Tnt}|CWy%9v!xJ+U4{8AcGwTgHpu?duIem_>xUaw$G6B9eVc=l0f@tMcp&tg
zsw#e@ctDe;8<_)j?Ou-Gq)mNK-s^AsXvA+YDH#3zGIS#qk76E%_;f!R>~Ky#$y5r5
z?*oaw#WiMeQs=SNyuBCM#qH1X>d@C$^CyH*FA*!jj6AMkhZrDK)5^PEL}SOW_3!``
zS3XSIn6n&MY6VRvQrwY%a<wp#by(D3<B89s_fQsxdbpXc6=poiQ@BIK_*ux9^~%yH
zi!8Tzl!!E4e!53Kr#Pc?p9F0qh;lY|%numJ2w1wjt4=~hkDHTSxqEyqxL$xs{5(iQ
z+V2ta+3C(olpk-}z2+}^9wb@iL!atm5wira+&%4OZVn4$t&AzsrmBm?BEGBgKb#TB
z>*cGqY&mV=c%k<7u3nKgO&mA&m2HI?Cvk&;(~VMeBMqqPR5v@CNMXHt_Zb*oTZn(#
zgwLeR3I$0*#LvUX%L;8A{y)r7z+RJ<*Smom;c($jnps64+JPvEDFU#9a3~Z0?#5jv
zdEq8M@4yzQr?EJv3~|zFFp+d8_3SvSUL0}@c_LE$LQ;?+To0>A_#{HiP%=ZHjyMTL
zkfnX0U;@d#3tu?IGKVRHP8qH%6$mhfv$0CDG%xr2rV<BC?Z@vdFdC-ZTrC3uZ4kE~
zQY8>>w=^9#8cFkJO4G91SLlWY8#zo3I$jD9e(OMMvdnJNJJcq$HB^=gXG=!S8*Wr`
zweD>*Hk4_61YJQvyHNH~tXp{o%0>1I*5e&(IRrCdkg*6^&CNWU`HkxuIm3;U!P|%N
zKD7ZhVm-zTqz8*uUgR7hNM_2-W0O=Rv|wSWTY&<HYa{Mr6pZL27!L2-6S-M3RIt#U
zJ$EjJKs~oBNdj{Dyz=t$Bq<M#s_X;S*FW1KI#0t|PsyZAd`im0h2#dGmT3X@>L>^y
zRd6dl;E-2{zo99Pb^$~s5DxwWri4XSX60QwSv&auXY{ST2CzKY{EWBx>SboSox~3#
zT;J^ruQx!2u9t8+n3VH+{vSyeu5bUcNs}Z!@-ja(dbh=^bxdXn`*_wf{HGFQ^Hb5|
z!>)1y5Gh+aHXC0Q*@Bz?@v>@<8G46%+qFhr-@Q^Qw7OfgCUOarg!5uJX$pi{gzN`=
z0s{7gF3JD~Ow^PG)orkXgW#dS5I=TaJJiM9gLJYwP4oQo(U1kL`Mw4&hDyV5k=}z~
zw-Ah}(lcTj_f}0)RcZYNH@83trzImnz-=fV=z2xbhVFyWE0!yzlGAP$pw5JxV;WhP
zA+H}KSshUeM&rqxGxAczZ#m%r8<D@6EE*hTkcALJ;8}opX!0QKleg687szx4rA^We
zqcW2_)1~6_ymacm&8IYgqz5$K;w)WgHGTYTe_){LUS}M_1o<@vH0u}gK_K@RIm+Zo
zI33W7QDfb2wkC0!<W1=8x_+i@3#DVh>q=Ec9i5P~r>dIriz}=P6hv4Nz|x`dN#Tt#
zc*Ahre4I$mKm<7aEG+puq?3^}iL*!TfYlCJCx6^}ft$o>T{NlVTbc<%zmWlYl-RwL
zokV&c^hoU<!np}!ccKJl8H>i0#ZHnklAsM+5oL*lQOvE$ei}oLu1fcxl?YDZVlEW1
z{D-KZHZ1Mf%aABv0bIVe9te7sWAB8}3_J{VK>$?_^hN5-_is^glQ?bi%pr2?Ii)p3
z?vy*s$sp5~@LBN?Zs(n9T2dZXPgW9!1v$*=Ce&=6q{hG#QR(L;kiB6PR;e^8+<^)O
z_xk42!IYeakU?iPUps_~6Ou0$yT~N>V@Eoi-A~Dd0r8?aU^sGmV!Y#yp(=c%TOOxr
zoTe6L+Vn+ZNWr8hE|hmppn{ewP5&r-HXk-vUtxon9ssBeym1cfaw+Q1L%dwSg(@qO
z;s{+B^)~TfL;Ei?BPh9sT2)~-FQ*sGTvI*5n9K7ZP!oJQVb$}pGV|N)`1gcDKSS%q
zT01ey>p%_`UZL_-XsT#!1I2M;i}8CbBC;f<@{y43)k1L&kY$|wTA>&u)px|UIwP32
zF_#bPnD#$WZ=MH=$!1du|69u|i+?JjOjQTcSB|M)r*TympI{X6k<8+b9IBww^Q*KS
zU5M{6Zh&belLwrGi&1XVO^Nb#5I|(1PWzMdX_LiC_PDRe(NWg1YlrB18M^=$y<RMr
z<YFex=0`Lkm~ST~2Ag&{Bel!fj}u6dX1xx^y(}!N%OtKIpBDWf<!yV8<u`-hKegu-
zI<{kG6a0mNZbtzkiR(N`@`uSKM;F0e?K`K|E#MjQ`7U&hgxpCyS-E~j8@>07WC=!m
z1Sfg+GVu8@D!x!_AmkR`ixvDlqz*$zJ=4=BQz8f+>RZ3F?~AIglgH(f58vXZh#+QO
z-WV72-{mky^gK|ey*`#|>R5g@djMipltmqX-8NtPmEY}dKx!k}15=Q7$*3-L->eIz
zP70bR2iei?YA?z(&OU+MdxT!HWvxF~GjIq%1w|N&Kqjh&MH!WmU|_Pn&M^^gX3V)L
z1xLJEN_0LZ@dH?8oDbZfc9z3Q{y-55dNKfPaoNQT*JIS4s;J`P>yBSNGM%jB`he#T
z@-krY4GgQ8zB<D-D_=RMEnxM+NeyDGT)o@g3A?xAkS}+sOlTAHy@-^KP*b+mR-KI#
zSWP^+opWLG01r+x#7#)G4p!Sm#4nv!Q2U}k87u_5>-IKQ*3?;Cd_Ls8Pzl&pXyu1I
zy6^}O*3`5IhA6VMO6DB;({CmyHNH*V=<7X-_}0(}lOO8aNERrgvCJmcbP=n+6Gp`T
z{Dj#tF4A5NrAKMG%PW5B2fv1qEDn{tn{1Z<NdLw*UTPZSgPGWLQIG-@f|Zy7{~`@j
zwW}sF5lq|RvZgtHd>$kUu^gnPd4M^{;%4T=NROHyQ(z>m;CJtud~Bye(u9&_50~Mj
z#3DR?x-;c#(g?(Qoi{W0ZFkwvNs~53Tt2L1w@=Go?Gd()(8P>%K~VNmtt!dO{Bc*m
zquR$C)C32!a@xR4i&HMgBw?^q2r1DV7~Q1TB;HJFme1G(YWEVdC5qH?PSeOevFUh}
z8Y%k_xv_kG5(mjZydxqk2j`VX>MoCDn=g0{N=|m9+Ka>l0A>QzS#chMOR>VlhDmS+
zOiSGrX$pgI!}CDr4aFJC6*T@D7*qsF#VTR1>78bI5vN~pt}Hu#>vC@zHh3?PQZrf|
z_}m=&Q1;m7kkB%)2)MiT4&6D4;y5jf<nvFWm3(!Zu%<IP6tf}t!*V5|PNc8|+NMM;
zKrqbBRRVYlzd70V(OzV%;-YFEuV40aj7^FV$ByZyxwT;LGT$Jiwl*-p70wSI+p1uL
z{~ol-_clipH&xPn{^nR4l-Xoz5oo9WVz}4EH@FLAQf@}a7t;dRHd@tbU2o_z{G_mg
zG3gGjIss2G#7IXuvOgNCZlDMe^p)|17ermr6gn3cBQeYmTNw91_6hAM>?f$G@S+XD
z+7Wv}AWibPtiBGS2@loHG57XGCwfdvQApT!u#gCdr+^E#a=dVtMLHGcjd7hRi(?KQ
zSc3%u<v-9?23REQ9m)l-vL8n|Yf-@BfQ4_`)OC{8pP!Iz`^}7fa0=N4Bcu#SoH?Yz
z!NM`gjpN`Wz+@OQl)dFv$9a-Ho`4=jNbk<ztro+Q(y@Cn8GaxM!*t>dyaXL-v7ez|
zMK0WQC7P7ay5vM-t(va2;5+4l7n*~_?(5zGmNs#I&+B#R486kbqTW58L^#v1E=-hE
zSyI%=q0!<wFI2pT%S=W;U~cd%*nv`cT6hA~*<E;xVsb0>CGf)V6O2j2Tkj>`kTlLG
zBBFpBH<y%Uc7XLymq&K?NX4BvOExi!Er2hpo#!emtE5Pdk>9<B9pyk6m831L=nBR{
zo>WG?!NG7b#L)pO43U2${>^-Qq-aE=lw26QITQ+hlD%W7G{g$);cnj?53ww(gUh+U
zoJ3&3V6<>CKJxQg0!dI*b^~ZvmKbvZ@l4<;!svP6Ck8uJ4^;UwV!HoC?gK#*8?UfV
zv-k*)h5#2qO`_*PP#K(kR9cZK@;DFK`1-u4YRg^N^6n9J0jl!^tecpKg@fX>{n<MK
z6Yvp*NWynzy8AcgI`NK$Pci${vPOOKBl{K88}_hU+nse*B}X1Lfzk{@hGUFI6F_vQ
z$ev5aYOUA-^v*h6Z%*WkM=&>DPwr=UwmXzot+3Y%>{^n-HallzLnIp)Z>(Rq_4KNy
zaTJj|rv6g@;~B5p0%2+E)6`AItp)Zd%ycn-4Y?pV6!Sa)c7Q|vNRZU954eL__9)QR
zzTkg=h9qxV5j<bH$u!Ng(y>9V|L;btR8$|3+oBajIHG2zi_Af9moTo4b_`~Y$aR@0
z?Uyt8J8|K`jRJ9==i1;z=Z1|4;CbA3zjv@tUDpK{aY)NH*GJcl0IQNdXy?tbXSzdo
z<RGuxi8@S>uULm=vw18G3`@2*gij2_BLQDTMxuzL6c-516H3H-gCAfsz!TmI6nW9q
zN2oj786}-sHkICzzhj?*WxE4TBg&*(Q5Vw@QsbKyo<Z}2??oJs$iO^VG9Dm*r)g4V
z)#EkZfl~gS(vTv*fTC*zF^wy;PPp+kE($vuV7J)^h}b#b02;aJc44r%$(y*&52^ER
zi!l6fYOz>5tgOhmDdM<r<D_>uVG=ueTZ^C&<~aT=z4b4_+#aCCxO>R$5{@<W6&wxA
znz;i~+|W;99Rd|J&FI*VXCMRFR}ewCcgc&HdQSKC6z7MMW^sNX+XmM$>_YQbnfZ~M
zRq@ml<OH=rCj?B<fJMS%_mf2rCGf+o!lpxXNg2&_>qPor%jM&y$g3)UY!)eGdu_^R
zXs*Dq*p!%(RGPpHZ`4G75!5i{CykG3V}>(yE&K_I@2uXtk)*R=9iHDjt^y|}{(o4^
z!)4g3Z0j<~$}eOQ*?yg~AJ|YTgcB^({-00v-AL2ad37(+Ja{8~mRPv?PTFHhqrq`y
z5fN%DA=h3)EWOAuFgr+E_2T9ru1ghLp#p!>D&1QKah%817ur>aOsnk#9cwfx?Ri?w
ziQt1^)zi~|VgQrHLqv6Xex7>^KgrXq`uqk>*sa}md2J2cZFahQ%hOH34H(6RB1Lyc
zH>y}7q(=g$Q<x@MlL-b!MW$N*159GmV8R~%vaaf-Z_oNsJ}u|ekSE3HlvN`GaatW&
zGa#~k5?oj_yc8-8W6r-co6x*resHHJ?%5i$6fhR}>q#SJj-J4>_bg7<X_I;ipefR6
znD8zDFme_b2>uAh>j>pRd5I7=R=!rDP4hcbTtl(PwtI31P~*%mcI?+DG3px3a~?WF
z?@_i^l$wqC0T5(4$#&IKf3`F$H#^k6EP^Oibzw&co~UJOAr50AiYvD9!(?vK4inP=
zxjxn&#~v98#qk(|CBw1~Bs8Qwh4Vm!z>EwF@-6UW3fGyYS~v3{D>YBY$tA49T@GbZ
z<av>W9Lj%RKap2{xy-UE-*evb+FUE2QWbd~I&UpL<@MV3-=b^RtzSwJS8=|3DZy%7
z`It11(=zy&?_GPn{daftVAejTs>?MuF_UvI$kQtylgC9Kin02S2}dc{J|xW+&zJ7$
z<EPt))4HJ@UjK}6DUCrxXt=p(Y>{wto*@=0P>=`_OZkM2VzH*gsA3eNFe#dYF{!S)
z2rHPIorwgnhfsVjjR`t4N+#p&gd8@SYQ8A`#uOzL*5IQ;?|6>UcuF~0Pm{;N(DG<F
zXLxY%m_fkLF{&M|I6rsqHpSe-FN!$J%lzRy=s350NuDI2m&U-k!Ngr<E6sbeodP7S
z(D;_^V2{3!s;|&%e;|~Ewfa?L|BehlH%(GxU!Zfk;5OYUFoNZP1n@ayktUOyK9PPb
zGuRB)hcmpKh;m&E%AE&YKJ%g~>oobg>T4_BY`UZ{!ClfNhJ)dS3&@HmF?1#F-(gXf
zMNxcZbA1I0b;qFI+e9YfKOOf5MZ0=Pf*Ev|ySIKIki8f)d`!xj+b9nTq8zJvDS9J~
zLd}7@vu02(wdZV^BC!?FvxpDo?I`MH{4fG{ZUN!vY|vH-5G1L&#vXt-w(Pf_$#WhT
zd5!R^IP3E;<CBr=(=;7=vzL*z#VDqqp6oEaEmy8ih6yv!>-2uo+k*peWn_CKS`}t?
zPIB(8znvfmB0gXbO<(ljswQoHs0T2_A}gAUKM4uDnipA9G<jKn-S%G0nr%RoK!W7}
zrC`31>o(e)^kU_RuthWRYiX&2_&2om@eINcN(q7WxK{aiYMsx^kun8f_u?qO)-CiZ
zq}{@af}|k;=wbE(AuE)zx^;GzdhcK=t2}AqLpA!HzGQcEioqx~hW7PqIcHgwN!jGb
zVD}$Zkx1X0X-QhrGpB*8Ut4Eo>^K1%OklzGJv0X9b;d`H<o97zYCcCzmbO|(mvvee
zS#_k0KEfc|R702(O{Nn#EWUmBJ|~d*VF^5ro$60uz*o^D)s6!C1;!Pl=!icL?NnU7
z7>Z<c3P&qM^h09v9)J{QX_KU1cY<!^2uALAg}$I`aL&Jt3u$X<zf=?e2mnijygS~Z
zH)c@-GYT_ZJEyECs4sz7(enT+4H+5N4*v(8%dw|^CZ}sk4xshB7Yfp%%8Glw>qk0o
ztRF?4W(3EuZNrm4rpp>~jKCgqZR@0EniaL>m~72lLe)q_<(m}^K>5ZsS1~&4Iy8R}
z9*|PM=^ZF{fbY*&X1F{8H(AnrL^W`Dd7^G_$gk8bTH2ewTaL78CJFjDfZ&Qb_35bZ
z-E<imfzQVRGa)8d74iAcI~tZ0&Z}7aWF$JQzM!JYvnE@BDNB!E$W>&K&ks}69=YBt
zAlGogmH<A-TQBUgqj8#~WnSiaz&!cZUb|cLez|@NrqVT~vi?yv^Tn%nI#}!z!%Dou
zK)&dj!T(*^JH%m-<c?xR)5J5WlX*}lJ@;btdV>9agK1y#OX9ve(ZJ|oZM?uHE7D|z
zhqT<}-A_DUF5?P8#h%8h!ll;>m!_)<QCouO%`~n_boF3~1o9M48k7dI=S&FzBO2Hz
z3)qQT8+6Jgp09)C5P{=BT_lzB1Xd<}{mC8zy_m58r;0K+2hy_-2fPNUE9_9R5xdoT
z`uC9;NE*y-C%2c&yqET*Wt<mvb%dYCA2(bE3X1cWaCAa`m+vZ$Y@CCX(RX(1#fQpV
zgsrVvSEXHXcNH{n`(V=w4U1s}4^pr>x+6+Y8N3+%v}a3%!h2FjDW}Cli8sG+Ok$BD
z1nCSkW(@0qABS0~c9zvrqecfx1slcy`D)>{_7<BuKcsu~A;jR1_RrP9N|wnZR+rEU
zZ;>2ea6WMOQ9?&&MquYk>*VY&@n`rcpVl}=L2XLMDzf2_Bmys-CO;<I%O<G8KnmPN
z5j;X<V7aB#PB#>d!xbeeMtl9utSR#%xi_$Qz*@pa3F$^r_m%b*SWe;5HyJ3w8Xj=l
zXyF7;C^uy*E9)w2%BpFy^iIpb#C??clcxy0ZmE8MO#Mk(Q(P$9)8LhiuP8gatmLRf
zCyKa4*0By%UOZDvmU)f~7caHlc*V>BRxQkl)4C+2I0|fmX$(5(In04=PFf;&KABt$
zq8xI6$=eVMory4Gr_t0-w{57E3xW2<@i5k2TAHP{fZpOj_JbxQ_HdjNQI|>KOW|F=
z^u;-W&z<szC0k)E{>==&%O-*oZ{rr4takp@Teo29Ptr5S%NH|fP!8(saY$~^eDM*Q
zkr@odwL}QbG*f$c@(L1&K?j0+#H3N}IiWb?Tnb{~*M0=8<zRv8ck4ss3rA3P-rHu$
ztffbsSjsHL$j?S(pGVDH*J`S)DeF9~^CKt9E@#F1D!Z5GO-3#Qx4$?39??h09iU%L
zdXZ=U#*od3Nta5>&Ckx1W;?;V%8U9FR7{R?2Dk9ZACvd~Mqx}@$DG&NAAzL?Z}&xi
z07nER;Pr2B7uK|xZfu`wE!T;6V#b>z%Ef8Xb5YEpm_RWLe0L+|d=kF7EJZd6SCi}<
z#I8b+nPaAA^DlE0zIWF2z;QiAS>*QA>Ne;HpV$xm`$;wqFr1x^l6?}8#?Vv~f1Zjp
z%JZ<^j6a!_>3Xq5vDir)^0bJPIAqRk<>o8Doy2ij?@<}{=>vIMq<NKAcj*IrRE9h)
ziXzW<FK2=8u6<CQCgIimXLmIoms|OWssLjB4prp)70UNE`lEl_e9Bdo$Kh@LQ}Qd6
zh$C3;y1MX>>B6HsREiP23a2V=KcsD04zbx%W)MtTA8g|dd<5KtOdkf)kvHMO%>vuY
z4nked*nF4+ab&lF_~E@HTn>k`1EB*gH;xhJXC_nUTeWBk_;~Yh4GWeuf?ujlV);<C
zLz(Xk(jGfowJPH#ecY1q=s5ls#hKt6Om1PAk4053UXve({37O+!&zdITbjkB?ghLg
zr@OQQSr8#zls;f&lX85N!hnQZKv%GO>dv~#I0nOyaDIzri6ABOT_M!>>e6<oC`O?m
z$VI88=-z~TT9sv7reF64w^|6>GXmdlx8KMA{x5&|<Bvb0KQGg5dg-Fq%llvcXm79I
z|LZ^g%RlFT{Wko3`Tbwpac6ZVdC{cBA(xmXg~kYlGrWoEf-%i|9(*wPso8;_YBR!G
zl1;3I)uhO?ygoFHv2^*NGRD$Jm$xN3gDttNX~_i_rFYo8&C8bcMqXhsf^anjdQEn*
z0B|BDrs0O7PLA$OtSH>{?ahr5tE(HD>#)fqEqUt^N9Md-X4smOo$)akt1a_<-{1RJ
zMj+=Brc)=Q6YBTKpnQusjhV+*C+O~dSHz^OlB!A`PObOdO*YxX^7>YiHzdsstr?FU
zdo7zp0CKN8nO0SnWM3%0y~$v@4DIcEJFEe?ikFy`%f6}3l#B%Jv0x3X;;EA{hu@uN
zkfw2x)ek>|J^92t^ngzbr%6*}b(&=xdHF&XY328eB2Jq<cCZIrS3af6!T0F?r|ht%
zn=-Dey11K7d$ZG(k4Ty#-QY}r!Yf|v<}LG8@vkQlG3SZMW<;LkNj|DiPydP5GX8nT
zD>y6irYxJUlQax4fxl1Z{`Nikc5OrchL<d4B8IzRXed7qg47`)PSUP^Z;mgk>a422
zP``1l*>Gnc%W-BVVJ31`J|NwcBz2i*O|w;1JGG_dFE?3QHDS5;pMR;``_KcqtB6E$
zMM$bN9aBM`4O#|N!x2ysrJn4a)Ong@aZ^3K26o}Wt(C3~4B?-4Z#b;y^zmqh|NXLa
z9>q=86vgAS_1oO^g(1cf9WO~rp&F)Ci_voIVgO5%RTWTqz?{~>VCT+Tt(&+>?{WH$
zJ%s&;y@I5eq7}t`x|=uq)+R(07MJRvPO6ANpqac)D~|Tk6q~{an8RR8kgCPbu$iGb
ze0m<V>X}%3elN0QWt|jp^K~q=kjlEnY@(-P`v(BFi0sO}L@jUP>?=L!wvyFNza#DV
zNfRXCw8+$&G@tDR!a!g&4=;c!AvS7UeT5(hDYRIGn60_=aT0TZi4Ha+wx)?ETsRP&
zRkJ}G%W`MpBxk;ZkoXG(Yl~|uj|kh){U9|Ub#)Q?n{Eu9>xtm1bfmhG_#M(ttWE&!
z6idt_B#-?T5j<j!vTgnozuA2q7NZ0pF(qOh)kjBJ0`{C3Td$mgiMy@$7j#iJMV{W9
zuGkqaZjtor-v2m1TY1wrg<atg_AM(OUvP`fIy*6{LWSkYL7Cyq@yHf%PEqPfAj{6P
zx%g~fJe4X==3r&B{B>iF;ezhbjL2Eg7$kpD)kWAa*!5IsXzk0(rp}8x{v~v0DPFVV
z%PNNk8aZOUkNaOPdfo+8%SuEMo*o4TKm&vq04NP<j0q*5saZS6Zk!fHQ+$3hweo20
z6b>LyPs9VOU4BHGC@G4#EdFCWQ&u)5NC7HC6&sL9>za_83)!KWniuk(ITMk=Koj;L
zZ3tchdZb_=<=|@NDV-RC*u3H=o)$buFQx@Y6$&nBZ~h$g{yXBPK_ooTfXIqEZjyVm
zmVdLn)~(4u)|o`0>jlFN>*Esai}^MJl$P}jR-1}0(iE;RS-H8a5?Y3W06)PN!hox;
za!<3Ou8StIrl;FedL*z$pQ*Du&jY=AFZR!S*d)^&-zEz11~=%WdfK|qG_8IOzFzL)
zJG!s3roi$|uTQ9<;fRtgn^B75#%ikfLROY$MN>UoDQt^A$fetA@Gi|$Zb<IcaKNS^
z#4(u+qOE?IT{K3(LRuyJS>ZL}nTjJYmyx~IAZ6PrGmEmWs!t$~?2q$q&iHVN<nss$
zi=4x7E{DmUNgzP|@G@A*a)0JQG>EVe_4e0&i%xV9G_1|b$)`e+N41kxv%&yj6JMJg
z_f#x)Qp=6IF|vsBv}zuovt2fvx*t<-+q2tJ1)erCr-v{b0+}`o1yb=(MRD{rdD&A6
zz5Q8ECQgY-AdMoZ>4u|3y3(O~^kjFb935`pbPX>Ll6@0Wh_c+$s1h54Q+Uw=+kua*
zp$~OGaT1bfy5fI9<XW;;VGI+Uwn283Y>Ob}66&C71G`oun$r@oQyi6bwo+$(*#UlM
z)nr){SJ}g>=EDW?w)Y0RI9Z9Co%A5CtLzh`81|8#Eq+Sx2NEv$0$IN3z-x$$rmoY^
zPntsnaubJeLCdECe&(FEhMF$#BS%$THpS!gkpsEJwvht|>UR)PQbN!Oqv87Rf?8OA
zF({{y87$^nf<7yS4q`gCjupe9#|7}f?xQM_xUAyx4sff9ZoA<GMH8<|ke7*gKrJLe
zinKNtV+m%|5@duFRe3flpWK^)?)eLu=WNgnJ7mr^s)8%zc#puHGN{~1fDimtJ??qN
zf{62Ds99!yA1e#WdGOscd~{uh43Z=*i#m4`a(A4%?eHtR0|7PkY&mEH;|NZZjMa7K
zJkCviFz~C1i<zN^BZ1CDG%pX}u1?1x#VdiA=95)z<>XK4AIyX@)^J2EGob)iHlOjF
zOnGd}CP^qJ0m-V@+fX>diqj5!n397DY`U>KufMIhs+;tfa=D$H)Nj5$wK8=^v=FUX
z!@;E+4sE=5t9+g!N%E?8gZ!IumQ<HIUXSQtHt7J7EMeNOp+Lr*Gx6}KX$Pns5U~1S
zRoeA|-=^BDNN`agi)#SfTexFLi56ws+mjufm|vG%DJ>^XP$;`L`cjb_V?-YkWK^2H
zvYHHwU_YWD?w0AJp#w7AFt@`*U%e3L??6SH7G<5g*2HEVO}(R%UnEIfHpQU<fe*_5
zZ4KC)jF9^?M2NTc*#ysb2A*7-%;|J==Sh^bWIjnd0lcv>l7LV@v==5;szH3@yqH#3
zVKCYIktLD4!Ik+_4JXabjmwlQzY~G(t+OlS(W1|91zi1Mz;GsO`kE7aeZY1vjVZD;
z%k$6A(bgD!>rVQCtC;n82qu*j3)azakSo2RoC>!b`M)6;fWqc`=xE$DRsMyp#!FM}
z4MvPw!cvK3mb}VQ@LVp+5R7BT(mtA(tkADHV&YT;!%qj=&PkJ&c^W^garPlS<+paa
zw$UH$w;?E|Fr3TwvBxuP3g~A*s-Q=)Q2&T@(NE(^(nE~i_H%IUKqIB&IWHa2R~Dw4
z$q=w@Pqpv;D-1|K5B*t&CIve=AY+}>8B~IgKK6YqYW#C-&+q+WMB!{rS)NeJ(1cfe
zyrBjPIKT~<X1Q5%bUrmaSUOQP9O9TOqEoP%Y1SL^X_V|4_x5p7G-aH{hiZ+LE`=5F
z!m*=C<pQ*IXB;r`KZ#2snuxi%i1BG7!7Ae-%W^xrf0r@Dz`M!j%pt^CA9Mk@1k#`y
z>D;VRM>XU^=)kkN`xz<O%%ZVKTmi`pY-KvXB+rHpS|fqXCJCC8%__Fl5#gP8OYpl`
zX_)WoruT?!IxeHX2_BTBJb;=uu7f0{2c=+=VrtU1{;uM}D`>3l7#WsspM1x{%;CZ^
z0d6iFUN*2$bQa|>h4|)W1#p|wSaNf%cCxwc+}6}Qy0;>v(eps+2S4>k=G16yq;%d{
zWs(0{2Y4+T_<K9_uU*t$-^bhaGJIPytT=BreiyA#=M3GyRpV-*j*Qx?ax!*j(il++
zJPooex_VakizpQ`{(j>#f}PPZRAH>d>y-IQ)QEL5efaEQQtK?G3MBptSCH~kPwh%h
zW}XKYKQe23LV#VN4S3r!YtD7x=oG5<+DJv2$9esQmJmzU-5qBej2XClxQ)wqMOy7r
z=^Met$;+po4GDg9#eN7B_JczV(3=|?)}09*B1C0pQK-iZaEFb$CXx{}Ac;(WenJ<1
z@n=@qJz5@w=wF5tMnA9t*SudY37l)i1aJ~}K`fE!_7y6lvw?w_8yoZc4wUE_Bj4b8
zU?B%i&&5~?S&*o1w1=Zsb)9^HHFhv%usOuuo-wLgh!DgakIkAFRgq`O<F>LN?lo-A
z#~5JL+Qg}lt7>F0QNW_T2JO^@XORMpY@p`n*yT$1D2ruW&VP9HsqH7WcT=i4VzR9t
zIqS0Vqu6-fo&qC4slLdo2TCvm8zcP`gf6Vm1Dy)?a8Yw@=&aE0aSn74%J`HPeN4oS
zuo@&CU47+flB>c<vON_elFmAI<KWVeB%<4ZGD=p_6%rrR1A3UE@d5u=e<Wi<N!b_(
zCG|IzECH<pE_V?f!ko$YA1gmVx`-o*!yFn{%knr$l7|bZ5AV)@ySBq?H%8stTYm{w
z9nPyD{7-+LqcV-L%&&T<D$L6|&%RJzdwC>pQWa3k*l`F@&1o)yAhj9btfb;jPBc9b
zPtU{3xw((nWMxw2U&(q7soU4fOFu;4F7E-U1-oEK%{!5zTlXe$fk<tDIPxwr(S-Uz
zCf&uq5g|D%nKGB9%y~49;r-15e%v*|tkJ$4)^(DIZ9rp*E!=Ifu1noJ>7lC5>!fTd
zg)~GNh&_UDDyrQY-6v?wC?w0?=4Xtl7Yz}dms>sssyGFxC`E)&TE!5j<}29QS4Emt
z<>RTy2N_cW1oq?i0O*482ui6~`3He1SKypjQ3#16ET2gA%>1|z2{m;eJ#lPG0mtvB
zU6rgUqb`O<9Ex7{oMIYyola7vSbqeD&a0-$%JkuU;DfD-YxmN<zP8bI>i@r>u|5}!
zEr%_(8KVbDi_Pj#Niq+oF*IiaS@!qHHU{B$Q4*J>FKEx0ew6AjI(d9OqOloCV8W>T
zPcDib$E`*uAEW}xz~`NwhalVMm50y5sprqp-5L!JKs>$C|34&7p5{eSmudQCZ+vYc
zZ`&q(6ia#TWnv=+ia&jC?me_qXswRLq&PXr{Lb^>%+3%-&=ktDyyi`}Q*mT*8OL8k
z3<{VhTdHlZGO|KTK-LnKsX$W4I3#BQ3qp1LL-t`J%S3!QOgX+6wBsbN@-Gl1fOOcl
zBkqmnJCtu_{(}%GDadI+|NY_(cA@k(&vGxl&6B!FoATkC|IjAdQaeMHGCHu;e%mz3
z*$`L!)gVRkGPfl8=lyI*Ck~KhghJ1DJQ}`i!$wKZ+&#t5GA`nx{<>$m=m2i*E+mU$
zT8Vg%ITOULgX>mH%po%yuKQ3XoQ8mCijL%+Y06Cf;vfKFU5WZ~x>wgYIe7A5frrPT
zXEESB8xPk!(fq5>7i4n49FIHuyovKHecY3D2~D@%@1338zc*`P&_>p|YuN?How^(t
zQN0*@DF7FbAXlqu;Fr-(I-GdQl}}pHyqbTKSiY3m({8dx5OV=eulp70jK&UH;60M7
z5pahn7wZl?6y`yeu=Po}BnUDi7(Ea8;fya$tXl|c42mJG^*BrSGRs}dbpj?^^GUp~
zy4S?z7r3{sOlNKD=gM(zCv0$U;abOsDA?*vDxh|ZEJ92)hEb>eaksGm7)v=Z717|;
zl)Ug;qWthO&}*dr(!9hF!NzG+oCkQFd^2jY!gAPeyD7(p%Yu2EqbitYNu=v=JJI!M
z)$d$hLzt|6>d&X=0eLN|g@@Eu#klDvgz>qvHuAhFlY8XTUtAk2V{e;;1+K*@F|_hk
zDzhz_64l4}gh~69(OZFYIjc~b$KHdei#o6KJA~!G9ibfpIKhhm522P!4k#YXCo@BS
z7v{vZl<3e_uzh978w7w}={)9jna53SN66NhL|yA-kO%ZfhAl@q2B0voz=W5z{)I`L
zR@U(1`y7y?@6&J#UM-ow;6k^K|EA%j1sg@@h(z^_r5GW~<h-DDC$S`KOtH;&nCsxo
ziKdx784Zm=AY||X@SPlH2qtLP+P(8LNHX^f*5?GSs8wK@9No>1d;>nC&A5PT&L@n3
z7D`}M@J3|Yd9EKwHICd(Y+jz65(hA7d#&GJ+|*figx=cOj;uKw@uhQ$_V#=0WZOxB
zf+?{)Q?qd~Ra_-bsQq4d{5NOc5f&W0*ztI=AsrXl>ID>al~%>ReHOuwEKN%P+7D(t
zO6QVW)vs7vUs>#?**BlRViy8xb<};a!Gp|}d0k<s!t`Uhu~h)QGtn6D&tT&`(qX6^
z0xKsW0#s}l-MyWd@(cV^GSq8P8G=5*GU8VNT7Vb`N>VCJggGI^D2ob%9&F1heNTpB
zvbCU+x;aGe-5(Iz?wwAO2vGO^OpjTH6)Dr*JDlRGZu0u;_=O8Fe_c6&h8+mXq$JjQ
zq+N&xckYm!CVu<vw*gK*zZDG-E=)lz?2vZABMN(kewvh3UVQ}-Fc_uU)@hSxV2>XX
zXrX|OK&0srPvjD#8(4NH_acB$wg~j*7-z16crwpLh7?fz)uw>ZPg~GC0NEDD-=&TI
z`~%ee?|yPalo~C2?Wj6$;^dyg+OaqEK?M7*N)r}c0je)KIKTjm)?*y%#<4@Y6jP?D
z=fH@B7(}n|cngZ2_Qvy{!A9Vq7+RC|H?ft)T*k&c!2^NK;(ybQXNaVaW&=_~g7+bo
z%~Y{qO9ZVR1$OK4f$W8;I;)E6KawTBF%PG+5o{_F8etK9L;4mwh;mXjY5X{b`XLz6
zi(GC%skkinG4Uj>(m21z!Z~2qV{>f7J9sBwNE|9q2SEOtc0H#{;;M?9xOC<_+Xylg
zg4}yW4XMx%Pi9n+;4#+;su`iY<*tov@zJ#m*<FSx7_FYaXTtuFtSHkH?u9!k1v=WK
zsB6SHXHP1#BFXQfHNx{<P#fVN0X&<uv+V@mb?Ro}sl^y`0CxDq4+kQ+d}1Jl=Ggfi
zO0S3BHI>}!Z?mbII6h>hB+rANvpEt?v7$8vD^qA&9TIF<0yKZX0Ggz*RO|safQf{}
zrNJYU^!fSLJHmJ=0seh#Pu{5!qp&_lVI|SexE2=I7)%MgI0MTSe;WV@^i-!8fn_P5
zuqxq)KTnEHpbf;Y$av|Qnv7*I%$nPBri-hr$V*%IZA(9ZahOSW%=Dx_7S%i?_dF4O
zyPSz{Y3X+CBuTQT%j>I?v`U*JnfqZa+AYBy5lWGwO?oPHyaOU3%KrLvyPwn=^(F=I
z<M`Svq&wcME&S7~i6NnF6Sln^;75w)S4FoCrT>X0nT+JU&VtL`5T4=+$+Mq94a_kh
zPC2=u3lIK5mB!o3UML+E0F@f7%epdOMllr@<H)mQnz&Wkn;~>aw_YX!@msKIzjG=k
zX;PHg!{_>bZ*<!cfm#uaUrr<^GYNm9lj#l=0(nx$NiRbq)1A;EA%8ghm;MZE024qg
z(Ip?nXD+MDzS7CIVwmo@*J?=erp&*tP+d>+?@;1(Cur~lD4$U@_SKjlOJr42|Ixj%
zHcV@ET=$!CdEFFMo<5uh@0O#RkxOm=A-5rCP^dNO5OjkZE>)o6;eO!q)eI%gC#oOz
z>j#@$k&>DobyRLx!-i;~Cbt0M@OsI>ky-d61xjm{xBe*8F9_)JVFxTDT<y>gAH|%V
z@QbtHp?if*QZ#iFH;0-7+bRIR2UBIiW1yC(45UDi<ivx9-Y=@a!H-32RJO&2Vefgv
zBaElSc02PSSuSZ2@ge3W4_lx6+NTT^;h6~7>bZkhymcIAUsS5NSkVbiEqgjZCQSrU
z$n3DIOQ;EvL7+W+_V>}Pn>v?qStdof3(&KP!tIa#cI&QSpzz+#e|*1;x9>mxGR`Y`
z{7aM9Mb?ycom5GkG;!Rle`}H^)vrx~Eh#k{T9+L^E=I@{XV@>&i?XTXG=7*_wm)02
z+3&-w@5)7&Ei8H7k^1}GJF{)^%Rs9R9hUjz5`$dZHo{_|#nvomJ5X4eI&S1aadpf>
z#^y9EBsy?bv?qWBp&pz@R3%lNu%{zgwy3Pzy#pj^$|A`gK1L4>8g9bZ{n^ZUld##e
z61bL(<CCdKkj?^cJQOd%sKTkp3BQNXvv$P8<V1f%Ed&e(SRaqvMPgB^IcgZ903Aw^
zEh=RQgj=u>PoU#>0$W8KCArbcyO3THwH@3Iz*lqF<PwH~Jb)<rDaigi?%`2Xlx=HQ
z7t+b+n9TYm&T7$U`KaI=t@D>XBrC7eG_Ss3U4<;6>*derTYC)@l>987dzMtmy2m9Q
zsCmOe7%+YDu61U5-8ovB74CjI${^u0P;lXX)a#K0RWL&ph@1?b1q%U9I^mBPI)H69
z${Zo3J?u<j)rg=_L(ck3#Qy$6FQQRSQH5$DEUcWG?s#(`w3hv<fkO^QhWKaf$@{Zf
z4$PYqMPd7aScD+1XiI_Ud4Tn7KMvc`9l<AaNx0Xisj523>d#M%7wd0ZYOr;*FC0C#
zg|BgR6;AH1mS0lGaZ(j`W{xyLT-uYmi|aVb(a{&!bQ>N4)!1`@cyVvbuGi>!Q1vT~
z${Kq5Rk5w4j+-otlTFVgla0)a9O4m8HT5SX<;ZLXbb4(IO5)kZS7&wdpxys^ow&u#
z4TQA1DHwUyo_*{4YZmdst!jT1hjl<@-Hk0^L#g#+O_uBeB3C<GsV=fOueU6_mO6H8
zAJF7Y=(e@6jCDkZl@F=Pc*krjsEAfRqe;tT*SmINJ(9H#X!1I~e-X}EWcd+gQk8jV
zVD@V+NV{eGdwc!XUb|cLez|^Y7cKUYlyY$Qm@M>N$BZEU3z7$8Na%{X*#_K8Ih#63
z%ktr=$$cr|E!QBJi@Yhf3&k~mnu>I}X^u6Y)3_+>`U{6?G{Lm5c}wX{+7aIdWl=yB
zRbCbsK!y@7M*vCDivmz*@>%O044-fC_nie0S5<bG0QulUT8_<bAJTiyhW~B+>wo)~
zfBGN)m+^o7wv+K@ag%3X;7qZob{*$zz29ZizzfZETN&|PU@^(+JW0xj@8)P{WSvL)
zoBTB&a29lzvTLstY4SJ=CDRtkhV-FVe!s|?Dl|=Bnnf;}$}68#)_EEpg#P&OP|V6l
zR7tsimWHjgmCtG7GRf}x(ueHh#fKDeoF&z#xmO-0jcrcB>%21dZh6T=zDU`rt$=MV
z+x>hZyR#b&%oCO(6W&<9sP^Ga@=)gfkI@rMj=u9Cs7<zL`b29fL6l6IDs2LQRRNtI
zC&ShyAlXUenO31U)Y3+Tv=ztOnmQ-by^zg_-@0)5Iw=o`24bIxT26xt?xOUBSWM1}
z)U%O7;?v2`B97RA;<=5Uo_Ihw-t*6mtGv$ghikzPX(n#D%tO7aDSF_>X0##!a~yjI
zR47$^j|5khRazakwAsuNoxd@wILlhsWRNK(Fb_ja^Zra|y#Y_G<SMO9%a8$>RVv5z
zdNHfYrpg*i(cYThqn<xshscF-HhWSRA?R5Mhlgxmu|uF!0L#|g+QlVJk!_X(9vu)j
z3Qn7spI7Bs+*A)$s0%LJCh-dPC5H-xXDDV^5&<eUV<mpV$qqnB`$1zSMA9R&Q$<q5
zc^*#ADui*FzP+_$bZ&>fTR()7A}-T<_e5NDZdX1iPt!$l_fM;K&fD2SQsh-qhX?B-
zTUcT<%TFrfB#Afjj!z6<>ovue$_lnc=?nm#5>ZCmIbK^Gcq|J#2TI~jntu|Q1g+t8
z?}fB7FY4xT6N?X24O=ms(PDHo>c?KEjvyLxP~oFoWRz4Fg=xGzI|{`!iP>YC0Egts
z0mq(NHKCU#b=-NkJy|_G;$awdd`G6-D`u;t$&%zwF{}G@n|ETh^9({xq`1z=P(h21
zx*=!%YanD&Qg(*6BQ85dD9CTeCU!r(t~Vg(l;o_%*|bXMlJroV-NzkXuHA5MqnFE{
z=T(M?<KrQ#ZZAycNmZA1QvPZYlP7gnG<AA6xUE=*t$a?EgM0f9mbaXmTKlLnOTtT9
zsUDX1xgycy#jjd*7j!IDBiM=Ssyj;?hNtr2aGP{|i`liTL+ILMoz?l|B)uOnJ03xO
zXKlgdN!7$nVMi&qKpdjxtIive+t$a&=4V>fzqXDS<3<~kXPs+nKzrIqora39Agp>8
zV=X2Haju2*Iqiv&p1~R4;l%T`pxaOH2h%#PdIED;m`S@B7NhOtL5BmCt+?I*k|U3r
zTxcN897;+kvgWxa1_N)-kRCD2>0gL~lhlh7otwxWhZaAm7qn(dE3lH_HEgS+oq$p2
zMOvhvPdQu}x87PO7bMUtF%I>9u_wt4(&vHKgykHo34>W`BmpTux0f*#b&}OzD9^X0
zIXEr#%u!RYYw@4`8UIPC_D+Tzmt~!o55uL0C>nQNiJ13-&VdsUN||e|W6;P(kV=5t
znouZ=c7_j`U1odIo}9BoARqWS1Z0tt+9_%i!cPUT4iZK71pTwPs>(FfIg?l%I(@DE
zdJXFK_p|%}s9JtZog^^EbpJHnuY$6;uJR(=Xl-p3{@d?bH1`ciL~<33*yz+Q_b55<
z<(X3$x5O6nyz@0bJIRj@mw`7rV^B24Z3VtUBn@4>nfWaij($Y6`w1jx;!gm}Ttr-i
zaS>2CSi8SFo1qXB-1T8-5ON-hlJmpboP!%4RwI(*yOz4_pwF=W9*Z)mY+kVKI>$##
z>n83<X#h`MAs^GE^P96-@@F;rP(_H&&5r;tRT6RO{N4O?V91wwg?hx8^boe?sksQ~
zL!F4|3hL$!Mroc1Iqz$#$Lsk|7S~yvCE1bu=fh!rtEZ2&vH97WlMVn<lp;2IEFb{^
zSeXIEz-s}i3lLd_IVQh{i)emg@(eMfXnAiT*@v32%E^`qTq%Vn=R$9k;pQv#{75->
zNnPX}O{d#&F+b#VE_AyH>6zM!<f!GR#enb=9wBYWvmRX8OE%a$=Vn#MahZG_?7NPe
zY!!b5m0ZTflpgtKfY2d%t{{C6$yEk=J3JRq#8nY5P_<9I_q9P%6henGCLF5#O~?Fg
z5Ct0M*<&1Xn&3LwWf><`RX1hxb+36vgn2U}BUg8FTJ9*Gh=0qy9Rkv)n<3$2oo5ac
zn$meQ{hPh4W<EUP_+gA}Ps4w`TZ<xAn#J?^{0|yYed>qP^UzK=X&*thILE}p`m{+?
zS8-WvHFJF@VEM~Uo+M?xpClc7OdnV>uh+K!7G1mU9H!LWc(c^n&Wdx5jySrv=c^=b
z()tUzC+pI^8)Q9~kK+I=-xm^F(M826^#s#Fh^;~~=tL!*HZO=(?{&kfDyhC=5Fr%p
z*Z_=8-XaWP9!it}yg6MSZzRtpNj9Vf%JpV~5=Rm~OZK)+(llin>LncSjU;JY$3?u>
z8~ONSJl?2Uk2C5|E}i)~tHCM)9~khip;nzwQ4Yw^lrov>9)~^7>%4q?*?c(ByeCh<
zxE0R7Deh)0C3J7#_?pto1u_>pfTWnr*5*fgdLED^PHi4L`1*si=H?L2^7uPDFe%F_
zuD%Y6S!=;>O2yF-nRExN?yoteji9R`MFXe{dHh^VqWG1OfYeqOBz#&$`fOmrQM)JA
zZNe$;*38-q=g?Rf(Ap=!5)W1EhY*!h^Jw%H;W}HILwZFlAd8i=H8Y!dvQeK=Af<dG
zeLL01)9{WGOaj-67Xj&J?HyxDT37iOC@d}D?XAxI9wqSo|N7tmkDvc%^?!f+e_nT@
zZW)(l{J5v<2T$ZXd3Z~E*$NWTbcJ0yMi7>dDP=8vr&%GgtPvF>9u3+H1yz;B$rpx#
zYxi!Oahvu`97$RBkXw%jhIGp+jpKOhG(FHpOUkOK%RD44g!DT%F1P%QIz}n7ug+$}
zV|jDj63+?NT2Ug88XD=M(|Ufdlab|F*;Ee~c)Qu#JtEZc+1)Hjnz&4}EYFH8kL$g9
zriiO5K19^oqO;>cV>lLySArk2fq^(CYeK3pDpGa`X+tw9tmsU2;^_zcE+Z$T-Lo#X
zCMV|jR3M)!S|=aFN*p0m%OO)_KD&IBWt?VZx-Xpx8b@q_GjIOy{i{XAR4!c)c9;kt
z)4#=()VWjf2G$}+sZmmq>Y42jSq#(ZoZwr;_Y+y?)cLSwyI$bqn-bfP>S-E)vsyRP
z!VYIjRe5S%7Bp#!yex7HM89;m+n>>E`~Le&_x83}f<K&)qE(x2MSa}P{9g!3rj{z}
z&?E8-q?Q1mHu;zccC+ddS~NMATuhNPYZVDd(^%cO^DM1nYX{7X`<M0_cIQRE24`sc
zK|A#uA71BmTHj|~Y*f*@9RwnlCO8lnAz}Be^(RBvls(+Fp8AXcuUz<PUUJ+y5cfH^
zeC9_>Xmj_|^=4o`Rv1X|nx{|`k9#2UK9PdiiY^#CQHamYEehm&&a?*XZ7jkJ#tTkB
zQG51!fxYR{9Y{-`2SD%e3dZiNYVnxeVh0|xpN%(LRkhX8-BQ;3A-3@n4b`3No%*K`
zYCwAdyddf4@SSReM-im;%W2}+UCw4bG~X;07U=$mswN~EKd-4p1BSNvj|r4)aH~Pw
zgJ%e|Wg`F%I^RfZdv}BxaVy~c(}}SmdWnQb$Ve><CpS#|T~ooVKaiv@n(|0%Xb=C~
z!n}y_NKZlM1fu6b3HW2@RwphxMujXCZqWYcLHR#Mw+x>w>78(s2!r}w7M|5fnuNZe
z|GwVpTKVOwsN(yxn4v1)%7@f-*@PeR`SjK`Xkb%`g3d37m}mf>5W4WRZAXr|6Ah)~
z;}^!FWrmTkpy;n6@{1pguTBU?ZfN-)K{Ly%`HcSb%y^9%(yj}jn&#$Zv_Pf05(6WO
zDZc=8K#RZHH1muNo+KG0Be{3ubx~wh{&ilz;lR;0y%poQJplQ37baShKbFj2lTPH$
zmQ9nYPQF0vYawZ{)#(1s&Q~L7q_6<0w(q^SG|RL4^QlY=Z0BAr$3n6kP|5O*(^k`;
z<OGv6p@e`4VSemydxJ+woELTca2Ix;aXkJxw&(Xg9Pqw~(FIakAO{Bqb&y&kF@{eN
zIAw`LjaVtAdLXy&l+EVzhe#ffT5;BBay#O1!v6w`0C6xUmM1YJpb~W^)<7g`RmMHA
zeDpI0%s4a3Wt6F6J!Q^SKLE&vfb8*qvwndj3v^(lB}wbDXdd6FA0!@Zccn2#;X8(j
zx>i(gg$H}o#wU%lGOe1=xA9qMlHGwZxt^i<DY^xmU{_5nlFQkX^iS$KPt(T-OAZC4
zEkiRec?t|6T#L$qJi$mEt5)&+WPg_Gj!NeN>2W(Z9akwf^d7tEqx0R{Mn)h<KxoH=
zP>efO_Ta&!tm3o@CnG-bPJX3JH{I+=Ed@)NMkeY5At68jA9qy~ia4*ExW4no_K`v`
zuv%C$8l={MV0d~M_JQ+@r`1V1*htz{N_|hoIrg)u@`JyDs>Svyu_9V4*owGFvnsc<
zl-n{63W?EJvLWF2F6#s!j~ZtPr&)^YbaPY#WIFRPg15t^s>4Iz+~TtqN>>cG?uVGn
zIBeW*Q8$kHxj`C1g<Ughjnhq`dK00Mge;s1^<bTGHIxg@h6T9+^I*MuBkxHi4p}5#
zK!{9u447rW;n}Ln$~6FGCR|4SVBnc8sqi8$>LhNG`}0Mnvm>58EEx@#gzbNdF`>X7
zZpPD7z(gFqm&$m09$IYELQez9i-3~*;*i$-3(c@E&7;?EGq1}$J%Ugijk|aBiqS2T
zFa*%LB&W<bU^NqGg0cj_W9dzkW$8P^(|q6xh%w!~2gtjIguU#dsq(xmzK(LS-Z8z$
zglA5z7q@fpAsp9QPvC={-cKvgC|gAtXh8c1k^5=(+W|t0>_V?t5o}%ap91d&giIZa
z3K9u`qYzSK2|?i_^sSLHg_vdrGWvmp4H@Jo(F>`10aQIb8Jn^eW&e<rvf|B5vP^jC
zrc*@u4Hz(@2rX0+u0Yr+or|JKs>eB^`zhXCFy9=#j18K31tBwaE&0Pa`aBm*EeliA
zXakP}I)b!n?hWcnXgMXpu*6A{NC0u+>rdRwkupnu1`ZPp`SY?cM%k?uhyof2e4t5D
zu|=Z2s$e0g00y5oJhutkO7(h=f@DdPRb^alPWnKVL5#hX->vha3fuI*ApMgxFq*kR
zJzbGL<N?=}4@#4~3{?R<_ImAKzqi+O^x9rGJ|j<?W>*K#<sT~_QsjBMF#`1oduv$`
zZWg$hYqdUi!z!1o%JzWNbdD0A57exA({8YiP`y|^0W^_=yoGmxnTxQ!f&kBv*g5W!
zW0N}1(&pZj|FL^N%E$ROb@1yZ5xE5?D))Dd8wJYr(V?aFp$G`U*@KKvRF(im`@NE?
zsOu!oKL1!)NVaViWIX!%%9gk`e>cr+0wVX0xiZh=_&-8|?(f~Td;c@~qkntr+xMk;
zBf_Rmnj53NN@w&wV~(inNZAMd!?FR$U_nh~eoXyBjMmn2a_X=Rlj&6e)}YnUJL+(Y
zsIh8J3CHDmaC%?LD-c=cagR@&&-Hup`B5h5PTsX5#BD^|i-+y_HBBF}9!cvmDejFW
zZyd6EEv^QmT;~V+WiY{`Zw>cFm7Lh>ftW@cjG#QNo46=!-MGmH6th@Pv=Ljh>x*qH
z<`R&B<+*mkQfK0hpp^<;UQv^zWn#G{8+|n~Q0ByX(ot&4`9So9W<6CF81N02nb#`c
z@QJYQX2RAep3lL4w62`+EU2A_R~9V{qwwT0C$LVRVv}^<KW}eyk<GrXnDY<q`>OGE
zT31z)#+%xRL8k+wKlnWX^O>48xK=2ha4IZS%H_;%{E>(=Xu54U4Bbu5wdcABOQ!kZ
zi;%x5-mK#lk|V5yI<`9bTF9r<>Y!bm5vsMMAQl0tWB}Dh7A{@}I>nizRI+zh9$vVM
zCI1;UHbxq}$4<1F<q|GBFk@sMbwM2l80sXL{HpFfd7Oeh7ghph+H^kBxk$0;oLyK>
zfhCa8>qv|YUe-FDf{vQ&x`tbxHbt7JzviqGgyK7tIo3+oA>U=cnD|P3j?oD?sY<gE
z?KN}d^8WOY!r^l?Od}?fI%%TA8uhtw44WwXXC6!BVaz8QH<zlF=9WzeAbBSBu|xn+
zQB(+&?+g(kB20M@mb7rO){WRj7|S5Qkx784zW1-f!Dw}-FFb;%3mDnW?a5d=k~Sh#
zXeQ=i-%(iGIqtKnO0u}DHww=kc6V0QaT(Vi5_Gtuj-(M6V4j;Y2qAkJk?fC-*rPUl
z@kA3o?CNz^NtGwo{b;ort<3}egMn00c66|t0fLi+M|F!{zl1U`a_gDDZVF=YXIL(m
zfwm2~*A29IM6Tf{ZK$OshU`|~r{=AyLYK6%;jost6Kt5)4dpZNG4QZ7DNVr}f$n`P
zd{fK;JcNRa6h$mOGuxW5c4q!u#99b<qWmg2OH8E2s`|u>NjavZR!jCLqB<c-eCLH=
zIY>m$1J>}yECeX%&jX#bVx0sL(F_ptJ%w&O^M$RY6<Jj$NmCWS7T%BA;z{)5gOIY5
zn^Zu2oA5#f){-6}x2Z_mPW=4E^E(1Ugl|I8P?<T?v228WPaFC&|DMVWyU^;A0Z4hq
z8`CBXIbEMRHb*ceg8H?it`m|uIVEP<+Bq>YFA8|4U_Zpk5-)37hmPQhHKnD#62{S8
zMp!?CzZrRyn5~eQNx!S%pTtEPSE1j<XOwBd;<-0QLqcRMhB!wn?>S^`nav{=@;5Go
zd9Uy@b+R`*M^~0qWtBY4uiFO_)&n)lD7-uw2P?67nV6+RiM8gaI8CnDH%+K&8ZjO)
zaLAG(Ekb>PkKg%+*#!S~ZHL!xjJmhC{&MpGSu2innD0^QsJi5^*;?u~iinXE%9zwc
zd1K`B2`J=8**i<p?k0|ZExAC<dt0Xc@Fb(U`!41Y$3>HW9l97YH8)A_CTH!@P15oZ
zY{f*6mnv`$Jp9ike}brG+R>wW5(BnX+p+i)#v`grwNPhFDl$D2cn?x;8!tBoZd|04
z!yF<9Nn!T(I!LnzG`Zk3b<?2Kw}AtQ_E>nJxYJht7(u@il5w{Q;q2yO!#p$aj^c;a
zPEIIXU^j{ZFAQ%`!b6{?x6N53b1=lSRh`4}kmR8(pVDFW;e=?wjSm?ji?;+1ho|ZH
zLP}hhag)Rwb-<oeLmD?}nHHf;>gV-Yf|7LukD?fYjYHZR&WK*ti2Q-8NTa0+`5ZAx
z83q`SpG$dJ#&H!NGC#Y=05&8SMydxg#a7wj+m^;^S>{>naH;mKf9;~bU%n6XgY(Ue
z(FmsnX%2L>-&iO;m>9s*45ts;cOR5CE-P!Y%#J_a;TulI55^<iT#_);mTGbC-77vZ
zM-XY&PM%sjkzM2oEADaBX&49qxDtGD<V^^NzcB${xzVO*VoQ`-*9n15+McQMkb=!`
ze2$j$v-aHt7~)XDjJLN{h5o!O(>N~D-QrVH{2m2rIZ&}pBVOIs4VP8*sl1>ql`=kb
z_@6SvL}KL}Ix+Kx+8jLixP#z-|6TRoy*wVK52FyJ$b*ZFst|i1DhO8{dr5neHRa=Z
z#(|7=8)QM7CD_ZV;iC`$&1vzA*WQH|RD1C+&*LWFl=0btl=3{!vnG3713b^GGS5E8
z!tUsTy-Tb?HQgW6WhWV}n=C26Koc2P`LTf^X5vsj(+_|{KMzK45raMiLmyCgH$j{g
z)#Fs?y%b@ahHC+Y^L(R#4qM#Kw(B9KK=x$U0-Z?o?ud&h9WQkr;`5n_bdV4NgzbH1
zo<x51-84ZYbV1{X-2XLq#)~n3G4D<;sNmBg>|3x=k|eZGGN})+&fc4<;=K8U$)FDn
zJ>JWR<TO$i<BgAMyiX$1U<;4>HsE?Z^pH5oNkQVARzOtBM)Mx#pZ(syMvKCPkSd^s
zLy{ohMM=NW65cx&^0KO`<O{6^!}4?MTqWsptfNP2gwl97u0`x+0DD~~Sik}bNi8(l
zaf=88(9{bbC24UHX~K$zYGW~?pkg~Ha&qI+hZ(HaD1Y!gd_QPo2DY3Ud9-H{|3RFP
z-?rKJdw^42CDkV=^nDn1IcR?6=FK23T-;-XCn8VFbbq^_oVkM}U3WHwS&KO!2Z|K7
zxi@3LJnAM$B>_;lDm^eV3nvGnXJ^xKV~1u}$YX;c=mpI8MkTvkDEZP0t^^B`#KSHF
zew|C?BiFbEim1eIX%q1JMRfx~HaX@H#X-~(Lt@<Cib{$!ZnE<8=hT*G{pK(^5matr
zgN85?2y-|`Am}Ewe$4o!z&X^A5{O)0Sfo47w4YGL?ToJnu)ko|QF<>JXAC~3kg7Ot
zo(P9AoHTOkn9l}0$u*UCYg;tL?4s~v7L2f24<AvF-kks|=A^i89>#3<+1*?G6YP26
zScH-_U<`uiVW|c{;u%sDZw%2Q6t^}T&ZF^6@<8NUfF}bA-qv=q?i!w%J-Idlfy(?L
z*nMYZBn}n$TEF+N4j$|H#G)=f$lcqfmIDUO43<5b$OrNg*%DG>rwR&sN#PC!v+Ww&
z$pY#otDDC`{rv^9+WKA-kAS?=IGYeX>(#FycSO*8L7}>nH1J+kz?~X#iwHrkI2PPu
z0v!#b-FtXhUT4|kcHKw$!RuH~=RF8pjBS>}VE}OBdmug*j0c-A=K(K7kHrGgYJ#?e
zZUqdg$jp_i#TyERov{sSjz#%2H|nb`0s1WRbhvP$Et`NUBDhSug~T!lgS9Yzpnn(~
z3~PlD3X{z>4en={RK-xSB;c4v97lWWwbY-Z=fRIMGu;3l@=g+%R9W?vdb>+m?k(rg
zNsq@TCyixDpbGKWp%u=#h;vNie*%2z=H6is%|}|2K3*a2t9{%-iHX|5kp~8F@Q$@P
z_AaDpmRTlDdrtd^_2AQ=1B%^glBQ+)c=q<eIlycC_WSp>dG6mhu)7I84D7+FxF$$8
z9TSeo(!8kB_)gpXZwDpmShj;i#QKrdifvB@krpaX@EGTVM25=58xLQ5pabT(ASOmg
zK#)B$y;ESs9s>3SFm0SKg;p50)p`*I({L8K{Iu0+Z7sr3M8uo;3jM~;+2O5FrN(+$
zSYIhyiXW6K0!Nx>v#bN^E>H*EoE!7G>x}|gmtp0-msR2v2k%M8{RrgaFl7|aBJ8aI
zDnn2W9WfhUUDR=QNEPh^adk^UDAX-vy+7=KK~{Y6CnTH0FkuXEiO@ksW(8oWi#xa`
zpvGi?*S%y0mOW!Q#yd4fQI~lWN&tUifLb$H30uYbT+MQvkA1?Hv09ijcVVHCV-zDf
zCRm*e>$Q_{8{L4c<Iu^(vQ9xTwNFlZ$Je}@Toy%Hh7H}r8ghA7R7I18X3L*!OR$Ee
zZcXt?wXV4nBv|uHz=%XACp=!_cVn<tI<#G`<5T;h6`Dx`qvyd^<C7MNj!W-AaUk<j
zh$kvA*l_hunh99b*Zs0PF6yK%{=*7`dwMI!<(ZqTitD&3(z?#lI4<_Gup&;&=Ic_@
zpv$$T_~EBJA#_Q+$3jjPo`(A;(ipT-#6$ajLbMW7GX!yvi-fwxdt0`svocT0hl}aM
zkouOXN~anL3qcPlbfJ<Gx(6o?fKl<olK~nnqUY#_)eu7J5v$=aIm6ExUts{3*c4iF
z$vpo^6bMs%z2o>IN<{!YLXSYxQHn60+cctQ)*gNW4m5Ojyv91W$>-6$zM5u3Fk(DK
zSZ6zFc~+%)lW(~%`6<_xUoO%r4fX1m&iK1#muXhjMY(W}{<Q}5{@nQ{$(zwGHQ>YT
zB<n<&lQ$ZxQSDC`ZmEa12Wcm1R#w&LmxKq^ZTo>SPF`uiFr;L|RJP9pW*!=ojv4mF
zMO?$k%YON@`A%ek_k)`>m~Ig^ZFnq@?*VWcgSpukCF50G;@D{{v~Lz1MN-=viRTMl
znF<cGiA^+)xYQx4CG`fzn|JcZ%BVYI*j~%zi+Ik2>g1C%`7OxXG`~jgsuVpBq6O9c
zgds(q(nsL7!(sk@Z(KU7vpmi=E$_uqaP47ab=K5bD7WFME{^HA@(D$elxrlHrCP_P
z?S7FpaTVvg2EV%oTt(I-)iUJy8@jLB3?I>?p>oJ4C(BE-5YPx1qPO;sFl(dP<zBqd
zWLATU?|Icn&qI*@On!JDvZ19=_+BuLleCHJ&mVDEIX>=4l`&2&1+n-+f_fUu;tN1w
z;U}hOx@Hk1aU|yoY&s*Bv2(cBb(Pfj(5GWh<ZxnlcjSQ@p%z?&LW;9A>YIY-u(!-(
z$f~t$UPyWM{Dq+zeUg~#k%|l{7mnDn7hg0fZ4LO2!P?*qJ8Q1VinvU_K(BkD2fRr?
zv+yLe-{53XeA^pF^Eos*1dXatXybS1NRvwD=t~oVr!2wZm|u{Y*a1X&b!?t#VKiTc
zbRa5J%p8UMiR8?T<_~{yABYa)Y@!IqXwMy;x^GXRPPvn6+c~t7Dlh9#P$S*vq26`s
z$C*hFyBj3nb$YjUZN2Xsi<TQPjRG(JdAnU0O+fZ)YZ^Tr$-tdu_HlPt6m?Nm4;PgC
zyJC~5VFk?WEWEB%Twd~X2!)wQK-rr<<ArGlJ{LeK370j7J*#u9u$cD%w5o{f><hRL
zE6P=Ww12LSh9LX4yWu~X>4X2)PPe@clcn`1ph)}Y@D`4MGp@|JGujlAVPJvY+5X;M
zDO0C)64ze`4{!0=w)lq@Vw~2SRLt5x%?THQ8Q5-Uc?zEpU{rD+`rQ<MPARhV-n`C(
zk6{fZzeCX9b9Vga{IB1JpD(}vYdh}TSW%?)f?Xzw`1}uCj?3T6>MG6ert!gC@XBZ8
zalF7$7B$5p@m~3$qKNCzfo1VQ`|5^iQO0Fi+`lc~(pve5Bq<kTZl8qdgrnEz?&WfA
zzeoRe?Yj4X_8I1PFoG%MB<YMmDiY~gK`l&@IuZ{shD?A6Z-P5aCQl1$AZDT*Wlp}6
z(*;Q_2|eHuOau_9hPZxW{G#Q9=cWzM*7<R3c1AkV-5W&<iHw0B-Pk|1HzNv8P^`%^
z=JfJJKmZW*#eq!(Um_t5Kq^QCW(hw*J6(z;$@)m7dN0A4E8oYDn8St59p?g3%D}gR
zAiUD_X!f>~nnbBJL%_9po!*JL$pSktBa1CiC2czp3`MyWhcfzLto^Z*ZZu_;*3Bj+
za~A;4n<`DpY|Zra6JN#xfVjhNA+30+3)wNk5PG_wP+pE*z}qr<YE*9Qn{MSvTovg(
z$-HCtet?tQu21p)rjD32cq<xj1YO&k#8Ka#L*QO{J10F^QaoJV9&HFR1?Kl_|LSkk
z6GL3zgXHja>eDHdO>Vv)lYXd@?WhlpZSBABB+be?uD<Sp=mj}lk!{2+<ldT_oevN2
zIbysTYw39nu<9Jd6U+2R-Z(QKVVK`A`9&)NLYM2A0acNZmEkfNA~P^M0ozfbIpkkj
zKUh<~V=;yG*WUiCn>wrVd^>veL-g(PzCQKX#7R=Eat-bng|2)`kyH!S<X=m3j&78@
zvy<G!BHM-wA09HXfq2RNC!5t(SvL1vf$rL4yYsOXxgf5IdC$7Wno_j_MIkvMC!w#c
z>Oj?1ooCK(<Icu`ZNO=XwRVwj<Mrs#z?E-p(z?ozbZHKR`OP+%Qh87{jFPO;^rvmh
zW~bUo)3_*-t+C@3fP3W=D&&gnso5P{`A6W2d!h_Rasno$wEZVtdrnsQs5lu?4i0l^
zjzEt1fFxi_H{A@}dG0Zg;W#7XjSh+BPN^ki?QFRutCBhlX6sw79lyVIe?~8J1?GXT
zv#3wlb5BUTKrCT`Il}Cga|q*RrjO0ilCl>rs-#NpfGfArWM%I36S|k~^|g(zQy=&z
zn9VJwU+4Z7nfZyg->o(?t2v7c9n+m)H_!kvggZmkRq9rUG#eLHfXOx9tgE`zHFOn%
zTDR=L&Mp|(6g6#VQ!aJw$@QTb35R3`A1s(?@(2f?j%1s;E>@BydE6w~|4-bXHA#*f
zTY~Uk3FqtA1hFsu#II#;&xqW<v$V`2GK>)lG91iAF#=xc09cv#{`nE;ZidC&%fmSj
zWL0KGz#V{@n(EP`=eXL4_Ly@*ulShD-LeQ&Z~eEiXFyo|B&p%XXD3x%R=+FO-D3y$
zXN#Cn1@6#+W>yQtL9?)IRbDlDlKMgm+nZ~5x#Ee+u58Q;v@X^}phgTB+FNqQD4ifu
z0Y#C4Y6*mk7<dLwC;HIrkc{)HDViiK)M>UewPo2KQ=RtubHpyqOI`1js#7<fRL_tq
zEYfvde%Pd-R~ptaxB%KmGi!?6U|)Eg@gJ%`Eu&^O<;1Ccz;kujb=lHn+>hH&wd0_B
z<+M~uFAW69`RAc3bYwd8Es(K2Y2NaU7zP%K9-6<9mEgC-OcR*ga=?-t+nm-*8zEed
zu@2kQx}FV_Sa=g#nm-XW7q`WYs-{fyB>P=^b~O%na0HvAO*I+FG|OQ}Id%^=*K^}`
z_u(41@|!Yq21<-{G|k8rRsCdK%~l;A>lqyD5R2=jhKV2mk9e$@7ZRwK<GifX=lcP8
zZZPIN6~^P`EOIn0$-$uo5I55qdb5h?<Nzodbh`M!ok))|*k*hsPM&2pg%3wOY9bnq
z#Gz8OT02MDoJHgj_P9opP&AK=tf_sU>@ZrN1H(BBG8TjEojfj=%I|sU@0MZrp|k<V
zXKD9;*mk7iu5f;uA#@Y<QSAs&BlvAvKpdA44`&H88>L}KomXS=AuuJ2vn(keHaEE)
zI6UH~NOjy1n2uwVOI}E9dK##j5P(8(o(NADj39zyD}Pjp$#`g8PLflbOi@ZWv1+@J
zX)Nv@{7{?7E#Z;28Kx1Myn2)PV;_ki+;ZB&R-R~H3wa;-;$2P__9-IcFD5+9iFK>-
zdm7mR2%)&M8DioT+HqZ+*f^BPO@j<W19=SLZ%`TRP*B1#-RoIv6E!a|NeU%^SydKU
zQ|*<!t7LTR_v<VU68{2DU0GFDRkN}Ub6JSim3`+Lbz1w)xpkZGus@eoWt}!vFcxl@
z&um?)sj6cOvm2gpm8JQrVd&y<>n*%>nIhY>F*DrCRmX7WN?T3P`=iuN5q@`E)ebGv
z#=<t_Je_2Vx$b^ESpv3MhPiD@7n&GZwx3d>M3Lr)q?b#`;HcHwL=HIE<Jh^Rx=#3>
zq+eqKqZGRaXkepj2|0?&8z(XBc%78zjmf-8oXK|u0?YE(RFSh40uEJhl_6XZ`0Y?)
zmt=KXJw7!QE{Y{}F?1H!4c&~3xCF4}d0{YQnwCD`arPRAEnSXZ7>#Yxk+VD}h_H|_
zYtV+8jb&VxqtC1b4AqoRC{EOk)5)oppdRebDlay@pn=bsm?<E{fJ>7O1^!Vuh=DdJ
zG?v!ja!}==#yHMtaK%9Q9ItHG6pLhrp&WMfAlyEFd*%U3mdOecO3E}TpV*`JS_0mg
zVfmpb?|{}u3RXzRj1gseN}Wu-bgX_AI9ZpV{S1-9H9EeBbV*o&J9TUnFN1Axfm7BE
z?T;d_t2(I<Sa^TgA?a`6E~A?)f1%K=A(s~L<`76;1Mlou(9;3JMa~PeE7)+7#j!8_
z`g5AJD69GwnBdkWc~h4PLq9^Rk)65GbI7SFEV|MPR&V}RW$a9{X}7$=vgG`se<A(_
zcUH&@A3`H$|1{()0E|1YzeFW``oIdIq~18Li+!4H%714m|L-VFzT9>6I*2nElxAk^
z&%h#~3M);rCaxbow(giNLPoBP&zQyp18lA+vq@}7lqbZ;j;o|fl85=RcQFu;*kxLH
z87l@*?O%!^d1q{Y2(r}plgv^PQgSFLHA$JL{<ML_g^=$2^6Pb7`K8AyG4{n^H?Gr^
z^~yte*ZFvVma0k9GGFx&Ke=_jUZXqam9tRZ9LhEvAud&jbRFeY6HuZV2jKV&D2Nmw
zKwmKZJ5g0jiAy(IlWow0r>sOSLLXst?)#P+McmB`VUuZ`!drW6--PEF4#%UYw)Z64
zNi_~0go4}1U$Cx07K3!1EMT^U9^uI2K^iF4zmQeAy0hE3aGWwVeI?Q6?%kaPAln2a
z{^4$>>IFK&-`4h<FDUyT0yfJeuHy3Z5#-hA1Qg=YFBe~HNDfClUClFca%SzStNtM(
zx#6kjyl(P3-;)UOYT)&6H*r!lJ`VH5qWr+}(G2u;lc;Jzd&!K~1U6=wr+Mz%+24OJ
zcO7W^<79{?A_t4Jv1NbS@fRy3i?@DrN|F^tUZv^t$|9e-yMppJ8>6O*)Vc^<twqU{
zVGu%UEvbA7RH51DqR8T>%tURh*gdT&V;lx+_FMlJy$&Ky?CBUwrybH-z>eBGG&+;2
z%=6@l1@Jaka_4Y2@0wkY$?|q7JX9!Tlm~;9#<Oi_N;?<Qb-}nuc>|6sJeQXuf=&hN
zsMF3$zh$W9V%oXdgZL2&8c9}G)e$}Kwuc)&&5xQ+?1T)E5226rbm2(n{AfADTVMl-
zk{A6K@{=@#Bm58e^k<QZf1BOOVMjX-;3%(s(X}q$21pbjpe*Xk0F^l{=F7^p3iCYt
zQ4SF1vsKNSrUh|?WNo4A(1K(%SI%0?+@patGQ(_*{RoIlI6~a;y@u8Zb681LDNMLS
ztA&OmpSC<;DN$!Os_+Um_xYYk7>^w+u~H?|pYG#A47w0R7RPnz&mMfjB3=VWhfu_~
z{>@c^ybRnpbMk(n(Gt>tSswbg;;^!_c6g^tzYiCOY;t_e+CB3~Hy`9^F<-mL>lvyU
zGP3Xp4((g_HrzKxhc&WtIx=5%ZAvhBAw`ZX2t&tOTBc=DJp2mp9*f-QN;zp6Y#6DQ
z%spD8%|NP>Rb`g%j>ZIr`m(HQ%B1nTS)a%d@MT~3rg@j;>>Es~3)EUG$Mrv+x%=#F
z1!ZE9%RUK?f!{Lqn9X#V0By@jAa4ar2Mn>y3ZqWNN(Nd_Nj1n9-*d7NeurL{72JTD
zlDG-bankv3Q>=%)UGgL?%H;9c-w>^5m(<%CPa8_d?U@8MsYSW<F7fc-bH*T%JLYL_
zACKz*j6q!9xI*X4USlU2pdGnn+n#2QyD8Fi;4&ghP=1m_rS+|xRLLQd^@?YsP!V`d
zgrZbZ=5^9MoQmF*eD4o2AwkLl7E6hJ;t5l-6A`#5avFAsD=%3A6POL%5S`{|D*=}m
zrctr=s}(($=-Bdn>71D=azx=>WR?@>16N^O+QfkUkydE>gtSIu>2Gb+9s9VGk)p;)
zQ{surtSZ|FLLP}e8=Ug6D6Z2cps7g7?6C6#+)HjU-XZf+*MOvd{`y%9T1?-rKZod}
z_q$2l4lxfG_Z96<&33;)0%NjNOEw+o$KBeO7MH+mwl@!p5oS}d!Lj@gSFEO!>^e+y
ztCSC})#eFOgS~uu9dI{`z%#b124;6I%P=HIkmqp|XAd_x!Y}5R?%I9)T#}9VzWvx!
zD}7vspvjB0E<S&yt&J^qE#DjuP~0-c#B{=$V~_&*V2Kd<?}39f&dVxEAFf(&Z9pDi
zKb@N^BiGESAPq^`LSHru;!tgz>c?B`ZR)a4N*@6I#K*91dF&rb+$L7M5^hHob4ba}
zK8^3>;?DJ75c19HxQRi%?@4#;qkelLhj6Hv*yp1Lpx!F_2pGpsuLHUD;}S3&3Y|+@
z9Y4ArT78(@=B4=%s|!8TppKscsbCg%jY1`LndNbP5I<J4{c9OsXo0V^A>2gK`qBf(
z6_A`QW<gq%O`4^}EzE+T%*T;N7SMkn18UDUbutq<mWN@TmX^mWe>UAe$F7H4xmfnk
zl-$bcMXSXcD40E^zQX`6&`(6}$%y)Xm|~gVb@bHK{{S#s;^6zSOHN+sH=;H?Y+Scv
z#=pKX%oM7LvbxHe>fso619tOu?#9XMQBfI-@rP3*kAQ)CtD5_a;tCHOI*XKP0c;cn
zb+7^6*oh`^WXs#^oHCzfe<NRf$->}0dOy#LNr#>7Wq65UHEjV;aluEE3sZ}=Ut}P4
z`3eZsa|oMdoC%8$zCBk?fq0<ZhqVU~{aUKBb&W{iCqDU-0D9{9<QQ`yjT3#6eAf~l
zS!{Slm3opMpx$^-ZfRUO-lAxdl}(x_N8Vr>0=KQH?#t#@pI^ms-sCqisUFQc;g!we
z{^c?j%>p+oDS92~kz@1P0G0$2kp$1{pxy*DL;|N{>+$&ESPJFoRk@_<pWoKrm=fP}
zfWk}`+YsP3hkBF~k9n)BXJ~<?O`PP(!$rrvjV+*dM$_eb^;-5Y*$8lu<R}pFFHB#6
z3i)K@@0@q&U=oo`fgzV%bh6M(U}iOam6zfXNd=vtX=a^QUI+Xhibko0Suk79i?pcI
z$G!gcANQtn)M3ZK%(t=ui^GfOwy`@J3Y(0lh$5W~rslzg<~YsESRUM9BQ@qXPSPMT
zGZYr9G|irvf_t^s5oHdGMm_?#gp?2!SPxZI*O@=abN`Km(AZrij!mFdw3o0jP)v?|
zqD?SfUbNVtBd37U8JPJd`WSHC8Pm~{oMN&b%F2FMM^0gnK|V<~)ffdrrRh?cf~CV_
z5BHAJ^m_RjeQmE^GH;%x1R6)j3HG0K&M_@|9Zc5DIfqH^c*Vg$8Ia3Hc8t;tJ5*pb
zWwEa~H1F#~Hg%Qf$AXF;d3JS;64<ZD*I0>VZd@g;^UN2CbceOv`g!9Lc~La}=$QLO
zzIE^25Ph46Y42;~O|tqL#74b;#f4L;quLP>4G6BlmnVm8M-K?W&kJPRCVGQzgF_?$
zst2x6$hM>c!A6?-Ni~Kir`Rtr@_%NX6C&T-GKG=WNuDG}#HzpSk2l+WCn`GdG~B9R
z_L~@xWANt80{;Y!=B-y=CuNgm4;otdL%lnMA3Rj4hVh4$r40r^b|@xRWmz`=3{Ix+
zj^_4oRr+2^N<kH5Zh~5&*9#%H2+OdcC&*C1d&QOIS+#Q^-J%w7uq#qDRhIp;6SD(N
zuYNGL3j$fslk4c&&qj0;5@ldQ=qxwl2%65ZSb=1H{cLFdXCr)|+z{zZ>g@Hq9^)s4
z1ofLZ5RNn42QH<qin#tB=pI>J{Uv`tSxNoT0Th+A<q4Go7XXXGuEh~BaU7FRW1=sl
zw@`lSxShx=nS|A0O`Fr%{40GSxR~)CXLLPO9#l<{#>vA#)Lryh72RBy1unuy0<Kh{
zqv5ErHj(m*t5N%4NDM$$8c%g14~aJ`iZPz?{LqfNWTsfjoh;=8>lLJEEuZ<Vf73V2
z>6Yvy6eH+(eSw7wexy@}Fm?sI!!qwN%_6=d{}lF3;G&|p<H+JbqbW2Clq6+c$N#i`
z(k?-RXD6lJ<NW@0=m$E>#g&4%4qY(UOqx22({wM_Y>(WIlBO=Iyg3%PwD8x)1*)_R
zPx*wVj*_OX(>(X5j&`SocJtQdLRl6bUkcClCruM)S?uT0t1J0UvyJN{b-bEiT3yE-
zwb-~y8YlI!A_OKmAKkeh+MR1u&1O#jiMwG_n}25__s_;p)e})Np~f6)*3<YX+&5Jf
zSN@*(#GBkB9Im?%aEdNr>jb-8G)^hjbEC$<IiU=`j?=P!-mUR-w|WDIJjxmKKwuHg
z6ZM77guGP%SaJ@ZcV;*!ZXK~4IP-LZr060x#!^%mr%j%*GN8+q#bc0pYfu5xvvivK
zGT0|*n(1>Kzm&Ksi!yr#(SFt0+!Zy~e1TNpyYq{hV-tm5G6^yk6q-)(3{8``NFUDP
zZ)oHljS_(T0;CQ&9M3*r+I$cxJ>;oribZ}5Qn<<hPhh*1RbHj}!|rIoH@l|~0Bhdb
zrJFVG3Q>s69Wn&C=yRGdB6mXBA<T<%u1MnM5|fM_3?}|85JE)>X?b*)(TDYQooV4f
zMmjnI_Tmi@B7uPRprgI&Oc+ptiVp+6ubJwH`_OSL_~%JS4?32lLYBLo%O}L0eiEr`
zf&>zK5KpL&u#8mRBvq2f&x6tLv0LoV@Z!0jLcBSzxs5$(;`CtuhnK;3_O5_TmC6lj
zExQ4miw!$L0-PymJCPLY*h_zTAnlk?Q=+QsYK5kL;?vx2rR}q!Ob^HOc<?IlxHz#7
z+*j6=)hDzF!+Jsc4rrjqHyU+ntS|u}a#(B#6d~n+=1C+z7+F+kk|GddI)^A~%CW~p
zBzpiO&y!c(+F31tztu&V7QQvp{SWi@EqA07sE0AB9$I}QYL3#8#DzQcY)pWB9o&JQ
zR>3`hlgG(wGm|7p;3=g^mVg=Tlb+IEV!Yp%#+dCoO>(1#CA(#YW3*@pV-S$bpwfB>
z1&WI@eIm1TD|cQATo?}B#hDYd`+_^cApJc!M$63Mq1z8-ZfTK~arSVpE{sd>2AMYj
z>&T7jMu*6(DayP&N;=J))&BX%Jk-vne-6z`0Ws~sd$OkOnL48{BJ{35>+$MXQkP7c
z0O;b+#f!WS95S)lL%)FpQh>+WJz@8zsPiI^_p5%(`*FUOIqkU-AUA%3qn}hSOc5?)
z8z#s4RmGbzbuwB@6T#ekoLJ}d$UFwbfnmZ2sbKSDrQY<bo{-#NTtD!XB?8X+@sx2~
z*5yOZqaD8?F?TT=n6yOfG1i|$QK-q1CT<>%!MD(yj)`F_G*^hC>dn&vWq|zYzUWjP
z?TeW-Vr80R7U6o*7QV0~9>g*JeI&t3#3OQ{P4sQVyLOcDlb-H4dH-3vQ|??Mk=RVa
zhB5c!Mg8y`Te(m<7^h{@Jdu>Y-OcjhQ?tie-qQ4ok<iioa1RYu3|bzZsUZQk$2Uoj
zIPe6TrYw^9;iUD>CvX6KsCa^eaaH;w7~Rgp>v(IAs>f!kkZfR?zIuh`dZ!$lAQqow
zRrv&w!>tj*BkmL)JEoR~{u?Py14Br-LTpqa0zEK&%PksJW#@E56;t&Rn(6Dxig+C|
zB%{ZK0Xvru<^dV5+wt?jLIRIMyb#r(Cv{K6*;F%jG)}C&hb5=_h$-iZLIO&51>a{`
z<Z1Hx$<vBOb|8k;sgQLq4_}jy@3W~bkc_gS9gYiICS{TL;1qcFEu+G&Nt|F1%9xl+
z3Qk`~Ts2S=bQT4zwP0#%zwJum5bICL80@}XZj>A{Y%T*JuQU7rq&OVDz!D2#!_jjU
z?O-us0=A(v)~&46L+5%`=0%Y{y!r2{E{@PrJnHO?>5DVx@UrJ%AF_UY+j$cw(5^6=
zusBM(l%OI~V&`N)J@kd9>RopZL}@)d4ySP>H#CQ}gqX<CSx~~_f@Z3{`U$$(E&){J
zXN7s%Nk`F4^y1>09!W4HWNBVM(c5~5&!UYox2Nnj%`i~FPPD!K_nv`EmhpAo3Y+JE
z%!8<qYCKpL2f3ZLTD_4-$nsX9D$+O9pPg}XmdE+Pqz~UZk;HY7oyW2;aNrfu7{<6i
znqe}ubZX6u<f`&@kRl4hi8gfb&r8S%r8!BN6{SxY(LS_m{<QJiMUt*8wmtUb4gPsa
zS>$oytJHs<JjmL*XRnxa0>To+d(ZYcD3FmBMU^Fw3;Em?ALq4FI<Gt&VKDs_5U`Un
zbj`iO#bW>)4rpBQm^_FeKE!T}#fl_B#zGrtd);~2Htygs!mOyX!?}}=+yViVREM<~
zcUzhfW^w!pup>TX$`7~D(0?eDOXWN6SkwOrdj1!2on@b(WPZaE-Q(97M-U?pfL#qT
zu(=QoimN{v!IXMP8XH2C<YbbBq(>D2TvAjL-fC5F#=^Rzo#C_mLY;MsOaZ#5HHrnf
zPKS~KA1}=AGMWS*lU}O1VN?XRssvi%9BYW?+p%RdHS&><#TpDkTylaz&%!~>N~R}#
zIlqXnS_tWj(==_KXd%6QsO}nRIJ`B3&Cf`{rVtUyZ1YyL)$d9g)*5sz&8e+NHJ(!P
zVx{$_f2BX$!}C3De<lztg&#4Fa%9rWY$qlT+EvMu=S%47X177wzTB!nos?zLJj3AZ
zjyb;2bmo8gub1jynm_*Q+h6}Bur#wGDVySXJ%d$WX>a0QcAw3)yC0EH-F43*N#L!d
znbd9e<wL|A$sNHB4l{asm?gVp08&h7?mqStS*y5O*h^*!NYm(4AtYaj>>hL>$JQfN
zk0@lsBNdEJE-{_bQJffb;8zZ}ob1EEKf%%X9I%mX*S0$X4&|REAcWR?U6)my{8Iqk
zeI(F^E7<g;F3r}i{LoKe7m3h`vq%Q(3bX1Ks7GmNiZ?Es{1dc$!=j_xbJ>DG{G)qk
zkxd7Hm;@F^mIo<OLeaqi-I~~sPG)x^C`Gv>JX(2DsLOtySy+-cm{+wdv(8~Ep=vl4
z*u7`fwjuB&l3b@vsZd1Ax#GszS_1Ev?LhDQqzb=eP{2SF{nO1y@K7Rm#(pM#Stvzp
z;si;)pS&_wt;icZMK~^ET5kCC<omiDln#C_N2|3krRDMugc=6)_hvK`{<kDWINJfU
z(dcJ4Sp7TdA(^j*ArE{2Uk5zqDV1WZf}%1aTQqAOK&MKei9Zjw-=2Wj7T5u2r+)0!
z$<XmEJiQKpGt5_PDUyd-h}#fXX%;_0K44E3YeN?u2S)9N#XKD4FL2lJjv^8;MIriI
zJ^*312(c?`-tU22GO}+hyS~t&=p4Wtd1P0!>&)xGN38~w4qV2U&js2}=i;UWq}YhM
zq?co`ouAZcUFMH-Pr?VoR?!cqA$g|rQ)sQW5>|&E{AC@9L$?>Fb=^EeKGKhF`#Hd$
zUFYSkHNf!=s~L{@P(22=S5oFhR(^i;Ua{47=B7NdHut0G;9_C|HM{7P#<z%3#+9?C
zDjiLrNt7v&*i_2__Kf4p*XaG_GPKjTcGxOSiC>FOh>}^D!jDlUh@JxP%ObZO6}KHC
zxxFfYSb~{TKY#+T!;xKn*cqS{P=g9svUx_#*H{M-YC|&FXT1UK>-FbI;^>9E=do)E
zCT)bWeYkUR7{&O61}MzwMwqo=a$PvOc?~V$!u*)bVMDIv744nX)6y9QH}iY}g{YnE
z(9N(MfA?;p9w<I6CWT2kqdwVSd>GisWl<GPbFhvT=RR;Xu@kbBE6-0JT`FmZx4;6c
zhN`&!Zsl@_r`B2a+V)?gYuBB9R@dm_WmcdZvpSM*Xr+;{^O12~m9?X=u&1voHMqNk
zWs|`BMG>44hy$oa<vkpBg8@k%?1rFuh@)s_ca~YV>^;A8D`k^c$4v&k8v^+#ekzYb
z1%gp<R})@3<u^V!&70;XHLJT4$n`vx-8_n_V+`rd%m6}?CyMg`FaQo}ZJXF_11lbg
ztZv8m#0IC>9~h_ZgbVvy|7Jns<&QA&3S#1C$?1EY$B#D3ZYE!Fuaf^d1URHc7AHmg
z@HEaH`YU^xyl6cTYN-4Hvn#0ecQS}1G#xGjJzwD^2()E(wy?{W-$5jnrE8FsPH!K^
z!=d;mQWSxip{g`5sv?aaZcByBhF$a3mW;xjs$I@c*H%pUO3ab&2cAx0eJ??yZ|HL-
zb)ClL;|h&;ETwJO27?aU?X+W$FZV<qZAP)5yE4n^#|)?5&Ly?f$)0WcBJ~xO>8i{k
zXEiJ^+XMlFg0t1?#AqTq8VGB)9i7e$P_DQPqYV~(09?fEqdk-3-xn_la0k59dxo$D
zI_0Dr#jt8eiEjuJNUAC+^M^IEZY9!&+&DUSqD@O+bv&}*u>o)+Aq1El4C+^trm<3l
zrw7_1!%yB6gJTXuoQ_C~8Ix1EBOwbR2WM))$I)(R&Uz4Ihjl*4iXw8W6rI+LxSu@X
z7E$Pj8izSolC@*>quEYek<{)*sIz6Gqd;V6va(Lf=N&Tq#BJ$!pgBY+Ht~154J<P>
z2~p=o9On;ra&Cd?sfRQ6UJa{Go$NBctQhiQpoMKZvx+Z5%%Tcj2QY!a+R^+q4?p%T
z_WCEQA;OLficM;^Aztm1D}8)}o>WrRWtKkvOz%nx4|7^>R*)~U#nqQb&C5kJFtsq|
zXBE8;@I063&o98Lq|%lOWEE9heTGE;9p~!a1TpRwLRyhKYgK~~{^O&Ii4iX(*khg_
zQApXMm`+3{GLT|*=*Y>7x{4o{WxRX-Y=1){C8D(kdoW7o5a{^KL6l;N;PNzBY?)UU
z%a@Y$BGiK5PzMn?dL6JOWfKCN0m2vL5i{v?fRq_nacNnmMe#7eAI@XfMH$Qg&y($&
zvf@~W9+_6po)orGWXMV#89bqT=lS#y@LDxxS{&fYW=w2{M#(K2U_XgQ2W$YRSxu#e
z>J8v}fQGV>kOZxJKq!DK`#Km5qBF9}u==owfir;pYc@*kB(9q*&g|gVwSW88UeD26
zdv&`Ij_as`rVMMb;AgK<P;H4J!;oWYc8d}mo5z<YXOmW~RFyHjZsasXl6&K}@+`}8
zJI}T|Dhgql3EK_}54UinY*Vo16s>;Rnw%*^-oE1Oi2pkOm?gzsBDbu<NZ^_Vn8Y2j
zdpTNwkE=xic_bmJ3~L$82W=mR>uF8}=E=y#_GfyDcD_zRhnGZCpoYhUKT3$HW&C5{
zcj+K7{2~DAhzM#o2`LOyO#W0%&DgUZ4+ZT^ZoKy_j^pGe)a}pb%l!4d9iwwQ^xeDL
zKqtp5-la>rOav#&rbqIlIc<N9q^h#oS$?*K;(QMju3TO>{u^~;@elMCwm+mUlPa^Y
z+~HiF&B8ikP$=Vu&U%J;f{}~j<?CQECV3jNV-$3@Cp@57IP}8?^Djz3V@bcgw^>$6
zp6m;|{$6I*#wW#9l{My*jxcH(lQ%^3=ykZDs>S7u`j!_tYhAPWac994MV?xK`bY<W
zcCn3w92BsGBS4?lYCq6=rlspj^&{vg4G!d<z^^SQNQAs4yLOn$ET1V6QH2Ch=AK<Y
zBPs&$RG`qn<Pn*)Xvulkp$E=9rlih|GfKselM2j;`~I?=Xpt!(YqO@0$idaIbpR)T
zG@l||vi59!v92FXjE!ELfe&k*v)P4M&e|j?>~cPsKg7FcSPpaN)>IfO-^=tM+L0dX
zfkw;C&ZQxlkIQLAPwT|afyXxCW&y&o**(&^6*97YCCAbeBfCp45Y~Xk8AfVf2k82v
zAjA6$3&>gl^J#BLdx`x?*2FjOp^N(2&}oE80DnK442xa|dw_`;W$PJMif9Yn*UopW
zn&!qid)j8s>Xluyyq1em<XkENAV_k#!BBwgJa?*oG`uo$UC`6d{K5$fT<pp^c^G1W
zp2cFjq(De(_L4kjbO)Bj?5_+#ssyCQu%(GS4^zDk-4A*oBQVH!9(J8Jskh$_RKR-6
z$hNEahxc$yO2!x(4MMZv(+qP=>_FN^0P5LC05o_&X%Q%-kWMa4mjUT7R7M*EGz>tk
z({RV^+I7w9$$taq7Aa5yC`cz4CAS<-`2`Y(k*ZH(+9RONLwPMr+C_5rh!q+~GE8Fu
zWT#?H&IW9s(w-S9rtWQ)ylJXiY7;*Gr{DT%>aK9~f3(ZLeq6@s+xI_>ODaD8smYtH
zitD&3(z?#lI4*Xohbl|cTl$VS%~T(VwLqb2-X&D_+e?g1WQa;+o4;Rxy}TS-BuEF<
z3LYUQ%*u()7l}M-10liks<8yckOy&~brp3W-NFA1TQyWuH%T7H&mr+zuKRA5C|1<G
z5l5XnB(5$HyD7+;7BwtoJ?xj)HrqqEJ(;5!8PeEAgL8(^Fw2`_D3M+g=nx0`vrU~<
z`4d`-E2hvs6A`1m@D((b;=}KPqmukkX<~{<ay$wgR3FZZDqjk@|Fk_PiDxEA+hUQk
z{{1>>vaEWpChZ<7xV!woV%b<S%#K2<1@HLzvBm(LilLTsQ6y!YJj_(R103G%J>z@F
z!%zSZ;q72T*`H+w06GrLPPR>I30SlvWsfcKPW~Y4(ddSg#EbzNJSQ^jT8VhJ0x^zZ
zf4JY7rFqq)k6RJkc9QHJfZs*szzh~p4%;FnSE?n-vX*z?kE2d=h;AP@X_J)YO)j5D
zj6<3>gfxd|A8azXRVK$xmR3oe9Y}y%N)Hu`vaSGXB}W8pQz6@rxNp4gxN%{&=l1u>
zi=xhNNfhpsiQJ7LfA(_N7kBW0FhACr(Tj(0{<uhz^yszTwu<k(%`GMtt;n~T1yeo0
zN@k2>9TE(Rd6|4d|KjdL;K=a@Xc@Q*?H%zL#w?i8_xTdx)B-EbiChL144{(`$hzP_
zeEeLvEkOBF`d+L3&AVqTb@+y*Re&YwrnMwIytiOj&XXi>swaBRttKoF6x|#xJ0+7?
z@^j#jX_7jtljq%yN2)oB+>$+;3Irh0Py(C8N#2x?k80d{6Z3jtW7$gVON+dp_ZQ1Y
zmt)c!3-BN;IbU5WRp=$=S)FB%8{CD;pWOj;XINawa7*17dUItSr^PdJoYj!Rp7Y`I
z5{TSPl47B9sY=Q!_D{6`*pJWa3#4(9C(WVU%8`vpTBUgsH@=OD=b0DKd|9rM*Z!AS
zS(vQ)OIsJJiq!YbTU}`UIkxAIZ4bcZ5>*=hE}`-)t<s__GylQ-ZvVYIDwchlGwNIN
zOq_w!z_L-pf#5MqPRV^rPqKXe+J+L7G>OyX@l*Nk#AKT&3jth3)ipiV2D5vM)C57O
zDS90^W9~#A5yvx_t3iqNvVSq%r@A&Y_uW)wnbgV7E?#x%Hh#Y;lGXlk_uwzx_4+fq
zwjY<RM(c8ks!Dg{lFUy2*$&Zp9yV8eQ>SHJ9e)k4n%=lZ9>?XUxmMnu+3b5yF&Ig3
z?yQ<b&>b@*2oW3SGMig#l-)+&`jVe>P&38>)E=B%=aB}5fTa8?{AWPg`>{9Dj`oTy
z1kr=&EYYQikYnI)<CA+qkkA~aNL>)qdY!~=Z5shWa!DQ5q)2%rHnExv+twhj%-u9`
z2^ld=_k0~z<9yoPTS|Z3*vKu@DoefC-Fe?ol90!Fyb?G2#C5sF+T4z2rY6=d^|`<B
zIL%7GkcS^fifqui>B2=um1Sk}xIMrsFPbjD4S!tr(X})8sz<ZIQM%t=u9wSXzUUv$
z{n&na@BaGrdYOOy>$m>vxA*?*x9Jc6dAiQs#%<I^ou&1W{_tP6@&gkGmeu_J^X0dG
z`u5UJQ~UPqqZ_92<^A$?E2P#%T@-1N{ii>eABIo)wVl5G;XnT&jngD<;`&d^0~-G{
zT$X?SiJs5+r@w!@{JgY3`?@-R{pCmgw{B>Et?TC3@9m$KuQ~qdZ_Ty5{`&Rr-@knQ
zrTKOG`;X$suRnk7e*OE~pZ>kPbU)60_3zo&U;Z}y^7HN2pWn{SZy#@$KfO=w*KU}i
z_sds^%g_HZzkDB?>f6tM|M&iHKY#i1x4F3vUx#m(;p?~M%lz8oSNVS)0+_mSvKh8i
z=$9XE2GCkQGN7Y;rgNiPW*w~imZ7+E+(ME7=`0wA*oUjA3bVDFrIci0Fi~Ja6U@%c
z#FIlVHG{xRw-E{k<uaVE%~lK}^1JnPR(Snrst}QG8y;>*iz4}qVfMR*8+IY#j@|w3
zNuy78B6Nw4Qm3H|LdkT%yiLJWHp}zmnL2A*x4rM9;~ekgNOtC7F0;m@xd%*I>;;ZN
zL53nv(jv_s&fCMK@NU*6?G9m{I{yENX<+u<T@2wAur}`PhHkUYnyfgQG%%&~KJX=<
zt+X;u1Z9>2NBHsULZ8&|L&3$INb#I&Dsge%MCFS*FPb>6c2aW#WNCYs$u`1?AYqt|
zYv)Do5KIr4of4ZcT=9$`<bk@_cRr_%6NkI9hRSayJ!DOirg_#RNm15G)ucO5t!k1R
z?@a86AZvmU&r%8iOB-4N@FGboLwIEXW<Z(0ME_g@D^rN@EelP=YQT<Tx6(W?KS<sY
zly=J@MV03~t>*t=Dpog)T#CpqqA84DQYJ*H$gxDY<%}aCOq5mSStv*(;d?{*Ff&^e
zm+s!OO-qLx_N5zsX+QcQ`qB+U=MmV(o~0V3D8RNV&IYueMRG?cCX(2l&NG+d(d)pI
zveZ3=h{3G%*8%A7uCFNS>+Rf5mgMy<<lWY^xmiem{$Sb!<INF)miSh-r<wtiQGZSC
zZ#q2(7tHM@RcM1=;Tb8bMkEad8Bp|=r_PCP$<kX?G&x+JftXry9Gwg+bvbWPWgeq=
zWauS0i)kc5UE_EW*;OkF663sJ&SG9IAl-H>h^aq3J_0Y>um#7Sz89otE@$O3aOLe(
zP%JQ^OGz5*99SI!F*KxiqF$CXc5LIf_NQ^0)+OVx<M9u2*L%?|t!;EWBxM0d$`Ytv
zkN{66kG6`($i6d(0%uX}45A!-u4NfAZ$S+>&3~0y8_;V-0HjCDTDFP0*x5s81OwhH
zuN$B`16L16EQoasK*sjKkIb5x<=E5ojtTpoEgy@}GT1`190F5-9+?0q?bz=;&7`PO
z`!x5{K;d;QLD6tszt7!?Z$Y!+ZRL|X&zs6&Y;WTYIy;LKXwDYwe!O7Q!VY!AP?PaT
zL>e??AD9GrcDs`5N&bdDc969$K@Zg$l%2e{zv`qY&HWsVM&q&qRs=F_`IzJe+G!n0
zS#$)GfvtMW(OhU*NLzR+IOL|0P<=y}ZHN6T^ail9ETFMAF)@$6gF^Ysrx1x1(-t5~
zm_ba)%M4fvb-?S;ez6olYYZ(VFMR3K>##9Y;aF6Y-jX~+uXhS}Z3bv|7Gsjs#cc_i
z$qHD_f<M~06<gg2W76O&$KVVHBm_`Wi>I2LyYN=o<_mtt$TSfhwNu`(!%?DRz7xI&
zQIhSEZN3VQb}Ex=IcAr~jiHMMhM9r9mKX$DwmEc7$U;MxN$g-K-}8sMmjxmtFQApp
zs5DSyR}7=*bzlPxqK$I!1?XG+%<%j1u;%Lk$)!m)os5U$nQSF_oUIv3*)3tx{3g;;
zcxv|`eppR=q{BLM6c8yvP+U@?8{M<BEKZ81czE19tQojFoWWyEyhgqo>4P2(HcjM!
zxlN5X)@jpOp*Zd^+C92FHI6k9!sx&TA`K;7p;A6i@+y7YKJ4~>(e@#UfS?;Eo&1_7
zq=ANkrH$jC1gB8<!-{L-s59AaUr9VCuzHH3sA3<$(O#gHiCq6~nZ#AH)zQEIdETP<
zaVTzM2i?eKeUy~KLaW{}Edh<S1C})fL388f(BQBJU>Lq3+PmxJ>}o!6h8O6dWJw<9
z&BGm(J178q)A|fZ0mcj`mVE#`V)%yX{z(Lw*F3&a38Vq!G>hw^NFN7`!;x%H{vVP{
zHa7ZB+T%LjP42WZi*`ZL&G+7(S)EDm*cC*dhO}L=dN+#_p~2{-rCBh-{<_QP82-sb
zBC4;Op#$;{LAg#Ff;*m;!7Q5O5<8uxf#cn!c+mt`pvRejTj%GazpI1Q;{};zx@0H5
zaAR*h6?K|Y6f;c|SPk^hmtWtMG*v)dyl45Zi|3{oI&YG!D66D=_;|jxp>>dgFe*Xy
z)pwpdCo4i(nu1<zP#Ynt0<uD@-~K0V6_eW>Jnj=dG}HNa(p~;68vG;TD@&Mm%5ug-
zaj9L1t~gFa@s~thXu>ec1jRIzGPaR-ArDRxj10WHG)~g`iLIPny7X=xkL84ATS!mg
zY-b!>3LPL9<B?1R3}#80m6gFP0YHjzb{X=IMb$B|^)0IL$jR7}T8GKsX$zsVF>XUD
zw6v^6BCYEW>324P2tHY$Iux^-w9KDK?ca6h-?tF|KJ&qe|IfPo2C~8efi*ugdq#8!
zP67subYM~70>&YEN`OjBs)b$nTT3;G2qywQWU%N5qGYJUiWGH92)fquwUo<AeuZkX
zxMt`ZaEuOQM{$+ZpCAr?D`R?>IgAPk<QxJ}4C9QgGhS}xhP!dwy2P3~2J)l4%BniA
zo|heNQHl<9nnxq-gNPU3;9vnV<X45QCGtAU^XBuDi7m_a142KgeCRAlw}9<(RG|{T
z{?~yQy^ea*I%vOOrhyG43cDfc#Jp*evU=X?<}=r^0oWs$OPa|_oAX4VD(T;-@JR>W
z=vu84s2yQB>b6Xv+eyb1%3-J$Ti>$an~a3CA~hutD0xqFVMprH23`=Y+1Ei1K8=@S
zKe>g>NFNc3Jw;R2W%DrS|BlM+u-}R0101S~7|}ThM@7r%JA@!SU<qTv6a8ENrYVx-
zPy(;CvsL;Jp$K&y$LW#E?a`=#Jqld}-Ay&<yLzsTEW4#-&n>8;uB$Rl9urSrw!$AX
zb3SbHDBROjfhqDxC)hlC9k|PgKqz@!{=f~#umQ;ph39UQvZ>3geqNce6+I4W4Hc4h
zvr9uX*dQJQKgslDTPkuP8}b&1y{dWOj>XeCTJ<8t4e6p<Uy?)Pn+k=3GS1@q2_`ff
z2Nh`#O!M2{Hv_bGFP6uLC96{~sj;((p{5`*wKMpiA~=hM6xPs2EeDZWmr{a#bUR+`
z2yu5mP9A67E(S73Ft5+;q*K{pzXZ!Gn+6R@6{GM5b^%XBvC=lXRJX`}M`b^NXGrW2
zAO7iez++COp4r$M&qIroK;;s>4$KJUf1=?W1uGe!XHZB5e8eFtu(#u)D$2+6zOd`j
zzAPk5r1m@GehiwL>cN<39Ho6_71u@b@WC2(tlH#i%gtD!#!(u*XiDe7B68ju^aT2u
z-1#!{9~U}?$!0zDFw(rN{wb4%@9lhTqu<)EgRf~K^_uEEVxulv(ps)0Wx$E+J}EjK
zHB1$cVQ7@0H18C5Bd}A2$}3_FUC5GfESO-1b}HkfhpCjTO9p=uT8P3=qJ0CU960n(
zOs%pFI$Iz^)Sx_+pNBxJ6j~&&l$@8DKk)P<1a#9$S#s!4&R;I#G6Yu;26ry<slDLo
z^YfD@xk0oc4<!zDmRHroOYTmo1DJ=5e!2J*StUcz!a;RCEhd2i{|03k77imxH!Ip?
zLo}wm+T(#k1>Ot7l6Ia?&I(=ma10LphfX6=Q=Yz^X@a+e|DUkNAmZL6qMl>#R4H64
zZzC^;I2U+-X<Q{`Sv}m(49Cx1!Xh4+K%_*I6nMU*h=(j5*=L;eT4xA0!**omgy)FO
zPkfKx=Zkad+=d$!Nt%{Ty*K;pF2#*sF7qVIkH?k|h8>F}t?GI;bNTs$ihg-AuLu5Z
z<x9a1<3xn@H}I$6&#%KbNAi=8G%WKmBHd_KoRw*lr}e`^2M?@Jf@Sb#2w>LC?DRTV
z;b>T84z2~I339drr9qO_Nq%JecH6Dq{Eqh%w)X7G#G^JO@C8Uvog)w)6woypdiI5t
ztjBIQmTq4QXx^rH7dL5~HIJV);q+!-2nlioK5^|itTt^xqXJeqYO$=m458E@E#T#0
zDgGzN7gGM9w*kEOPUpsqcH|e6LOM@+xhN(W&Xzq>;}^LN&@uzhv$Js~8AT=yS}}pp
zST{*kKY=`Smt0r(Lr-W0|3LFr{)FWFP^hVkqI!n<So_gUHhnpFUoO}7TlBYU*L}2G
zE=!!KQRwN<YQSdm6CB!OrjJ3~u!41_q$iJs!kw^waI_h5-FUDEdT`9sOZz3_LY{N?
znJ{{?b7lG8FIF5{gpavz7g$$WR@C_u^&Gse_cq7s=8>Q+9n?djN>&wF`uRE6?UcJ~
z_aRNE*<TiYYg8x9(r|e1wrdVNOuSrhht*Y@KLPw&-TD!ik~uLXY9QQZhY3rky~iJ5
zcSEgQFW6`1j)FWGa#uChV-C|FQv-s^+B1<6gcgmdu;_v;<+D{2#@P}krYhQGpfkh8
z<?0a*>B-0{!*xNp9e5Y0wSs+F%)$xL^e7y31@i^aUmTJ<&-CuYQ}!0u7P>d7P(!&<
zmBdwAJs}PBV)J#LzC|DHs%cBlaLI}Uy>Nr1Ol2yeeR+*1+9OPt5|Ytua1Ueu{LN7i
zM+k`owJ4w~8JGr8meWlxOZ_ot;bPe-5gQg4j%V?(ira~0zdK>C6HATN$rZwhXywYs
z8w6e5U4(OkWgR6QhF5Q}ut33DW?7Rwv6JTK$Va;O<|QG142P~6({+5fY?Ou9rd1I(
z8rcI76;WWfTO))i$WG4FGEU3#VS&al)Vm7+Udb2A5Y{7BAf($RLs{2&vGc-=%nY!i
zKGF`I8jNGE@Ub-b!03twLz1Q=pEb&<SO`JHX2_J5=ubdQQMCkVy<wItkOaIjimZG%
z;Dxk2z(&52q~yT_`Y&>5(4(2Btu_oDOd>_V5SF&5!*E?z#8vTx^LJHDA81#G>}CGj
z_;3I1zyI;S{7>V*ehs9Fd6A~g(V3tyjpt9aW;P<Cp`Nqj<jjXb<H)lE!SUcN&?YaM
zq^{Ci)b?=&5Ww$osRT$wmfLk_Mn5l#I&B>DqFrJJ9_tW~*`NVWkT1QsZAY&I{G~65
zMAVGY3{q}?ovg}hI~eE80qB>}!5>Q?R4Tm<uR7=sM+<&mIWqxd-TW?PoYz@$OXEJA
zQ~tfZc0=^hUj129r(;PlvUWmfVheao%d@qEos#c`c5VSh(Gh#?F9+%d7If(*hX04l
zaI)@F-4C%zr%Xd#F5XbOkNi_0MdUPyy-6<wAP|WkX85<>NnBKEncL;MJn@aWWa%1G
z2E|y4F<g|nc1nkEH~DUm&Rp6>QkWfCinvVDvbLLdU&Ei}c6&CBSso~KcvuishGq9Y
zEKAGS@eI6t>4)g+<-;>E;yl_^)exhQLWoBj&HwIvRMAvr@%v`gwg8y})fguM#^=4H
z{4hO?endS5G%P*lNe@&i&6K1ZV!ow$R(yhK@Lk*$SLN_`U<O+<B8LRBDvrzap9c*e
zp>5<F#VDnKY(&k)O-cq~()cpqfyul?$*^O;L_7(p{iAu<eC>!B@s5=Xw`MT_2q~RB
zTRc5J$+wp6uPu2yv?3n!JV$B{VlphT$~$Vvj30bjf+OJw%ZGGqfJOw~S?#7sJqa=7
zSvia|(IqV_=OS6NJJ5UxFU3Wkmk+~BcT?2ATw%!a%jKs#7WIbE!<ojj`IQ4^-~bE2
zHDoxmZ_R`7IGS|Y9|eUXO{yw+LM5~kS)R}R^ey^&ZGU=4E>y{)cS9#9w1gQunhaV(
zi|53ocA*A<G>~RO05&NNj)+_z-E?w(s-=N{lu|(Gsdu<i(4#P_F8GD4T7Z_TLfWFU
zj#;nbg~;$biZc)qSIJ?fIT4w;0d@uj$N0$<Oj>qf|HH5}48CBDm`9fukC+7MiD+MZ
zd6qm3K{mRGWt*Sr1pGsU&J<TKMB>77_4GP0*zM@OwG7eqFuL4+S)MfiBrk(ej_ISE
zuPD>%&^GzDMSR!E_6~-pL-gMMw!v*zOH*1e_yA8LTEn!34%I0jZWCz|%UTs}I%KoQ
zRUD@eqdYg|F?(bZ*q8L(=SesR7@FkJ<IUXK!7!_+<2cbSYbx~8n=;Rn=S>)`PWo-Y
zlL<gVmx8m2(ru#~9K`FAx=flq_C#27x=i!9sE!E~A+hH&&C@2|a<I~CU~wlxLL1kp
zi>m%K!RYYN>aHKuvvSO|$@02+!U&CLseoOn)$}wq%w;y*jy)qrqLzs6P#;wmt~EBD
ztCA-Yl6^ZhDzD=tYwCxwvb*M`c5zj~74UG`K=<*?>!y>@6cBtt`Dav_eV_YK46f@e
zNvnrbsC{amWOOzf@3L^X%zfzxLz*V&mNE&8oeg~(8k$P0w8_Cc;jvo`<K?>(=x~|{
zdupj}sF2asuGwCsnpE&4B)hbm1w;f1JD0{FVSR>`rDPTSqhQcDOMxbeJ|f>uXcp~u
zi!5P;AtPa_%##Y!bdYiK4u=;iB8e~L?P_sX=GFY8dynwPMbzkyrbt~?b#kN&@fRQH
z*%+7r-oGn`PeUgrE!cux^19CRIB7Oi>o%})OOlXH+Yi!8+5UjCDAJoS&RYo)2VUAb
zu}y0VP%c0Rxw50DbLLL7a0MinR(>mMd%O;)-)MBfs7_e<Vus##ndHeQST}}y9Q(tq
z-msAqt%bvi^7-^;-MR*!BSiw-pIRJ=78pzopg<Syqfjmu*I8P{4?mf^PP9YSotsmc
zye_h)tm~vo>ZFO|CUkb?Rh*XxclsBLw|3Vl8v765^U%CBf}L=+^Bn!`20{kJ`m>U1
z==UQ8eK7orJOcgMVMIcGP4n_x1H)()21*>1S<2m+<`hndR_SpesSjZQD)xXSJTEw0
zR-z!y3Nox<WYsmG-RMrif;=0#%wem5m$h>=Xm4S;|E=hi)J2vxg+<%<G=&^4>Bv?g
z^k78shM99pVVd3flI7ubKWt9`#Y5nHp;q8dUoWYPxXK*O$Ad`8rsdeIp3!uKfD(LW
z04bu{$p>&T=^T{SiXFB4*oO6!x+tn9u^ohN{@M-Q&bNZ4LCG*{Uihy3I3tJTRPNCk
z6``Hi*d(Pr<qk=XDy+rXfFagM1KpYYvl`O_E<hA2^78&Iv(uz5@+E}aaz=(BzXON_
zW|>&X(II@;7QP`5TzJo;TQ5?uA`|WP-yr_<XR&``X~p3(oRGzZ>Kd-Vil=|lGJw4?
z?I~(wmq``7v1!8v1$+dZ-m5_wK!1V^z`SVkCr%o#1oXO({{3h4(f!;I%67&{zbMC=
zINZ1lZ5tY(Lw;5Nz&!*Conit{8Jv;m0H9HERT2@x{dIB!w^-JTl_ma-308=f_CrK`
zdiznhLLl6{5mamvc&Qd-o0<Q(R-ffYyj9n?5G~~SGYVValEMm2s})uTHiPSiVxW1Q
z=|Gd0wQKw2$f2RVQy|f)(<G_$hfCL+;KRc>2iyvX_0n|$U8R@Va@9$%YB@hKq@hw0
z#}Ol_Zb)^m85Jq{h=jR{08s0tH7m{Zk|1#O!Z%}l+L^CB(Hd6WvgNIquk3nez@aBV
zgTTcX^9-nr<ByFHTqJ>J0*djo(B7BZcZfg}Qlt~y{4chlg21$})ddHFR|4zxWWV&#
ze%K6WsaSy|bBlUHnx|zQ`@VYjFSnbOg*KHV5N0M;KdHDg4<Z0LS4ELlkHa8$sFUpV
z&&{H3Upy)?Ij}Pveban+mKJrH97&5jcx!s_SrYNS$shHA`7V}SL9_laTq<!=_75c5
zX0owsm+aM*FyLKF<B-@hG|AhEPBN2DV!a4n{g5?~%F>I_RU<1tptT5`E|K!&jL*VI
zDTzvAFMAhzZgO8FR|45OrGD%ePYfEpwz4)E;+52twEN(Ak-7Of3<jljQa1JDw#i{|
zV4odB<}5&FKtx)zTtK>rVIVVf6eE|_Z&3hOhG=<M@ZLqGjqsCYiP<Cp2BWZ(r>;%P
zQ<82pB&bY#f18a**|IrL?j)@oWmp0mbx?f&@PhHiJB#9ZhB81aQT7&QIF7rR9t_-x
zq8NeoK<~^f@{p=YpOBUkK#<b3DPliI{g2It+4^_0tjObRyH9khO=_NIb(5~_l7F8z
z@?CJvPIE^0FOSmWNZ6$0JG4@<0@9%dLzy(ox%v5f(HrU5^F1-N&F}1|Z&uGdiI^l$
zK%ne4O)v;7dFC985f|{Ou%rN3{#VwT44qj`oMiPA=3Frqa(cfzO2+&~@rHn$r96l>
z!i|MJ7iSWQ;7sny^k*FUp!`*&Iw9s;6;e2zTF+I@na4tGM8nY%{%r<48d;887GF_R
zS)L>h9|ZSpu6>UQd<59CBt{#xOelesDuT(MlN|d?JsM%~=SPiQ!kMX-@LZPz6!>d0
zxh|*iht;x>I?;++bTBD+(iVtw8i?P><!mzuMLNlG<l0G264~(|%`a?4-k;^>Azy%J
zWKEfH6bkRv_&{_YYC`4g@r&YwBo9VqkBkGhAFM?btTD^Dsx#l`b<dw`gBB5&b?nm`
zRzBE4Rzi|iMeSea|M$7)#CD^0mksX>lsQwC1eWNi8fC%G*wnI!B3GIWR<g-~^*<Wc
zk@g^!(@qqwbI&6)Fkj<j9Bu-_0Bz{#YMQ1jvU=y`f3(-H?X{btkIVIIyZPecI4;u0
zH$S-h{l{@!*Kr!kHdcXW<3f3oCqBK!rP(a8ppAa(u-mn9i885HOWI}Gtff;oF4H7Q
z96ya{b4MEwgQv#aS!ec4`*}I+^=F(3BIu;M=3UTAw_vbZCG<+h#N&YRNX&z&w2%A}
z*a2c&=+P@ub1}VE^9{NmbkXiIMskpN8{=>D*VfgS!qXjf?9UuE#aPd@Fi}fuvd~qF
z1s;2kIC|e~ZRylP9o7oI+nNLxlGT+Q00{)#Lg~=n#g<8&)htEU>!2D+sN<(>RUMF)
zQI38H9S2R?)Mar1IsPR)3uY>AB4x1X9~4Z^({Z%B1fRzMOCA)C@u$W7Jk0nEYW=tb
zItxN{8;WX%Qsw!Jwqig>&adzuc(KaTb}8TIt!`4<WJ#6Ax!Y&+LaL8^4gJ_N21ftF
zuXyJplBz0#c65}1P#$9{Ng5+1OM|{ulv2(&@D~z)7nNf-Y*Kc9rMlZ-j;{UXI5|uR
zUYhbSS#^%~B+<fUu2k0nEi5*8i!Aq<Zb{>cab0RZPK;D_Ex+Lp>=S5Cx6ww}k}aRD
zf~~^;PN$Z|unC+}ph<9^jdxn5O;PPLLrtTO>`;0B4p24?0YYn5p$LQ-I1OLoM)%Gv
z{he>qq@`n%xqs3aSBq)3B9WpAkMeVLFmQ8w`(x|8cKX5Vc|fStk<k18exYRttwiHZ
zGk<tim5{_^3S~WsG5wac$&3O*6UVK7Y}#Z+nKbcjR-T&fNm;|*6Xqb@c?DIH#<#S6
zZ>2`<vBjZ?!d9-T5Po!QCMwMw-VYEg8R%M;l81vyK_iY8-Mg_e3qS}-QZ?BVy$-fv
z??d8&8~~ULEPI-02v*H+xD0IaU_`Hg96*S8@F33WxP07G{*GqG!P4aoHIucHp0l1k
z7`1Dm(H6Z9c#acJiu1!3f$hjwlZI_V%OOdVtSBEJr?_>G>{?%R%$ju5Hi<W!E+RSM
zCP|^ZDDu26pVxfbXkP72*N2o1{_Vei{Ez>`xA%Yh_CNpsLl9tDH^mcY_*N{5Lz<pR
z1f0s6)H$^V?^>1YHS>C*aynbe&+I69e(-kvnV0>8*c@!6*F=u==wrmw-VQ}$N%MFr
z6z9~J|Hn1#Y+HO%kq~HmL#ClTn?cpcw7DdoL?pu?WQdJ`oR7jET)%Lo+Pzz7R53Rw
z!=R6-GI{;jGuIIn@WB|0o0Y->QhzPd@`V34ZCY>SPtqsVvvYVa=Z+BGQPsG(%s5Fj
z<YN^+EhHgV=SiKV4>x{S@WFKXZTRDIGuKYn)22B1(Eawp7o{({?4<U~d-vC`*US9t
zU%&NVzrFWgzfFJm&(n48Hg2OXsyZ(IiE>9C;AF56UP6wrH+xJ275v1quON!ny5!hU
zUpB6q<Tfdnqf+o8Lh<@bB~_W1)h+2`Xy|Ekh44r@jC~L#6Y?J@UTL?{pGM+znC%}p
z7@M?i4xN4Vkshe!A<_3TP*mF(Jkqi$qE^{eRVjN!nDESpNM~^{#Oek9TGow;P%53J
z-eHpr*kZ+Nsz*la&a9&}J0f|IUD5|xy$PuS5kE4g8PrCEkC0H)jMkSlYxP6B4scd{
z>)#@wXG;HGTqvZOf@O^DO3&kTA?;l3pbxD%H+s>=)(X|O!xT5#91v-;DsG%YbVrcK
zyc(_NY+Yg`4*JMQ(qjF*gEn>Cg~A7+BosLaiS5&lJy%P{4xo)J4mGs=E|xV(jYG2l
zU1I?EPplmwZ`>&BsdLd6{VY7&;PByDbK}5cfD<{P2~-``%>n8{=zO8K>h=ptinzKd
z&fKlaa9{?xd^3>xqw`%IJC~FJq7j4H(ig#f`or1;vL7f4kXdkxa|HOH78}H7k>GY$
zhZE1+1x28U8YJfU&JG~HNhrO{<GA_+g_t1GU>9xrvk~=qaXGcN6k>dhoMQt;U73|l
zT0U_;)f36xI>B&s!Y0j1sRTg}O>BYOi8=}ZKe7HS_#<?>!``?VV7bJnmws?%CU^)(
zTPBwQr%Yt|F`3X}*FfM{`4x*@0BJ8S(OuGSLet@UI_1xD*cnQlJ5l1uQP^A<=P2<E
zIKgy^%zLdyl<il)MIt?|<19I(JN{*_wP=d;(VM;&>WBF@+|^><Lf`t>uW(2}G=3bJ
z1OO3o20FneW>+U^o;OAKw35T96Ne1?QWTQbV6-TQftVSfo_6i>R7yXKd<P9Vl3ppT
zKe!Q$?%1b;^L$C&wr?m-o5CKy2kF+@US6^W5zd)SDYiFux_oM$HNQ{oYr{%xcPyJT
zAX>aQIOa%{_pQ@puuBUj$tKq-rz2`0?_MtZBHX;dF_C<bI(<;7N__}>n8N}uLz>Ma
zZVkqP(az1Gb43VTtm-m;VmY==wFnJ#jTA5;zhXaSNP&&i7HI&BtBotTM(Ty2wnKm;
zZ&@Nu!r`vjHsW}z8QtZ#PJa9&Ktf>r_KQxYcay3M!EgvVb~>ih<i7+-rhILODKz6a
zCdp>2sxpA2f<7=L0yI<jPwf}OJ;Kz+mzFU2ODh84Fmx3_Aj+h!vg+aUIV>*lOFQ&$
zUDRGb#_4()zOGt5*A`2kS-KINYFK%9+Ha0nVvl~{w7KQ2;AS%YNGRl92MUC43{$|s
znT}g_-`Jf`C<P9${>=HaYU+e&d}*CG$rA)^w<diKF;eMs@+o3)H}D|?9FbVdT6hF%
z_^K$=s`8o{a*nLEsn-`M<2=oec|8HH+H#Gmu6>e`N9<Xz!Hw%Aab5b%o)zcG>mF=f
zrpaTUI_2Jyuh_Y9kt|PEwo2|rJo|)=YZOUSJ(;AveIo2DlA5xZ79xgFbe-WXN(5aP
zImBtk&_=8BGXI2X<ED+augFD#+?hn<mKqD^=~P2tb7gf?euA^qUGi$bbl2|V=Mq5P
z`}SkyGT=r|ufS-d*MS0vqksZ`;@nrxM;?%R9hif=9FnVg8!!(os)Gw5sq?I89w$zR
z$E*)V>;LSIV9T({Rvps)!0Hl{XLI0D8bsqVfxC|DqDqd|%1T6LV{aNS0H`bl;4^2g
zpo<Kb0(9nO)C@TGXO+Ys3~NL(7J*^ub7`bX&!rPxPRn*cgm@%^=aHfAIk8QtxKuE5
z<dnrG^E*LPhb%?rX}4NQ;wH`Gvbc#WW13kO-P@Qa-j*s@KC4NJ-&Gl{G{N^~OVI2>
zKpxnkhD<|?k0oGRDN_uTYj}7gPLF7V4TgQ8RAL+i)Ajk<onA;Y2mt$)ypt;l#)UB^
zbRJylwk=_yEEO>%{`d>ZbW!yv8k-M=kp_goAEs%9b@UF3ZMLtUxCL=hF0A$RWA&AJ
zC9hyBS2PzDRDyvook(sSF;r}!$d8*i59JA|s7sk-jbQYeG*!(gHWxUgK<vnZ0gMgh
zpU!wo4;ywie`6fAByEtuYs||gFVa1E$Bm46eT6D3(##*2TV;i=D$K@JswQtf%_cLv
ztPVs#u+lbQ8QCf+Kt<~MFt;Q87m|*E;LnYCc0ff|GZo>`n?PM_^;gn{#Aum>;`hWy
zBv8v_#k>y2MFiVbD(lsUa)Gp};wpaPbhSVDz9ZEnL}b5(;LH2+<Lw7)x}*EbLa%~F
zP|79TLstps=<yUy(G*3pvpKvW@r~au>n1%`KIQJtm-f1CK${j#T_ves0Dkg>kk2C6
zMGG}3A}WEQ<}%pc;kW(`VG53NhAYe`poA(O0%q%K$2<!?R4&o$z_k#)%Q?s@Ytp33
z9<L38Eu+2sK|vE8`Q~=7K^3^!j5Ouwb%4NuVuiSm`6p~|7mB}7)2xo0yxtvx-l}7^
zE>R`P)(ZZFC%IN)-_ev<a@H?!fLbl3%Q<=-Y;lD;T(nN8J{GjJ3ldnGw5&d1X!ovS
z^6lF8U!!Z+o&9d(&**D={deXb5PWCT0qVZl*4SBg<*nAtb-5h7&kO(CEaP2q4aub}
z1gFBe&?$Z$+B4heO&gRHIYVz40Zp1Zt&-j3XKgvPb%AD``*`l)M{)yj1z=7dT;T?6
zE@|p4sgvM5qNiiKeVHZ+T_!NrxLl?xR;cCbG6CQ+Y3e+#n;p&WquHXZE7f`F-`5sg
z2-wx`%PPvE_FuOPq{`mixj<7iK7x85^qDkunbvvmRsVANHVi+bZ|yL4J9ks2&FWqM
z@y>bA<uX~bde^I$6kak_2A%Jtt>g~gZC#^`^I$1*OI6d<byBTl>sOZw4(2Ww%8C`*
z?XMYY8MSqZGB1t+b5|vA;}T7puEvAcMcT0t|8kiuU5zXMaYKk-=E}FOQC8{ki*~JO
z)|Y7FybL!Yf=jN6i#iDoU%M&Z)>X<TJvJwBR9QBzkd%4m-_E^**UM$<G~U|J_aEuu
zZ0%S$RR9j81L!o=%o0*U0dUAQY`dh=0)`vd50V*(kCRa#mGr@qE{vMG;nbU2UM!22
zdeh{SR@Il&3}^v{mG_IZOp~;FczWvw0hr@<1Tv1z<G{b@&opuC0PTT-Dz1{ODxNpd
z;+LRby5X1hqaUI#-7s{XaWCjAiZh=J=`lt#65kleYK|O5%N|0qO37)cduPcikrqMy
z;gN(bUfQ!et<TbBuDpeSsX+v$D6=}ro<MC}FO>uF8qb_Uk!3Q1LIF1mIjh9Eqr!Z>
zUap~{BW}tiJ^b`L-XJ~g@;QMIFQ^gD>_E{C{Ss_Mx=sniI((a2SzwO-=bE`Jy#v5V
zh(V3a9C%FFxFw3MLHy9m{i72dUygaGe*^Oc1bm~@rwXqyih{og)BG4I?KdN6rtMU0
zbPO%iyvgDwi=Ss|w3=tzWjF55vU$)UY*}C~qZI~*yvw=2a8$g8CNPq;uJZUcO^7{}
zVn_5GVvAI$xY-!r5wHw9L5L5lS%W#5P+$jsikw|(bkC)%DnE<$pkehQ(~<`@K`B|!
zKeL@3J#U<Eb{Kh1;SB;`X35jkeTUxQfc)`d(|(sotZcUw(<ZNqy7^sgJ|Csq(@BGw
z5}uB8{S2}7DL^GQkc4OaIsnOZ`3dQv85F|INCY-kS=43oxJ6u8C1($)^hYpo_<_?a
zep?K_NR9<3u+A0Ga|(6glO&1j=Ha`&lWen#X2UDju&Ja))pzef1_zWImP|4fF!CzS
z9)Fv6iPG&_PVs*4%^9)0Hp`ec`U|e2pUc5e3OU<Wz$4+lP4LJs(=?0!x!CFo%~>}w
zxEIvP>;kxNy<u5FXRNidoKW~=iH2%(8d?)Yo!6yrpm+bxhiRm{Q~RW9!4pzq{5TWu
zn00&u2zeftY4XIG_D#Cgjyo%hb9I*$T~(9RWwBELi(Us!*YMq8Lmh37<lq{au3?#<
zddLM{bsU#@S?;x50v+%;DXOa3!jkWQ#$n#eK0T*DJFEz5!FtkSFz85A6WG);35qju
zxV#PVq8KM`T;N|=CwR<_#e0fo@LGo-VUAcGCZhBh@^{FHVajtwCmNyK4k|1tdjR3F
zYfr-Bp+&`~K|k=fMH00n3aG~^O>1aTvQQ@nS|({AqkUPb%HV-V637ekxQ?srVY=qc
z<@W9w>9Ad>iczweXehbTuK?t@2oGtv@ylSdB}Qg&CFn~vrsVyoqpJG%9K`V}$;;3T
z0HzoyZM)zQ0%K2HwgX|v&PbXviArHp?Bjuel`t^jO>jZSCsrFq0#CU5&&sq(vf_CM
z<90rD<aj~G0}}mKL+kh#%a%F5x43Dlx=x<gTwDW2o)xV*Eqb6eBImf9EY-$PZ%I;C
zN+Z%}TmG8X3$7;ODLcZ3yevc8Iw`B-6U>2w1<!#IqI+6uz%pX;xb`6wJL<0(>QBJ%
zFi}+$$2zW7;X$jaTsJw{2U6J~Vwh^)Fq?6gf}w&Vldn_6^Tal7nwkolhoe*WhA_G~
zp^V?D6P$2|znH=gN^8%OiG-M0IgmXwTX96^*rX;9a0=+I3MI@<Q)fx?yj08MWv!bF
zx?TvNlA%(1R8-cVmN01Xb{#Q-HH0#9uFol6fu_YK9Q6FSFv&ruLdS{oay)-oGY$vL
zmebi1X}op<+4gmE4Wj@+A7GLRU8+V)hY}mF@|W3PFC~hEp{LXzZ;Z}R)@Zv>jS(D^
z%8EK!7R63xd2B|o{BoX^elK&?=UV=OVP)e2Wu5t*rTbNiv!X7GBn>ub*9X+rm709j
z>{{D2xKdvmm#OMv#jf)j@<vy5;{tWn)b;lF_{1ISpLTn2j%1k<pOIpR5r{UkY!=Dl
zjq|;`vsfx+IYF^vVrw7NeA4kx4bP!6DJh$*@w1-)@US`}iLQUSD)J)PdEhtFFp{c_
zv+9`nurm4GxJs3;o8hZ(66A9vRn^2<us83P!W&nq^R(I7<o7Sca07TvkJ42b64Lwl
zKmM2h^~e8S{hwd|ueVT!9Oqf{1T)}OLA(dx->gWL)p40rX&R?ho)%S8g;K%1X!0X@
zr{8&JE2jH_T{V|gc7*)L3y$)tJ==UUqp(PlEUTM`g#d2=yLJ$Lw}=BwfOAp=GAu=0
zC7lD%SKO3Il^@h;M%~P3bnACBPq`mJV2v|{=yfottkPUne*J=@>>bXJS(nC*V35X5
zlV)+U$3WR`PtowbwAE><#!d98Na}u2QH@pnYMN2%ahTFy{%`YpCUF+WS!ToTrZ=7p
z02;S2?YH-XfI0eY`vGyD<++KvI&}Tz4p%x-4q15X%T`&E{;r19di`$Rr?6uHXU6lE
zjMHq@79tfiNmG<Qul4?2czd^YkGhS$Y<goI**?O(sdo#=DUtO0>maF#t|#fnjNKWe
zC&aK6+0m#<G)}fV=ah{wQ(*T!r9qzh^dUPOR0<w$>;&ufBVkhw(Woya!xY_R1h5M>
zCNFL&#5|P;s%J=}9!q7ZQ~NU_s584fm@1gu%BgFOa~PN_E@hjYZByN`2#E$p`(5pi
z-&}oi`gWv1Chco@xu8C1i+6f~&O|2o7s8IAg=KJKG6L@2vCE4(th2)xM-&$!JagA{
zYCy1tT8-T@6cxfA3b*4i#(<k0TdNEEOhXnIqc=kWX;me4neQn{gt_WzRaIrPm#%)s
zQuaH}YuS2JapR^`wEg>h8BebR*eQ%XWAQlBWh_O;TSP_DCTq&NcsOaibFSfFqLA8*
zBg<48mE5ySV*#WJKn6OFCy#R$ar>o{)`!{#!v~<y7@f}+n*k`sgh4T+air-vG~oU~
zy%}&9jbN-Crn^LBt@A9ZU3*Izk_84%pen4ZB(5G0u{T%H2Lx8jB_iFs&MM!Cb|TBY
z8+lYhcI<F&V6`TBnyvb(cVHoDQY1~YqP=hI?7!?V&dm;8Ihwi&btj`&QXZ%&w0esV
zwjC%TmYQkXw~!`T>?DHjq>6bt>QDRresP+)v@fOIcrhw=%M!Mmft1H|@iIY*&mm|R
z>OEOFnK}R_vB8$3(<;TKj{*$bQgDG})h_F%lZFI2xjQ1Tjor4(PLiip8sFrO5w3ri
zn)X}wTeLjd3&19BS}I>^oJ`Of#W@g)7=GH8PQ(exa2Xu@Hv|&JN%aX0&>J$Y9iri%
z?X-zQ2R8w4iH3022ks_Mvn;7Tzu5Ows&_XH6vCLgbyOCU8>1zvuH+HgXk|S#tBeI6
z0n&D1x#bq2{gK^iOk;<|P?miLCyQtzjuVO3K@Qb&0|1(-hL<GP%2=<RU{yH>D76tf
zt3vGTNQUWAyNt=aUYL_cb^yf5o48EthbygH=-b-`yzD~_CT4kh%|0Bhz~IO)(F|#8
zQ&hLFHZzPypsTSLC`Pk1PE#K{*$eX<zn!G{Y6S4^`N$$m(=01|*qA`pPk3P~#;Kk9
zG(g5>RFVUbC&ZXpY9zpSLOE_$)K!!DT%+y7erM_E*(N+(D-uuDvng7{K`^599f}_1
zTTuqYMB&JjX5>@QcmEv8z}A{7`eb@-4bKD1kvsjjadOx}t)GBO{(O2JI`HvP)p#!L
zAd1o1&hjbXWyFI4%)k!_wr54%)LH7--|eb+OZwz#F_AlqYQkV)$+HQh5aY--!wY1q
zN8PSu>5jsMG#795xXoaUWleGW(<HkDP8qX#QRU*N$@;9FQ`~ivH|H=qFAH@+sb|is
z=Y)k46xWWC9g)14w6Xd8o4iib)IR_HWM7`Qz6oD|j31U=aduxA|7?-I)c-68q=2G^
zJSqZPJ)73OkgLSbot1H%*1s#|TQvrb+Wv6xTCSdE08sdDXS<SZi$H1T>|V$iB3=x#
zjLaww2!Nx>bH}tWK!k*K!$E6wSu2h>1juVGQEiKyFE1Py7<f@An$wwI3Xl4wagnFZ
z6D1VZ?o~(ZEhywake9F4-<J@$RMcf$Hs!-<%tKQ2jIU7`L=kASw!n)JH%jLKguQr7
zW8$eK!V~6?Na}_7XG>fBX*g}?NwhPJeiI`glk2!Dy!z2OC_T~;oKYtvjU$q?RG>n<
zwlRaFD7i4PnIk39Tvo9d;;cenX7wXF8>m8>qA1ez;hO3$2KQcHwdE(@eb8VOpS-F_
z@62I@0Ma^bitNZE?+8;d8Jg7;7a|<jPHuU$tdf(4F<T?bn3FoHky{Q|9FS48j-kKh
z9-<T=dGSbzHUk%#Gewz}##rpKZrS)&dRuyqp;S7r@9zAf`kF-B!mqrEI@DQJr1?$4
z^mjzHJ)-|iT}YP4#LcAxj_PFvRF|ts?LrxJmQ+a=KMy6|8rIn#MN)GkC(Do{70P9?
zwZ-iLkpj7m`0v`#Cd&q0y8W3#pk1Y6X>(NLW=&ehk5e#qpVOZ6&7oX3(9O|Tcp#iX
z7lY}Q!MZT@?2=DLu81C+oktGYRouh9Y!JpI5o16NRY@Ds??z+w6&<ov!APVjgB^^l
zDw`ya9|ps3QfuC~jFVXjoL@ldG#q@m=wymMbUSI1mFeSIQn;<Y?E&tz`X(~pYA0${
zdWIcR*&)-x{1%-7*X!j9p+A@#)>TtH-i8V%@;f?WH&d6k%=C_KtW49g${$V_!yL0C
ztH2p#;iyebJ4+4KmjBnf5@M_DOgJai*IuJ7`O?`Q8J~;VC)PrOZSyH-Bu{l5@t+)@
zMUs4tM2k|vIx<}mi)cE4xwGdjPn&QW6P3#i!rw(4=T%Z4sFD~|&J|kHht3I+xR78z
zK2B0cd3h;54yOzG(Wx8^SAq;OoL&d${&GrX1SvWXw1Jk-R)$i<NtPzH6{9}lDlYkt
z+2j(f87Ib?l>+;Vs*<X?kTAlLJwWf+97lLu?6IJVIIi=gv~b0)L|!|y<vXr;WQ9p{
zW;x{f`|}do{=_25Du*97Y|@FLOGfh!n58cVFC3U=BZxEr91ADbnC73L*$7Nk>9p8<
z2u<DW3rU%Wz^z9q0`0-=yw4ByGZvs9Mpz_2pQyvjrjzvF@ocBfe1Y@{&T|?VHSWO#
zsmYf@6oJDJWMM{e7Cy<5yN5bpMrXeE#k#DIN-x1D-n~ObOY<hoA)&en{cs>(zC?Ic
z4u=vcz-ydd1im9RIN#YyNnBO-tsD%~Q@c{l6mcVnloP#)elX;&PPP_#cH-}Fht-)+
zCxpOhPh$##p%>U8N2@+b)3mD1%^YZp|JfHHq5}Sh<C@J9EKZPi)gQK=X;VAs<g%99
z=(o=2e7#u(@$VoZZS*FnG5~apU!!F%SaKBv)%oMJ6E3s3`hC2{Roi3VN*`U>RIg;{
zKTfZMEEY4FNv78l)r>pF@-rWo^KwqusqLP7hNRF#HIvwrw!vgAE2=C8^|bKmxMy!d
zv84Nf`NeWP>5(Px5myW&TrBuA0$Wb-20ioCJ`LBMV>gK-$IjwoTSmg6(L~^N5L87j
zOo6=L0h+6<EUSEfl*SyORDsPOX0VpIF&YgpqRz;xPy-klH|z&Wt#ytH0YU6jQ|s7T
zD&UgAVCeLK!6`*RWKvrC*1wTryDQ^lM#Nx;gY&|&ZqOK>GZhO8zs%&NLFtP)m&p&|
zd@$k>?bfc#iYia?IQd<>ZrvSTJ4v}^9PO=kJjv`CYMYGH9W>aasOzdq9~QQ|3qU*q
z>uiWKMLz((LTWY19dE)=s+<=^wo>Jhop3DVP~=6`RF&Uq_7p#lJ+g|tEaE!*v}v9@
znB04U8^ry>GYH{vBh83?V+dS^FtUUgOg7$N8xr$(rWTDEwlq;~McW|ziw{!j19zJf
zV4u?QA%5kR2#ccWh)o0xH4p^A-h?j2p;01~(oS$J)nqA_T^=Zole(-|ihet1$JQ@5
z>zT5<wSCj1Nz<zEMOHtL?y!X;9Sq=ObX>xzHid1@j`J-<$+G|@hIp!p=PArKNvb$2
zpD}>6p;jMM-h^+A|4Jzd{^9$431F^8TBOP2!(q2J<n}Tevd3ld4H>sU)1xn;oGQ<g
zIH^Bh+;a6Yc7+~8gNXlI{%>E0A76g`zuSQRX;G)pLHqoB@gdBeN_>f2$mB3%<WS{t
zw#$iK%cCGl)eF6-BCD1=eDvn-)FJWw8TDQ_$d;ObMXv)uNXy~EE0h0;h`sngOQ&>+
z@=CTveZ`T*hEOOHrc*-CsVdScuOHTB2qU^jY+T%i?HQf`X0#|f!B3$hUF6w7l-T>x
z^cmA|$YqCfXXq-NX^XNC_MNGmSWz+2eGYwg)T`J5&OeNT=@L4YYVC3cIl)nccIa$S
zsE?hNfY{C2vZ1rLsM9jfpV#2_bTfu_c>5XQDC)-G+wusRa0Qi(cx@Y*O;@=UiexH3
z0=amaCS{ZC<rz2Vg{Ns=#<?$CzE*Vz+9ITBlO-#y{7+IY+sZVKsvR}RRshy4MH&>H
zoaQmbRme3oYSKn9`7A(-o)b&xHRW+0r}5{X8>?}vU0@D3s%2qWT1_`a4o*TvD|Utz
zJ!PimWl*v~Yi7g^?u6P9D?>640@7{eu7~GZ2;z#~%n5XDrE=xiFtb9OzOxUmQY5LD
zGJhP&CU5Mgo7~azx@hv`h*5IetGlb(Js2Oy^2AsKjx3tDN!->o53mLVYE#iTu^eC7
zNg+4k<(p!RS-k>L&s-2*X#Qm>vus)qB^R78j-nvTP6JeZl7)dl_);k>nGLua1KVky
zaLj@@T%iq@m1$i(F?HU~Wp>dqfW(=LLDSrLT;oQwn-S=3wt=BZorn+8bOp~(USxsO
zV~vzGWtM=RFa%jiV!$y^T5gEbsU;thgaDr0U@G-zr%Z=;$jJgr=qX7}#)5&q0b3iE
z2b)@pM}!D61rGeYDdMboI3c@vXmE$t-+qCYg69rfHlAJw<oXFGSm2Is{_qtwcTM*p
z!^6I+ZKE<~$q}0DFj_kw6WS|9Ue{%oKAiW5r^|K=Oo4S^(cwwqxNuxIwZ&-=egv2m
zh3dFG2-T!b6R(uC?!V<*E9)I<2ERSsm*%En8ENv4f5x3^sR_6<shtATR)Z0GHU_{E
z<73R%A@9bPEQs|~Ai;O+BfGPTNR0qw9S|~YclH#Ju<5Osy{>;87Wsk9c5TodMe(Gr
zlH&gZ(%G(vGEb<Pohd|PoLu7^3EvBuI1BL3vlCo4K_vu@Ap?C*+SGI2G}c$+)Ty3q
zYsN5IT}RwaF`2;F+X_Q#I?8t^ONehj#E=~4Tx8o3dsPo6K4qW|cW4?Yn;F=LX;GG0
z{k&3bg=}vtuC!mc<%|$^e_kqUqyli<Ub*_OX5g$Uggf2jSi{dBc3_8NAGXfC3pxcf
z1VEb-lahx}dkOboarThBWL0H(+5B@8+g*sxY3DnK;t#`;H<>8ZAXHXQG%*4siKTQf
z+a_|V5=X98C_9na&NMh-hE;fDM#d<eUaOQFAdPSq=}`0gFq#S_BvG*?MZo`N_@c-|
z;p7|XWB?)H#sc9I_@Iw2B*B#>MN<_|#6Y|QZYLumTmuTqejYs;57=<sWkk?lBtU>B
zXYJ8xK;t$y>paWzEcP95@4xdf$zhKjCvF+qQNnw`s)mU-Junx|fZo>VF3a?2#z(fl
zt_&;Lz{2A}H4aT2l^@tj-59ymKd139!%l;Bbc`*(<y!1ILq(I+eSwp_%Brd^_M}Tg
zhNM+qCHcxR^Ya>6D;VX7a*8M(9u9AYfi)BVKGK!TT}LSY;QwaV-rSJm%n^aXr5_^a
zVIydTu>kT45*qInM6u=mIEha-WDD@)k(~q?F+pUBYeZgIf5Mc8Ey(BfydG?Gc8N(u
z&7c%i$q%hF-l;1Rquxb*g>1Or9@0nZ3_eRa4Nj<7bJmuJPFotD#sz|=3|JvG<kyiW
zeF0)%6N4dCDiuYBHjj@5mpk$mqhP8_kmg}Qs07K0IP*deLhm$MQW-{3Wb+ecX2~R3
zbB%Bb=Q4O~;W9G^C)Oa+KbQ5y9#24ymF04Aj`Iis9F_~`866tk5O#I<Zd8(5qD69X
zOA~a+r)8Bl@g^|+2Ezcg^bbtL9WwG1MwE)8%F?WQ0^NNB+CE|`JEOR(q!b(q-rb$2
zF-D%SeOK+Q>U?<KnBM@v5QZO(!u$N8^LbmJL?{=(H|glZ>${+bC;TPDS0@7BsX~Q%
z6n3rDqT0ptrZ<__#0M6{2op=udK5LU<kwECp;FS=Svx@RJ@sM5#Wbs{yn5U{{syMk
zF3j&bH-x<HmM`4oPxSM=eZ<er?A<*LS#@agv#7GCmXa$Fa9>at)|@CDTI%kyCG<{d
ze$SYTm?$+td&F;xNSQ(#*2c`9sffWr@3hH2!Eoe;b$Y-AHcB!}L?=3?!o=!b2%?Ij
zXc?>k;-)H+IQx7&bCo3?ECEce1~AcctN@Hr=jF^98Yk(|>tH1`dpo$>YNKnCwptKh
zDYLZl+r#%iid$RZN5t<*(m6X0849U&k=9xH@VmTI#BpDM)$BKZsjz(40vIqbLS&54
zU8YTvWk>FCf7#=V+QuMtRaw{6z!fyejiz;w!b1khl`18^8(%9e)1ujRK{uOOO=L~!
z2zoZ}@9jw!F60x0bzw(O01qU27#q6v`5MP%-qeoS1PFjnm+RH1;r~$gR2(`Ow=bGD
zS=}`Gj@85J&66x(e+KEWoo`vxg`@j(z~j+eu5*F|bkE7>*Wdxzqo?67_DI18$w2hp
zT~=jW-8c=$n5R*@blvc}d0Q4BZIU9X%U#0)Q^Kgb5L>$F)JKnV@I22#X2rc#C+jA^
z4T5oH@AlI=c82SA_Yo5%*wWOQB~hG;=s9Hi)t+BSv=)Ug75{BP!y8f>tY2LZ-))ic
zv`N#Vs($ZSfUo?&*UXU7h1N-Pp=cK3hP3=&hh>#@rt1Uyie^{)_O|3Bi{mt_o|va?
zNAz8m;qBwmS&}qynPyp@6<HqF0mLiInr0Q#@8DBqd0M8KPt018z`OZtH*}7w)yAc=
zBwe|stS%MsT*>mLN>*R!cTXeSkUj1R%5x>ypQSshawrUt@&4r~=@1mK{*<Ff>m?@x
zQ!#O)lGkzyL+Cwq++GJ8j!@xG+GbP*GrbR`=n4LM9S}<7jNV?xGy~k;g$8CIMFo~(
z88>;JJiO(?4gRAk9fNceLzQp=lI?i!d7kSW3F*$$M_=O|Y?to7G{lHn94s@ipy_e;
ze8%#72vy2WoW(~Y1%C;TEGuY2^g2;Slr%qj9hjWRZ6CRLsfdg|J;M?k-?xmL#A+#T
z>TRhM6{rQ_No-o$<Qs2T1h&fy=nFBkK(;^})CfB?u-@d-^DMi2NpoJhA69pgQ)xqG
zFw<O-rjRB@!3+TTws0TdYp+MKBgb&{@T%=;;jC`*I&E$mi@i$%=y-61%0dR)I%B2c
z8Sq0C0!|=UoCq$jsTxN}rpt$L&MK*zrg@li5v~AeK$pLsj~{{JdAzYT20MB>|LES)
zNraPDas^TPKcM}Av?OktEXj|Qrgytl{&z;(*CmSaQ6%Sp0d76f5!E|8$tXWGDY!<%
zHVmoq6Tt?zCQ5layaAks6?PumbWDi8B12##O$YMu2bA4uo6y}z8?)mayd_fx8#0iK
zKrd~pEQ*_^YMT5e(aPJ~BYX9z6GQYAH4ohE5Sa%xrIw}6U~)@6R{b^l8=xKp>ie=x
zs=WF919+=<;AU~A;F9;~8JP+l!4b6Jacnl?QRMN<3HUK8z)wIYo&^!heOuhpaJ5Y#
zIYuU|DgOy}_r>8Z8~2(ia@A_-FocoL<ru*u;A-$gbN<kLI)w%&>qF@{kC7?o&Fi3W
zBz~-OEJC|UIX&6~6*ELrxf1Uey2#kp(vz^`Zs!eSbxmHCk56HT>&M+*0}(Z;hIIU2
zdoy`W!Z*|=<};1xE!`PKRrC=U?hGgjfmGXfHiWm?J^nnJpkU_+)w(+Ngc2b|<7ReG
zKc~)`ygr)RxZzA-W+d#277eeAoCA_U44V~>X{5Mw-<ua6>8?T23cqHB{`^7rkri!5
zPbGB+A*u5sYg}w?uVfZnZL{^~lqv0%`^Ee&oYj6A9s4x|9Ec~S+B_oB$^yy*%c644
zCq*7kM`*YZ(f};gle0*1B!M3rr%9MS0Fa8W0@{#3+WTPFYSp3Svz6scuxUd(0)JNY
zDOz<HW)l=VlaY9+d5*xg(sgB8H$ngOgTyxJlrv3vfeA&NaW5aF$kXX{AnqLfBJWCE
zrTXg-Tu-lqLF<G#Y-vV&OR8!d^^pBhIV?ijFM<Mk(?8>cF&J}SXS`&D{QYuvqAe{V
zvqI?^(u>^r!daGQP1rE8KRb+03RBjP5fu_)y)ufa{~V&%f%gN}JcG3?qqk@eB3<f3
z_i@?z@=cx=aj4+Kh3L{PXYVi6h!4M=*OPJ{s(ni|oAQ0`Hi7Xv&zmNVZxQ!0d6;1*
zAp07-q7p>tc)@~m$y@bzX<*1u<xY0e1X5n$vI~O<B_e?hMYC@!(K=Xa!h4nk2|FBC
zetb!_O<L2RDOG{HXx%3+QIMkE&Kr)iI<0Szi~_1C)y(vK@Rp%0p<_k)gE$euAN@Ko
zi~s#a!PMn?IEIC5wVj+@2*!DvUpi}wCbuvB2qZFxKk004cocy02O{n8K-Zv<p^9!i
z#k5Y!o0N+~Mmz8Ad~KuO+OLC`8O@F-gYED`$;Ip&QZvHX8wur!R>;*cfn^_vv#-{J
zgkqAuL>i6gMlzp837agxWI!=asUS9WAMRW$^J_4a@fWv?2b-OsglZ#$Q0iC%i>QV|
ze};FZ0@>7F;2V*1nfH~_&jNXIlT}rcJxp%6gVM5ps(DRfr;)b=)+GUI`N%sd=I4~J
z!0?M`LLZ(6yDDII<(vB{bx%Jp1o|XtQ^fh_7Zcuw**Q*Kod8D%o`H4;T!;26n~ZGA
z2iYID=cvL&5zi%IFIBs+<D|X4*%^zuxV^j9<+BGKah^6wnLLqdb+amgG0PeS_&oaN
zO_S$&@-Xx9c2wsPQ~8^<T#_`8lggL(+OF<4yruLT8P810={6AWr3$eo4^To0`hf?o
zjjBLxp0IvcO60AhEJ^dKE=rpa9Jr4%pz8bDQ1x-{of%!7_Kyq(kB&lErXj0bSV^EY
zKfTDr$5JCPLbmN(n522rBn~HGx8%e_#@NgOJpfqsG;_t;dp1rWf0bsLJ0sp@nsIW_
zKnBlrQ?e2vbuji>!m1liFngp=s3<^*7JgOvqVm|`Bt*`%<YHTCa+2mrR@OJQ976GS
zo5=zxulAm>lpZE3Oc<+cUBS)PK}@MoG3eLL@_}(vRB4kx90+e{FdXe#DY9rnqeUYR
zPt|zDelV?gC#$0i(DWue4>DmOFd`IIle{XL$Isl`!|D+Y3HFjyAvS<fLgwM$CbWGg
zDZo${x=7<R&K^ESZUVs%U%j!YC4|gm!*D0B15jHy-9=4iUvjl21w(%Aw9z?iz7D*$
z%;1UHF}JJ7<Z;#H<<Uv?iBE1xrMma%*Y^FxD{9yToyRg*Z8>@!K>xvm+mW9k;Z;Ot
zj{w&=tLr>{xc7K7hnsG8n&1AuFJ~*Llc_}sq|#Z=@nmadTNz`yj25Q0u(BH8Dg_K#
z{@U44Pp<9<hA8O3Ng5|H3Pe13V)-)g_?AVzT?l+B<fVguy~vseaa$el<`e)iQE%*-
z1w8^qM%*+{2>_IK+4lPWDwbv-wTZvHxHIjflY#^csHTk@qG@3$2CVkdhRI^bh7G!J
z^9GKe9@2?|$voPOR`>4QvbD%u-Zv3A2+5@*o374c4eoNnMWGAUG~%?J!s!Hrxee4T
zOU<C2FJ0@v2sA~ntakisEVV?6Nn7?1M&<Yo9VBsHCuQ?6sr?25+J1a^7Hu#unxag~
z&u<lPhzlONs$hj;*X!lnUji(OJj<&xf5PzfT6p#FfL9s=4k-iAybD_trAd=kX|pH!
z?7$ZrznjNN?VA+;ZhqvgqxbFm@*sY>d>h8eC-|y=35TelK}^!5d79PFJA*gbPzN5Q
zo+IugHWf!lP0^HP`M4rfnDMyBwh&!RZ56CEL_%+(s<XWOCl2r6t*p>FPjrNlxzXgj
zKr51DgkcbXvW1dH)TPdHb*Xm;Zo8&eI$xy;W&m)8S=g3E`e}G7!|bbX!=htYGo!9#
z!bt}su=Y7o|3?=RO-YlYiks@;g>`d=x)0+Sf|4et(gzUt6>_YGDLPb^gH+GvgB?eE
zmH}9vpb;VZ&So`~!z_P~p8MSotbYNc8Zdb^YArk!WGs)JrNp?mA@7<Q7)of~f`~#<
zmT6w^3iYo7<i_u3MO>F54b&~d;>NYA8XVaJ+U;{YMD4lVq}mr{Sr=vFQ|(>9d#hx$
zzCe}cMdjboCyB9csAU|?H*xsG=3#enoK42a;S<1l4I6l3cWE|jB05Wp9dO>sCO;8<
zvt@mQ27#_B*&h<4kSOw<ge&z&iOh!WDzoSf@-H&ehW*mLW3|OAUTenD@-B=MOm|`1
zBIm1q7u8avnL(|m0n?C~L2V4mF{wr^tly7L;h~-^EGH?20r|jkSSOuUGr%NWI)i>;
z-EWYM_Dod;D8>ZR#HOj^>InnL8<pT*i+trQ?O6Vr;Mxz^x)gFr;Do5FCXXMVSPkkA
z9cIAt#y&b{8Kc@JzC1i~aVni>C0)<D$RGgh(dUtsRM%m`(;U}ND7DG6rpzAKQ3*bz
z>*Y&7L|-o-p4~sE#Wc)de5D+4#0~@LBsN*#LD~^m40)Btb-i~oeVseFtBqgF;y4c;
zNEY7TxJHwdjeiiWuCX#d+qzJb<)7w4a}x@=OAJ!2cuLyTIF8~EiyqOKz{p&8k?}*j
zbu%~e0|zXI6|hATGl6%URrOOmAyyUp;f_a!?2_to4ycnNKIp_W8GG)XNsar0oo-}~
zP$F-_Jn7|8ugmhVoM~LEZwSmbJL+&5>_jg&_$`^}R^CDyXH8x{L2>0~>00TX(Xyfm
zd=3>RZ4iO$5v_zyI2P<P=)z(FbylZo{KUS|hGvUNR`uSU<5L*0p|d~ElB9|s2Dt9R
z7nXm(pPl`()S`S)@(=?gmz)GrXhGRpvsY+3>ozN>B2DrlPanSF@EScpf>6e3t!{(_
zI`{9wGh#_yS6TLW>oN@U1%)^!adUu5zV|j%a4#i!Ssuw`TH%d-y&q1yNo4oDoE?sT
zp>V?CMWExW;~@KDl?7PgkveLKiby7A8j;`nw{4DNnifTBhd<d-;MZ&a=9~Khl?<OB
zP0PKs+!M07BXlN!>R{=I9a*_i!Gd#|I#avx$g8xevfo8-xXT(`C>R7Kk=q>T<*|E(
z>Fr#G7fXFW;Z<W7G~wdns1wO_vP0yxln81rV;5<rF$S!?h)JU(%LYCZ?8aWpXzIbh
zUMnpkWiWsih@>_B5UHewP@*Y!g`br<4ur;E2T)}cz-^FccKf7TQN?xfjL6^-TlSZ8
z_XGIsgGh9|u!byh@^O`lC$ec=2M^w&N~`(_x>BoE{r2q&RIE1ot$$x>>IxWuaGlJ)
zSSLnd9m!a!(FvbDRY2guYhsA%WvCX4`i*$BFM$C)8yuA`)6yn}fTlkl*Nl=!;=Ycm
z2-Q=g+8rY6&a_a&nqNg0m(Q76_6o{fPj-VHoM|Ra(+Et0&12)d!g}Nb+iyt>LuhB#
zludqct9oV~m@#@X863<^y!Ye>KGb|`{gv{x$*bbXFUpC_bkf17CQd9ZOVDC$6f?<6
zq@Oi^CY2cx#YU?E+RtxN)063dQ_zuesk<mKAWK)<Dg;mqC!*;s-c)Lf<6ay$n}lgJ
z|DvOZ#us&$p*5SOFE4fI#i^ZiP4&Zxz7ISQIV-r<>rnmtf=BU^Js_Og8}Qw<<JEW>
z+EQi}0-4d6B9G|QYIMxDUVfa$<t<}9I93P5q2;WR`OMk!FGj;n#6fn@AH^!ZN2pQt
zGN^Op=_>1U7IdncjNWYfMF0UD#KoXUnLW)sL}c|PLmJDcU^3RVcxbbwk58}|VcU}&
zML)?}x=>S$#P3Ax;|D(Y_AG@6u3u}Ti!B-r+a7^z<Go~gRwm}X>`wB+wrJIBg#QVg
zSPco05o<&78&6aN#*27Hf&WqtSmKiCXb0p(A4umX^8$7nqjkOf1PM%CM$Nd0rHg&Q
zB~9i1zw86KJ_*m`xK%g#{OW$<qX-Fn_>L@$0mYz^Z@|-t29q#9#=0LnUmlUi3X>qX
z9=#5PvYSx%<}6pq@?EE{%>m1z%$qDJn;X>D%#`ifu({Ora_9PaQx(6DiM*B}+tbSz
zwgxVFoO78`Mh%j60-NwH^}*t_$jh{ToWKyiqjuY)_0PT}7e;1@*_2L+fc)|YBaI1!
zx*PPU<20?)=iKH>#C1nNPJDpauZ<3!m#`r~kpLt3^S}NI71^f(hDJ&L%YVI8|I+;N
zU*G=vFQIluy8Po|2>4F7x!w1oObk5yMw^I4n(IiUgy}SE^CL+Ku_R$1F1Y|4#mnwA
z6X6ov=tInC^es)2BCg`NIO6kZLc6E;f(oBp;b=HTRDW^~H>2ft86#J(z}m^XI^)(o
zU|IHPeh)%KqRe19p(by>GDfu-WaFx8ip=KDhd4j?*$8H$e_)nD0H1o#bXZb==cR!g
zdeUCNcliJE_HR9sV@sA8{8z%i$FJ2K-Y*Y=N&}4~V5S9V9(4i`80qXvc1O@FgU(Y~
z(|=x|-EH$4=@F-aK9!XfL3fgS+csOaY%K@eGmPN0l&DK)dhP2sQdDu_v_H4(5S0}~
z?dFb`DP{pLOnmJqla)H9eQ|AVY~Uk-fT3Iwkp~4bY;I%CPj5$$VWJ8|&jSZw&S{W2
zcpJBdmx{P5o4mB*20O(TT@YvvAWb(aoP%H!nKARLW0LW=b;50sZbku61!<f76;ps&
zFv}~5c{eJtgXowt#W|ObNp`MA=^PP4zzAq$ILAJ`A><NCeBf-?ELwJ{*xD;)Zd2Ng
zGg!Wdu6o5yATPY&%ofulDc?jg$Q37ZVLM^z_b%N)lYxU27O*mOe1s7<P|i~uj^}|E
zI*op<&!!h~l@w*#c+SzP1g6{NZ#PR=kiCLqE2b(5rpCci%xos9emHX{l=OL^pa714
zOcdEh1L7*pleGAyv~j7izR|(|Zhcd6B?7BY^dfpQtN3HOfhpTU76rNW<~%rVV5Lb_
z*5w!Udsq57TjJLArm(8@o*mqJz=F+8uSuFM>%)R=tYdR}C@HP7A}vFn%c5H%O7LsH
zpC?<MPIjWzImWGBrYMu_=rYcrY<ZD9O^dJcE?>OYf4hAjhQFfk?J#y*vL_@GHlNgt
zy&#_8x(zx&%)wpynfN~Eg@2H{mT6Vx<)%(?um+dEo)t-&hT6iP#|~MWTljY;ckEz{
zIT>P*=sb-eOY6Eyn~i4>RuC({-ZVv>98ql+!`aIVWpPn0B$hqzbCG7OU8MwLM|YKf
za#vY4&Q>myWO2IxWp-(-X_lpNo*hz<7H@RzLOIy=?tK-XY_43RsFMXH)<2cy9Ky<F
z%DTz-AMQ&x{9F6h57A3E4BdS-Ze>}OB=P=r4w=jIRmwcy5DEW;-M5HcI|2irS59YT
z5yy`YJ}et;-H)laBM<u$v>na=bLOW=`X5?*Kwy4)`v2SV2>)WvBlmAKuiy}UxLbOD
z1bkCqp$q&SM4i$ZzjgOeFb~yksj=r~2g$n=z+j#tq=Lg{ZG0J%R=bj1hZK!n34y&o
z$=a^9^#enl7yYV4AeRE5yI(@U-eSYhVxe0?nHTMe&s9Gan5K+@GT=hp3ap#7#O;2H
z@B=!cQ6YHu*52437$d5IRsIlj0hB0py0o|q@qf>sb#+$dS@HSlYtW&emXxc2&mhA?
zVE;sqU@`g}*_MZ!W(yXQ8SGWS9?^O7;<WRxPMzZ|Wa5bLte?|IHa=)oS%q#~or}?%
ziQnA*3(2y&uCwIfAaESJS6)f`!oiI@WTagIh>VEa;RgD9_X>!Kk))nug6GU?3}}f$
z#Qi>2IYd+n+ql%-Vg4;oKD1_1L}&$qYW4%wpcnl+0nkl}iwy&^+tm>yU+?$Plc}ag
z=*s#z3Tj3h5q1cKG(^EJZy;yOrte0bP=f@ItZ*v^nq}Bbv~)u1FanIOdtI%?O~EdK
z5Nlx_IX}YQ<EF0n?557GxXoi{%T|AjL~A()(lwLDt=a#fJMD!Zs*V(4uM{N;2?pR*
zC9h9pbS+3rz37|s?Bl;}U(O7j=4DfcL{F_i_dSk_qKHe7qxzykYE_DDEfa8JY@|U&
zv`{k^gq!Od=vC9!Lc-451rJbSUpaG=$k{Gn!_zQeOxJ-Riire2jareBYT-7fs$<}$
z<Ze5R1I*vWGL?_c$2c$Y=5ej|5Al<?hLkKcPXdj%;qpB2ik5#Okgq_NSkh5SW9G(!
zR!={n<R`NsRBe@$7U~~#Xf2Bw5nydcS$v%5S)6Qa2j8h)`Q@^Ri$ioM<Oi=@rz*4f
z@H)Gb{qsfUtZBbi^Te=~Yt(U>9@TpXU`rO)X_|z0^UE>f10w+2giG(~?~?&OW;xCB
z!u-TSI?|L#$|S8raOM+lc46$gYPl`Pww-OE^B1vb{~$<Z63-KfRMOVMaB8&yPG|5*
zS>#2W{{tV$mbSe#T!~kU>?VoE&bcrc{k9ek<e+sBm(x0}$}pUK{H{;%9rjTHl5XsX
z=g{F~vLWRI+XItc<DCagF|5_tb6e9)7G1LBzEctrDG19vJV*KAOm0gn0@bx$Gg4@e
zSSE4#+uo_7eQ(h^ge36~f<c{^X&O!sNdR36hb}KrBz0LGVv^lk|N2+-*8Q~#CgydK
zH)S1O<(~tHHJplHxl9??#fCB8C%(pTN3T?ZWT@2|(@imk!C7fq%B~=m6^u<&HEE}I
zC%Gx$><bnAm&GZ83|tz?0Q5eX%K(z3=#EgQj*}nmP}}Y~Suj1B#(O_FO9{pBoaC~L
z>%y4jG6OU(TFc_)2&grr#Jq@92(G=>d}LFiJ$S;B09Qgmxz5zxdTUxyqL3aD6#%A#
zln(F0wf>fNU^uCNSjpr?TBhZmR<Ulm`AJ0IZ?A7%s4`59>|n+oWm-or%)z;2F3_ce
z6<S&Gv!H2F_;u3nzuHMlTpjXYO~tU*q|S@9&Qix#*<{C(H=(6;!lZcj8p(hKt}!Yr
zLBz~fQJhMPx`ch9bMTWI$|*qrg|&+eK4`|kOuq1>!@p`VfO<Rb3^o8S`E~KdXe8qv
z&}5_M0T9;3Q~+)B^(ULfSyokhGv;QQ0JC7l@d9Z%1pVlY%VdmVcqfto2jZslTUq~B
zX_GYZBIjSJfPJchGkp|8Fi8H?^v>cHZitfB#qElo|0*pEyA_dQM4#pdY*;oEgXTc<
zT3OFzOo6ueVcxkQ!4qz00P>ZGO>AgbK?;-4|9UZW5RB8v1;i1?*VkL*oKTeME*rvB
z>{d@gRy@f+z1=)<C3+qJbpWuCXxf-1ZM@zhZrlXQo+u6J6(K?}F-z=ucn|PidFUG<
zq$!g4*CrX4S?6|z1x6gkhWhQ89h^0FS$t*D6o}A$dvE*SqxY`62D=*_cg!}O*O}2~
z@b)aSWDO9EKYk^I6)2lDk0=&87$n5TZv}&<sSP+TL5`i04I*utB}~B{57tSAb8NVs
zuS)Xg^j|gQrCewJ-m-V`(~&XC-gDinJs|Mlh!!MqRNBR{^rN}3G;NCfaaqjGSI*zf
z8UF4l^>e@ziFnM$^r$~7Zpu81^X&5};wudIt=R-PaUtw+iG~8WAfSU?-*5L8|41ze
z`g=q^4)Uxf%c?Bo-hBKHKgb*3;uLni-D*+!`F4?#gaMg`7hG-!yBS#E=)}a<j3(<4
z=m)#2G?3d7Rf*KDxRoP(-9tnq&5A0it8+$uAu-LI3UGt&rVQ&FN(u*E;3^1@Kbr-B
zi-V4In0Dhko6L1$8?ow{m6d5SpE0}S5(nP5(>?52&cPCQATY?pL>ZG59Ob%Q?TgYs
zI=VGgISMp;X(@xvs|uhsRVD0%JGK3=anEIuIa`aZu_m)b`O!*6Cf$E-(P7^7JOqUQ
zZb>9<71T5BiG8!Xtc>H*nR9JRH)0A%U#q>k$?Z8cp`HoVf}Hn3cE+klpxM>Q5y2zX
zV;9Zm8Tl6S^u|?G-R4W8bR($n&~yaC{V-p7qp`e>@<!)I-(6|a=ZSS9API#44<<z<
zm;x!4dX$40KC+Y%74ulx#^WrTJWI~xR@>1}VwsZ!+t%@rX0FLdRQdcaPg_s>Ik$KR
z9yK=`M{)*$MmfAkDCFko2;b+Z^v=twOzMY420nNsY>pDK=zl+X*HzUEzdp4uXm7)b
z7!y0#loIMP8WPfa-Zlwgy3_inP+5dlpX~m3H+Gq!NXF>P4Az$#nUe!A57r>E`mKR+
z_w({Rz<%NEEI0$OHZwJxwxkbUXWUeC3iA&TsM;nK10F3gSLXiJ>e-8BA{>JUGh;GL
zT|hWcYTk<q?b19jp&#>sgMR}Pxc80eZbP%UfmjORD(^RFEJJy0#mjt$MFbWWfTA7x
zKqp3K6WmO1*;NVB>V`$bVuzz>Kw;kJLBhcRf%+!^f6SrhOtjIrO|0vEBmCQ8N}N?m
z9H)DU&Mz*f^QO<-(xcfj*fj=oz}dLl;A1GlUn12v5{O{iUpg>zLPV@+;yf<DK#FBW
zKy-)k`kTp1Y`Tn6RC9bg6Y{enN$Rf<5L^>h+|dXVHW5y}QPs+IkM~E0<me*WLsYHm
z=nYN8(+NN#)U6$K2mJ@7A?VY)tU~b|nZ5p~5jm7Khrf8S?}JVmQA3&!q@xv9WqF-{
zA%L=e4*%<WJACWLsC#|wZ$WM!SRnFN`XLtbE%rsQK{67u2Jb<&G6^OJDk-)=Fm;@B
zM4-~}2A%GnFLfh96C1Kf0|72(8I%|?=RA~P(u4A?NRnznochFPy@p)u!GoQ1dy<Mm
zkx&=$0J7CX?Z<S)Xh@1CiJSWKlY*t@g3$=K8+|aA_;UnbvCG8VM^93i`352+Kh4YY
zfSTMeHAjG$W=8Y-KR-^ErDahzdvXSU+ZqXTna&+kRgPBn6f#o2=<lh)188iVA*}!a
zE#a@7cj94`+ZX*93@?P;5zg7IjAPDQ6AC$;3AS=`CU~I~2D?n-OzvD)fID|jAppTO
zv@pbW+MVPW_`KGx$z5owtNoiSt+FO|L#SKyw2lnbO_2;oA2l@*L<PkFYMdaddcQ0b
zCoPYa9v5n8SrAHi;_%Rv<j41jnJnk%3?n(=?v<O3(<Wb2N_=VGL!K(AOU*avM&_rW
zwT7*5$&uaMsnLDGu}zr*hlEH{QZ6W4_i**tbK@EtudyuSDqS|bmS*-0L`*c_Kt05}
znPF&|%dSU_#a?KQjee4w@p;mcW8@Uum?|-~XhiugHkV(JnA7nkg#!j14Zf0EQxsl#
zDs@~oc5!bG7(e3hw6@Nw%=M?XP*`|OSTmzP0B&dpPywjpI?VXspum+uU+mxEVH~=W
z&2JP}pv5Oialy@{bQoGzL@B{#UZt$Cx`q>hjl-m$!!MDQLZP|`LBaKhm6UmY%A)=J
z=+kzAEDwyo?Xl%Z+*Db!7}_wihzkXel`B+ny(O!Dp5Yodb=<^hIM=vfxK2#@S-C(G
zmreRvq|#$~%Plk)3vd%j&w4HtMU$oV7j%loaA1%X`(1}fUGnTd#08I370f{f><lS=
zeoVKkF<BN!#SJ(0O0DYd5v1LkEx3%O4eSE>*9>MwA}{7Eq2-co_*i*b;)Yuv6VtyO
znfXboju^FQ=8lr8qwKHAnyPqQ%<41&Zm(}CZ^Au~2oE6pWYItha$?S4_&D!}NL#pV
z=b0^H#d3?5(`6`s2H5~A#n0(1f|%|iv`Qik_hff{?YMP7KB3I7#T&qRtDkzdM~;kp
z8=pk~MkS72)#thuM2zCHlQU7cX}eyi{Uo1co~@8y<rJ602uN&xybP77?8u4Nzv$V-
zpAWH#+qIK!A<eT6D$}Z}vbcO01vn#fvPL=&QX}1Q^U{c(2UsBvQ@Mhsr0H3`(sOjx
zJr)Mase(S!QIO4=I4P4YFB5wME5Dl7V0HZ!`Wnl2{<NgGe%f$)k>q8ZRu4mur$f~)
zP%#Gw<}X3^7coz!XIVE>kz-DVRha4Aew!>bE190Hok<0257eleI<2dR$5=m1Mc)(|
zvx;qkzy}WlnGSlA;$KGAE{mWK68!|tCphrjp=+pVduu0;vow92u7BJO+R;aEy?Q^f
ztq~g_7et1+i0NV?jHw85I2slk&H_qsf{Gsj6Zt!(kGIz)#n*LtXlOwE+_;Ri$FWX|
zPj5%_LuDKn<>LeIA8a$fywB%c^m6;_x<*+T1w7(PSpEal;gnBced|fVNJl$?VP|z*
z#OW8<tS!>w?b?bOJ?8Z~QLclSQk8X)>`9&f;thnV?i=()>k-B4K1hk2d?IT!a2?6%
z#{B<ewm|U5*{P?jh?69*9)1EJnDpDEMPr^N<wW;N5M74`-^vYGv;w9#o}q`61{bv*
z{5_mV$kIHE<NWJR-L2DQmu)2#nU80XXB&p;Rqz!k7NK_*g`lw*M)oSdNgQaZ28gfY
zW%<txi4|2^rJ)Jk$DiHdF4~lRZ(j@(ZoVTflc3n)B|-u5=nPHLyv*ybqqzpm<{iy+
z(Q(1z#y3E^QN=XuC=TRgSRz{lm6EUUtb=pT(9U+rq-9fAUtv7yg#%vO>Aj8qY=0jX
z%mC`<o755^kU8RscDvCNBGwJ#3&&v~jq5zCLpsd|ChpR>iJLU}9HqYxjrebdRds~D
zQ?qt@J2PLOmr0To<>znfMHg{fK^wWwbKQY|V$LOTpd~Rn2<};$CQ16RsrF%j+5#RI
zj3k(lq7nejUwQk|*f#b%OgBy@7JxyC?#0kd0R><5BDpUJOfcx;xWS`QlzAf)Z6Gg<
z4DU+=#<uDuLyT0I+fJ&BFf}uDKp+J%x@C4LsW--{vAZJ2le=yaaYI}Qbi%qYN%Oc!
z%7+uu4{f|{3%SloDq9NlQLIg}tW0(XB+uQ*QLNqboa+pc+UD1w!ZI%u2Oddn2IH(!
zUht%g+&5aeL$_AIA|pcjM2JHq?N$CKQ-N@*Q}{YRCesUjn(mk9!G13p2v7|qlx?O2
zLCN*vm9m`9Tk$o7`QR(dJsrNyqRO-S)cC+=E8OWlJCFU2Wb*l#vkpVb!dyA5l6jG(
zz7xNLTSHGxx(Drjt^b*1Wm*<Ve1cmKWq8kI0b+87M(Q{YB}7VWRbp^KYjT09@iLRn
zQes6wzcEKjE`$S9S);)}Ig4&#gb4+QK%TBe>L@8RF!%E(Dz}liJOMhrDQU<F=)Pfx
zl4NC8G+DZ(Dr}B)Sf~(C5E_9r2S6ijz-|nxCK*Tq6vv;UC4+LLkwi+&E)pA|`hl09
zJSI!dK|%o_DlPVC`3P_h`%u}KDGx(uz!79__qgCg)7re0n4qyZLFSN#-<)*&#GQ%8
z8~SOCo)(hpm_xQaGW5gv8e8#X4rlO1xjA54U;{oZrIBx~fvQeUjd=*iVS2N%Va^EV
zQy(eqIA(&q8*o?x_8tUO6<nYfjjRAOCOhv*TSwED@Pc{s>oA^3Byf*|c&=_W4q40^
zFuU9ieve-2lje8H`aNKdOe~HE%_Z{|?7$<ufPhFxBy2ksJZd~&3F38`B)>L|yJ*L3
z079)g<&WbL{FW3=nSTXIdGT$xTu}rqv`z;U?5JAp;IKBrYr@{??h*5M`K6iD7)zD@
zssvqW?coNcdJm(p3?10nxbV$GQ~Ia?tdqRTANP4YTm5fuZnpuLz;2PRzaLx27ipDN
z&0ga1xp%XdJ;++Y2`99vfPqN!qHr@q&xAI+x@dGuhdOdHK6nV#oRFkjRGQtsVpUdg
zlZ4cjfBM{NK5WQs!dzJOPWPj1Gfj)8dU)vfu-e_WkH8)JZUsQhOCHUriao}$c+{yr
ziUGEpWY3FtV}h+1$4CmuUS<K=p`%#z3QHZZqeCuMmNjMdbyejOBbU1D_HzM&LH!~G
z1=~c$?8zFnh+xt4fax-s?;>SrGC@*pDj~@^s<iVuuj;sXI8L4$klCPPGqHoPe@t|I
z%3<@rNHRmi=VVr}m(1ySXk6+?Sc>9f+_CwiSAsCb16WVeJP0R)*hLp87B!D$MPHVN
zxP<KsfmXnT%kx0|r$8}K(kCun#!(f^wOV=}P&SGZNCb%Risw~+%c3ejK``%hT)cKK
zxA*pY^snz-_ZE1u6QUr}$42}GebNt`nMqQmd7eKExqNUSXaC3)o%U8}_ncrwE-|0~
zgXpOa{o4i8f0&-*irpwyO?PrWeI<?)`@6CJG*l|IhWaa(nnbhK8Xdn<&-!UF($igC
zZ^3qva9)7FCDtWYFTn1=qqUdDSrP9MGIzPM`iMzzjTIsYIUqYae!OJ9$Mki;Ub@%l
zd7ugcN-7JHA!n0g^<ec|)=CS!8&~x0k#a=TP@l6OWZ?2l$BD>`3*Xax&rW3v>Ro!-
z4nd}|T&=<{&jUU&LFQOH3BVz)9}V>sDE0=GaG)XlIMo2~5M5^n53y|<ur#jItgvuN
zyKdIT2vbi9rwRWfQ3~OI+WTc*4EStx9?=#RFlk7~h(PCzgUtW@rpgZbaQWxpR#u=3
z0+2wp0XG@Ry+ajkR~ETO^jG!yYp+P;obD*RAlhu8<@`jO65GDk7EmUS-7BZt-gw|m
z*(44*+EQ+H(*&x!-vNuv+M`ES_W%^{kW|K!c=KDs=jkZKsKP$qAGQ#jX#GIKVG>v<
z-P6O`e}{|79~nbsy!v?%iFS}wb&A6tUc&MO5`}IZLnzWD&CAM)c#MCI?e#54^zq^t
zR;Zk27jm+z<nMHS>VCQf^}YXg(cwFiJaDNE=ytHO70FJ*Scl=6@QgiTFSmhzP`G=H
zKoag|7`tAQdDMv+SftV?poPpST-Q3#AGE;jt5&=Rb62bj5hH+-A?QazUbN+cn8tOM
z6oCuko=*?XnRSHxk&nN|TOd;OS6Tq`dC1Gj1&=kneEu$ZlhvEbu=*`d&kJQulBRjq
zBuP=$N!6t5pIbDg3!Zy(X{N{^2h}MU$ke`~oO=MLGA;^n5R}s9RV@NP8}Fy8sv<ul
zrO0O?eivNss2+25^TZ?R84|dLXEe<d80d8V4{p-7WsCwM)7@$05V$46T`$m*AhAq?
zT-)g;QQir|AdWzDdIw*IX-pdZRl<1XnUz^uRA<o14`!(QZoxOx3Z?^Fl>Q^VZ-0s!
z#SBWJ$kPb&RX^|e25lJvh5SR~gZN_bc-eX^&JyG_(UaT7W^rQB?N~R~6pKdrkG?Kk
z+^icMn*kUUBQA!w1FW&Cvofw925LTlD<HJAB2C6on_PPIsQ|ZM=a^~blkStTrKJp0
zP(G}6O^{swBd97IQf!ktshjEx4P_R?d`tU6eO72z@)G3F`YdqKvDS#R7l?0hc&E)=
z**tou$CTQQTv?kam^QY)4uVX9x@AFqCl*3SaBQ8&$rs$=qH8fNr!<s`LJ%0@2AFNC
z{o63#DGBVtY_fnjUC1anh7Z#^FN&gk7$-R;zp{xPpUxigy2zTcu9IqBi*ei>0D(<e
z#6|fqY;rtuuvu$}@Uf*nD71lN{kn+FVWCqPfU_BYn>kmoqj+<XCGCGpJ759T&~HvU
zuV&VK&edVOpPR;zs6hHk6`~d6qa(~An9l<VrQz)3oSEQWm4$r}N#mw2<M<01QXy#P
z3|#e{5eI<E43jKzj~AL=@F3^^ne3~jEXce^eA${*x^B2<04%x=Yg0T_hA?vup1Hc(
zOMc59P!UDMK|~d)VwJZ!iIy0h9IW91Bb2g$f3jjGe5?#!!aA69X95SH683pC&1+DA
zrrT6&s)g2|0>SOoJX&PdXj6bL6y~I$HhiL+n&eelRbS{o`rf_SGi|F+?P|4PMd*Km
zcY&J<sS=XCYBfyB4KEb)UcvJL_A)-BIkQ0~K5befGbkqhhkWELEAuM;d=Bo(`A}Sr
zy5d{I|C$snQDBArC(N$mC3E93?&t}zVpztqi8usO6cyD#lc&SwunafSQC&;p=F;=H
zjRDJMHwka@xZY#6Tl)8QQfT&&I5sRBI*fz)miJmgmsU-Y$91}+)L;NkLslA92JkkD
z5)mLJD(AzcFDSp?K=H;DPB)j$g2@TTqR1YSL<Tj{+Y0sY<{>m%9Qshwm6s9I_HCHz
zUtez*&cFiaR1CGNPppoUCUx|=-O|;3ZG#?~t!`D@A*YwD&=&WjVsylBGcV(A9hz`F
z-jqQoZ?Y{Ol-6-vC3*T#QNQW1v?|^8WocqoCwcm~0K<vl>`kq82__(R;oCI_Q6kHd
zs;<({|N4uvY^`V^iCk(`KqDUxYUl$%LP;#p0KB&ATExN#c*T<*u=1<@Ife5^(bJw}
z+!jB(!_Ih^Lv_+m7KgTjMN!sSk`!N8*7MESG6JDQaEjeBm_J<nYY6M!8PgPH5r2UL
z^I8SCvVa`?e`hY4)fk&phqh~F9s`dr41EWQUQ-ll@&)q>Yj?Pws(2YYK3+WTNWtBx
z@6rmFQ^?S#IZ(4nyTdwckGp%N$PZgltr+hYhJpn2m1YR<7})=jJLItS7a*OgP1lJT
zKJ?8<@@~AthP_DprEBMnO+0O5fF5ynpb5+94bf?Y!+BBZ;Gm^z6R8Ly#fs>1_w&?r
zL|!FDRfZYZMmuEXm+Pu3!g;%eI#tNCTwW)Qt9oI$x44ccX02Q$%i<>VSoXGkfu6+L
zHL84JAo$4>glmy;cNAHtzC1ta2<@xmA}QmC@rL6e!cBN+R9(xH=TcH<aa}xan{qUL
z_13=sd-Q(0zW2XRfjHoMXPT|^DUFa%f25L<=6RE4+2;r1WuCR8^gM?;n_wa7aJW1V
z9QPEv5t;Leb(D{8u}JbbD?a};J&!o5j`$O+qFVaR?aBl|993X7_U_e4R=zuCYb45r
zf<0lM>PimdWNXO0wod)`=-BS3Q4u3cD*^77Jso{dc0w1Kxr%?0N`{*jN1?kc>oWgJ
ze)-D0<(8hNy1pof7}y=pgQNpEC+8TG)CdrG&oQ-jOM<+LtN8Pm;abYGITPOxoB<fC
zWMhs)gEN4c00uyr3QkOE(^fjygeSAzs3ZYq09YEMS0>i*e(10AJtF>ZSU5N+RL+u!
zjsI<_jS8Rh2LW9v5LFf!P55E=iya8090}cE-a2(eB?ccgk|AeN7%rp@%dko0fC;v#
z5L<!q&R!r3%|#;4NL)Ao=Ch>C%Ou@F`ZOil6LDXso?v*8%*+T!gtr9HuFpM9Xv0jl
zTSct0q>AgfE>B3%(yK(2Ts>&{=^^&#+Bux_z97*MiAUUXp|559dn1Ec$`a<_rVcR#
z-MRtwmgee%hoDZ48=Y(rrE<`+O!2?y&>eFo<r9tVyDYiUNfa}!2%?$^T!1{8wibe*
z^ZTPgHyGD_?UBT`IvRy-TYsZwJcoM<wh_i>%KSqFX8xFNfln7IY_BhpvWx@L<`%c-
zH)H*alfne>(u-!vbD_s?4c2B!S!G#T9MSG@aue2);?1~78N{6Y!_#p9U<YDFCI#mA
z{u`p5tg0%tA$$_rC!qf%PdGu?5++=yNr0m)MZwlVM1~(rk3=TiMGz}30HENn-EbHK
zSY=!0Gm*t%$MuO-s&+SwPEBtYfH<!mj7+aga<h)Bb_0l`#jeE*F;4gqAyCkvMS%7C
zdoGG3&yU_SnMK}ch0kw{*}f!cdK)j&l0~s{mZ5gzNO-QIZmV(M-S}=zT00^5O`Al-
z;5k)9`CiFSps|2?3?KOz@k~lh6nhS{{Wpv$e%nL1urt~~L1Xd<-ZrGR>~)SRBVP4j
z<u>awEpxAbzG~%<(`@DoY=n!lI7e$c&gXX+jz{vH|MK78{*V9d`|H1a|G)m%BcMB}
z>ZZ;%(2OIs?L149I8E1-O!bKdl2L2dNWofWF}3&sKqO1kCauFS;x9t4cI@9aE|Fzb
zai|;~%y+F^rfiCM<1*_R(w2(GZ-N~zvQC^rpoqFg)tw(}lINDHyNj5Z>>6`&>KD&t
z@V80L&hA?ij?aT20OpIDp}vi0UX^irPCtNiB$fHyxMtk=YwmSIDR)4Wk<v?}*pD6#
z*!N^684+gqgrQ_l0~+P-%H{0`Nd}Da|Ac}f*3rM^={~U%Ss6%euW~Y9>~Ur5qZcxq
zLcG>soP5k-mgeSa44iyn5ctXnJga5kXzG12qY!C5Zt3rW0GOI<TG}V9o0w-QMAS7r
zb1491(pQ?+rX<$bAL4l_XOo%H*CwdNw#6Ej*EV@~*&RSjMjkPK_<EN-&(gffn^Wh*
z*&+5FLB5-1d|JqSB5Pu2{W`tLNo?p4?1@UAWgs2mW|g5b6+(r)Zya(pg#(6<)_E(o
zY&Scf(nrv2(WFh8e7=0d$_Q^a{oW1T2G-fhpbu<V&U;{K$+{Mr%|!9xA{K~_i4C1C
zp8E;7b7(#TEfG_yn^$T#&+hPZkrkg{2l3&a{ob%BR?N1kM~e&hkL*$Dg4=OX%wgH~
ziFZDFADJoBm!k*M<Z+Y5JHYwhj%M|UvF{vH7Ixv2)4~$;c&?L#T4^-5MTq`IOEmHs
zRyOa7@)X4;olnC`45#>bnGVFXfkIDrBASeveLX+n$YI4C+Fb9AkvluBtFe@Mg%NFY
z2qx-9Mq?>_dE>C*XS6g<_XFM}5&9?g^T9`srzy(|ioTN|A*c+`<uaYOd{oUF6qA7I
z&Q+p)KCkQ3S$UJ^@vrLaEV~r@lU-!rihE$30#6QOJp_ll0XZ-lvnso@;OYmSUX&#z
zpb46H9YBF;T*Ptpg?5FTTErWY;`-JEz~B%;soHcGk}Pf~7#6(tw+o+hw^94b*bc#t
z25cJ<2J7BD;7aP=0>*5qK>tw3uZZRrV4sgL<Zk5V;RxV3AmcnB!8uwwEhS!lSXYr9
zHMSRW&b&$hhUSwBAI<Z?{`f+ignJ55H(F2A?}x{BQsre4KQ6=jp`OczTvd<)A!>Wn
zHz}Jm-EH5UBV3L=<OPRVD<&2Cx=kSCgdBqK8qQEQO;$Mjv~5w^&YeDrf}%e@$|ZpK
z*z<sqlPLaD&PYx-?-EnmO~j=TL-6@nS$8lin<_8e*yy%IzJdMCro|15-thuVb1ur;
z51WG<-yo}#tT};a(FU-kAX0zFpl!-rU#76AgOFWla-0W#wVs!7_2@iU!BO2p9jSS>
zY~5K?rrEJT;^f>29lB<!$o?wE_3SRltlJLERl<RIE%xZw;AzR@A-^G#O*M_)aHt)?
zWE_!Jat^BMQy0u01Q+>A1p1mPnqxQ0b1f-S&Z1k@GDy>t@=NfI@<e4`=&~VbpKiRC
zvdXi{b`G`$sI+qDXE+~2NR#~De~X?60@!&_e6GxC;Fdcw#u##IofJu$pBtezX*9~F
z@YB{jRgrmxOS+}MT2G4nE8nM1^P>Kw#Ay{d*YvdeNuv^Y6w1NRr`~)B^DWNbp5$w^
z1?JQjQS;?_U{FW?c|S8US!ZRPoYI2XtnKZrfs~J;EI^{waNf&Lndsx4i18R;!420h
z<f6e1)MJti3sD0EE0sAB7e%kg{b6MpBz0ZZRbltZmI5#CPflq#wPRq3%L;5Ey3}2u
zJv;cl@nx#Cc6($amYRUsnF^kG2&R)RRK$(X%kwNNx9N8JiBe-yQRQqDRR{%uNji~4
z_+^lq2Y*?5R4w?X_JgY<?yiW2auVaIe3<++jfb(+5^L)!F#}TN3(<~l%xJ~m!ovVJ
zB-pXb6rp<K&q0`I4?T?cTIWYv3Pi0y&V((r;ovk?5PUiNV=N-ZfFVZ<0LO&s)v0uF
ze`S*f0eF4_I%bpTRiWv+&YHB2Pm6efIu(Na*e=z;OWMA?0jz_>{E+N1hcrT_xpT!~
zo{<xLXXzUJKxoKoQhK4Qk#ivyKS&|QhCfqqj2ks&ZdOwL-kEN7L~Ji(xY&!V6(HAJ
z7SHret)(J<B)?b^7vu}Gq><z*)Y7IYnNjqejpumxy6W!CA$5I2H(8OUc0(^MQt^58
zgDVdm6@!b;3#S8u-UPYV{JaEngxu-o7$OnE1(>XxdyvZUg2{xg0_v2b{57MT*N&{;
ztVr0r6T~%N^=_Dczp?|0yvonjEcBT?i#Nx8qe|HFG^wK3um<N78MVF9GF|ete%Ro5
z%mKen<I4AnwpgyF_QBejUke<Dydfj{!X!60e_f_JpyZ=62-FD!5?#djm@x+VFqopE
z`}_PZ@a^cPj5JD$Xc#9W)13-*7E+t;v=TO+L{n#(^G6@Qzjl8`FLRybk0PtUMX!oN
zD2`%mY>gyt>c@H?Yto~ye|(SrZ0}(J<#ZU&AxZe;Xd*pz#UrtB=!d(h&Q0}TNQz=e
zE>rISJ!4np08YrWq^vg8eb>%}l}nUqy=XB10~q(qP&R?Pz<U>{=AjZ1^9;2+#0)Jv
z`_dgwT%>W6)t?}za!ktq_Wd0)pLTu&;ez^Med?Z=rcYUSXp%fCTNCoFH#?yML{H5&
zI6;++6=FDx3fz66wO+UPsL3R&T(3n-^eLdYQ#%gA*pZq|kyUY#K0FigLBq)H@nMW+
zti<%DK2fiK$fVLy5f+zawcGi5^qw}fsWy`Pj_J!nz3(CBBMZ+#uLhF{=$nWGIPMkt
z8n7n){AU1X^k+@*Q$}X1Kft{Nv$-uOLN*Og#`&=0^d9dC)mYtZGHcizHGH!qF7q!?
z-dSw>J%Tcx;sij^PBj>6iz%=geV7JQ=Y<SOdW>k4pnu6vAI~T=rtK_gfARzMY(oa0
z2phr@N4c4huXVSh=5U%6ab6~0x4V}|_Hp3@-<_);>id!{Hyq1W$xE5_#*>twfG8-2
zC?}H=)3nve$cq&n4V6irt-_MnDgyOV^_nsGFBGX%b<u5TDI$X(7LuWQYQ7{66!cQF
zU~p3eCgOss<MdLG+qsg7d^&25-zluFr3Y(3BUBvZ#2&7X!Ynw9$?#4;cyx4BO<r`X
zfk=S*gVU;n;6a2=>a?!EP_BESp|&MtsjvNe|IGnsP&dx6i!4mr7s4F6yJ@*$)^7?~
z896cQ5Zc+sc7#RPd^=B)3)Q!fzcQ)GoISi@(SR}Cc;(+GK{FzDzG=rfOfw}|a|bU(
zh}{*S2`~u(fWv!4*{~Fc7B0k7KvzGrAEZx@GYsZ@G0Zt6)mU3F?3SXa6(Cavs=~-R
zTroq(79|=$A;fPQY_5Vab>xwEb{<!8(QJAC|J!Y7@88=&%aN4})Ond^M;z1p_wKzL
z+vsh2|Ks~#>lbR$;`l;dVrY4lByO_ua2y%r2cmzwVV7X#DruT6Ohi5R*5LCizn>@B
zyw!I|#0PWLd6E}ZReXx`$*B>yJ#~LLX{0ybs*R#%c*+q#HoV!LI`0E#9aHurqGS?l
z)EsOg`RZna3?V0a9-vZreZA4PFsIQp+yhj6cV4$hi#-3r2})0HTvvUuz>gf%<o*T6
z8WUYiajq@(8$>%3HwKXTK|GNg8t*skh;WsmN8LgI0U3}YsE5o9ilz4F5aR9!E4dIR
z_Yk`6#D?URj$_K>J!mOt1}MN^2vbtlLeu-4LnBGJEoRDa4YiTBYy|q2HV-~qOmN{m
zKh)XCk|wRwz2x$5CkO%N78u>7Z^Yl8?H~|*1HHPi>&x7MaU|g9r~Eb*B(kAayOn92
zmQ9|VL9b49D>n;4%K-pjAym3}qBh&>lW3a?Xs8peCfkrnAZ&mc27nC4!u@lxXid$)
zT1T;ASa0i8R9uR@2_|)36qv`u_aR<_f47+Ii&(CNat#ijl&yE(P)LKS`rzQat{pry
zWfn$Qn0uqqGqZ5avNJboS#oc{8GLn0`akuSISL)^kvLD9=HbEY^NH@dAPvv>sdfsL
z0!TU3{$d+a+1e-T*==1Du~6X<9eM1EfMcq1DA0zCbYlHLN9Z6qE2_N6(l3y9U5F1Z
zaZo&({d2ipIR;}tjiR(S!l5w`E(xg&#Iwvz(Y&i~_RR^KAf3^2XCo2qeEp-<Ch5HU
zCx0YiG99ry6PK*$W5x!xr&KQTv?#JVlo$Aq4U~TQ+hx*}@rInuC%nQHj{l~%xTgh!
z!wTk1M|f3LCPn_ZY}N;H(j5{HS$3J?Z+@d7tDygG1E?U5%%;X8A0sgv2dJpWxR%10
zbM$#Yyv58Ycgy+w=y^cq;C#W$^8lwDcK)32!Y)+U#7&hy3>F;EWN!AvPK&X9REe-G
z^D=u}QuVX~@=inTP5lEjhHxi=FlJa3D)eGZ56!?YfD*zozjjA?WZV=<UZ%-LbXjQR
zt^9tK<>gw-Y<D_x<vLBCXQ5!$FUP6#XZF~&L-c+d1EFBZdl^xd%n;l^poR%>4lYUk
zAih{ELGPS+ub>ZM{A?*S@KgnS77No&Z%^$DDhmHGw#qqU<`bMVf@x`%CNS9#(z&54
z!NKKOv?gfqdNQ|7JQ9~Y+(vDhlR6L<e|Qo~WJ9tKj&gOHxgG?ZyiCjZamlT-O3_<f
zWjpfu8u*Dg*ENwkK0sZ|s;;ufN5zhFsGVbLUc&s68G8N!hL2Vhgr$PH;8@zvSh@ys
zDF|-0z`L7e6v$+_4M$I^sPepc9G^b4tz9LyLRZb4saSp?RZkS@aRF#%XuDC|JOXe&
zESb40fZD|ru7k?5TezjSKc?>DheIs|ROoXGR1+HzF>~QJV*lf2bl#70&n8LguS~qQ
z29Q>$UHxRN#JB*`5;}Sw=sB7y6dpffHUjX>j~@v<9G0}bbOg~QSsup^mq8ymn~=tJ
zpT7P3X6wY@?{2h@DkPgwAeD=zNvITZEdcF5+(!Ex%^6`~6ck{(iQsx<2jw07K!cOS
zE$ncDpbIi+mU}Y9YiFJng&Sjl`xD6qs&_}6Ak)(ChGt~knD6eStE7GNtF%P%3CULi
zh=bE}DqjdFY0(gA68<x4$xzRb#rqJ(z%Hg9gHol+?8)AV80SS*<qw~TOYptz{^%?w
zyw#`E^hTTD+$nu^j$h-5?-|PvX=)*9g2=A}5(t4$F$F%OZnbh%uR4SnVMV@hz7Qo<
z;JE3BY>zUHyvph#DL((4Sx9+rOgIa`-nGi^ZW${$;ts`i+$5XwG7C9}mETVjDC|C=
zuXDNt+8RI*S|E#m9KE|HOPb<wZp8^ed2><(WsBxlCVv|7Pk-+Kc|eB0UJsDTEKaIA
z`?_;=og}rB86w2W+=TWjF4G9as#2sVW=Z;C6%>Wl#0WUgyv|wF`EGDgG)Yrd4-=F=
zoOf(OSIQ~m0XEi{nGZo!0(c&{SAfq-6FNsWaA(*Ngq_tzRej+?Sy-#@2uoli&)!RG
z83o<lc!xNe)u>9J#%pUp=K{#lVEJLTs@^0t{}z<1^O1tlQej%GK9!jX!yBAKnDLGg
z-<jZSe1!`a+@c^zgd1ReTN@9sQO2{+pf*g4B7zZX^L4E;7K10m{tQ1OS1L)rXnIF$
zUn4W%SC45j87Ux4UOFDM1fjTt<D<!ovdlg|saU~-x6}l5h7A+9(1^8zlBNylT<k@!
z25Hc3r3pP-+*rr8gLqTtS>41BH{Xv_tep^yv_ffaQM$CQ*V$p>Yb#4=NsQeUDG87r
z!#D}&-bb}wQPoYEZuS|DWa5gd$*U#{c_N?8o!`{M*^qhT{mi1-gL?W~*B2%7q7@I<
zgQ6@X+%A-CpdS_`2h{;qRKQNL&c8az^x#p<&$F^9vxg7ABhmTop=q<qR9C?SbXPNC
zNr%Jy0}MTKzf&id8BM)0Saw0)Osk{8V}I0z%;Gps)6lVSd*piM_me8A;$5gZ@C;hH
zMp~AOYkcq8_xt~EW&Zn*_x{@&JuHjo94AkY=wTCkxU5{DipzB0U?PyMU%5t;G|fJ{
z?7*aAzD7|jBql$3+i!6GH=tYO(Mb8P#k}lS*1Fb0+(`UT+Xb0Q94`zGaD)=YbzRii
z!?G;LXUV=F_jo6UD8@cQdgomy4ldl3z6)Apozm}}sQRdI)<koflxcnMzu8cFsArU=
zWzu|p#T`Vp%`6^eSwM2+9$~H44gDMbX}Aqi$Q>k4Wtqoi^7+Zr;uUWLfS^>wq1WU*
zssUzY2<|FB6bi$sI=MKn9~IwOofOSKd~9it7do#)vust{vwKAv=)nt3vpmhquWJPd
zO{YzBW}CSY711()kS@XUM)QtE-&Xv4cWmEAX*PUA>rt;%!8r_#TA*uzf^XJELImZG
zo??<^S@DGpbuQN|ZD4Ozkf2>qv$F45gi{BQH**2z#)%aTpKQ!CQ@}E?j_Hi-q+oo5
zRL$NX=zx7M6WQi}`Oxr2npSaHRR4(6W#e>344YkugdXW34#eE48SZ9<NX!5Z8klKD
zQ4vCoc!&tQ6IA|dTU&u>HuGq?q=qD(ObQK^5Z?3rITPBHVrW^6{ssSP#!+wt(2V_e
zG-wWrkXIVX;Zoh0O}I{l#%D7Be;#ynkTPr<tB`z{<cMDTmrhlJqURydn4!XN5^pO<
z3{{)vf1Q3mLd4T7E#j;`rP{g4vz1vekUxC4a%VzcKuH{VN&R3dEfvq`Ni#^y37!Xk
z1)(_L14K<B>FVq|s%9_)S^g61IBX>E+II=3S1Hxv$!*>~D*c!r2T1HJO)D?sGL4&j
zqc#fDh_zoY<76$1x8gy@z<uQkb)J^t)QqnsJP@>Ui6#ZJwXf_*teqh*-TnSo^sRmS
z<E49j^%xc9$UeOB!g?O~;4nA=vg{74*`jEg@(ca<*K4Ldd{-N^F21mDv9r~7lh6VI
zQ@H>O+O%%XA7R+S&ieM_<tbDb;*5tNb{fJA1hg#Wg3n!OPV~bQ5trIGj-K)j`M3hw
ziepJ=2Ls{V`3&$rp2lO}#wxa7BTf_|k@~ZiI%U5`JKAB^qtvP>^Q1~21}IPW0bXH*
zc!*xxKNn-fUf4*?MP=ylslA$b-i`7CNi-kkS8XoJl?k?-#=A(P>u6DH4}Xw}67>Hl
zGG=*F)u(LTw+Cg2?4}b(XjkATFBo26(i=jr7B~|o&JXs1Kz*;(Xqabt(d3Rsxf!OA
zngHuIkl}OA&+SN0Un@rgA!FGwZm2Prd6G9-a$07KX@Iv;nI=e6ggAp%G@@}0gEGTy
za2$S=WaK<~T>y1{zfIOy0n}Zs5pVO$q)Sv(fy|VYwO~t=OsT%N>CUhIPSS=HU|@y9
z)UwiU*IsE;$MH7YXt)7a7`tsd+hd#eQV`I17@V6@EU%6KpvI7;@1VL)ciob6ou6mX
zIBN(b0WWNO%vF(wPSfZxyo1k@<*yCDYVGsN()oaG!Z&O>_vE^<6n<Px)>hKI&^DHH
zQ`h!mw}y9aR~ko`4<&*mLxmj9x!&&ZIc$7vT;%yFsirfnwRQ5c)DYcO=K5^RgwfXS
zss@hc@2R}OsYNY%W$trwj&vBZ5jB(&hl*&XjebMUWG`l8(!nGryEW}xm_fU-k|Fnm
z8Qc;D;oDW(WqAB3v(XZE@l=s93-m0xNxovV8sPt-XtyJH)7^}3I(}i>Nfx0nn$yU1
zWeu#8IheJi7_qST=6cprY*jr1s!p3xpq_d^kUos|g!!IWz3gVp)y(U*J^{FMF_PT|
zDlD}Vet6U-Ssd5(o^$1cNy<7dxJu(yIXxV;yD|A-;<b&+5(`(1xumzYe+2C?YnpOJ
zEl*Xv?4Y)ukI&+9v*Obk+_u{j9=6mFfF%qhmN|T{`xsoGXxdwn8VHE2l6=ZayC~DN
zE{iW*9IN%trgO6s(PhMm+UV38fOT?oS9z9}dr<h_4$c=-_rPB6Se&{atOh6SZVrEz
z!vAKcF4nboi?T?Iw9a>>GwGJQE44)&ezkGYrYIAq?|8p|@BWP5y5V{YZc_%BrLTrY
z3G+HybK+tls5uasQsKfnlxBDaBess-!1CUF4q0Nq@=lo}wVFK~DR@LoitC4`P@K<l
z)aNsIQ@FM$^CmCSYLRJ~aVy6TaqdybR9?Sqm6pj#Z!bO*&1vT(_Vs2ki68CwwVbH^
z;LvdVDRY7myK1_7wyy#yZdQ`#D=>7!d8*JYyabkI=*N2(u}7^UFv!glfpVwXDxLyh
zH8+X^KHv*{KXVeK7a$j4(jX0vPw&EomeSaNMo{{?X#@(fqlpuj`EDumSqR0+cJWh@
zDROQb!9m3lqwB#>Kr|ImW7R+?(_M)i<HgVJ!0q7wqEr>s5S%;WY@DeuBoB1LxYlbZ
z$ayd>Ag2^lwvFvlR!JG}&lQ@M;3H$B>wC2+95G_2`)(%jl+kGZGUyH%C}SmPB}tm5
zXDWsdD8+4gu}brR%HaD&QG04ms&(;A`W{jsJ6*oJj=Bp&vWI>QphTPm8*!~4p=4Em
zB|((?vP+{H$)n1zMZ)sr%EvWwCJ)G2-%s4!awn?t=36jN<N~pm>osLlRF6|Y&JPN0
zz0NMcDhUuENnw`2F>=#NmL;a@&9yW6JkT|PQ0h@-P*hD?e*s})Avn3aE1{(V(VT-<
zi*3OpMqbfWbzFV^*I&$TZrCfSo?E~NwIZVeKOUs4N!H|L@^B)4M8XLvaAr|T|CpS=
z=A(Fha?C^m{HZ%OPf6QP0oh5lHl$5)KRxGIR83Zw>BEzK$0`Tg)Fi3g=Vhro&O8i~
zS#od<NqQpWOr1oNMFYNZRJGSxU5C2apK$NXQJSs!GONERVRr@9>(DS*X7jHm|6#zJ
z^~QYG-cCXFq)uRj0pW-*UYgbsQTI9Kq5l5LSfm{>;L(DMYk;T<jaJo!jUsA`1bFTw
zaeW7a6R42#a_U_cagj7-I285??{cw@H|uHx4(gZ%n(Ma?ozr|-Qvf`d_}~Vsc_9w~
z)EF_3L+38B-A89X%p#FdKMxslz6>ot^8y$l1FVbZvgbgnfFRT{n&Wd}f?t!QN#U}_
z*HPp;sC8j8B1E3lJmxk$u|PurIQdE2g(}Emfy*o*Oj>arLzJTqpPA(%z#}3q4!w$_
zwbdkPmZc917;Fm^uGkGa&Vep6wW=}Y2DO#vw3JjywUdNzj6nrup2!kqPVA5AX6OHp
z9!efpWnAwO2aT4>>ztYV+wJ=>-h<*EU<Bt+NL{9%AZrNxGa7CNy^nX1ccI)g(qtIp
z%DlAJ%B+s)z8aeZ6-RXgTrD6vJZ&iU<#Am!=`V6;mZ!p&rKCE9VJ#~M91M8NTvZ>5
z_nmGuR0r05V3hXskDb{?U<i-X88Eg5Br;c|@!a2Q-;NjB$=p5+EN0{+e<Nn4(YKz%
z`MkxA&NcvA-ZyU&a$I<%8^wczq_t_1G~W{((WSZ13Ta7;dBTZn?1f7xp^^glcWVm{
z%~aTk(VCc{`xC!Dcv!)4f3bINtiPav1y$;`S7Ah!E}R!HRxj;D%vRdn?F)aJzNG1X
z!J5F#3EuTzq5!hGJLl$k16d{mDv?h2Ks*`KQ`y_AbD;*?gP={tF|9PDP;eT7?v+GM
z0@#?EP-Z#nIV5N$V*OWPqLHA1*Hi##Xy42&YnrUCDrY*n=`4ru9WnsRHK0S8u)FU4
zwubp+P17WGm2J<XnBq<vJ3uYKRmqS1oz@Tkd#ma;sOUE-ehkz?fDnm92`tm#F<G%s
zJDvDqEa5t7vPhyxmf;;bzH+}2C6=(2N(U0kbGF#LBzHAfrR*JrhzJZ(vG@kKiDG{W
z6k!N&)h}l|x2Qm~@yz46{x#d}1&ertJAjZMPpbk&-K-9j`S*s0a=uxgNZJ;Bh$B?&
zb0cb6z1<k#X{URT$RQ`m>{wr8%dXRXJ2A2)oEBhU9C7}VI?mJl@uAy~_P|!9o=N!9
zXc(auj$7t3L@lFJv~+3u0G1~}|5q`owNSpK;s&0(2Mz3=ma0MQp%3=HaI)q1-4i>E
zpnN4fvo?#m^#E{Uz3fDijZgyK^;`bEk}F<de-YCql*XM{`-W>fUb@6oQ2W*eib;=1
zTOsC`*~1LIvtC2hVIGv{E<Yc0{Bq_)TXG`{l^i6sO_MfN{rPCf0<G(&-@BpPpiavs
zoA(wrCxX%)m+Uv^R;VTr2kBAOR7D;d4t&B*uCR1o+v&ZH{%n6Af-~!Mk0Pt%GO5xu
zPOCgEs-`-^_|hi-gz5f|1{&@&-hO)c5{envK8EFsT^|>3F6N}<qnE8uZi6-OAMaeN
z2N5gi$dPXg?w$D?P~{602=sLI0~WTw(aMTb$3WJxch&b?qXqmb>}22xhbe~ONRwH@
zxWeJ=zdR4d+F-I(1E+faV3L^nJV*%CI<_~zFYFbHRY!1lo+MTM@R;U@D*YuR!KmSm
z9jatf_+=!|BsXB`ez$QTTnK-6Ja9Nj%xXL(#8nk>6F)xRc0w>}8!B*zlanSv#yVCv
zqY}&E6hMNHJ++t|XNc<7lLnPH<{Zg++aEolI<2ZY{kq22+RE9Cu2Nz;2|(JiiUBzv
zDz&<IO>M|5<-fWr>!sHb09Cqatr4RiB_mJe=YcGN=dy(McTaerK{u}KS8(*`tE|b3
zFR*e9+B!Rh9-PFIEqBDPBkl)dZ#;lu5Cj}g*7BS3Nbnm%v*@{y;l3=C-yM%p9i=jL
z+0;ezb#oJ&f+Ra*snqqlKk3}5DBz&4Wb`~>q$BW!pbRD{UJ&1uELYD(EdRv1>`-Pa
zt@AWK1rhDexWObSLM{@ut-=Zod75_~$ce~cz-VDRGx~?8F{m(1zqg<@g)@I<PMMkr
zY)DPEjO$v*tmIEXAtfU$@FKiub7qi`<Rwfv*630QqHxz%B$;^1TKfTPNJlvcc&MzA
zK#Hu)nxa|Zbgi@!&19*gfVY!T#loj|k7Q%I>2ELK1*+G&KN-6b-X548@QaYvIvQZB
z`Xf9OiUxtt1z{V=IOY^aev@!Li7fn-4M4!Obx6^SX~TkQBiOkEjafUp8;$K7($C=D
zykr~Xk#M9yDkotcRYg%9Gf?ooUvy)TsT6;VQf>*u<AWDFk~p7lnt~=j6;954+w03F
zYntrWpq!ODW+g|Hnq4jS0LTrkRpq}jWRBfb%-Wn-oCsh(buAef2;GmLG?+Q|%0xVx
zwTz3Z{0hp$$}`$JAKf$p0C+TrgtR?m-9jCpx{^l~Y?d}@{cz*{tZ0QdytCnE(As98
zc*pY;^PM>W9mbhp)>+!O%GE#C22aZ*F7s1->umx&^2H!$o<H(=XkS>PVd9h492$UK
z%L<0n_$Gs2oT{}~H`xO9rSx=7mTmfqD>qkWO_pwY^DV1@?#&>+di2uU;1XM)C42U;
zM&-39F6>0&FS^YPJC2&G@RUTRnK!E5C&nbLN~8qk0Tx#wgGNBt8sac$tSJ)+$0YCC
zkcX(Nng*;(vgi%<7>y;`^9c`i5YmI8F)m#oBky5wM8k0nxiuRvu*vh%vPAdtKsvJ|
zGRP!Fh>^0~1dANfmw|PP&jqtZXjtHSAj*Y+mw|dbJVEoolpswmF&uJj%Jw1)3s3Ql
zM^KbWRqSY?{Q~@ThN3%va*@R@M?zNQ*a!51-`;O8{Sf_rd+Yv(S-c7-+L=prZ`!)w
zIIXHvByLOyaU*aX!1>KiO=3+xCRuUIsWFPKY<!VAEgDPv-$hq#1c9$&>tNd?r%4SV
zm^c6eqUanwcx3<>{YG74>~^hx*(!;%{6quMLuyxpa!)Q)bX-30mR{>8CTSJtb>=5P
z#y0xB2Q9=E_?g}o3AanaJ9&RS&5hx<?^ZEQGat&3FNhOx6PAmeC9r7XDE`OwM_I*9
zk~Y7T<9$HL1oGffvr`1j7;h3LHubD~E5JKfY?r6jSQv6|+b+2YVVZ~n7<Ep0H<;?f
zXO^~WIIq<nJ0@g#BL{>L^aY(tqGrus1_yMgJx|CFBm<O>Pu$%z?~(;-5739SESvHR
z)tiG1Z3};&?lP+<Nhl1dLo3hCdeEZ$hWa^p3jQ4kMhx6=oHAxXO1&a92Ok*!zODRl
zlm}E+Z7l<!4pjE%)bF!2PMhQ(A%nGPONQkcq=NR4<Y^^i5-f8s#$;1|fs1oxHz~<O
zbs4o_1=vEe=T$p%i9IHk^jB0_!bOf;11>=iR&m@^aZ=TvUp+0UU_0aNgyz5yuftPq
zzy$CH{Y)oj0!pFHbdIz4oyA35rePa2nALmhuKm!i(J11gO44Lap!MUA?n7!u`?4I~
zXBPGyhTYZnH3QHn&mqS9yuy@4qaYdd9;h>qBo%DhcUQ|@Q~YD?WsYX*NHMdPB|4l)
z^OM<Ew$U%&$W~uKs&TC~YQjl4dpEti`O{Y!el3uh<(B)a%Ze@tTJx;U{D=YGq6i2o
zX5#e3j0J$c<`phnwZlGrQ6_m(K5mrt!Fl`Lv=UB#yzzwvfclB|`g+;BM*us}TA;$x
zHd<i%aDGVU#RByWJ!mM#Ms$jBdsSya)GYqaeODx6b;`SC$_4ADKpFr?XQb1pX86gb
zpGUbsnbuhvDztt4WgVYbyYe^KbDAHSq-R(Y>+WYHl%ybx?>&^Cx>`WyMT~&nZ>o#J
z<2kr#oiDDy6Oi87-uuyNPl_Z<lZR&;J`_uL=ELW`3VAN<ZAyoo(C8c_XlTS$F_=KJ
zQxrG)jH#oMbfi%fA^>Vsam-LfRq=SAL(U4|GJ>}su2*^cxFC4HNP-AbOx-<fn%dEt
zQB(RzzZTw{7S$xS0)HK8X^3Brx&iZ}ltY=cN9-s%MqN-91LY$9PWs2Agt4j`^g;fj
z)w3AMY}ZYnPGcS)r2OPXT4rgoL)x;F2wTekN}N+$E$XLft#&chnDIC144)!$qxIyQ
zX!tC=%p^uQQ~{^_Y<0+zfi#qiGp8ce&I%Ctdn?IUUZho7=IMvVw>#4vBEc-o4AwuO
zEbA=)wJJQE0^O8{hVdrNJ9slgZLYG7uw8`oZE5XCXH;4yaZ!AoCgoz2Y-43gWD49?
zU0+#BD-K}99k7`uV8*0KfqpunIPC63U6U5c;|`cdw2DI+>q+nkL^p^y#;gd-^EUC(
z;<^D&*N&Qzaq^2WvQ6AX_TnJCmT8q%&F9zSYi!Cb#EuU^hz|rTbS;s8<}^cwLOPTV
z5uG|-WK0H@j`@*|Qks-ik(UqO_cq~ayt~|PV?LZSQpRt%01M5!+F&HWFyJJ4!$(3J
z$q%<kCdeHk4*xQJd-S;KI8Prxg^w9@+fttJ7zn#*N3^fAqAplnjw7F2Pd@0rq17(0
zHBr09ksL~$k22Z1D$>W*5I)3`+Yt|?bpcz1RjF@Ro&<U`V_4qR75=-h6##pIXQk~t
z`L*sR{Qx{BD;`V^a70Jp=7{D8@611G?{>5n{)(}AONynGK&F2~5*~8Mn2a_lRo7~|
zO*DV*7^Z|B&wmZ1j5(ariDD98dpco_={k8#Wxb8mdfvja=8tHvPR8gc2Io!Qd;-hi
zw8Grp)S%^>2E~s>j&alxOGs%VC>DS}q0;^)DHyRCe8d;1v$|}mQw+EDF`3^i0333V
z-u%#D=)%%%=8H+4$9WRlZr!f<a7$WZkjj9^o9KGBGW*A}2x76g{>fQWlx}u!^FU=s
zIy?&^3&)69lz2AWt_XhfF{8~AG4d4!d=3k|520NE952(f4>A${Wn3&efDjpYkEE&q
zt(1w=SM!Mu=G3{N7U~U6kQ`CMbAcD$*l4tLQKLOkrC=?1gSYasf!KMGkx)8tS!bU1
z4Lsuu^MtY5hwy`%5KAM`wN;kXfoj#p_#};ucW>f_r}D7onaKt)qzdi+{bW`pXN_{h
zc5=t7y;<Ul1o&1A!g;B1dz3myW|Wj55_27|(FTCD4)@Ukp=){T$(40cuFx1(of~_G
zsm)2m6biFe0?~7eA>;gr)vH<CxpRpBwHh<%^d5n@>nxrpO7_f=C7Gta5OqL2I<U$r
zFPewv%+4my8)6bFKS`V!SjViQj)@8`8tm+0=M8p>%_$I(!`*Qqq+)UtDFU)l4Mvlw
zBO!Y>buhoB1Bz<8_&lts(5Sw#RmUcs@4c)%&dRtfKflIZQ2^RocE1Hh@Do2D08+1J
zi1H0+gSXcc3LR;dWM!Ox9c;YeO?VsH`}cN;{%r4y7F;jomdSPc>l3MLN?nfRAaoj<
z?wDK~k|9-W2b-)Z(xz-4ez|8k2pbjZZ&vsUOAW{_s24=f!1^eU$EZV|W=&E(zHmSI
zZtvf__ik*Xx9R<l?|-cVhfJ5`t%+)_&jThX9nCO<NXu=o2?8EwhImQI@=>0fBz0Uq
zt~hvN3vbi;a4vf?T?7i1e5!M^(_}p)LDUZ?>YFmD(=z@#baJf$v@0<RIR|K2x|WE{
z%G<`5A}!>7OLkwU=q`Cumrb*0V)6yIz8AtY{kJJPYFVJ3)nZgN%&8+{2XLw^PmQ_;
z*p6aGtnWiH9Iu%M<X?h@8oeFuR7{lKl8_jfcj!LTas}al>8^G{I9Q@liEq@h`)C@O
z?}n#-TDO_?dktuQ4_%81`Bs=r(*-Wi11mzY_z{ga$!;POddv<^xVt4~Sypu&fNxs<
z?wbWCWm%QgoUH8_d<A5w<u$4zsjJXt?4QotjLlc5i#&80C*S0cZ-_H^^F||2i&(72
zdNMy+RB&eEQ&ov*1rZOuoj%4)s;a8W9+&z15P&$b6}1icw#>(r*AIKVkjy)kLcmqG
zQPCg@FiXXJ4N+>Ft0Mkw74#)XvICekPtvT|BMfYkxt8tPKmYtQ`s+5`r<V>|wtu$w
zZ{PoyzyHtwZTy%2_TT^cKmVWOfBk)BxfXenXO)9_cG(%Ylmrj8%7Z;gde2XDj$$Mq
z>4gIkx`);)H*(>qks!$V2}PN;GPB6jB+XLSE8VaHW%M8MQi*M*6tw3eklhWX2EJPN
zlSu$;U40f=Tz|Ax8rQ!jLKn_7?=t4h`R*G5Z~}0PIN*MmQ&Hcd+Z#%eK!&n`C@f51
z`U-FyaKKkvzQuQw^fQ=3L|TZ|*lZ0#?=5fpYoy01LQf+P9Y*y2Jnhvyndo_t6cAy5
zdwe6<JCZ#D5Q6m93Cjdd661#Z+dOXSBrB6sBVoIn&jxOMNH}+|&w-!4eLpzyrfMS=
zrta?1hV)?TCE@`4Bq=3v|Bzy68mQml){jnq>$5d)#PfQ@?YaBG=DX_3C2y8847O`~
zUpPTpkA@!XJIH{QfLl%QL{DSobyZpOi{g=sHs40I={ndtz(G@%uzJbnWW3`aaNQjo
zyIIndS#|0_*+%o7<~`+jRLR?6k&%ILntuLay+x$^AX*c6)eB{dNOkTRyteM>)0-K^
zAkf)Pa9R!zvGdU03&FAR?(9!VV&l%=0T1!J(Y(9U(WHFd)<z4Zt|3bp(jkqQWT7ZD
zk2&cVabAc@cqpzcv@A>0%)8#~a(;v|Am7aN-U5}Ppmwks4evCoTn-VBCxZaNZoTfY
zIL9g7%5)7k?ygA6Bt7Ty@&g?gsaMm!L^5N%e(AEwV=KD2YO&SbLw2;%M<+MEgf%jd
zbvKk)dsrjty>J_h2*f*E9j!`4W+}h|XXoB9`Mwd=h4M@UU|U}0cAV>WH3zuEWz=YT
zVqtoR;ks1;>sYUAiRu&cdEg+4gyz$OK!i?y%+K%Qsk?kLbWmZPs!CH#C|!SSRa_*e
zY(<VK$J;b63UC3zh_ZaM0?1ZOXge?mEPgSlZV5RJ1{aK8;OBtifsioF2^l<3dYd+L
zBUYl=Z%?eMcbCbg&d80idN*8`s}YiCVZ%3<)lm9G<7R=rg--6mHss_8sSoHjM29@F
zD)<dL0c4K){3$TE&ixmojdld26-8O(S^afD+J{t{=7R&?<9P2(1MtVxU9=-J3U7<E
zqF@YAHnQ8h>Pc)ZL5&*}3b4%SjtN&b&AI>tkC(BhmTw>K^&gtJXp+Yt_E8OURx%7@
z39hTi4x5RP$5qxl82{Z^RA`!i0bhb)g3bGbKwQMja6s)SXU~(Od|a04SYa}BzIW@+
zMr$alZQ?<Z$PR>9UqJd}Px)hakUOSjQe}CuKTJk4xhuch)G&az1Dmln%kr1gBu<ME
zxBK3;?{|-w{cUkAmp~Adz`)ED;xe$h<gtaqtzH}BX2h#o7UkjTVlZ;?CO24iX`hJ0
z1TMU_^KE`+d6pKxbiS>CfP4I0!vP{VR}vYB=)m(r*(x1cV`D5c;5pqn5h8aS!;BER
z&xofR(O3Bu1cMo!Vb=FYnkre@B;{8g2O)24J6k~Ffhpef<h_|DnjlRUGqseUgY&P-
z>#WEhZX2FxmVNJDyCM2M4foLU20f3YuHj6=8KbZyv$$1s=!WJ97$EN`Ph`Z&pOG3d
zlmu})LDTP6<Z#}N>WYXNPKO@21|iT+&zn`VF$s)FX`2%mPnnC91T-q9kP~E4ws^1*
zf;+Z&)B(9&Ci$N37a~QWo()z{cv!I}gaE2Sk0$B>4r+3x!Oj37t!i&6)m2*5<>wz{
zi<yw!M&xgvoWw+TWwc7gAiR`shnY*Br)g8h4>ui;?`=!BfGQz@D>|~+*M^E}vm;#{
z;^)C_l}%oi<-=36hZL*rDJySh-dVg`<|EBn!5YL&%Ol(LiHVsAz;)15?Tkt`^P2Q{
zg+dCEL5C%>qPi()NS2(%v{$SulprtB$Fy@$u8D~(UQQ6QddF-I)A=9b#C|u`(ulw)
zpZ?SWVO9Z?US%i&QaWp#sur%AN|;UJ%2AiT9Chc@rrK58{@YfE)Eo$-Or~57sqXcU
zg+qrEb5<rYyhEi$X)Ox*mQI^e6%<+4<qJ;Lnb!vo5S%n{HDZ1e2_`8xvt_rFplt`W
zn;bJv-wJdo@FEzbux9UA{R73T_=J#&Sl@%;1rYKr=gK*lfdc@?V5e{V7}~L4%Nz3~
zYx1<H&g6~f$J~tGlzZuxfAHc@Fi^j>^EF6B43&rQ-GNgYOl(H3IpH5r8wlG$*)8co
zWFijw9}f~>Xrm)*8Q;`W_LQw=_~pU63uz$pW9MWTdb?|uLBU!i`uV|0oYZNOe_<BO
z_hl(E8`J;@JgY`{u6fw%-lF*z_I5a^CDSr1t1qaYSL&W^5k=mF{PNw_y>|gOwjEs)
z@H>e^V>*YC01XaFJb+Z#x;KVHIRSts=Kk|Zn!Ie%>|tK<;R(N`h)I~iyeV=20Ji0o
zR{%t~JP$C^;Ut*;7)4iHWi1X?MBY?!l|DRCcATnh`j@(F-K>35PQ#RD=*8Z$!(kTc
z0V5EL0Z_Hh_KMadj+3O=$>L6Sef3zF&l~FMZw=2NpSY>c_LT7G#eo&7fxMg8Z3IpP
zL$~wi>okjuGpv4-B#z5CKg%rPPL07~Y)XcG2Jyz{tdAr>>@U6IToxc^NH$rQtVTBg
zC-Ju<S^e94`})UsVjB9Ps%hi?<EAN!Gis0eK)KLUaaxJMeh-pWl*;+r*0&4|YP%ed
zQQfW21N83~#C`wvtt^pP{+NO7c5)G8*l2(yaZ|;m)im5RXXOWAs0T>VB|W(30qQG!
z$?phI!KPjR+&r$*=FD)BK?uR5BGi)HSV8k1&y$Bzv9(isD{PxG%-S<jcc`666@}{(
zTtF^#Us2$MhiHBG>8T$gX<C~p(YG$h=!S5vq-6npmdhdV)HE`z69{c}#?Bzk^NOBC
zR#kc1+vv0bdBhC98^#9w;^-PD8;QOTx36*j4_UJ?JuB`8p!7`Oi(te8O3)|t^ph7<
z1s4#N9`+U2BMpMhAFx1*v5rN8k;vxEKV-nHK$f4&p@Rc9Yx20szK(GjOi^r;?0;Cc
zIhrE99%e*oQpf36CdZ44=k@m9N8fL+Zvpf%Z+{${w`&}Yz1@H*q)f0BVf}XG?uT?Z
zMmG8@QZaBDk~p=lo4^?g7d>1U7Pg74-w<wZwE@g|!9)%?#&nR6a`<8<v}rYmQ?OVL
zTNKW5V@<bdq}qrJErnf>$zy4@-957Sr`BGQBBKDm>9ZS+RGK|t6mb4va-uxSF_WYz
ztE6~%3mi2vZ6@HE8+<oRe4_~pN?KYJme)?OJ)t3ZSg1ms9}Ve%ktD|FfbE3S27*>O
zOWKi~mNj8f7+h>Q#qj`Y9sB`-LJV|AR0&KkEPJM3*ePI-6_^eHdd%ODSEUeAjb^jy
zYr@ZWDr{)sg3fETQ9oB64<!P7NLbwzO<g`5XO@f;N`<}K+{QxD8WcD*f}Pm+FLM)g
zk}cf9P%ahEP9(X>0Rj<(suTl3qlTMlV1Vf_j`hJx8ritwC|u`NmL<s-3WRLA7Hy@_
zEOWslI?z>N9Fl>)h(%YgPu)+M;$OI_Qb4m(Lt;~AfpC7TNcfqfo_&9qGEgo+pDEp{
z&g^B7764lVeSyr+wM}WLx>>1A2v=}0@JN%9?=^Qs=K;c3fPrA#hw^rg%s{-8R3Ebw
zfn2rQ2isYH&K^#BQab3`o}lcjqux10|2MYcho}j#!v3dqhC&Dgt^9hCBxU-KoXpv*
zbB0#N#Bj(=_%1e-oBk^f;EbJc(j!Vcr1#3Fk2}LDrPYKOrqB#K513)*Js-V;G^x@e
zKh;V2qq}$S(ZAh7F@g|xn?K#9(i6L$Kpb25|9hfNv1nLNo0b=8k<?B6P>~kQ>94X)
zEn30vLhA-3)KaLpjf9>Piyx{nTfy7*g}rIAmNW7Z#z!3&(uW#DX`N?9@;Fd?npv@@
z$fJ$~bE5mgQplpB=s^yB^<tQ;6=bLnfnm?<jl!hs!D`Rbtf@i+qyN~ViLCs3ohM~D
z3;4+j+Zv!P^1BU-d%d9021}+&MfsG)U@c|-FisRrTvkc`by833cfBi8Xf#3~+ZM*s
z-Oa-|?h3j!jCblbOXQrlu$JZ~k>wud(auZiq^gR?HS0f6@NS7HQQUyMTixf#1uW8{
z&9(E%vR()R(COw3AEP>Ws|35!7KQ-oNHJt{r|C|lA)4cwf-xl=Q7~hJ5i>mb%i1ir
z!yJo5<X`C2BU&3Ht?(I?tw9NIIs_y&>sq{TPLB<)qKgBan_O)#(~y$*bVv1Uk(X6n
z)~BSwwrsdOGQcG$i&+`!0eLr&M+V{QIFl~wNo3Ihv9t?21zN#zs<9j<oQn~}57y=}
z0H(&pXewBYMstb^Qz4Axi4O=rPVN8$=5O@tSHbxruc|aXmlPbgoVF>vPGR0K0d<OT
z5Suon{=d=_uu+KIRDVonjhzA2lBz7?JbPHt{VXQ9%K*dpqGJYJK1I)i-TJufsHics
zH50>Q-XVm=yT?8R)4&tv==r2gQx#vA{b1m*Z0{YBOB%Xw(T(V!xmZ<oQ<o2)9*eaN
z@5gCuY`9+GD-mTg@~D6c1<ex$tryGalda+`&da<^wp1V-qhalLi#iEwJmQj@aj{^>
zF0WJMbzS7gob+FO&WkzGO&%_?_XnN_{c-5JnN)F_70JW&!4D13>?jUN&})OCBh+K$
zY>agYsR+1$6cO{hY|DGEoQaD(uR=qdPrUU_Gwr>y2Evs=;l0cZnU&4^?gD`kM#Bu4
zj(`-L3IM@k=ZezvNfeGROijWuRXhzj9Rk=H*eeDLqT+L)KX4zJaT$Rg&?MQYrGgQ3
zKYtxPXXj6t?yg4{QMudFAU!h5VcMR}O>QHGjQO5_u!yJv(k_eRapO+sEu5Suk)ye`
zKEjf+I*T7a8jmLrac~B(kPrsu?xSO!V{ZB?FXHlKTr>@@ozB1RN~0Cnbx{pVbR0DL
zr4gE;2x9;_O}_p+vSUxmA}^ABBQzff^b|?iWN8)eP6<(D{-b?;TaC;`QsqU{gc1Iq
zeyOHD>hvtfj8xwjb7N|WbOOI1mJ^O@9~aDd+%!$roC4PV^}QXwbz{`MzV^2u&3a4@
zCQsrrtCCZG+#f8>x07UX74LatABFij{mIL(>pq02)yq5NEibpfuA4|^z)hX3cL**G
z=msJ?L!@|JAw<Mltt*kHV=LeL8P&nGu8XoRwqUD;PVDmco49VW`fG8kr60|f#E}4l
zwu=bm0i^$^8Uv?`aE00xdhV0efFZt%%xPiwi!W~IN7TuLYuZyV(5KO<0LqDR+#be)
z?*`Eql?jy~6p6U!0W}s7t5Ay}I+5vo2Mjo9S)Eg(%<3db%EukPK2Yx*w?G56-j0T?
zSzC_v^$u2iT4!<bct7$?PiNOKn}90<CtMarN<#eFjqV>eEzNu&Y<yv5w-Ojx(FSBp
z___qXnT|ct3Y3?0ln&KJlPuIZH##}XUoMk0F0xMv7smtBTNNp#f!*CIo5(cq(cZ|5
zs>sSX+js(V)zU_PcI!ZYUQ|t9#2aPjCp?5Tc7gv&OA4hEAeS~Wvg8ck=HRi^X;o*B
zkJz0)YIk{M!urD*e{ul(i88h5e)#6aUXCJST$f4JJWLrn+c?}Jc3O@L5;RBAjqe9D
zvk>sE5Q|k4u>Q_N>SK?Shynag6Rn2746r%Ct1BA%(D|6Zik%hdt`X1%c+yI1G{pFr
z?=*jL7^K4?F)Rj`13xrT-pQDSb4NfH2A|9D0Y^(VONuIgT!r@-vuQVmYgls(VGWkM
zVXY8uwTneYk1pYcr*aUii=s)hFW@kR(<3{2P0Z%-Dl*1C;x@=B$lRQH(;~#-)X(O<
z+r438JU=m9C$J&``WO5tka0p#k<L!m{eWG;R<&lH8rmHqqXTFJ>-zyx0rOq}u!~<A
z|3NtUn4KFL8<83F<3nS}9Hlvg+bC@HHJHUFmu&ajMM4fh06>M%<{Q4CU~9{+M04&j
zKe%~|9+e117RO&OW4r*6w<ZhGw5of*A>|BYZhD<4q1`g6At=0W*Vu8(4>?WRt8yK@
zz$Rfd1dF51mNi9^#1A9wAL9QX9D)e=NF~7&mZ*3rBQmtM-D1>75<L&t&cgtUeHk2c
zQkiQ*%AMS_KFtBc@DL73BHnS-wrJukEx+(#ZsD^_Acq5k?LFz@vdfHJ-2taXYa;~E
z0DJ2NNJV`006@#CvMTnZK+ipZBj9Rx=Ib{*1@pwiBH}3M<RAHO?Kt|mHcnnQNnNL3
zms+jEOuIcuF0T!%NFj1t#|OPc8viqjC!U9FWbF1<f7;Yd^#x9yi^OD$d8bTi%oXPi
ze6(fDxXjD!;U4KRP`<lnTWJA3;T#~<x|$r^fFuw-4_Y-(cPmYE9G=pqXyQ8my7tjY
z)pBJ#hORq27UBJ)C~-QQKBiS#=Go`RppWoh=PU(nV{jO2dhZnOK%HUW&=8+lUOt|6
zn2H^d_tH2o^Kc?+d)9OL`$=3ci~7&w3$Kn0O!x26Tf0zxMl{S(*l0}5GLqm#k`=$4
zl<2Q)Ns043B$F1X50dIaJ4W`E^eur-G}?!R9z$dAa3;ZWSEqaA<0@qJmJ<Wbzqw8w
zZbvF$c~w^P|312IKeRjd8oSt^rpn=V#VIV3LcU#9;#>&YZ`zP^YU(0Vi`BlhhDP<O
zkz}Ig_iNuO5AXA`h_L9vm%W_IiKww?=0Qhxip2YX@lnYj+aKg|VlwGDBAGF==RwXC
zF8z2IfdTT)nluBGiP`M;6O$%s*;G}wM}j-|){hI7E$3n^`}kon(jqpSVgyS$0LeoL
zAr$u;DW{0U^musRO`gSZ@^!%5QUYcRsz==(0A)Hao7~;4XFf~8%!^DBN1A7Jvtvk*
z^yR#x*7gI}zX$nrlGJ(q_*wR$>THL@1-mqG2*%Qi?%xs{nTu&yjh!uF&CdpMlTfl5
z$}NuPJP-EOj5=;f;#o({{jAK3GIZbh#Amrxob8)iESRFCvbb!#SwBb!&E5Ti%v_>a
z+Omdx5`aWu#A4xH!C;;DC=|`vek8KWp#Vr)=UJIm51&`Z{L>xd&)-zH)ky|uk4iOC
zhtLa|)Etf9$?=R9z$Mk!ZO8ynN41x?_C3_=2*>XEWn%w>L0G9D1dMIjO9bujaI%Jp
zIuHaS9RBYSutNOpXektBk;i-LH)nhqnA&mwv%k;v-M8D@e|l@@Kfc|@`}ZIJX`J8C
z_@A1rj?1J<(>Sg2w5XbDt;b(fS(QJiU9s*yxGVEwI~_!#nd2MFsL?=k_Y=q3BLO~9
zzQJZ#6b5;;zQ50B4aQ!QH{zM~Z`0d_kYN){v^A(nnJ=m+Sh$TZu&_>d9&L%HZnE@o
zYrNwOX4e4tCc}VcqD~a<u6Q6tJOD%zSFeAx3ZWy=_jV(J0;KTSL4V2{(I?=Ird;_2
zDL;lI4oQYk!wMRC>K$YiSK*CI#$}qBa>jb_204T+>uj_U)E#_nC^rN*7+QpPyiSTa
zTkV>#!><cVf72PbUHhZcHqV;0&cBeV8a7rpyoC|kqQ(g3AT9a~2n@`v3L)3fz7Ph#
zj63375WQYpJ?3qRrk;73?sOL~MUa|g3kGxY2C!Tpgo|VwJ>(Xd1FQ~-_*ha&6zGY(
zXA3j*2%;>3_W^_yTp&8jGmc$^tQ{L5TK0g%tRDs%X>ZxKDfI&hTU1Dk)H$?4M4$F!
zI^x3=SzT0L$@E#vi?>YJ)K%4~*?V^cF%UUI0n(;SlX6q0K9ICs`SmJEvQTXPpS?+B
z=v1(FmAYw?qcMYk)W3`Yaa@#1NSq;rY0KSi?J7-LhqPLMOGl%sc^0Q}T0Z(*vN%oa
z<iI|2;o7=(nJRBWJAuV>IUwa^aUK_0_*_2zbn`Shur@gUB59q6!z7<aS@zX{b80XN
zF)^31>jzLCv+j@j7V-Rl`NO^94;O}G*ACJ9ZCvV0iQqKj1lpjwJP%SqV;=a9Q-p|3
zaB!upL<WE7RDpeu=P*73aY1q$W#HiR`!U^)TI@+)lzH*EulZ50Z@1%xuocUc>)9xY
zma1`+RfPd8sog@zCHujX6CBc*3HzH+q{%i@MIo9_El3B27|FQuT%t3Fo^_t*G&GQU
z0O>58;{D^^-!9Js$<(pV7BMY}mePg^8Y^$_zp)rnvd8;Bhs2uAQEV7h7V(eiE{+nA
zs}Kg)dWP~`k9JpFwI){uXdQADSg}WoHE!~(eB37BL*V)r8xHRiLX_MP(0^zM->ePn
zdC+U;CC5V3!up`~uPhK8VZIZf4)p~`0?}q?2N%c*apcr0QQZ_Xa5afcSmT#vyL{MU
z-64KbWJ#6e>BCF#JnXwOxhExnG6|9XVHBkf%ilass=96-MubjynQT#wIM@N+pm)K4
zO)7JKGT=({bR3-!SWv@R(p4kb0a!7_M`a*868)(q=Mgq56yFgQT@rNRUvYsV*%eb`
zv%=&{@H+2U0;(TKBk1nj){KlM6#As~b#c58GcQ3y)qRVPM%?6VK?PHaFw2M4v!OD!
zWEA+`G8J$BUhtew^m~$`PK)N@WaH@6+$e{Cdu#9a@7<r#Tyow1hY}3=AwP-5RPPNG
zanqkjr;4;G(meb8J6tg3w?rX+bJc*?cyPlQCoEX%CQs`4%afe9_Wk$vy}L(mxA))M
zbzF37<n8~?|K<1L=gS}ePdgsGnWCxde9tE17jI_4by*dV@?ip|$RNp)C8$%u+V!Dz
z2e|@FnOW-Eg;<fm@v?1L|C+gTYul6dusd4NbyHW>7jQ|}2qpcu@9q0F`qsYtHEl8<
z#d;(?>>!l&1B>!{YAB*AX0XPztEDZ;T^~(Jj<!YxetKVblrIs!^}!gQm2+1TXvNkP
zeUz!}I|=YGoIc%+nY)9~uXGHO)(@2kz&cg(D5ej1nksrob9I2bDURE{x)Be97&#ew
zPb#4`ZjCdKm|k^RCh_C?86PfbcibxGhvZJ!`7cO7j`OYg`OHVm5%sA~izEq|hX3Ia
z0yC1n{QWFR<8%$j`S>$Bv#mErKfynbrITo~QZqOM)e?q!5UHv%E9&Cm*M24!-JYF5
zLw;gtBhB4(pb>IzuU4Fi8~ILRa0*4J1ThEt&vXy|LP^WWOrp$_!XA#TbHCFRI&Q1+
z91dl+5v70uF0bd5c;Vu3*5n4_=Xk6)zCi0c>FvSqp(U3LCLQIGNs|<H@i=I8j<vV#
z8-aIDNE^umT;}r#qZUw9k#=QHF#M(N#(J$xsgkxD8`)FILC?!Z+KzQGP<dPHi}|Zi
z-_il{WVGMCIpW|&Um<%=6LQ1v2p7}EDN@1=?A7j98efNw-$7_DsyTRV0sKos-s%OK
z@(`RSDd8<k+oH;fqTIlsKVcm$L&m;6%Fo4|v~u#z(jk=>99N(0UZhf$WK!l5@HSqk
zsfP<rC?GUX95h!a%LCEA)CKT4PLJMY7%6Pl@t{60C<a<!nKPf8sgO3EBf@E?GANi!
zv@h7$)mdmiju=pc#&B#NXVFxo;WjX(wtK&!Gn?q*;b5cb46=9Jbe9JAA*U}dv!p1}
zuLIdORkJr~*axN4fBxTZ)qiRJ`M-YqfB(zTt}XJaXg;6hu-qnFbI-;DpJadlsaGpb
zD_<Cv3mqy!9vv!qoM+{x{!M@#tR+@?k~T2^^Erd!9~_QZEjv}+auftr_9N;rV`Do|
zUzV(7BCPZ1;njIl)Y<1JUu*f~rn4!MhA`>@&PAG^ZVrqF%g6i0rCeHA_T!z&O0BUz
zq#;I*8E>e|h5yRo&JAQ!YsC^ZFILC_2r3X4u{UFjHErhD@XydxKd}6kzcVP%G_~Y8
zOB>Iin*c?aDU;<(nah#r${d3^^v}1{-Nm0tvG3@4;B=I;OtumkC9sR7RG5T9p$S0a
z{u;~5yh*b!RCHWxW9&BI$b7$_M*I_|OZaD8dIu#-Qdeo7KO9&;L$k%c5!p7(h=NlX
zL#*<3#=DLaz*vd0#mV%^=-Wd<(BAR4sQzaFM^GAE8wy8+<K&(RMq=qm;1M2*4C0Fq
zG5Pl%Ev~pM(!Cy;VR5d*%edNs2<4`8E;JW`lK!ON@Wi8;xcPxGZ+zIu_;ik84A?_%
zz5LoqQs-4+Qr|6L*d&Y4f^!)sXLU^Dvq1#Dr5QYe+EC&m3@gdB@?2q<_kQKZ^XgZR
z>!L~1O}56bW-=?!D65;~F;m^O*sxO>VvID+5*bNl{em95Ih-&DOa1aZup|N2#yr@G
zVU>D5FkHYaHI~R~-<0xqW|S_=<GiUKcUIbbbb*lYR%2LwXhWykaW13Tcnw(EL{NCU
z2_dm-&xmB@X<5eA7Yw{E)HVKUhv+&D8@gD|_?w$cw=4ULQEf)52RCH7K#ChZ4?t9A
z;M!4t#W+gU>hAL%M2QOBiF<imQ6^=+2cnrF%k^<aKUU~?+-4T;g2V<;8PI@%5>J#v
ztl3Q_MLBQf*aVGbVjkeGG^>XRoSMp`&k9ShLg|TstY(5}WyTI1IGN&cF3W&H?-n;$
z0_PrMB|*)M8o4i#(w63Lr^79N_Ktj0%p;t`2&@;nzxlJslS~^({dFz$CPfuDbz`66
zj*_X2`@u6|;A#E3WuBCoHRYU^6VOOFnxFU5p4(==X4X_q*NDu&{^4bv<nfLYbXX~9
z^9>Rbe$yaYwEhWcQ5M#JcQ-veJ=2kANz%k+nq_%bWO-a~eRz_TcI9s>iEuV9nSW=x
zz!n%3fW!!jt*h$KYo;vgX2ntWUvEGCr=xQ=(Y5SEp%zNh{X#lZ^aWs5U@m9B;AEL?
za|xjpmgJ8vEhNWh(_7lOnWU&I$A8_bD(4!`%=5zBfne2RZ?$MdxfcvZjqMS}4PIcR
zlZ?nc<<ls`!XaE|cX9l0;~vsHEl#a>buJ}{5RVp|(#0UnZjS-7r}?^(HClNG-7C{T
zu&;d=J2O6_&04eLk|X~HMwW|UHr-F8(y+tvh!1hDBY1fu>Pf05c;HAoWzwnnInjcX
z2H%SgdN4s082$^4Ui6jW``MJZy|TdeeAT%|=J|<M>Tnn|Wczq7u;r)*EYd2GYFFAY
zQ<-GM-$VkI)s4eWZ-3{fv=JMVx(Raaoxx1t;hNzqZUXa6QQJAn7|;&TtMu>Ps~G`N
zEjp<YP)>_G#y96%IvTTIa+ekG*AN*98JA4Ms%zQJ$jLS5j&|4y-W+4j*n5Gb9C|hj
zS&ofdBv0x(Ic<W@;Q9Q~TRXbQ^2$;BH%1^eKoA9FUW8<C`(wIU4UsWmTfWiHsCTJU
zhAz|wk-%HWi{0VIQB~JzvPdu1dcc&=IMRmclk>ch`8#)1U7m;biZ?{u7PMVn|5`<w
zWxwbP6D0UMbK<|f-~NhzZ{Pn%E0Zs>;-|M0G`S>AlBSNoj$9JV*~<6zZ$@O#zhOsO
znYa}5Az_pDB!&jHA4FO?)}zxM?EsAWR77F<kCCX2fd!xyVCT$52$^#Xrlu5_!*IRB
zE1E#s+YnKArympuGBX6ER3U9pPPuuufV^xEURRmaWu8AwlRH~L@6qMvr=|hY=hr3x
z$R642`s77Xr}fw20_RQ4Y<zED_<+Ss431e_keTrWE}0#-TeK6HVtW9ORB4jM;n4e5
zU|aj`9CU5=`_*A8zj7ToYj#Jt!s+srixg$NXnThjIhx?gsyVu+VV`R;d$kCWD;H{#
zqz*6iNlc_QF30-N5h&|2erzpkshFT7j)~Uu9uxhWIfm(MtNeV6sVgkB3*^`c=3s(D
zr&@#(nI;Q_dVV?zI9bt@%~$ke*B;qs27*}{z;obirb3kjZBUYqH_n1d`1qX2kh<{`
z7Jb9xz?}1>{Y|yY(ep{NJTIF)v6H`TFH&;=`uqo3R9^L+lv&XDb<QdopI|BX`CdqJ
z3)%UWaj}}DWO<#GE_d2&@FQkL)_AvpRikBg$ai4ovIc-a6?xQ>jyXp(F2QA}doL4$
zlo8J^YhmxyTbZC@Jr?ILirAEyIFM!_78>)pJQ@ztoH#&|4*w%uvW<t<G+EUw63)e-
zq+qMOnb%}N^*cTfoPhRMkNW9>L<Q&8_sY{e+sDIDR|sCs$X@)ff1p*IeTvj-*0Ku(
zys4(4Nso(WXZ>J0;UrrIQ!Rs(J-Ay@(&-)cqOmK`3dm2rcf`oOU46M=nM621kJ+1{
zI(B4-wEnD$JkJwb{A?**!iHiqQ*;}1t!pc?_B_D4=6G!jNGvgR_GY!l%ZfCKtL#ik
zMv6L8sG6xB02rYEjWOUG@b%r0Jndsm-XOb{-C!IgHtU-?bQDRpl2)vXhS(KNfW(c&
z%k7!eA(KjO#=t*a5CBg=u)n%Z@LB(YWsx`8Db$U7SRQV-y&;yuW2^x&T|QgkToIq+
zn+W@w8(~z1fDTwz&h)Go5xcc#9T$y7V_yMD8KT$r&qd|G)I_k!INd2c{COh*;9~pU
zykBW13totlK|pB}xTef&BW6GJ>w{Bl+PIw}%__I~HWc%8ws;Ov+A6WplMASbk^(8W
zyxvp?Q5ArUZmDKS2j(1{sFM$S-QooB6{zJw09zzu#=IQx$dkFxfe_jijhBw(;!VI}
z{EZ!2$dWDiZAI3#@nQiB2;?X!)kdMry>4+!8tBj|zq^sHBbWeTgs?w`OWN@UfagnP
zES<x~l(}VK^m&l=Eob4-kDGy|OzYa_BwM38a{L%(C-E<Vd8xz!LyO18923IL!e_Dp
zwBN>_axh?iAQt?`*fQphJ|UyC(IppXLLLcWj=YR2V$$<}5*UnHeKevuC-N9-z-S=Y
zP^L9z7PdW&BnW{@481BIzY*<!tK3RQr<Z7Tq%gcQBh7>MAYvdwB@3e8pl7D!9C%3D
z1qIRbjzC?JhwY>10aueg7XEgG1%Yt_L94_cAuvzE!e&yGrJn=CZIKC(gGB)z{{=d$
z2ZdGE<aw6v%oS+iu=UB1J{!%!ckB@%l7`dzZg#!Z^@<08qlBQFg>F&Y09Nb|jW@79
zf^rfADkdD7HSmHE_j8`Aa#06zK!oNyvhTpA4gq<zO2Oia4o_Y5t0bSSsfw~pKjmew
zSMQoJDGq35{%|jct>zw&59;URi8~Q~<XS=A>@OJ7vBA}U!u)0l;zXPZpK6e<Tdo0b
zvq;*6RPL$^!MbgI*W$4E{I)P;X^J!{2K(0CrLv&SiyTz?G-=1VjE)?}D4F1uBXP<3
z34Ful!(9a$$^@kZTTY-rfBRyO%dS03)XU?vPSg17DLlK9^{}r6WrhUvAha}Pnm5_k
zVfvdoJAvn_=~KM6(|a5J+5SFs#z2bCE8-@fz@yT<s^YAA7yv(hB^yJqjDg@FnzAP?
z)BqkQ42STl#v+n-h`vtIN$jtTYf)DKtR_|9rhT8@mZ{!aL=xYqRv3Yp6!ESzanvGT
z6t}z927OBV6i9*tTqI=_|Av2K_7UYg7pRQ1`QGE~4ulXZ_(=JiA$lIlfh0{F*Hymd
z?!GU^l{7GD63(SAU}YNZ8vD16s}yy;z?414y(raIu2L1*LcGljgB=LKB~4t%%|dnU
zm&ZYl#lha%_kWMxZ`b$!_bE_G;i(7IT{ShZ8`CtZsc?20njyvbi)CeX4whKqY3s<E
z<lq)RWpQVzz$weQAiAW(Y)X50eRZgXrEJW(N}w5O_L2FclqgU)%n3c_P9*VR75Ax8
z1WZ%V1)g)OIbXj}EpDD2ep``4BpM3#DrL7p?oFjFjiE4YhJy+UdSm|PH!>dH)~%1B
z4?JWUwH4+&{PNMBEt;mttA}+lKE#|}omHa8;<)oy#4s<<!^--i&a^~zryX^WMI>2O
zX63^zl(RkC17BJ4x9dqf2vR<S<T%NScN|Bwh)YMzmA~^qH5>&VP(gGZM(z#t1f2_m
zVDFvsWl_~t{qTs_hZagZet+%$ieBcEBP6sT3kf;A-+a_jy&lfA1Jya+o}7nMDTJLW
z2nuez)^eTj!VwXOG^`Mm&N6ly3V0yfcA;@l5vpw|q)-WgQI7>6*6}&bum`d!7$fn3
zBC6OjKyb7f>O9NR_zTAAL+`3>f}&C6zV-yuAo6ktT9ZNw4qGwZe0%74uv}V@ud>wP
zDGs*$f*m;T8<;v~-t5@lFA`VH{2gN{81*Gb>W4@Mt;g=_*PL)W(T)!fLfC;9AJGt|
zV>TS%yA&JAB5JsHz$>@h+MyRGRd?`_1t2nK<cner2FDqN3;eL}{kMa~QY3Memf>Pq
zhmBW$w=Ux5C^>U1kmWU!Jb?*?{WNir46R)#E$c8p`#ceVwQl->y$JC~duLkLz2Vz6
znV0*cYE5$&&#*&rRBpTzB%+5#dsx=xan|J3<7ecFvG136=tsZY{<;QW8oJZmL=={x
zZJmG`Cmxb(Up#g}K-y7do>zHO@6811>h7lByP@02u_+Fj;2>ehv=j*5rSh5$U}@qJ
zk;)%azXqk{bynv^dUEtdS<Vi7F+R{e178G6VW+`-)j2E>wvKZ&EZ4%ps=E_~g&|9h
zeZU&0(iPPz*aHX8EdDtO$FkN{v>n>wt#uijk7VuDU~dqPVv`axLIqKCz8_`kknB}p
z@5n55h=n3T>&LvU57KmJ#a0N@B)ror-G3DZ&8sReV@pu5KAk=tocFqU3pf!(?*Y7&
znYK=lqI@?wwUjKugd+k1oS}07BipCQlDhH$#$Lw1Dc2;Xh%7Um1;(#s`XaP<6_sS_
z(2Xg2<{*Z8&rwU1rmwWk$gudCCE8Ep#r(Cb()r$WE7}MFi$NKyeABiq4h#zF+pmrt
zWqDQBah@M@PjGWX=EwVd6$r`lsz{sC4l->_9Q!^(hlM+>=kA8ZC+j?4DcOgqw-wY$
z_8n{lYU_|TQACocFRt0h-JTyPoJn{(iv{p(hLr9oX%u8q{~vSj+9NrZWC#A0@ct-u
zd-MGeu-KL$trn0*5(avF=nw{saCQcJ!s(SkvMXyE``;I|w_TD>_w<Y^eVD22%m{Zr
z?zL-n?ASTHnKjiW&mB{bTg1Wl-i*^dNxa~|t9kb?2xjn9-n_a(_aJQYV+lZ0cE(H9
zuC(Cm<y&w|pmEKd_5of1$vvTH8w)2->MCDQOIF5--D$oo?w-VV&(b)!%4l9#<%3`r
z+@Q3yNnu(XqeO8^Uydvi!-vvj`fRI=wL>c^QrkM-noq~8!g#781L5m}@sc2fQ(1H{
zQN-%SbcoX$+}1=o+$P`=McMNT9>x!Zh<;K{pq|@vZ=y9}&*pEin&XcOF^ZK{QD<45
zUEv11lu<qy!J&EO9p+Mhkg+IJu55f^RoB(`b?DYo+%47?ZfNRUBR?vf)O%{3RW%;+
z!ag%uQZS3c(hr(MkjjWm;4vKpTGtR^4j?&sp$hRftSl?Cxn#JK5&wCgCML67q{f2f
zAkY#9JY*q!kmA(JCDc_C*~4M!e~zOVcHwo4a$@Vl%Q&@*Z(Gw+BRfWVI^|!zPL~A9
z<8#k~cGOwGH$wCTVWRRbRHtWb#H?R$o<vcS-EmSPccgVwrAUjU07!QO<kZz!B%YI`
z(~tj4g5M_Xah_B9@R`QLlJs)&1?gE6II}7-K=M371sn*~3>^`0gMoBd?IsTbF3T_)
z|HQ@~wUnYC5DyuN1%QJWgOS^ZI);g7W(Nu*YyG`tagmnS%5{Brb~PzX)bdEa52?>R
zTrZfIo!2Lsvm&d~B)7@<c9Ya_F9Olzm77ZIC`zyHOt>%-qnpnONW;&qa57x+K2UIi
zOv0X7P6L2@6!0u?6Rt5?=e<%Uj#z%Rn$;$zzUoU)vy<%f(e>2I*PrII5)ux7cDpg0
zZW1N{2NFGaF?XU!;BZ|!J!F~M%xL|#vm&b8Te*hC(?U0vlG5u9{m9U3aypCqt?}}5
z3_r2oqn&03Sm*HH3x1EuGZmm<f~dg++_OX!X6RHe5n%nmR+f~-P<aSb@3!Hi4)QFD
zsvD0iud6KozKkG*e6KFD%ZVvvYM%|h9~dJMp3s<O1f~H!F)M>BAh<h+Czw<WP$E@y
zQ`12WycS%xCnjz=0o@y&k(lg6`FxVWu54-KfBs>n+u-@$ksTd~Fb(aV(@>HoS^Aj<
zO_aq4YJx#?+cIAOy~aW93CnN$jA7p!0D_mPP^b*Y07qts!}^X`4rHt>l7yus6YClC
zlY<be9l9cLMAvo}&stHSwKWg1KiIBZlyv8-f%hZB&Ck8*E^;!-=K+q}Xn}VPG*99>
zEAt=EkXe`ygkEs=7-d|H+5U@pTWSR$0f@lJW~Y5z#YGCDmyg}qU0uPeF$LJfbJb^v
ztLP^MOF$D%N<$TvV))#~Z$;P4na~QD0{Qy~p98S*LmNvhPWC|PDo(OEdbqi|XSH$l
z$(a<xx@lAY6o<U<{Bc<>?r$69@JaX<L`OYL+=A5M7Tu(^u&dZ1ku9<9DS?Csk-7$X
z&KJXc7r_nHXA%kuMTC|EkUwSTJ<sCB0MqYwPm4N=>i8zftoO@DcYM3NpM%=i?L>rn
z#l_spwKFERo`2T!UQBQ74-k8FPENGj3H!v?*(%e?g(L#=c4(y)q<rhbvLv&!GFO!I
z1Z$DND_`8O2G%HE(0m4i{G^KCBSdy~?FwMlO-thPq|$2m<ca@i{#_tq(^TO>LeBog
zN~k$NMm(wVt2|%+YL^yoJhGzBqx6;(>~;&0P4jV_9^#n@tjjemuzy6Q7c!W9ncoTD
zx8LoT;qYV&8F>`kv>9%&?2GHPsIuhBsrlzyR+On0Fm1$x05CEdyX^Eua+r`2UL!hT
zS|Q!)v|ybjRi4yKw&J20K*|$DQ6D-vd>H>4kX>z?GD<?}Fa6rGnZLg%+_d5r8n<+0
zu*Eey81TYBP*DQ=OqAr!zQU-kb?X`U6}ap-t~8GQl`h5q-I>lcC(byai6Al~)}u~b
zr*)d$ie+H}2yFdfq&Wyom`FD8B<(GDW$-vQZY)pYym)Bmu3PWV|GKK1IVU@~8~GaD
zP{&9@-)0}^!+htOT2;YuHL6R*PJL3BRhoTb0=SR~*^-@GYB1Bn-noIQDzmz{LV&bt
z0oUwUC)77EaLxg*LsG|U{r#k>i^_wU+fu0)G&10Uoc3e@rACfElH7)$B(C}-VVsDj
z9iVrE^=-Af0{AK99P%MHd235Qsp`Bg3yUyq$@$|*3=cTkX?lvb(vFhx`=e+}Adh(k
zV;);aSLa{`#C7WbLo*y2d}l)>9+b6(b1tMnCd#E|WD6()P_j~Y4Rz+k9)l(RrtzpV
zkldl5-g!G}tqb?V`xf%iptr}Z35E}tDM;T0Z-=tphMMwXZ~Fdz;n|dxw-v`lku2Je
zYm@CH<_?1Ju#Wi4*FQKds@SQ2ZBBVxz?jN*Ou`IGfTL7jMSH&;_5I^$gaHm0vLRQ6
zBa*7Bqx3du=>6Jz>#Xguu`FpIL<l)6aZzfqYGGzu!|EvL<)j`>U#AOqa%mW}ZFmy_
z3x`Op3T08->8rC;TT=s{<hMzPn2;D?mzwt@PNnnmXr8n~%tQf^;L=MQ$f!_QK?vel
zk~azSnHxh1Li2tx4RFO1*(h@|Yg9&*=kY=v49$RW<McEIaHJGipAKh8_FR4IUYQAG
z5@cI3&4Gq*5ldod#Zv`rn!*wX%(l9AVntC_CTaHQk-HDxZYpvu4Jrm1T1M2CJ=iI&
z9jIT$2_}ijJb7_ddlI0&{~mWQ%d#XKIQjukBAh(C%HKyhoEIN<xxY7W8SZ2-I1LYo
z@VM!tJrW*=<Cv&wKJOSM;Xsu>e`<@WR6Mi}hn1Ym-1eq%Rz@)xf#Nwgv+GPsh^Lud
z;FK%KzF{8^#=unrmxT#LN#%)?Qa4)43~LgmAT#2lM1D%R;q2|iyIT@d9b3ln89wz)
zp$<ZXq@6$+F@3hw>nbxp83>pvykN2p1xJ8WaeW;|b&@7!{_u3?{*K(2ZCy}<Ffj>m
zNqHW!C~VKFY1y;_--)4(cD+;6Ai;o(=$0@`3|!LX#5;L6yFI)-s_Qu?FE>c$o<g)J
z!J?=rfu-?dh~0OVX<HZ{Z6|2)flw<F^eCZ*gz&jHtVZ8NYz#nSmM2cP?*z#*E2}zw
zI7r^*GP8-s*lr%6^m-B;=LErsO*L%)%De-arln$s7b5v;;vgM*9>5e7ekey`?YjnB
z1gH9FLK6DYCkJj=@+kWW&rw>B{Uc%#IJ$CT%a-}}1|Ol08n%=<?2|K4=2aaf-d7fc
z>o|$D*#;^Eog9>o*^s%H=N^w1HJ#P(M$MkRZe&%L$>TEtcaO1OSy9%VUIp*0Py;8?
zI?4m@uRAGxiE)l7Nj&O}FVrHNN83wkLsEd!BU$NdKh9NEc}=PC!N<A8fJ1dpQ{{<h
z_fM+(HQ7-MW7!(q`A&-@DbuQc+~;aHO>5q}*Y^0=%UeH;!QIg`0!n0C37|$L+hB7U
zJw@sGnY@&?I;(0JDSYD*Km;8b1*7`eAHl%sa=Vo%)6`l4O%ETbLbM$bgX42A(&maZ
zSi8>oZj5YmcdL?So<&8P#-IP<HZ?8{v%sE+?MOI$<Gtjx@Y`9DWnE_JXG(0Zw5_kJ
z!=o8CLPTp4Q#>VMMC&_3+R1K>+XGCVC*L0uSYsIoK0}4zCu<3j7iqT*q43{drZ0{0
zrQv*>svCr8D9d34Vzj5H1emX^S2Y+M2h`DaGMOkVqUsv|_7mRP^^98xSy)=oGjt8L
zBjXgD*)$vI<yl6BiT5`e%+>0Cj_8dGy-;R;NtuS#)#PnSCLxQ8im@5~vCeSf&To<%
zSZQ-1ODG0=kgM=9dqP^epROFCLY>;PL?&_<AF=v68sXBDm=v3VqQjHA12ZVN6TG4<
zud3)KVE;;b0Ru@BC1)}tL<s^MC$gnD(}aT)UIVitNd0-v9X#GGrw`~*aOjtp$=Djg
zOlz8~W&lff8e4ZjuZ)fcya(nZzCe3c)#%pr5C^@EuzI8|4|64`REST>8h$ii`c<Mr
z9%WTgM|SXKbIkvTS}5gF9;H!zQ*Ul@VgW$;hx(?B6x%%T&UxsIbAz1#S0_;wKOW%L
zMsBCUR%q*5YWEo}UTvz?Ra%zGMgjkqkEVZZhhzKx-d)DEG4G^~k~&M*wBfJuTUI_M
zuc|D&E_rWf239_yNRuSmn>Y7e$(2tj<7{i#d_fo35I34XB`wQPmT2K7;06%aJ|tVt
zy>D6QU%8aBUZ^$w;k&f^Z#61eE*n$5v?sO?6UdKGr|v|$Dxm`(!_l@A_!Z`pSuXm+
z%FUQz#$mj0K1LzcP|h$vgTs_B#)9ISpPes8jmT8K2WFWdRQWn7jO!R7FGrYCAzfX>
z+<qEB{TMIdCnFqw-c9%Cj5x2-U$K|J=?f(AIh9V`G`PY@-U;&)pL<4|`H>^4EBPgP
zi5bmT(@D~Yx<_{?t2D`@&vQiymi#tp%S)LL!F&bf;e=B-2;=$<##vUC(P!S^-8r@^
z{06mcqYjGBZaEGbW@tR-XEgb^HyRe#ZZdr5oUW2Is*=wW%?jnCu5hDlKa^+KrVmO&
z`%`<+l>cN2aFp9OHVk%RvCGXT98nQf*ol>F=TA3<i%C7TF}$lVlBZ>s#-AV@xi*)&
z*~>JyVcX4sKZBc)0y`FYXHBlXM5xND@)JX95HB`I$Zcnj%>u~+L1-$Cu{>mDIdlzv
z5_3*lRigAM_pSkHdh1?~o=kwOI;D=-=?Xvf*`iwb<bi>M9m0^dRfCGh-f-aBjxCBb
zEz*a>+CGxCWw5WYdOm~zw_)Xq(T;RpXm*Rc9yrWvts+rMdi1EI;Sw}YUYXcAfAY(w
z*3)22V7O}3MJ~GcbCC7XgLvRHaLPt^-9jaT1RznIg3Dps5LO%lfK?K4wGJNGvS{Gh
zz$GKCO%g5xQJFu!$#}qC)|2E_9TyKrp}Tt;+f%2vm%VjbMpabjNmZpu6y<yMWl=<6
z-Syb5E_MMO$@Wa&+z2#RG>!6yol_!C$~-SWZvt-X{cI+ujOz;&3eE}7y{t$HiiWfB
zB;vnw;G6u+i}SR+CtXY9Br1yJ$0G*oN9d--2|~qcNx<Dr7!U?Zak#Nr%N_*q42cmB
zC!6!>i`#9d<#AEg4=?Y{mBLkr!+}<<{$V1?dNG=}Z5TX+wHjcLhQqxgyeupv&SIr!
ze2lF^j_qr`b+1p&%lz{Pr@Skrl$234^a7(b&>JP59`pcUxE4ebz(}@z$F`G3eRhRv
zFC>+1=p`Z<V24E2^xBAQDuGId?p8DuuwQ?eD_k1r>UwT&7}M>Wm=V=n?p{md4MM!t
zp+apXc#m`y>&hKzRpx1#e&1MiFvhnTTV-SxCtBWr!r3@x>DaCGgc%f)34AtjfOs{(
zOf`@n)JcH0xQ^Db`^3AbryHAB^pnF?U{umfj3oOd0L+15wsT&WWtt`V!?Tii?eg!#
zOV9t~zy7yx|GoU5U;fwYUYU^8b#zUI`Omu}JtPwOp^Em*$ix(!HE=Ao#YoVP7BVs8
zY3STL_?{IuZ-fyzFD+N4Lo|?035M69Hnu+izfR7t5L=fZ?@X&rT~dS(&j}tZF?E1)
z)4q-j?ww+J@vAlrgGV^ShO|ynpV6sMocDD>m($u_4I(#!KvJb~UB<V`JK+IIYQUGC
zGTKm-iafSxqGIDq>m<)^nJl3ifulF7eTdaKG9>6{v;~B85v~|<02mhD`n9A*7Of3~
z{-qn<f;>31#QGqWY&akfb|ia#k%JKiHN#wJ6D-0j4fV+7U^Dhvjz}+kZTxFlfHZoF
z28wXXllB&rDPLKV8O~Dmo|2`F*8`Gsv`ujkXVgAF+=yi`wcg`i9X!{ca1z(0ZLeLm
zGHDmw(B@?!x+a=`Bv0JgQCkE~Fqp45wvS3ckhZT3mQ#6ZbvjyB{|BK@7!5$8u8}Vl
zVHVOlGbf6!3jlpF>|rWnqSO&zKfoXylE6bJRLr6%qxqK7Z~)Dho!A(;EhKjP=Qx+p
zEs{Vlv~a9^_{Q7JvNCaEkeiS&Xb(cJ4R&kq7^_UffII4XJa2qu9hKF0B`S-dm<>TL
z*%-o@<CeO4CWtsWe6G>fHz^ke8rv{iF+T0OwnufEM^z|i|968(U-2r5>a;-3;GG_t
zx5-=in5xX8>rGB?db9k9EH28l`gF2$fJkr7ilL{fhHZJ#IADO22b>9@;K%_)uQ+Fr
zQ?+@)y-B5s8BpEN?DIIQ;^Gqs`9UJSHQ?wZL;z36_@!Xi8){Ovj{a-Aenk4<O08kB
zV<q}n_W<$8>`3S7Xm}|t8+EZJGvxa;f8pz@`P4#qO>uA@HpPRUhb1n1)p(j#Q5KaC
zL$0?%-&^lOPcPS01#c(lY<O=nL@{AL6v}Ko;1Gp%z|3=xXBh+~d5N|tzKKyC7exj!
zU_bNU1`Mqez$lL6PZM(rHzIvp=4F}KDg3SJ1x2r0i#!;VnMaXfkrJ-Kz3ukf+W3O_
zoScjzF-^IWXc}v?Dk6YG!`cfr-2_|6XrjQqe0NS@)$5!_?LmDde~rs1tJ3(Y%Ad@s
zhN~iwKc56S1QpEQ4UL&&`;9^)f<_yc6_>fw+1*s|LV%4#=ggqx;6_4MH4c-wEV8&v
zZkp|d7Kg}W;+-4dhi6}`upvDKlS2x>5jA|N4C}-V7h4j;hRj3~7j>1z(M{zRoinBg
zg@m3PCXA4o))XQi;-qREJ)W#o-Pv(-Atm*PnYZ_ZZVM9r_@@ll(u8$<k<)k}MN-*e
zm}KgfrNKI=Dwx0+N@<6KZ+2eGkSeHqE;EHdauEhSvU)E({{?4>rtmEL-iS3XYTH{0
z;OAbRCr}INGBiBQ6)8_YZ-lhEsBC??4&6*%Lz<^C=j+rbY~0cC4BS{`MV>@9BwXh+
z&|bjq8#(9dyKBxo3dN%PuwpD&Vx$LQ#v7XSkY&*M{?VQfjH`t`w+W8Emb3(d*}vmc
z>qpN_vyc7KKy8Air4S=Q2?UgxV37jnFFzb0nA-=A2P#)_8?Q1;V<&}uRj1WRF!4kf
z2Mcr(n#|Ae0fqIDqLNPWieon8Xr_oCM&Ad8Sx7)I$ya+x^#yf!MoC^LCp^Y^2LtE_
ztm7nkHbh*Nk{FJn721(nF*47n=So`Y{3D_{3@Srp<G!v@Om`x$Z!5NzS>bltnys6#
z3sh^ZQU6<xa8iKFc-*NQQ4KdBu6qPePgtS*ZCq<o)b@DXvYa7jE;E?mK|*VosHHzp
zpS>3pd9lyudnhhVM~U5cn!Uh!AOVu)oFa7@kuhjO0-%7DNSI`h;sFy4G|FI0UAye-
z53S4+rx0=lsw0<UWfxd$XdyoGOO)6HrvVfm_NNWUBsix4(Rd~0)TdVL&@gDKiDG*~
zh6G93iKrefySCX{`OKA|)d%O(S2f03i%~`D<b|&^NoDhrH2WNtWXQkqvP+&sqrsbw
zT-i8&*|aBjhLh4EdK`$IK1t7t^q3LJTd`N;soDd(YV$KTgF+{UJS7*hg(a5*VP>?L
z=jHgs3iv~76M5NLxanjD!{b9_ZF90PbxZP-l0~5MKbH_7KxtH0tZ%w89OAvibQ!2#
zO!mqnDQmfTRn&nhT-P7JT+X3(DNGT|my7Yu#eu0HwoV7AfFWz&npV|K!w$ECK3l~h
z<uLs6DXTN{hH4fAsVVEGkc6OgfZJW^ldR0jB+DNrUfx7^xF-71OrsaQ8(SW?HW1dJ
zQ%ugrYUs50s%bjtn_7!cD&fUD8b1%Fg=|TzVV#^O4M$c}mYZ1=NtBgQkw1*v>|tk{
zRK?c%3!teyhIs7hVcBEchfcc#$Z?Y9br!;bvK_CQ7RE_hM(JXNWHGw2<8Ga#Wt?T<
z=*IF>uA;qhl0|u0#GgBLvBihlZah#qHy`LhQ};>KS^`y)3)&=MD4+wu)w`&!rm2iU
z1%T||1G`1+-JHZ4>EY~w#7SA?b+Xk0@Y0<tzg)&?9s=**ZSQ>-Uw#{Ofdd`)iS21w
zs0$JLGacK)mqZa4X!egH0dRunDeq-5e-4r*CSM>Ql&2sKC3L!Z*@KMpB+kJz{jtz<
z>w&hV&Wibpob;GVP`ZH`J=M6K=|hrmqBPGPJK8jYb&eNERCIU}?u?KVzB$ke!yi?|
z6|cp3l8p|8>iWItUerYtWuNzmSLZvn%ntdOVvr)N8$=lfa#S2o7@VE^(Vq%Xh2ZMN
zt~~Zx_5#5i;;SEj;w_y{ueRcCC!$5R12LzX(^LB`>=a4NBP_RZ&i<0@y0s!%86y!#
zn}DERB#0k3O9Lbk;=8cY81C!coUMwBqJEfPz29rzFkYO4kuETj9uq`GLfIZyuq@)M
z-7Gyh&dtY{=A#{t=gY^JAaR78kK!Tl4@^KnAnmz#0JwQ)I_qsv00I+C)@har6gsdq
z*7T~=s!FOdEpCGI?Mfhl|MuOEyf?4{g@8!_U&m^lroAG^2$zrt>@o&J=s{nO_#^zg
zCh#5|;f!(klLt0=_0Cztx+vNK!A}-?#gBoKQXc#PPgCgosaY&3&dHL3<|xG_detpj
z!Z6zb<CJTGOy<CWQu4Vs#V^_%$W#tiSV-kvtN!NIniqL?OZE5NdAjYlfeVf%0<2qc
z8Q6?$^neC5BMgwH;H^#Mbc7cVMg>r~GIn(hqC>!f5#k*GqyTjMO~!2yohAe>2eyIm
z0JZfXwp)k>8%iA9B1m%3`{kcuJ}dw;Fo%fo9L_b#3EBag?wT*jB4p)N7#Xmp8pbG@
zlJB-51YUyO&M0f1)OnGG!yp?N#mX-iWfX-|<bJT;c3xIKpen%E=sJZaEIJmSlSWCF
zmp2e#^w#G8z?#>!9AvTHve+yF#-|U@z3aG85`v5YwXQg=w>IXBPLeFTnWM+)oep1`
zliq|0wx>4IBSiPWda64qIdT1^)NxW|H{j%Oj!E@}qTRiLu_u`x!`<O_KgVA!EJpNW
zvGPqT4=qiLDshWrTh2@lB7drg5lu_-QF@jsUWt&E_&yl^ItU7yqm~NaZZHRu)j4WN
zzIy(A+3)xY^ngS+0r+@nwc-~~<MGL0AFZ+g{L@wcAs|xo592`<<^$N>u_K49NlO{_
z1oQM5>NLD;Fe1RjxJdGC+MB^Qxeo%0i;{Pe+|Pw3jJ>+M^WzpJYLvVJ)gfxNnV%94
z@MYL`7BW6042)Ck=b{Tvpui;xes$fEQeuQqj185McM5Dp`b@SD4i+d%UShEc1V_o=
z2}{|sZ=E+t9^Y!T181cp#ps#muL#2p%dL+nPC*^Z#ywz=Lu#luV_Kx-AD~Z77`jK3
zDmV!}l)@uHd+IO~0gZ_GB-V(T0z%2%iB<zy7T`+9ph>P~>npfS%H%r<uPX|@1_w0A
z3}i5dFa;@)3FF=A=#CLxS+?i+ge+z|H*H=VWUF?b*cQs%9#*+y?C6;D16oqpQ!rUN
zCb@GOPEOw(lYG5O88bK8mX5f3o#rp~&H{{(X2E4!vDF^EYZ~(~OU7(yTpRStCBKGx
zEA*b9p9QWHV6K6EES&80E;Ql7a8AdnVKNa<fSFF5qw+SrhD+CR8dufB?TlL~k{(^w
zwfV#5n9?%I(sC10UFdVJ{C-{}QJBqnM)Y;5rL;_{sH%4bo0zt@{QWeFlPdiEJ0zph
zGL4HO3qRps|5%iMU442h`e3gLO)~v16G9bsF{uoK$=%(>TgKJn>K)s6C>zuYENrb|
z21fNX!VTQ@8ZPAzlA<Z|2Zvl+<Vi>d1<hoLm+Z|je;|tV``NiU!)vB-$xOxgdC+)j
z&H$spXGAXO)P(;|zBkS37`-M$f9EU_b0LWD8d2p>2WJfc0u<79r3!{Vn3I=1)^buM
z^(P7!hd})_z8%laf>1#tfESRA)G&^RfcO4;?jhr8PG<Vr5iZDPR>Zn?<+9Q!t?KA;
zb=<q4^sRafGh>*|Hn+V8d>2KT#@RjO^Kp9p=aBlNj8t@zzaVYfsF$|GNCKi~m#Gu`
zr8@~crvu|hI}+yo=$xxB={C<fXLq8^gz9(dF!E+*CSV{t1HZ2@&s;$ZAy=C0BBC_O
zR#~66%!@LLW5+eySiRyhgH@ro;AzN1icua5znV!j)Lj)2)=najWmNl(0vLxCB)Mv_
z+negr5Qx0qsH=Z4VgN@~lu?1YGG8zc@v|Z*D3b|&5m=cfsV5SJk>?u5KsK13Hqj!!
zEuWKFPq4nEqt;BL9moUCK1&ouik=^+McFjsY+yfBmJ7nJfPCQDf|;m|&+7{!uhKl*
zUl7*NUqA;}m0{d6jqf934}S}Ud(0mRCH8_3b2&iObLXZwunv>2#9ifF1XNJSC>Ran
z0at)7vJX^^>S?H7&qcwqF1_${O?z5RLujUxOI}(5c)yyJQ+JSiRXieV24aW~j4=f&
zB=hSq2K3Sm2LL?u6yYl7bz(X!%!XR`3Y0NEw_#2t5r;|!C%wg+3;u<c-o~mas;nx_
zs=2BkZa^uv1+r88&plSb+=-WD!%px7jyfz7b=g?fMU_@ba?@;u#!-Hu0Q1nO0G||w
zplwE{C7>vtz)%<YO#^9xmlbb}=iZP}dC<b_arsL91rK}ZDo3^XwGLWdlv!10&g^bW
z%h;9r`mkZ>1=c4aDo586gwQR=nOkP!IBx6Y(Tk>7wNS!_Wk|Xo#X<k0HRN#Kspf*s
zNlYmcFA?oYu0Ni*Dxz|eCS{+_hfIefHTBXT=WI=6!#mrH;m~t{4T{gt-ZvV|X=Y+b
zhQmm_Rs(U^Uxg5;+yDKi<{%2!XEGk35leRz(M$yVI<Hx82ls*r{QDD-2k`~#tU5#l
zBWTAb7#%f1*)|OH8*@B7u&W&9Sb&`=s-xX77J*%PQAt%)-v@!MupBm-VuU@z`@)<~
z;=MVuDDumG7u*SDe20;zh(0d-Dp-YA@gOdrj7yNy253%>jME&MQrlv=2OtwSfiFkV
zJ$PRh(P+BaYw`oOK1_-ORTA@6*rp@6$Q`Z&!tVIp6n|8nPa^dm;UZ7VxU4^q;<H5%
z<oN&6e1zgOYA$mk?kjoC>ya%1A9XzNuy1kjhG&lXq3CNq@X!|IjVu9eBs<a3ks(#b
zhf!x6^+TEqD8Qa=NYF7G0Qe5U*+S-q^YYj&8k4w;s^Sx+W0xAs+om{OPx&`v0H${6
z!1r48q+2rtNTa^Kg}+m2mPJ{X(dUUaZLP^`(z$#;21TEPjU(j9jF=;n;8gWxpr9fR
zCulBW3yYTJoVZeZbTUfJ1SEy+rPk%yHgS{#$?O=xplw2H92l@j=2adHP|OJ*u@&G=
zLN$8O(J*sKE<HEhNU2f$^n?NTnc*Vc!>f7$Wu6uBO?LlVv;K0Jm}y;N#|<Qc0D7fX
ziw<T3tzFoQrK9KqFb@P1Ca>)>j4huLs69jh-n<&_L&*Fv&TD-&9<r-sp0tXpxUh)A
z_||^3LvuV&A3weMG!uHO{1S~J8Y$E{V|XA1Y<y*$)wOFSZVBKuQ`o4HuKs(cv%Wq1
zY9F6_f(1x4&`)@Y>H<&8DV#aKs*S77(%eZNU7OudWmsSUtTN-$DoN{nceoMF`V=OC
z*=nO}%vItvF6uE3K03XjMH2j*DI*yiGs_nB{mCtze{uccltmuL$@ivq-Z#XJN|@sv
zg|K`(nPQvif|IxF`}^fU4h3`RwnXkt1OX$q2`G<H4A>evv}bVRjMomMsH)S?M6cI?
z+rH^ve>o!K+y^bpE|eK&eGD-b#Qg%{0+syMrR$j~$n$k@4ml}hQ|$v>gFHlGy6km)
z@~SS&;$h?IyPn%NBNb0ryZvw_QH%EY+*7iS8WHVD`AVakJ85k2a&Q?my#-3zdpuDd
z7x^_b{SzLKw`p0nbbqvjbY7HoUgZzp<i3#lI!0<)B&s?NC;T@&Nne?NN?9x901$Zi
zRJ=WDP3x$NAHLUH+w)svp_HBD4bEvJ-}r?J{$LoQWl+|@9$3}Fb08}<)Mpt*D4m4z
zj*3QM<^(NJ_}PI0D%TBAst&|1VL$QVWhFb9`bH!Q5C+{TW}`Z<vf^R&@BQh4%^?+X
zj$y~*_A(rvdu?fuMKM+kkbMcp##yM9KG+?CN|LNDs$b)d&&|g_A3rXqkM7G9EIDbL
zh}OB<spF_Up7^#(U`7}Nryw3WucgBiA&#Si@#d76lWP$Ik!9JEWlwv{08d`lb$N|P
z^XFSqXV_i%0<{zFRIZ(%wP0`uqmaoWH>@(o;&15GBrO~~nY`-Gd?+J9lBsU^QywHa
zbvh7yayC~sx#v>nNen6(_Tm!B$amwVn%2<#AY3k|Nh+E5L*4)#nuf4Zmueg!$0vg;
z7L%pZ3-aT$>j@dGQnP&n;+Patide+e*09XHs-whBwQO$fc44&6ZxHUyeJ@_Jyg`ML
zy54HBvxHaI+maj0=C5R#ai+(15jb7f54@Tcq7G{lxnju_1kmfI^)`PviJNu?*cVDP
zMtJQQ;6+%ldLY|=ug!$WoaLjME7*7!NuJiW0kBoN3m}R$jcGpc7%DQU{rhUjv{dwE
z8Hy2I(U&7`XRWSyV;ewK!N=~T`+~flMWRFOZH3st@2l~SE4GK(o{tV-V!4uKYvSk`
zE86&C?F1ek8dN)&eHJJh5nfF+kXF=>d)5RppP`Er{|&(iDc<D-Fc3&<oYy417JP?q
z(3NE)=v1xt&hn~=Yu7-0Y5Tu6=dM4#w0++O4u3FT6ONIiG?03r;=|>;lp#5~`-wYV
z=Hi0EgpRS|Ib6?QsXuxk!oy+=dQ?kP0{k{wrg>H5QBmGfir>tPa%4zT9FYhIftS`n
z5RNh$-SlDJ2weF%!%J|!dr~e92a#<ZCZiBvMV%cF0hEf@Nr|qv92;!Q321`3rswMl
zswfc4G#*1B0KybZ2<Q@5dn6tv3wnMWKkOioR1&nvG2oCi7rPO&TumUN4cJ#}^*u~4
zRxXvgLvXP)dyfevKQZJbv`C+Vk$pa3ZZIE9^C(Y?U}jZzTYK)_e>tApU)nWs;`x`$
zXrX)Y-2w+UNv>QGPa+K=A*I6{3C)u*mS$s?Wy}L8XN4vqD#GrD79!gogftCgeWUpN
zUY$~vMO;4aB6UM|wVl4SeY=skGgL@jOtk+e(H)A<x{+*V3D3l%_jZTeqPiT{by3#!
z=Mf_D(6e~tR`@eHH5nuz6^>7Y14cnKtD(?s$vvGT{9$9*HVLS>H5nc!<#W<a16`zb
zPp86BOKLaZeHo5kN@#FNw&28QAx^{1FK)16nXfzQq9q~Bxu?k*%?U=uD!9sH?!YRa
z&;3A}YDj>f#vde1!Ys1S3}wYkQV&AN&wYo998GFGku}KEKJu6(SrQfT!!7L_0Pbrf
ztMF7DIR~Wk%;pm8QU|FYP5s~4z)!P0Da+#FeY7{(eWes`zdad8Wlp0E`ISkQPKp4w
z2~smqWEe^*VlTnc-;1J26<1}p<r|Iy4`6^Ztj>>QNtM(^lw2L&Sjsc3d`wo}p!xLP
zOdrkh=jKbldW2?49nCrJryZe-)q8b{m<gYZ1TZEyhem5|VSYqQkN5Wm2)`zF@QJaU
z?YHTj>NI?tBLHg5+wa@8iA~a~Dw9t<R>CQ%>*~Ew>L7R9iQJw8mYgZP-Q!s{{`Mb1
zo<v!(a4Opv(q8%HqNvMoR^Ja*h0?k!A5unTTJCL$Kz4ljF>##bWw<4-j_Y4t)C?sD
zFit}>Z2`x;kTjN$tjyqyWC7izASX)3oFZt}FIw29_|*0iSEfkyLJM7-z&92wjadTr
z@(uJs$p2R|YBkx~1y5Y~0{Py{;0Pw{@J2x6YDt>JQ52Pr$waP?qMe&@d~1I`&IRS=
zUz#QJh8X5wSpkJ`S3FtV&60Ex*N|#~!KoSPW{IjglWXZ!9W45zmW(!I($Nw~#R4HJ
z2G;n*mm`k|v~yHL#Lr5|z#?I#mj-h$Oc1*hTTC$Shk1gEi(-*&i|VcyrzpW-1nIzP
z+~O7RbP>ARJ#^C~$sTWq@3-`}bOA8mg#?ojVN<MO%4;||0%HP33%RCEs3(+O1F9=E
zA>iE^wiG!Pl3ZQGWG#Z@<(-hWr1@sMV%CHDK$`6Q7lat%U<v_xc)QF?W$mK9tS~Q=
zG|R)z>))?bg)5(sRcRIm-!MB0x9v(>G>WrD4F5hA${Xt4YZShD#gleFAb(D!itPzo
zqvj1%UKu5zX&>e*!II(9WU)8r{f|1r?YsF``ue$$(RQm?eF@JSS|B49LAcNmqQhE=
zNAiUv2BcKbTUP%}1?*wu5ff_4E<|Kr)Q3XDHFi|v!)31sseq~aaLILR*0m)r{3kKk
zbp<#aeq1l_7Z!PuMMb_@SS&iBE5Bc)QF1+p`sZeR`}n0lo;z%AtbRyVhSkX;hx)ku
za{SVKtZ%*|tD>w}yO8zl=_;l!)j0A2bwnA*i*aOO<0`5wvy{XQ@ja6s&tC?x9WgR5
z=AdrBJvFDpbKf>|ks%w7nFZ!Jn12<s?}j3M`)%VAv$Tl6&u@3l&wPVu1E{UCd_^RY
z+P=s^=}wp<$i3|CzN{*<JbE1P*xY^di?BiVFCR_++78F|{k^*ctHe0>V-m|965DS!
z(tie-;$GUE^jPx^l7$nVDjoas5j5i=5|f-Esv)r$1BvwMh<P?c{UiWS`8IWcaAkSx
z_4l8AGk`>fpt{u<1O3$b44~kBl41I;IkHy^SuMk{0}Qi<`?f0k!}4OLJ=669omrYW
zG|^?8hg&nEWQW;cHx2w%o+)cm&%NN7KuCF*=d{l_xhB}f4~48*LP(!qt1?B1k7W51
zZ{6$BX`X)|lS%6hi8!jU2W<eD67ha`E|XRo0}YXa&323Gv_f^VU8uGZK`GTaoUfPN
znaz^J4AmawyfZw@-1L}<tkqhQmjI5K*qEQjHaL!6UXVH_Bf+qY`F}x!4C5=VTuxxn
zsBw+0Y!!aEM%!r=M0HZ7pFkp90AdToP}iFjdMCBYph02Nf1`xa+3GVYhQY)QM2<_X
zbIlZ$dNYk|ekT)^91A2$%BNGoGUti&@hE|h7oO1S?1~cQXs&CWd-RdR3d9ZJ?)j#<
z&b`ZZw`9VM$+q`uJ5qO)U0q}&XvK|wo}hXQ#E6}+l*LsZe<JRuTg6tXn*+R{;c5h3
zaiDfyEGF-lU13X7!xsS}i%5}O%fIWS%!}j-+4>4DZjcs!n<h$%;>$ZpwWHWLf+(`S
z>@X^-p08wCX`R$nT}I!PWx*n_!&+N87VePwO5NDBwtI)sg0DK`jDrKvnhJ%1WV(QV
znj56nI0$5Y>0~zYzPl%CmXukVXFpz1eDTP(<d7g4p){TiVF%B4Bcg$Z8K4o(sVvJn
zG`8ddL1NJ;qGX0<HH8ZcO=nm~kOS>3@w86kqI&okxP2CKgH%rF8H-Euan1-0i!pZd
z2`Gy$K>N8d>eQWjZN)Pb8OVDtI*K&^H0}?~#bp#%$*(~a-jskIWL}zdRaFW|df7Vb
zZl9RuEP?J73MU)uP(Bz<H1YzR&DmhXK$8)RDj5)feoV_6BCsJKn{gi{3m}jyhv<U?
zIJBdd0-5^|M4T3N9hDEmthWLx^Iso_@zS>|Yn_gO!GPo%^hl3YpZA;`9Pp@v4zLlM
zq4{@i7@GKUz`zUC0r0~>jDAH_sAY}L{psl}&WkvGc*)<H5^Ql+;l40;hw`4%$8Sfs
ztULq)00#in99^_Ja1RxED>#sj%Br}<hQSY~PqxivoXf0r4rGVa>eaa?^|9S(KYb<V
zJ7K+R_U|--%=IFY3CXRMaC*n_wN7S&ck#!htkNin9!5YG(GAL)Kh*nKhk8-Mma)<6
zg^yO;3v_!ZG=t%=q0ai=UDkD4SD~TV-`7FWm0vFEYGDVp&`@6v!>)W%mB3Wj4l>DD
z?D}Waah_c7F8F7?NC=`RiK<1D*?+{(%`Yaft$jpV7a?`yU*Fl|m_H^<qm2i0|0=vQ
z;9N6!dh6bq#jLv7B!btCN9muQO|#lhTHtBSZ4WqXiQ}%B+$hH;NrOW!b9`dkIyv8g
zFS57H<2ugL;&Gwd8|0U-kp%)@TjRK4Kqrdgw%IUAC$WDDoC16#KG+Y(user(b$^;`
zc14o(dE2bfbTt@h!s%xMj(S4DJyKvX2;%ENuj#E>f@%V_>1wb8{2*`8Uv{meqCBdT
zYZdB`dZ|}Qd3)l;|9SX_|NM`C_;>&B@SncyCKp9gKAxcM7j0KNnl}&bR(V<%RTY<U
z71vQz@1QAp5~rUzog8))HgOc20s_GO{!_yNYH!KaWs;|lSB(25&!*hP*9oNyS7z1*
z(tUbAJgI6K5Qt8|oih-Out6>&*u|6{NRk+3mfET1+GJ^$7&fHm-z9N;6~#j|IVd+R
zh2bD}!7@r^c*D@v_$rcIQlw$Jhe$EA@eu_erZR!ZDoG46jAzLVhzu7jGX9J=U0Vx9
zoMm<Va4oPOes)c<kOM-KYr^Z84-CdhXpDsa4I5%&=W0(4dUJvPtvq^O1ecR%qpVw6
zQFjXPSnNji3Zc0v9n&mAEO;)Y=c>ch5%}(1l|QGyD+*=0@=SIjCMAcp@@P=o1AdaC
zfQG5eAP}@|lxXd#f8uVXF1ywltue&|WQw1AyU^{iFAvCwYqq3hY_(;<jhFk9qX^9*
zO1X!D#YvjQ@lC#R0Pr6FdI`nV%<94AB=%UN5zM8QqFgEZ+H>%2T%BrjO76F<Wyx`p
z<#kluGHUxLm5#B>S8k}n;LVtQtbAdeMOAtW+<ZGKc#WyZ@i$}xQT<2V0D(?aPo9%C
z8mG9})yR>SC!#4m)AG8#h^k!Ia4VXIz%+lH4+?F%V?S^jUBBgWvPM5JPZ!Rdiz&VZ
zav>Uk`mYR|lcWI?=00?r!Qmj3S*DGI(|vmT&Uqd6p+VbO#|m{TPmI6elNcxhnCo{C
zG}6%<L-?{R1y&~bMrzPvS4Cu6$)9Nehn_KoBT_FKb=DPRSa<e!Q6*XRcv5-mJm_ZD
zMZnB3xQ4CS^SW$ED3;I-YGRw8biEfC3G!2<T$gkw9D-?C@pIk`;!F0z<kh{}F{<h~
zuYdeGze4i4G7-ZGN)HxDR-p<u2tB1&n!X2J7CohCfRv>@kws&q1On&8<C28XE_wy@
zlcH^{&Tc>zZdFtN>*NLG_nKE(k(EjMF!FYL0KTG)B`rS4rcCAFCRPGsF6JXTc!BM%
z`4i;1Qs>VYN2xHZRm?I+KL&mdmq;IwwQiL?_7-$e6lwf;5p#Pbwoc9CHkVNh(*sDy
zu=$9COu=Bf5-iQoyqO##`F|k%iBK^<a!x?WA&MBPb7ayOWYSJPF09xET2z5N1L(5P
zr^Z3c9G;>k4w$J~-pt=q;bpX3@m|neZnR#rz2OiYU2_ZJv5!{OJ%$d2jf~hflydN~
zoSLx<J1(jlTFOaYL|J_;3>w&YdyE>t*BBVSuN5J#uF>I)VU+<dJH@m$xp${>)<9-+
zEH_HvIb>qmOzb++!C8Zu^P-5NI&*GJ*DQe~i>DBc2NEwrH@}9H&aDIi21=FGv~o3d
zT9w&ND)>nLf=-G#Kjs7onk@6H5s5M~o9C^<Y6ckCY<?~YAe4w?TtPB|lWDD?VvpR_
zQS(0N30-j0X!S2TUP{|ErU5TLqcdKal&tcbb}b^K!ocSyB$7t-2XAcSQCCS^6gR4T
z{wc`n!I%&+3EuFWiY&YV7J%y31x0loJExcC{inAzaw9IqmQ1q|7>4&EloKLyYHi&b
z14Rxv8<$ZQRc4pqH8QW9s5Fx_;tV>ixTDas?9B(|yg4WA>ow4}=-;bI(#aM5W+l+s
z<3f%eF6LPsWp`K>GGK9`q4?2!v)$Vk%ph99#Qv)rkG8Ipn{2f2R;J!^LcpEM?l1gA
z-Q#J5b8v!0P{KJptpg|Bnuz!2l~HJc4#Eq(X(^uePN1kL<ND#e<(5QzLuZzXz@g>*
zP1BTVVdstm_-G-~JjpC4P7KOE+e_A>yvpk6rek+YjACLPrgkzGwnp~}ca_psK>W=d
z5fbCg5slR-4mbr`Z2<z<kX()OlsO3r<1VV{Xg<WIn9Yk`oEgR7i6SYmO=g7q))wC?
zip3HoA|t=H_u{CCipq&PZ{x6gJ)nR0|6I!dQ2*gSz5dgGSpTXlPNVpiZN59?7-#~R
z1Idm*BFxE81YbCUJF2ubCj~o|TAf8j{y0N+Pbk8+{q=@ESONo-z0p7crO*`SzHsQ4
z>={61godbJfWd11Yuw)4Y!$&OK1~$#0sgXNFa``V<#Hh4(j4^MhfxmJAVlbG4irb>
zgIfL>PglE|0e)4;)DApiBOm=6V~gH$E7oj5)KS^3$?K%b9&VuD3L~*QstaO4HZqdO
zFSRUahQgdi)cU51&LJ6`<na9RTN8#0nws}66Z8^fCIMKIRtwDc<DuX(SqG4`_%3AZ
z6M>YSv#%=RII16p@%9^!+gJ#Sgbfzpg@MwrRA!h;9x|o9QWX;zCp6u|UY|d%^P>3i
z_Z~!<4VYr-vk>Sca^sZT9!c+Mjv&p8$)bHjQ;S;Fn%ilhM|qu<$-|G~R{o~vIqCDz
z%$E8J%BAHSm3D-t6ep%(k|d=-{g`{W^b!Fbz%`@*Md4mQ^n8SbM&vP3i*s@W8$aZZ
z5()O7DHY%tD?wRq36PWKWUCRJ5)J8x+*0j%n!n#imXor`vLwju{=NaFul#lu)n&-O
z^Gvh%ZfK5QI!IhLKBFj;kgetkZ#PW#&!1DKaY&q7Fad-5bont=k!4#SbN^DmCDXqq
zLe&vGLQ9M-43|2qu!s+?DM#WFAVJij-CHo2#fwiii2|aRlQg<0Nns)uEpY>V$h^#C
zG>#c;5`a(>Y@8b8atxCP@RWP8)Z3un*phN)i?b{o0i-*rTMBz=fQ)ujBH0Wb;I4o_
z4-wFk2?slVXnqwj?*J{7s3RfuCVp?07e$^vZYFWV4B)l_)}Lh59uYGUA(pNsB^>g)
zZLh{Wb@Rv2sqdTOc6+VDs7SK<VF}4Qxu(v`-t-H3key6=7(TE$8jipk5yVj59o@q$
ztZy9mcx%}F1?I@H8%*MW`sm#m#V3aOGPpgQVw(T2gT_1j<z%KBp@mG&nS?w8{Q#Um
zW4{4Z4%Im-*jZj+iVBatoH5GlD9#^lT;7_q&;NnFV9<WFK{p{2-q!?poOEIt*FCrl
z$#a`}#>Jsoqp*}Jq;s4K{E&vuxFSl6jXa|!qM_gr55}H@{5+oH1Afn$;VwuJH2SpP
zR9Htuzen4GBCUPY<QznoZhjEJ*W))FZd{b#<SGH#6X^UeLx__!S8)SiG<UQ5lZq#p
z1{P0|QoI4|9;?%N9YXV%Y8ql4;K1z^G~!88W*QmF!!1M88hEFBakxmUxW1<I^5?B=
z#+=kTrZxD{A+xz5IOul%Tl-GcG^=8LoxBsP<fy=FpVu*-?}kc=Z)zA;t*^2oi>oND
zmh%UTBE#A1ExmK$aM1P(YW7S<1@);7S{=6AJgU0t5;<>awa$;DJ1IuTi-zR3jWl<M
zM(Uhf9|=p6qw3UAqK!C2;O=mC^u2cpbn=reDOiaoW=qDmKntNh@4Wg&yki=vA^Y5~
zQRb|nqLOB}aKEg`lKMs~+B<}TucPg)wk)_ugs*`Hyz#DAtZH{k=d4ciIL|+iO7T6m
zmt9XstgETGf$v9Hjqy6IU{aMbbHO{0AjzYoE<ext^F|XTSh7MfrKS^*TpN_z;xtz9
zA^zXa0z-3eqg`ZMb{MY%tM0u=6z6&NxF_r_<yNTkX?rVHkC4$*ei|Bo%!na7il16r
z5z&YeV{~UYqJ&0>%|)ysgbZ%e=Q+0GKU)uw8xFEKo!8orFDTZ8>aVJ5@nM3XCbcQM
zp*ueJn9`V$2MoC0sN#u~twLR&!D<j(=%_Uf1GLxNc}itf#bxvfErXyBvN<z8=cGh(
z|7JWcS!EbA8tYq+^dR5Wdh1@TFAI?}kr}@SXU0Vlr_qnsW>{M%n@_<*7pOopp|^w`
z$iu&-Y#A|46m!ru(O>$T)cKP%E%GwC$zNAGnceWV2oqM+${J^PNK-jJ_t?*BnO<(r
z6QRlBZM&gbO%tS0SZ&IuS(Fu#Z47R7i>1JU1dGxmc%UrJOvDux0yPA-#&W}Cg3mIS
zWa+X49t!)+Z%Kn>>nCY6!NZ5NVk$uSoDq`I{wi}zdDUneTk9C<SwSLd5;4+13#d6b
zFf_*x+?B3pOX!zo;w_DZwhG$*t$nv4eDL)VUnyBp!2d_r4a_Gc4em})D5GIclEo>y
zvZ(8%F6$Nk)rt$fsaECYDdHl>kT?UJ3(_J5@LbI!QG1CdnE0=;InziQy>YQ+mgMQS
zT(-$e#dnI?h?wh}3>u3|gRM+<{p$NTS_vxhCq$uI7gI&`8s(r66_oN9{jD9BMw~{@
z7exPI<>SdjM$Z_rM6pgkjYg$5o>EbjN$C~)w~Pv@;1yi5HAX>L8To++#wqb^ftLx_
z&dU^+VBgpugKhmrwmhWLHI0WSPo?6H?z+1MV9G>pB%wlyh3$pE-@e|qQCG>6eVyzG
z#3jmlj7;mu`FC%TB;f&ey_7frjI4iTmSm+}ysMVjVdA*p<=_gD?3$%30<yOMl|UB~
zjgkQ4wuluh12!3;DeiN-YCe{vS&`(mGaqvz`gSLNoxJaUqttpW2ZRj3VG&!BZYv69
zK_M&BriQaXV?F~}z{?E!xW^~M{c2eWkgyRHz~L`c(5yl0v+mpk+BJV`-|dDlq$HUL
z4AwUu0sQ`ONz41$s_N%MJ4v(pisOJyF);Wb+=W4jFfFFE`4my&3c+eJi!^U+Q@(91
z>olwC4Ur3XQ3UppE9Z0$-P6obPEK)e-K*7}_g-eg&4rRjTAweD-iwtGuPK37x|2I8
zA!TGvB>=0UsIC$NBnD;>_+dOq6~Zoy1CECF<58vVAo7{#s7MInvS5pg=4}T0^8#6|
z>jS{6eWh^~4i)s;5N^O^1vP}Qr9U6T$LAi{JIDaVxkZ~eqO!0NI$VF{c~#c-l`rWo
z5}fIX=v*rt0Y4M0W!{^na3^!O?Nc~_W27OP7Xu<fZl!=J@s#YZnbhpWQQ}|=Wqf$%
zL5~`~L>hA5O2<I`0b#|#81H^V1YL(9Sa?+qSaqJjlb?YAOqH>AZTK4wv~f%{#K!>r
zP@$#pJ`j+`!vpq4r1tH*bLg@{f)~a^mLd9$=#(c_>gHIl=!jqk*YAFz9<P6XoR&p=
zOX8=Qy*mNnm^PxM{CxEQnq$p#FF#`DqRBZB#YXAiGOmjq=k;6hG0O8>Fmx*4sg+9e
z{WwWzDPO30z#T&a4%tRIjvfmF{mo*P8#!ZMy5r@V)Nt1e9zTrUNbN#1i`<?v!(bbs
zB#)|cp@V*IPhIaPiEW$HEn^FQN$2aM_01{%!;uvT8&wK`AIAwC2@f=IFq&rv=lI55
z6iHI&yJz71U6YgAoYxhkFviu{4fkX34NMw&;``)s!(k&|Nb5O6yQK?ogN4KuJfj^o
zdznvF$a-)o!)4m027oZb&_X+uwehcY^phe>()`!MzPAiktP(W9Y1qf4iM&Q8ai4n(
z!Wtc{#g#Tfpk|o=-wn8IUSw5W)IT2GUZoGNY&=O;x|21*rHUC|_zq+kr&*as@#ir!
zc!ye9x@&V}7r;tjec~{IuQc~C;4I7PI@vVC2mzFp-!HN#4?QRrY_sdOWLcI~Ra$Jg
zVch?4_o=m;*5i`;1RlP4Rw6hi3Thh0=fAcl;)sfVwaz5+2PW?xt%kZ_zse>Xtqs!N
zdn}@)EUK;d_|lH!FUQyB{L@SO{=V93jp{6qsvWJo9cz@Vh~p$$xSIUoE_=E8L-Ht&
z_7}sSZx{#pV3c9C>)rKKK1>@8=%`NWG~LISjpWj_<gz-SF6t^9Hawe0XlL!{zzm&`
zYd|bPL$b|tH*TOR%hV=A+oW=~mw;2jVTs(6FcY9_dqlSbeN@*I&tCNf(R=r+_o$#j
zD3sM>^&D-bf*v)euydtk=@rMYOA9j@fCA#jGH}fq9N}p449z5f@+dqqvX-KCYFX!X
z0FRjC(8T-2Am1qA3Y2P_pP3#s3`_>xBQ`d}+FBA6hEX}kZ|7{4)|O4X%y~cW13cFo
zYRAlVz#1l&6;YPfd2xFZJ>Qv!Kya9565*?(xzR=$Ja9EgQo)r+BP1Lx=Ms7(k7l!n
z5e%`o0>SnUp5qOO;dt3-0@WwFRJMPlS7i`5%EVj7LBxFsj|!->=TZS62><DboEtHt
zIoUGvGlZ*XHb5{(cT(GUvYeK#yMDvQme1leu5U?~?;y=w!QGXiFIAefDA}$Iaz%6D
z&bcoX***shssrVygoH9^0W9basT}f>2woBxP*2@4u+6mU_VXTNOlM9FF9SDl^zQ|)
zHH(QL3)zJReX$UrRY!0hDfAgw^fLU`9EFa`%j9;&mN>7ABu*dBPxqzpwj{_1zd_Vn
zj}gMTi2Gs5ylj!q9DHES*!@26nQ26A!Jo!W#tKc6t4pJRfWWt&Pq3bZY-f=u@+K#S
zD{MhMelLR~fqFQqojl-$E1SB@d)Zr>mC+~EMGJxJZKQo~ZuTGk@%$hE{oDILy#1Gd
zyR!o0G*069;hVXY>%56UHEteWk;={~c8d2A3zO^2s^lUplFJJT&MBe^m_{<y%`HU*
z?JFDgb5-Vi5(X3@a(kqWBu}zBeR$^nX04#DE|}1J;j%AqY6?b<84(Pz+|COuq9TpU
zhhx@VHTBlAp}Y#J0`A}+AnUY_Ta;H2GH8-}hYv}TW7B=GX6AKpT*SC$*(G&ZK4m^;
z&Z4nmNzmuvvlWjIR%9Za6BDi$PdTzm#W8BTkWqwoUEKrUI)_;r?C4J7gx(QvAaKd$
z!;HkqB)@k*WcpZ=P0SZ-0)61NLTZON3xI7S>RrI7_Z}=4<yDbAy!38Eq!x><!*&OD
zYVgGp3wan#V;K9_q<z?&eLZPQ3GTSVJGOb*e56u+<mR&V(NdfIxTX(p>j^x5;mkff
z_fikyVNZN>GW3Mh3bVj3H;iEBWm3oG=MkiXb7O0$cJPfUdN-Wm(Q4<+&9tZ-!k}6K
zXztCMoZ<o29TU%|V$h_894He(zY+68slD+sj_N<D|8!wPmpweXDyt&<1S!Qu%5i1p
z&KL@s;*cbYaqzMco)}fmL_0$sA0MoH2TU9#Mg0i_hHE^}P2s1nsQbuqUbmOgpHLuo
zK;Ewpyt0l=2fE>rph@&p4)T#EY`QO`R2cvYO`PG-L*6Mx(l9$F6e64vZ+LtOrD<Wf
z{H&Y6!&!>utVjqtrE=UsbLA!nt`V^{MKi$}EVoRbe?aL{IY*YXhp$r?xNw<&lqm<1
zkG(}4B8#*7aksZy+dS7$8LpQXvnl|aJ@*KYnbQ<w8v_}Eb(Sz_fpomn=ZWgNEV9pQ
zcC99K)Yw~LShL9Ta^mXz#4lDX-x0GB>)=zzvm!KpC3|qW2^6%#(MZL8<~8goKd>j&
zK@w_CM{)Iy9Gb|2ase1Q%#hcQ)h4j{O*1n~19r0A@%`iH2sH>>dGl%krxWgxh4N5=
zwTz5b!f7Y>2aRY7=+sA-N5l<}Y44<pv!ck0`o{<F#dJ6o$K&++&r7DeV^7oKpb`*M
zcF{`}BLBgpU~5!r2YVfaFiu*iI=abc!dKL31IjdL`$Aqw=ZRz%hW&^%;L!{bh=1!|
zE|w)(l|MWha_9W{)lnK)*it`Zc8S?A9~cv84haG$+8^YBBV|0YMU}330$6EYxjcmX
z*1ZbcD6p@H#R7|_L%Cr!PBU)_xAUdvr_PmE&jXs;Qm2wFSPDXr;9d-(N*Xv;Iubml
zY|2z8*@BIYiB4uGbg9)O1ti+!G8=(OeWTv*bg%l=vizs<MpN4|uj1(O*_&I_{Y@8_
z=l<#GU%{H7Kb`Qu^LyO6g*-0P?D2}_``gtTmhEIM7Xx4z7@m2msB7ELj&Mz6EnXZn
z+HO`KCW_qG*~y5?yeO0M^WeZBBf1_#Xn&hLI-o?dDvHE<${m0QMh_P4LQPU^r(|yk
ztyNxs!lGGPC~vL!*9pBAgzu~FFHLI(VU1G8#bzx*{({)VQH<j(oP)G3tlV1X)gVD_
zUZoSxSwPrD#|VQ)VLMfH91x~>?vXGJ??oMCPh78aSO2*eL1K)|Jf%bDrDRXe*#Q;j
zc8bcX$kQ^!xeaU7xu2~4c3EYi+|$Bl(eM0~Pbre6(W0kq_;HW5k0|RRWPU6dJR!wm
z<#WoUtU}s`zZ3_9t$jij$Dz^U@=83rYvp6A7~IWn`IyaXDdQ?#Je5DhKZK67WF=mW
zTDCYw+9kk0b8<azKGTz)|5+^Eae|9<@=RH<7qPRvPKqS|@d@|#4EjpS&5G?k3Yu7^
z=#j-H3AnW5S)?0^+)Pv3N|HE-8-R@k8KGa&U^i;rBgH>~YOaN>Mbn&6^3~W(U)A>n
z^Kho%Ad~5>ER;&35t2_UV{|b;h3>>LSB-!!rf@X)q|TL{nFo$=Gfn6dhIzES7#K(L
z`e2<{bK5T=T^jyPSeQn=?41pe`1C~xPoGV@$8JlbDvI(?w8`MrVVC9=#)GU1uH=T!
zNoC+e#atSB3U=98yp}Nc_9D*lY%wmwn`i>hK1rQd&}}T5CdCP6HN^V{I^tZ_`_jWk
z4WRiRoeNxJkN|3X29k}w7!bVdNORSOUfU50Zo1=h>UERlPf|x^{i`@}u8uIW2bGiY
zMP|>OAyb()=Pk6;Xlxibo?@%Ok7C~)H;vM|ipwj7_n$)|<x1>ijQq)wRF5(x1Ka(T
zErv{BU^1OYorU?LT@S;fF_;*gGd3UNiJ`7%097}>HP)c0f;*?Z41UM-@(lGRc<(WW
z1`c90xrVQe6@rm2M5=}y<+(OKgxyx$Jo0m5ImT9-8aCJHS1C|&)0+gux9L}*E7Df|
zH;o2E$3u~KB}~5E*dIyKJkIj+^J?*R8=@70{#TilW$0x3!ZwuLEi%1?1N%P+4#A4y
z<XcMp(EiekmY}S0z(Is)hf`IT_rUlALNMyzqS27s15`1)>KV!iRh1Z@&}#rAH-kz{
zJnJT|L2+HVC^KIk4T#%s5aJ1Z1k+5JY1fU7D`*eeiA322aQ#7@BPxp6v~~Ju&ECbS
z%N?M<N{W0ToBIP7&UfI1^9@QqL?lWe+dI6TD_4eB@tB%aMaLm>JC7l%lPFI=;gDL%
znE!ft>-%4hZ%se6i?L*AUD)<M_Q^CMC9rr^YvuUdQ_3*s&Qw3(I68D=A+V~?Ddcdd
zUL;IKPg|dtCCl-E70_PSD2}SCy3#eWg#XQ^GNc+-UO^9><=kzncmlu-Lfvjh89Qd*
zGT}ZjWMGr^$vIiAajNquPUAYalb@SIS|G8vRMd1iJab)|@I*$rD9X9rFFrY%0{`3E
zF_uShS;a}Ui9~o@o<fownzR}up(H(aw*%e(;Pc-;QnKVV`i9Ji*|_2)i=2$Zv{XS|
z2q2DjINLPrFok++mZ6^461LMeo?ViZH!-mH=@VOG9j<AOH3Rp#`OsK06zRQa$NvI4
zxhpg+;ziR(yM8GHahhFNp$lgChhEVGAHaQg7Fh$NIrxDG#0pW|<HT*wVWj>n+JO+q
zfU-)dH3R$6y-~ihijwT{F7>Yd*%s4?>_0SI3!p$~gX0&=KO*os2c*4#TE$6L73Bs(
zxg%<yS8<(3b%>*V9|U$+Cx0_Llu2gu%yh{aL;|T)0Mq;4ESv`{mhjvwf`cc8m8AXH
zo1M(lIEm87jX-YgU|r98Lf<r|;o?-)PeY?!Vc5YshK4mcaIK&)L>kE6(n_;Ddt71h
z)_X_symRvrQaeJbEb@TRQ2JnilCLOqb+A%_>T5`>3XOAzu&XM(f6}QwhAlI6rvP%y
zb5FTB@%Gqrqazi(y$(^FBt;x<+xwsG4Y2byyYueEC5F}nBvLaMEY>kQh~UgyHM>c}
zm`LWBoeQ;>l4mp{-2qFosHltN$G6f}((a`!jGZBvD@m>>u$>Rd<wY$U(4pOAH-sYq
zUxw2rZ7CXE9j;+969=Z`<;Z$B6N7apR_mdR%O->dnPiMkOsQF4+v3hdJR!7}Drt_C
z7EglvR>ON|J;z-?>%Aq|Fa8g!r{Ex^k+vtstH~Jds;{r#_lp6uz203~Ct3RN7Tc~{
zC6lz&&`qV6$w@Fi`6+&Mu{YlR2tW?TX-zmsh6#*E9bgOi3gsiIc*6z7<|fLjgr(c;
za~;z(F0v&3Jd#j|8vV8XXwSbKe+EnAb4YjG8(=#BkN^7LzWw*|e}4I2uRHNKjgl(6
zhQU5~U+atGS}c}^gN9;FYTmk604|)_0_jp&c|h)t>FA~A=tw1#OkI7YK-!G9Fz;ON
z*5^b?Y4U=0DG%$lO)wlT47vsXLRA1|R?toZ%S@j(GUVT|?*NIL){`8z+z2MSeKSg=
zn~lqT0+pLxc4AbQWgKTe{tOC>hz;QZ)Q6(}0(qHy+e<LYJgU<2^OCo<cG@;>)!N}^
zJxv@E0A{8}SO^@F{1}m=ps_+BQ6$^b{3;L6J^V5ry=E%`>ymJDK%g)E-rP`~=Xq6K
z$^8uz<Z9Rgl#H+(PMp4~f49N+B~`~1*0)(j7LW$J;AmDmD>YwV>si!AT9(ead?6TO
zD-AHK7KC-=EaZs1IfWbWfA`Iqh;_r*u7CTS@p_Th?NGQE=CAv^rgdKAc^sK9`{!nS
z`}n0lp1Tm)>MuPXkB$!B^~f1rznLVD<6Ceuosz%`!%g|IJbWwNWRu%CSO8A)c@6m?
zddUseFEYv__rA9UR5(B2K8gPt;RWK%zs=$pjwT?IGfx9A!4u##(@2I1T1_pN`GE6Z
zyJ{xPrvB6_r|&<^r;o@i1O_T}b9i##Jg%`Dyoh%j08QMmwm^d%K7J6L1?|j_QqqM{
zON3!SP4iVk_lDnnTIY2V6;_q)npd7`Hml5rJ7VdWZ%3y_0IP_f9`mck>4-KtjGI}$
zBMTUx?SmgWO5#Pg(UMX-79}<3?)qKlWmZKu2=j7K7=P}@vHgI6Fb9$L<9r#$x37O3
z=65jsu}<qaNwTz#<GiTivQE~&w~Xr8NkDEMUbMOcXHqzI48)*3qGsZF*$k+3Oi(OY
zmky%93ZgH(zP46HUFXq{!I_7)>5m_m!9$cdNGfa<h)E2aJonHj5_h;!d*yOGz#%1A
z9T1Ws*uneX!<dS^j^i6$3O1}>gaI!}FA5lA?tpw<5PT4mavgMKRlntR6?K%?<t>dI
z<0{B(5N-kU|3=1I->r8wiXuzu%62tQ?aSq(c{~2)qixSk*aEx^PU+OJXsNXa<Zh=|
zj&wP${8aA*$BD>=8$&%r1szYoVjdbm%sLpxr$&7H_(6m45d9f__%*9x<w1giPz=PH
z0ob~x>wVL$Kf&|ccyei+*Wb50mZL$dy915|CbyCGu=m(AjG>O)YOx<GDLWq)qFMsU
zDX|Q+kEc&an2a!FE$tB$H@}8?lzCc5(T^W>UxX4_^P3GTprn%Bf*iP%Aw2go#XrE?
zJ+&NMc4;hGl9t64Ho}5DwIYOK2e#)U-qt4J87iagkfWHaY@!+XOV8<%V^k@dNzgsC
zl;`pWdR>@ln@^QpE0&Z{>~h&abBuHh<3f@N-1$g>6P~Qtv6MhLZQHePNmZX#7O+-e
z;*7UAEl5<pU?>2R7*_D|ZC<1Z2v~Yxg#&2hvGle0K(#z&CG_UzBnKu<SFF7EG>@I8
z^5zgWi^qpT;j2L8x+)-iU0T{4f2+gCG#|KExb23W8NnaN61J^ce|z>!V@l!}`~><T
zO*_MBt0D66+&3@u9w1%gIueLf&pm$x=YXLaRg3zR8~2?hWpop@?S|gND&JCqTi3$|
zLRmX3X1Tp>apt`gVqO-XIb;?LA1%8Caxj`|9Ft#K-FrbTi_4^}uCehqXHN7gbZ&Bj
zirt>6#?aUS`0QW(+-oNQ@&WH84~q;X@K)AL7MFEdXLf6DI)`#71blG*Xe2aBeFy4a
z*j+h`K7mE<;8J*sR*X3@7r8FpoyAp@rMWGz)=zwlmjZyIJ{bC5s2>}5w4klXtCkl+
zsC>Wi)Uqmf_1^pCqdUG`-p@gKPN9*SO`Mm(bRQD<*)W|&3>$3-tVh!<F7r69;~TXf
z{h_C|FA+G7tT7Rq4p>QdhVZm7Wr!A=TQsmpVi*0>(#n(%DPqfW!7`sMq~d29|66xm
zL{2Gn^9%uhR*+?Hjde0~)v*HNsSN9rF~2Ay<jOo_Jbj3tuf$Mi6UP46H24i4MSj`D
zi!v|4st_*}DO+RXBv3jRBo<VW`VH3=KosrhPj;HBcAEJesU|kls@Kl^l(V#0u@D%#
zz;s;f)<DXYlNyv0fS@D;J$mnyD6fBWl@w84y1BSjw{y6DyI#e!iVkWVgMox6ptNxW
zv#KkwARynRS1kg!<5i=GEG~;UFD?498Q#0zu=>_AnIqAD9YP5Ht|W<Kl&t6A$r};F
z7<i)VD3P27_R~~+hEX<raf6qS!G09(mH9ayup%}6f71J!lmCO&>6>q$9sSroD$i>_
z$B@cac7{!^p#MEB9r_iIw987hMK{m5DzY{DUp|`twH=P_`+Ii@m^yg#_;do{Q|{)Y
zO$M3K>K)T`!-*CYqDRYa2{hLy>1b@6cX6FO=&Zcf<+%b&zUpBV9PG>%1xbZl$sc)M
zW<{Dj%)Z($XRn=pSl#G!%TvSk5hvPs7Q;y~eQDUaNM~S(gSnFgW>p<U#ltsyhv4rv
z<BBaV@i-1<0c|PSoN$^RK*V`d(vh<RR77=MRcZQpLj}v5-4;bhrE<~_nnNSC64U`+
z<E@Z?1n_LXEu0noafxY+OS~zVQ8(MP8rpZ6LS?Q|kGLx$?sy*W?3y^Qiah`EAkYeB
zYBSMyPzY_C7doM=j~<n*n0*jHqJZYs01h`Q_Q0aL%Ih-TBF8Q_{mKUvX`bv_U%W%#
zw?Do&KW~0e8C6l}ny~Ug?s=|!Or6CGEdX!6uyDUw{gh&%OR%^Y`Jl_U)laFTI!@BP
zPucaQNa{L{iz56We^cS^UHgy<$f~y}0)Vdd)|;x6G^>7?PsyEQPg|0;%_(TSc9NbF
zzs5`en93ha!;uT|w68y$r)g0XkJFv^mBqK4(e^fVn3eGhXa@+iX~Hl$z!3||5Ld}*
z`=&|cEY6}d`b5g}IxXxvdnCwTMF!E*{cv2_0nlKyHt?LRX&5zRbw)lIJ0Y~p)2x16
zneAo*;CnNDG{>KtFMU`5P2^97y+<D1Rfz~%=E_~gxgu@UVxMa-F-ejlt!{$iu2@e?
z>j04cphQ0sK7TTNAMC_ATZHy}Fw0o!u{5s^f(!@(D^ZR~2UOgx)df+VWO?m|s5WK(
zi8R%Izziz%QB9nYeyiaUa>aiA0_wPooQe0g4#U7&1*TY&x36E!<F49kcYH+n1mL2m
zjJA5_Z8T=1I!UXzv?$r>GJSb(hU2N}yEdc}A!&-rYEe$mjYsd;iHSo4%!IK(i^Hdl
ztiK5T24?|t&~9TxYV$<*)FwUl5};~CkVD=dUYNCTY|dg~g>(jKHmpCWG%l+my0JQ@
zK0MR+dL+)v``vgIMN(z<8&-P@R$*8s%kV|x>j4-7dZ`0B0pNWKffgghg&2dT=3Yab
zqB@Pz+!;}BA8dc}g)_mlWcAJ%*hG4zSdMHxinJ;chjOjY4=U>FZ5*||_jS4q2Z|+w
zxamqm5iiOOrW09;3nH^C2Qn)D79uV<-;WeGkA~Pxg+TN6-8(B2RD)vJ$PxowyF<H4
z45jQk3yc#HP-5)CAWVoqpluPdnqZyS*h0$ypeOi8YoUA@h*HlzVG?Q*iOzrn)l8$f
zEPB=eBAoOu^Aeo=5>#0Y*E8IrLPT{^mSvW&r0*+Yx$@y|!j#}Ni6rXZ51gRa$$2_U
z5SBR(YJZX#2Tz(?5t_@OrL4(aaOE*k4}X1qw<U31e4k6`LT~ZvsGT*}rUnBV_Pjhf
zJ&vJ0@yb?`gD87C5o%eNa-;(a?KKGG_`qk!0MiP>X$osl@tynxuNb?}^}+c<ixg0r
z+fw1UPUE`DKTp%qo@`d5XA_kAQ$QJJP7}W?YnOa#o$9qYU^%w!q`gI*MMeF2!$V7a
zYFp~3Q8!({7csQZyPrb`@i;DXJ|Q9hqxD?3R%9B7qs^bC1?SovsFOWMKREfZ6@}-7
ztY2w&`Xwn}dGxM0PLi9BAW7g3Oo!r3eGc^vs{OhX1Csnf1iNYE%q7?GH0H3$=YruQ
zi)kme>*p=kygVtxQz^&LSsmm-hty{r5QV7&X461|fm#hr^&t~-nHI(8sG%O)1VmCX
zbna_o32~BEX*iak`A2V9Dl5O6m-)P`uPajG9+ZP)<zwn9E5otz@5V^>gY^|H5UW_n
zsI|iiZKK$}LDMUG?$wB<Q<}L9Va&^bI0iHiwLdzSBvD;t#lurW506jVW5MSjCf{h_
zE_*wD#zzs<1?Ci|r?P`2Wl@nt@#nE}*5R`)3I(w?m7-0H;`rPvwj_#)-i>c>OsI(S
zBF#PlGYdDtmBt&8V5l?AgYLwFHty_p!DD=*qjGXqURG>#=iZZ|PSR^a#|ACAHiwSV
z49-{6aBv(Q7V$hc>!&clS5mtoNiLjh&@p{@Bp90^5+7|773qgaOtjgl__kmUrK#20
z(KHtcYCR0hdTN=QDumlVl1tk%6Fs};GSxsWVTTD*Xgmy++wo!b;0~@&r{Bfev3!cp
zVUdP#5GA1!3I5M240)-!<x(iKD6Y!e3J~~`Em2f_Z(+a3YQW$GDwgo1+C)sSC0@2x
zx6c=wCvkGEYhudik<B{WGc5w0Iau*<ma_yfS!n|sEgcE1^J92LE1;vFFCvn#7HS{U
zSt~NQU+T0sFV08A4HHsi<DMeT`I~2r9XVBUwE*%Hi(H1&X}n2ZB?0vXKU_NMDoxzU
zbVDRmsB??cE(D^`nrK8cK%}wYmzvY4StTK*Nm*7&ncY$<-g(4q_mThP#tcoVH=3jw
zJDm)E-K=JiCuI?rpU86E=uB)5MOom7!5~bL5LRM=+Ea%Lv%B{fRaKr|DL4Nd(#aM*
zvc0iUZ*RK1g1F2xhpWB5eZW&`jz4$rVOz$Ytj<ZDD>GmKGZ%fb1JLGhS?6cwNnB)g
z{eALci@agGvNSJIB3i?ZBfBeu4UT5u#y`Sf8W+v7tiQW_!Cu;&=4qTh?&Eeh?yyN^
zxNliq71PMlI8Sa8{+*V(c05EuQrwWgA@1g2#ik|j_y9Tw7mcz&LPEbZX1g#L_f;GS
zDI<g|>-gLUUi6MXDjg}OK4~$6aXN1dSfpv5R7K_8=eJ@FAD8@J><8ho0LMR)%>a<a
zKO&8mflM~CGWZ5g-{1!VYCVihJf#MLdu%!w>>4umB$dt+A;Ilv-5ihHUg1uiNeAcr
zqCs#1wZywYH1I@~Q|mHm%mAop`b$jBMcC5L100<(w)eS3aRT1I?J%_LmXAxL>(x(#
z9*OR)qs<B|04H4-qCcr}L)TMlit%QOAxB!StZqP)QRoS|+6hV1tSquLxg|<ITt%}z
zIna6s8jQf12qSUC{wSdcRD0ex8-ci&R}XXIZgQ}^(z`|_2TewIuDZzbC@CLCO7}UM
z>(d&}iUFt*U&T8VHW8(rdk;U3v#NaDvgg)ycD4JUi90pBtayYlr7f0)m?y?QoWz~R
zCwDLheFkG+Kq_X4r&1;ErO}V8{XR{4-082=oOtm9g0lP|F&=D+&!dHtfrgD(i_u$P
zvd0|Lcw&%Db?v5W=?E~TjXqTJ_w~>7r5j|D8P7v0<4DL30~rNf7?zOq2BI{1(a}M{
zxsmza)&^yBLh9!Py*~AQuw`c8A-R)tR7Dci#Z5WK)pVDLz#p7r7;qx&>CVrF-7#^f
z1UUt8(9RF@t$SUK=T(tLr4w$sdP(N!L6*qn$TC1U!-k=negC|gTyqk)Omz)_+FBPZ
z3tJnT3tR-SlEL$1jyMM$3~L+vU<hha90k@gp)5wT)L9w^skUpbXg$dQ0mv<o=A`qx
z!2za$r#;@fSDyC&W__m{Ifm(GCom;{kxp5d(c#wS8$LRKk*fiSP6oU}Tn?{BW~o?5
zVy-uu7jsRGsg_ZOa&@hgQCdX#9w7unrzd2eT27oT%7|<bGve1Zyh5IPAfHKo0~y%b
zq`1?T;DSna@y43Z@+`Ae=OzQLHL`59x)~T{tWMS2K_Yzp3(G9c>uU^M18Ep#BYY(I
zEgOpz7YB?1U^j2$3hFE>EK<0fsTHaKFzme!q-+B9Lp@=0<A6Rl!0}N{Fq)<2R%c_3
zYgP(ibsv$nV7g0YC7I0QU{9CnqYZR78J!kJ%6x?fDyb$m>Xc*PIOoV*>u6@)P4xe8
z>yWjtdl3gtd?uXYm8KR<70qYVTs0ot*{jZ@yu5Y5b8;fzhUSMmn%Rx>3z*Y)K^|S#
z0W$c@2`LK5U<37fM2qD9@UAfHXCxJW+*x9^XAC4;K_N=2;+BG7SB!7F9ECE)J3aeJ
z1%&s94h@#IFF=b9P7lej=1)5yKtuzOucTWeO)9Qar5HzvVULn(1vhf@8fVFD8~&^H
z9)atC6~&img<r+*xwVU=Z<HSP+%t^Hx<EUvvLvnZG^!s4G4~;_EfFbd?CNf{b`R7>
zHeDvB(=Hs+j7Nq!=oac?yL|g9sgflB@g-lln4J-#iLwLxnxQ2yrr{Eiz|w*KJpUNZ
zhMGfCGgs4Fe4=S*yC@a=Y%lXeqc3zoDCR`Nh$@gAgd6k*WE)ec!im{!$__XHWJ`rD
z?ww_s=Vet@zeWf5+<bg#KHBkkzI=QMbe)3w<cVnd7!WZBb1ku#owb#fRh<?^wZRiH
z+0ybi>mrKcaLVY%(L0)Hw9Z#oun1pTP%HP+Tiy`T+eXqn5T2K4z~jJ!0B;8(aJHis
z(fmlML52EM{?|12b|*sXyp<j{EwKW3O+olJPKV%)&KK-qMEgG+ct&dTtgyqfKVAly
zZ^=y6QIZYE57#xk$)&V^krZEUj_JMgayz>58rpyw-FWwL3l{SclThjACYyR9iE1l=
z@dt2ma5<iwH@iZ&d0OU0RzK_;xj(YBB>=>YPJ%Vt(fJ;Cbl+H!@e+e7$4CZ=YC6&q
zc53>psPZ!U@$o9ymjMgRouaV3h#4CaA&6Jba%l~#T&X%z+dv0fQ*CI3L;N3)@L#M|
zzfMYtr{vwYui==PQ%~3cGEzXwEbVzk>gn2Ain1~*^3MYS11X^^1PKaXhDyMw8Y>l0
z&NdgPJ+Tf&GX!xOCKhU`y>}2sMU)p&v2kSlwf*?`<@nK@FKZK+c~q2ToW|=DnD;-#
zz16v{Kxg8QiC+B7K-UzaVAl(Tf~_ukX6T}V-7%RQV^zKYL3&|M!p=dQmQ|94R5%?e
zy6*m+mQ`Mqq2>0{LwqrqwEUzhPV+LfyIy?Kf@-<)L3tKc;k@p5rw4aZ60V>XNFDy5
zL3#+NhbK&<Y@2}RfzTOHVL#0Ta5y7SH)gj5hkStKo)<aXBi2WGTu1T4IscuH?V6bI
z#UVJ7*K{X>DcQvu6I1&rk>minEt9lb442@HJaR^YjhH6qN~VNp-|c14XcDl|08B=_
zfV4y#J~^qE2tCee1e{X{)sy41!c`9AfhXYrA$2NW?IgIpEfG;x2Ph4D?>0_~Dh_k*
z``_(;Gi<X@3GmZ|!U~FCVhty09$|yma*QY~%d5=J+wSDnqwvZED1jeH%!U>c)aDSo
zZ*W_Vt2|9UQE4P-?5!V5*i&t$5&vMe(Dkd2>MTvt^v7qn3-#N-HvJs;n~(D_eq8!5
zs|lY_sA;4`Re|@ApE}FaI)3;*?hJY#zcl^vH1!+PZ*x>f*{(TK7)%GFm7!M1DdF-9
zqB)VI)80bN(lU>;hZo|0p|W8kq7)3ylYQE5z?kmD6}3sWk0Lp5Y&8I81ojZwc0Q3K
z%{OrwB7s>nUxR{ZfDVQvWfLd@18#}P2NOf6I1pydT+H*UQQ5tnoHmP-ynbBL;?9+K
zbvrRrA80NRnMq3+N<=8yO@%MG{QQJW+Zg&CW<5gciiei~bXJ`beJBQ0`i5CVl-9l+
z<i(Q7#D}n*p#U=`X!K^F=+kit((;_Y;NWPlXE&H-u3gY`P8sCPmX^1rYXNS8>r9Fo
zII;0|^@ES|dgC9F0e`^~VXawJg%*o~n^3|uEz2VLJYr&SkX$(tp@-G*oQL!k4Bc|D
z0)<u$rFk(f=o2ecBFlqBcyTwsU{`%FsHI6<l-JOgKL^q~E0&*jo)M+gM9Fj*NhvTi
zep_BhI$w-!Yp(N!^zJwcDz9H>HC~{l@uC9NOYZL3pAT%6BgBt^FmStl*RMROiX?M`
z6RXFTm06tV;BxE$SPcO?#Nv<b*)=}=#KeeBSgsI2qA4i5v0`HTt_rl!EQPd;{OW8I
zk-rhu8{tD_5#p}pNs4&^8bUt;Lr50D;R3a|CZ$=tCo^6>M?z~@G9b7My)AytSom+O
zojA_Q^1IrGH^YSHcnyU~u(d&D7gz{{0T4s>z_ed}96P{6l$B`_KOC`kyGz&F8urkF
zRm#Db&m7to*Y2Z;)4VRPv<?6K_uaaP+-TZ&U%!q)MrS#4P8X0AOnE$%scDVzztdrK
zRhOl=*BFKmoWFE7sVuU_l6GW98>Is+*SdmlVr~YA9?QYN56~Q!kya5$lAv%0<8|Ny
z!Cqt{prl%S+dv04U64S7lwYDG8CPe-vLcD9%-Mil&65Vw(B&#!gw|O-T#q#X8fe(U
zyiuGE7d+lJW+*+yz(#>Z1c{Xs!2-%~WH@Dqo}i)&p2beG-j5{W($LffiPeCMTaq6;
z3C#PP2#lnMO?_#2$2_}^+$F%ji4EQiG6Tx-x`mEC_-(xVZD=R^a9`rRt-rUpF0<N_
z_1o!7+qWC}i8150Eg|Y+*~>Uu@nDa^!3&1yp_7`NwFrp}lECxj<VX&VrvfO`0jC}?
zZz8g+UKYL%0Y~QVv>&nYM5;Q?-S~n-$IT*cPlhTRpp1<%Du>nXXd&Dj8b+(6&d>IB
zonAG+tSC=!I?e7ZYNq8-iYO%^$I9_kFTGRArskz3tpIpu)F=>cbSS%483Dt$ktPT(
zBu0f~rj{v+JCI$L*J+&HB=~ks)Ji8E+>s(fkAa7|9bYDqtrmIMhELL+j?8hhIkMZw
zLMcTJ`JPET@OVI;X6VAKP~)2%S7yt~j)MbFGe!=6bU0DBbA^RQHM(sD&)0Myehf0y
zE>0P!d3j=Gh4axq0;2^^k{ag0QB#Z$A)#-t2C+CRk~m5p)58vGv}SmFZ+|(y%v;|>
zOlFZI&dq1C#5!2myzm19Ec@%|A}8G{U-6Rc7LBy)UoxQylXu|z2NQk7VIW=!o%(P}
z;9M0a4w#6W<kkEU7}xw&z(SVyMm=w;4rprx%jB(leIi=9u%F2wYNzU~k|NF0hk0ao
z&j@bC_zx#N&z%P4p6-O8y3W%o1V^{W=vRKfjLY)6fUehgT=|Hq$f8iu<zKsxV3zLM
zFW2S1O7chh(!Rbn$B(J|m-UaS<FpDJl>Qoam6qpE$(PzR{!`WjS64r%ti#T$f2zyM
zXMuc2Q4&XSs3$yM&ktO%>*w_<Bc41|cn*cq;K`a5UQRYPFZ79?d!I)K{svww-kghj
zNNtss*+SUp{)cpfFV$w;7WjhF<9$QAxGc-8NFQ$bZN6GQFl_hl3S({#;gjOLQosVX
z!=`&eITuPcXV#$Sk7tZmV>#JjG9ENT5lN~}_MTLdl<9Rp?c1Kz9x-Hh+<kcRwjp4d
zW~4X5xek!{Z{~A(nja{g<a?k+8rOA}ZfVbZOPu8|Cs~qI8?2A}AK9&4*exMoPF@5^
zKer>TDC=~E+5j*rqi}}gni>g)@j$g8HigjV=ta&<D{)Ox>1Z-kAb?uRq}qoub)ki-
z*py0=m`tIo4OCY++)J1x&U`U+N)rh*tHE4L)00B8mXr3o=#rroqSrtM4v5waG{%2?
z?$NDHT&yg@J11{*k|c(S-XR=m5mY&RQ_daMx4Zi>%d#qssw<;`w=J%<{n(zJw8GXz
z(+AfEAlEEiMM5>q>oBnh>jzvM>kUjhufPCFK;1GeEoVQ3#Tb$gWmQ4j38Uy+_j*KR
zf@k9ApGO8Lye=>tg6A)l3#&Dm1hHLIWQb&7A7&@{&EqU9s?QVVT=V?7W=L#s_<0qJ
zEh*_xTTOGM3>bMa-g&5Lz|(9v!5qjA1K>kq_H<Y=YH90j*b{I*IsUSmbgR}8R=Eff
zVgpm!7YD?O%m>pLG8SQcIY=HLWq^4<A875+SP5J$%o2lIBo@oSE5})3n6FTE2bN@l
z-dlU3W>|B2YEDnB3XDNts^K%-=+{9p2a9npX({roNW%ikR2<F~Z{@eED#=0>$s3D>
zBCoTg*p;9RjL?=JQ>0b7dJR8tD`*6=?T%|Oke>t7Nnj%}r|tzu9++?JlsMtZG!KWJ
z(1Syd#q`j?w~UcPpX2ak>@WzDF{S^-juq<EAwmK~%LC~IU6qb$pplvocc5iiooptx
zGuKaVPo$xa#_g3*Ye*eH##VoxH!gh>d@`{`5b<M(0fis1Kh{j+;kk!<;M7G^1L;lf
z2|Gr4lvZH|_XAhgTA;nwN<#t!#8VZrd_lXhoz%NXqarTuxRq1)(Y}uV#25Sf@Gt(&
z-+y;*&oAxA{6TAK76DE7fB*h>e`)@9`RK;>^iMCp;1~Y>cW-TT!UKld#afv5jVU-L
zV56G8X)_*w_x;!FZ6SRzwRfejHoef6U-QWIEFhi*Ti0E&@&ooR_JL~(ra!`}Dl}Jj
zq%+rr-MdCM2Cy&Rj%^T6fGHu6E7DPTc;Nnmq%<6Mp+)i2NB7$P?)M=pe(#<hxUMzH
zi~CmS17E%dj0M7I22^@{+qdIVFbuP46vxNl{m5%x9@f9g?pf?;JCVHiy?BVx_|#f0
z{Yb1?>A0I$>Zefx#I{jw@x5Dk<N_DAd|vP|6yW^0ymbBX%jMku%kE`Sfij0}r8<b-
z5Of~C|H3_bqD1h$i+bQI-{ws6_%`(;1hIv?oqe5qmw~!RbAHNW@0dht=K0pW@`NZG
zPd&0VS0bIu`u8sQfv;X{Pyg;#0-HPE7FYh6mpYAa$8$ra*u7s&W6lBo0r@&Ph)oY=
zQY%l&so>snfxdHSVUi2!0@%`r0l^0@+C9=cf|?dhY}nS4lhgwjV}h@%yZ0_;ezO2H
zaq4U|7R2<Ms~;I+eB??)Ze38S>|L-eAaw#`L~9cBkJ1!3UT&bC^!-;JoMXge*}LFJ
zzR;amb|xqs)ZDuWZz5z%AoIvf&5r%%A9dwnmhaPp#(It1x9wGSmPJKO3kEpD58T5t
zgShYF9{6hSnR{0q^uV_UV3{)CKk++PBEN~NdtXcvzVF>A`Tj+`2@Gd=-u#a(1+U`t
z(Y?MkAE)DM^Rb^`5a<uXzo6Bipx7C8xPnOw$A1Hr!|%WHWd*T(;06`gyBEgF4NYEE
zqK5YL$fYhu#_w1NCcY^n(`qM!d*A~Xw|I^|!riq+dHx9(t{VJL#11EMfggYf1x0s2
zd)d3r2fo-=Q$Yc^_pJ!j$W!?$zJLbQ<H>N}xx<yna+?pOQ~vFGKcJ8UWitBPL#FXP
zY!s|u2BJz%0ICIK8~B+=3Z=#Vx~HuBk>7iF`SHM)FAP~0@$VDA+z;_AwG)0dKrTQj
zO|h^Hx<1LhtCTkN7f+_Rf)STFQWhS#n>BdRn%C}K<^x~72eI#cwG8$3+|+vDVglG^
zacuz@-Pk<a8w~GV_5&9gkmNjL$(7JS`uXeaj^LVXZnxYI&LsKH0~I=xVvvD036>)X
zoXLr8o5?v-w7xD6WmgM6TR0eeJD^QaCmpm8LO;G1ytl4>;ENY1r=9fm6z%&qi<yq~
z>>Q+Iu<^c1ay@k?)KYoiW`bRIPko|fGHsNCv(^LGvjWO~K3oz)`geAb5XnRtj;CPs
z0(-PSqH*H0$Ghr=2fo#3B69xkeIt&$+S#*~r{NxJoiENRUt#ZE*8|@i9GZ9MqKuPT
z8-^e8BoOKe)D7H`efOn4a8--O_3iLBjLVzJM}!kEbnbn^(g~8=_T0Vyay+-cAk?@}
zw6mdo?_M6b%<u{N^LOuyEzwFF7ZRTlIlw_UK|UUOs0Lg9l~U;yAnLwz_JQv<1<-x(
z#c|YWN=3&Zbk!Ro0x^@pwf~V<6k?F~JuFa#rB!nwkq<+MMrpnWuFeA{zhWA<GD3dm
zxxdtwP{ue296WG!%wN54l|Ar<{-6)gk5ByGAOXE6hA`}fZ5*b=J(Ohm)p%!(PG)%*
z?{G`>GEx^(2$H2A9=O`z(EpVVs0A|iYvvchnSDFUg?l?p^0&%zk6e#Kc<&4#JkoC0
zi<>Oco;o$uSyAE%%pJb}vVHP+Z`9SPB26)Hg&PE#hSzY!%0$T@aoGw@S!0RYLG%YM
zAt(dZ+K?UxTHqxiCGZn3_Bz>aab<U5whvsEduze8hXqsa%Tyk?pq1xj&%?cM26zs~
z2xV%^PGUStDA>Sjar52|zoCVb8Fo{-G9`IF(kNOIAG{IHqGzx&Zs6DC-YrqL;3DW4
z&k|!3m-?lz561W_RPDVBeB^5bN9a5GP8g6yVFhz|n(+JniwYT^K6_id;9oP=Ef!z!
z02db*^bPLB<R7@y5K_OZ&HcdldK%K*`RxPWyl5ia*P~&P7oNf}Q?qP$4cr*iczPs+
z`7+1@!+Tfxz}GI0;$Q9P3x}hdaeQlkKF(R^<%YC+?VD*1&Hk@{^LHLR`==k5p6JZl
zmQt-uNsoc#)x27GWRctjtg<)~LP&IvruA&Uji4L+F)Bm%#@*AbNUJ#h{qO$r-hBDu
zo~D_K<G(O-alijvGmg#c+qvz>?NPa#ANr$%N33D8ILn;|NY}FmFAQTdr5_rXD8_^%
zqzxEdcr`BKU2_8yjTfvV9yZ0Gu+~UGu58_DG21Rhl%dCoDS>sS2l>jq@%Ji9%P9HH
zU*qEk@eSj|Z{zsW@NfS3$MNTG9NUlM>*f5%IYP7_=gTm@ef{GwHsdt>vCh&suA?GJ
z(=5%?EUI<}LbEC_k~F*TDc+`p*Y%{9ip8`#p@}poIEFb8(}H*b^+YB9o_qXIQafw8
zCvgA~4IUz%*ENqv!z{HPRbZA(_`{k+T$0sk5|_#U_rHJeTDgJu!ej4_rC=WFPXj8b
zs2J;!jZ9zyT25x>O_G{uGpTR@t9lzh;;Zw|QBsxhoonP1cG`7LH9fdZ;a_yzXusiq
zhp8X=Z%{UU=ONT_kyd&6n?HmfbZTsRy4@UU(mGC(EUn`>FRHk#lbuLY)@cfsIKS}&
z+{4%D0d2{5t5mc0iWaJx;7Akn{6?|k5jFYN4qq9oQ*wb|RMHH1h_ofZ2YaawyqGBd
z?HBDQjM>p^+VD8Bpbw-vtU9X`GDm;ffI3TidTQ)>q;$w5QJBRkQ(nHEO1qpuWK-pc
z;RF&b+T(MtEDY2yBBh{tOYQki#8qD8(VcngpErabtuXsQPKn^KV05awQ+qzLfvU0o
zp=ACjx;xmKL{z-%K@I2VRK^MO2gg&Y6X9Xu`3$<I2Czo`5nlaH5|t_i_L)XoR|1#d
zR0Gq9`E-MWa{hcO5v21zbZXPHe8zPeMTK?Y-&kM^G#x%S@P|HNrqLLIaY~}e%#zP&
zn-AmZ9)uKLc2F-Fb#h!+2N7h`<%QofzY3Nr<6mpP0S>2HDK<GX&Ms`QWo}AUUhxJf
zn!y!=bdwInymha}4TBxcjhurK!e4z8RgvXcW!}U}l<>04Aj@}dM_#fREOBmR^&9HA
zimY_^n&g6fg8+C|u9$>f?c6GU`NrzXvnaaxo<vcX1+KY7(>$(!vKIU*eU8e@FnP3o
z9dTKww_XRQ1V8`$^YNF<G)^xqqy;}W<Llf1{kQ+?AO7+DAOHQ^`#-$>mw&slr;03(
zZ~ZpB^yWneNRV_+wu>l}engER*+3Y2=ST({b6saWv_!!$%|R@133P$5IcmRBU8&eV
znHPbGk*q(2BrVb(UQzr&a`v7kDpwYU8G{nwJLgs&$8nV8_nljxkc4~!F3q}zL4#l^
zG)hGnl)D(5jL04MG=caif@Caf*PZ4}k#(yi&FFe6;8;j=Prs_l>LknR-~0vaK)UoW
zLk_S75%CagCbob_fl$g9tg_iKv}D{0=Q0EfAOX+6+6~=PNEzCBhH+MuF$m@TAN34x
z7)YY0dd2p&2lW8s-G_M^Jf^@J|M1+e$l{U|2*{DyGyOVxm(@ug{pQbecX)w?FWt`>
z(MviFh!(<9bi7x|VXqz4dyPaS=WQHh5|kzFJ-W2c>oooCfzSO`i6GSW@9onQ6F+vx
zz+}cMM3Cz{CZw8X?fHxrRgstZZ~u@UU0-U+z|UmRqXSazxoWefQkX5-K|V?&xj{F8
z5-pUf)Qo1!8<XV>#CXNz#}sEW_R{s%vl%!Sc0Fr5fO9rE*I2@FE*;1-d!+I@D4>qd
zJuM02zRs7Z$^ck`k}tkZPpH`;$E66y?dc?DQ5t~({%^c|epquM_#m6rft)!krS2r}
zs?}AYrngdG9G-iI*=f|h9Z53^0haD$R=@#qejr_<|Fosn!K}^=ddG2<C1q9o_IczF
zLSV1-?fzuHg3Qu!pb!!nE{ygMiX_g{JI`1JjKVw7>vR4~gSx-*e{GHs^3)OP#N96L
zWj(ec$w3&pf9TZJOrz{#(tKu20cR(sbuY~<iju0%et5ZcM+0Z&Ck^OE7H*9oE_+FQ
zS=Uwce*k=bQxnGjkUj6=wGX312kmmwqyM0eLY;!(!|}PFPdot!0Ov!bX95duup`~;
zMPy}~6n6kvK&QX%j8Ax&-<!=}@%@+|E_Pl;V!gEw@9F7ZiJ;cbl1r+(in8Cn=K1j$
z$Cc-2W0y{A@gFc9eHH6fOSC@vbB%+WWN-qTs|?CyPgw%>=3^2?<v3SCa1Y8?8CnqJ
zYZ{MC=D3^~>>dy!H_pZfE6a`R197X%z=(vePX>h9IA;@~X?2Plk7_w>$r~u;*6^<$
z^`hY<Gnpy5ih>5dd=%XKK@6AGL6}lJ@Be&t{gzdlB)@(4>$_Rjv|85<tj+s`GZr7C
zQQf(CsulN6c%4n?zdy&%qc&m?Ko{S50MD)OYWv~MrVj=vh2#WY+Z?31u}N0VnCI&<
z!R^uP;Vw~C*Z)6x@7Ciu)?|zQmDH;N6TDv@4o=%JU;{p%?HTw2%;XC*MR#!~lj=^A
z-PQB!4aPkvN~Ef!7BN1U^L160QliMcV@Ir5u~re^$UQJ#;}=U$+5oU5@y|=RZ4_2X
z9yx!{D^G)*M0jgzCxZJQ%I?Ol33mTbNup~Bc(LfgqJd#pWnq>_cTa9M7xY(%e#Rz}
z)>$(cL8li$_M7jn6Xb?cw7UgR3i%mBOaU8Yz0a(!_1Zxnq^8niOD&P*QIYQAX#2^~
zF#DBxKWr-Mh>y><2Vic4TtI+Fsr@P|R3|5~YdFObeW()swZp>U89Y$%Nt=*wdyDXS
z-KjfZvzT%de71xDp}j8yiZmwS@<1>KZP*V}K#jqeQ+rJ@HeVsb?V2nErZCrl(=}ST
zD8N8|FbEpdETL*_DtKiR=11@ZMq%t;383=Y&3fb{HvqVX;|7rF#Xz@x9Ol^T+LE3k
zLsC6|Nng{Tyc$Ar`@(5~sui?AJeOmNA%=9$%NpW%jUHNVkUMy>Z3EO&=dK^z@9Dk=
z=-Z{(6FeFWK!Y97ceRQ>J8G~~t~Bqd^QJivDZzTqxn&F3`?No)o`JidtXavy@TjMa
z7dWN8{>9p{b5a%1t${uX?0v~ft-VG-O2T9%Hdxe+X#G$_U|u_)k@Wc^{hqQESCX|T
zj>0I~!}7fc6@Ffb*hO9&*<*0yrEtOz%_K<_VL)2wI;lO&!>lTw4_L0)Eby@<KU?HG
z^n*7F>KTgm87;14?x*6$tAiJW2WIx_fG^bp*nCMfhiD`nAxv=M1Hl6BigW84hft*T
z*vS5cU|uMD)|{udQf$<kA1)8DQR=?&1#AE^(lQUjXa^+t>jUr#i7mP&|6+feAKloA
z`M(BBa)=zs<9iJ;4)ZigvmY)VE?uv3|70W2(q6Q+1_L%TX<=%1FVgO8yO&MN!y*c!
zGQ4}vzb1!x&2ebGwamGp=k>#GVVf~LSf;;orbHctj!L2yj3{V)=zD-kEi?^atYwrU
z3#=dm%D`GA|7(v37#1U%1`%2AT|SIYZmnhEk*u9rahXN=4(PR43`bVTpK^cDc+q&Y
zw`)gE6eV$(-Wq$>`KTjzC8ssP^|L9dsUZj$R`60EiN*!R!SuIja~%)VOK_GELc?ih
zQ)ZayK_KQuSc@4fe|Eq*V-MFxE63z{2U^kI3)ew}=4?N_c0>g|^0#DDT*|+AU}G^J
zL`fWFX>!rn{hYnGO6X6kqzKEf%Hpz2;xNoEd~TjQ(&VMj#qBA1cAyjac!OYOg*{Q5
zfgYH~MP8bR7v^>vhEHJcFZIUw+~g{DiZIB&01V+<`>tU+5Xym(#j8!;%K5S9G0Rjt
z^8BHjp?{ZE3MV(Xqic4IFP0jTvkk2wh_HJ!%IwQeK8^Ay3O76fyw8}-sJVCZIm==k
z!H1$MRAJ1{fO`mx`33<ii5do~n*QC=+new5alEHs=bn^fd0}B!X;PJUKj`iOZeaoC
z7*O0AZzv^^iBy=#!Zps6bcW-bTH5Sb;<ZQnNbp&)ySU*E$!Ht4J|&cx`#!hf2T%qk
z;ihABOVX4kVG*V2jbZ%(huQ}74tiqqY5GM}mQx7aW;A~@1qPfNL=dNLG#0P5*V8Ew
z#^sIK<pXZiPvzc?wPDs{%}5+WZboa{rg3E6S|3GIt7H3QEnu-k^9=(H@l!N_;8F()
zNWcN^&2HMGcaINnIa>@_+DAwXo#GcwmxB{J%{b#vY(&RwkvE$y*KnaoMi|f!{6;m$
z2c{wDde6`|Q<bQW*Aq|x7cgu(5`aXw%c-BfG0&)6OF+{iii>h@q<~u`P*+F;%^>Y5
zY1iPoBI-oIsT8(NH*DQB%Ch`cX3PWb+x<J+?w3qg8;H{AGF`)I<u{L;w5CxwA`8HA
zw8E#T!aU5g=c7-LqxfG0^lUc3NOO1U4%FY%k(@ucS5ObG5uk(FHW}4FDW7p|Raa4&
zSK;#yq=zW8t!HO&nkZdNsse);a@IW;rWo0N)(m+`5^jcqFwD5To_m|$VRunpF$9_;
zQw5|<Hu%Wt?D*nfFBrMbZ9$J}bdyZ5g;hKOyZ4<-=1)k=_?;c$5h(HS(m^_`?tAd9
zVM046t9+K}Le{3j^d*)Wxy`5Vy3j57T~ygWLB&B>26C@x(rZcy+Hnnj$)YF=vmMM3
zJaD@C+CU;fTyDY*(l+}OXm@r2!wLkqL5;^PU*0hMq;a9SIwCNtZuBsj6C#P3%1JnX
zcG)`wry#KQ+DXDD4<7;~eh%t;@P$dyEN#^_dS4aAS@ryZr_JR5Gl_GP{Rkv!2b_2d
z(=anx(Hz`sdcs;v`+`k-KM_YW;)4eYfQFp~uVNP<dRS9#MFaKvjD38;AgPQ30~T~b
zAz~SmBNGS6ONYqL1UxXJLv4FZlAD3>IurP`gyHUF{RSvIfjqN#FX^`y*N9B_Oud^T
zscqrX;vF5X2h^#x7?qS+vir8?4Q}6(51qZAu32eRL+=j352Kbbetgu-f70xRmqy<l
zU&gh@SCWQBkrmHJDemgvMECaMtj3gKoT1B>PdO@ZiR}=x`<f#}*ueCgVf#6H1&bm%
zT~cEe3EPuW3;Z($qWVZg3Z@pdlGKiaCKuDe!_!C9|0G&JU6lD^ol;;a&Ycto2()iz
z#2^^Goo*BW8Nq8eB~v7rf+P_D@qjWmElvXBK(k_HFQ;XiR@L+K>&I0&vwv9V6hYjh
zqaX59fVDdayd3eFXoE9BG+A%#l1?u*2L0)ItPwzqA}Xu=`5S$MN&S|jO(*p*IGWqa
z#~amzh*#0<ve_iOn49sFgXmm;2;IFneZr(#6EWf$thV>ks)&ml<z^mm<2MbQTvYu!
zuL4cO#v}PUS2UGXe(D)pNG>Cg)(7?j9Z)Y(7nxd!@*A?x^yKKcn?7#V+gjs%RB@We
z&)*S0%U!+9&EDR!yiM&e3&S+b^5^4JH^}E-rA+>!zsG#o=14?TBsr|@@;EDtd<S>r
zhQYcE%7}BTK4xZNFBk~7R9to#dL8^>x3-mryxJ)%qpV7vA0Z!^4_pv75g{(AP9gUM
z<N(mCselipVTsB-fLHkr2&HXPIUs{jD5Ry72|2hpi$pFDQh5=%qCi^D`pd5!jhZv>
zqaW}Z*D}2_%;IPV<KLTFd$Si=(BIecO>J*Gv!LWhT)Dq?ka9@EhP!4wlR0EzQP+N^
zAHt}{I7kIAXYN`&O3N^bvghxqb$de&M>A6|6P*2fK--F{B`MNi0eiy7mAeyGWmOgV
z^DB@?RJ~_!VvjldJBVpc^~0(FW>m#_R^G}0eZUQSXoD1X7?!ny`Dp-MRZ5BDstlix
zqTfkY;i9lD=0`Nt0Wyk2`Xu>r<@R7VW9^J6;wsH{FkSlN<WH#6aa^W5b*6wBS&D(1
zI6PKtERXvG>1zS;63+<5_(aFSQ0`dl1*uUk`{K`m_Sah46((sE??4CSacS2TX%N$f
z6J9wS*HcPMg6b3sq(Fu8a}8&yvNDf%&^*4w!OOy?z4RbpDIP?4NE_~wpP0T05S~Oj
zPSFC#fm%ysvLemPuzY?ZbJfS2ZYBNToI9!;8ar~XTOtCOjO6~&d<3r@P2mC?ikryt
zJ_i<y9jFNj0<~-GlDH_N9SELnLZYs)n2;V0OnVvGGqZa*{RO0ec0^x{UgRR-&+YN0
zSp!VtDvYBzdVceB2?qTEJq}z*fc-l+PZW8cvOwq?`*!tfXNi2Wh&gW@wZ#arg38pj
zo>QEJMY;pF-OmDV%UIH8&@Cy$JSyTijEgkRimF&ykYSQ!S@!%E=$#fMtRQJc&qlgs
z9=U;OBJR6me~J&CEi~*ntcs{CZ%i-$b(@s64EZe1XK_mmrWh1Q!-{MCWX6-!ut*$W
zsE6#~4IO}S9sU;_-=hw(2-bANOa1mjTFbpXcbgNPz4)sDBe7$Yfiv{=y^b*j%d?yH
z8#Dm%r~+}EQJMF4+#3!nX$^=ZJ@jE<0F=&2W-`g0#aQ3^NmL_UWAXp`rTISH*(Cvz
zc&hrN2h2m<pL%*xIGVnx;oMWb(8091vOTtH9mIK2lwtP#NPIVW#w!`W=JD^yjl(Se
z*pO0%sAa5nj*=pe)3SO#thr{p$mi7DtI%{&QIiVi4)Bgl)ji&jKbjAnIqIjJ)3O=N
zY=O#GS$_iBtcLZVkz=ijipsKzZw2TyYR{NAb`comEvU>vd7b8aWVYu8rz6azgWiCR
zd{c1)KeSU2C`35S2v-dW63Hy=`PZ$=JPcDai+1rF2(Pr6)&7k!$G}>Q!YyZUmeisH
z*Vxx3+Su~7#YG(13CYXr3G7dRiVLI}_Pr2MT?dW$&XV`qMs>^SY>{J6{Q}qwLmC=D
zAbag>@u~Iww5~7Q^R&#1P2UR~U3#uO{Aien;?fyBB``Blbd{u#ksX<!g*Fd1wvjSt
z)>H7>X?8GuWt=WXqBK2f04W?`F>PCGgtGkQ!>B5<Eeo#aX1)>KT7JtsOtVdE7{d$X
z1b`2i8RCN-9a3)^;ARqK>7c|JF;t|q!Hi(>qJoXeN23}1dtvF&mZhF?&9dO09UU;C
zZYHeEsy8A&BYop(7wELeO!2L8v~B#FNO9oaoOwr9X1Z|Kqd2RI`=>QOSsS_EH`P0u
zj{u@c3_KYAI<`2$B`rtlgL+yWmi%y2B?>^unZhe+^I!^WBjdrkeep^4KKh;J!g#|B
zJqX(}BUSe%9jDa61pE3E2I=1nb@0f)hII~tKO*t0deGPz?2b*K@s2WjnrJ&3_bba8
zhP6hodE@yweh(g=!TeAhlT69cYN@rB^ps(lg*)hPJZNPqx?xft8E9O~qr*H*cEF<j
z8;cP|EkRwb9bE?;Lm(YdRPM28?)Zs+z?_4XbfsUkvJ9g%%ZnYbwic#QF0Ht$HchxU
z+s;dDU@&>@W)p=l&U#w!*CtUI7J2gg-p=DjdM?`V4WxwFb~2_hI<?$!pz05gq3PB$
z+JtUxd>V~g*<VSXrfIbUWc?9*f{QGAnbHK88@%U7G(S8sfn~bO4XtS;$<xWh{1&aK
zC`Vh<Z%@-CtCHu}-hTaEXkuJiq&-QUH4Jb;@0cvvoWqT+X+)P5$1~XpUfn-F8zPdg
zHPzBQiSixv+#eSnuCQQml#kPEVkA@Nf)x&qjV&}m30InMMr8!2UY(NWlsj@=B6=97
zqZi#lSppypv?B<U)9{}Wfkr)ksff+YE3A?=x_?w=$qt$YkBCSYsVRWs)NgQK)!uP!
zGZbN2Bs<_X-A6Ig{)#5IsEH(to<<n}F4z(<q9RJeatB%0-<aT{!YHD5C@_p$lzpK-
zy}}|-gZObSnY%JWyNENQTqW0D5H|2BN$UeY8vupo2m&$9cb-X+I<_(My@(*dCO{ue
z0c=p>4c^ZvOZ9yt6{9uIo!bi-v1(@*H8>qGr+K|Wb2E;rIL+ec7nC!?+-E%u-<m&z
z&!#(`9RF+nFSE20A~y0<%>)Z-hXD|ZVmedc_Xr{)8Ulv`kP9+l);#P*)H-$k++r5|
zSPtmEZTx<|weQYR3?_QLcqHSKqeWE(BUaSX%m<Uif;pD(nvJNZ(<j1UW8pK}6FkYo
z1M%c>Emin*Uh*ns#EcCWKAEnigF+u4C+;ds#}Yug6*gRv#aWm>e>FZXCAwOMTFAO#
zyMS?(B$MWOk)_XPXDMCt(zuI#g??>bWwL&zP(N)T>Wg5Bs5IB+Q!r$<O(4T=S?t)x
z=glWe79|x?aGV=6vhS<{R&P!P<BrdiQQWZT&dj=kD90?)c}6Q@3I&vmZdDMEinywZ
z9Wd@5DStEnP1hjAiWQE>hJ_3yI&%ek&>s=;8M!GUWGFt@SUqSoLPjO~G&licT6NAT
zp14^bJf+<a&J<EsuAVt^4gBbx7n7JKnW6;-+Px>OOKxbm(#|e_e4GxB9!6viPE5#t
zT&HCrShKk$_98dA?}b&KRQdC3)nCU3Ug^7pTe|F~=gE`y)Uay?Wq%SK2o87r(_j%2
zm{PV62&6^1RfSn0Ycej(d};R*Bumy}Kp9qfoIalza-W*$ir7_iGKwoiHX6SiFy)gq
z*~h_aN3#y%Vz#m3OyV$#qU!k(_TFM9i?t`~=9)JDmo@!3yo}z)5MZo1BdzHJnY1%?
zjXpXkW*~zMh&0WF0V=mnFAY>~NCXaEoXs{jqfZP>GRdw{0Rf1-L~ub8A3-@%8dCWF
zqxn$7H#$uCZKlhdHRrEorBRVpdHnp9@}mZeS2XSUaMA!crS4b@=^;g<1^}TUDFou)
ztS{2kR@fACDlty;tP^sFfg{^iBP@Q8CVKsVoQ$<NS)^GJm(Q;n{PPj+eA|C>fpGQ@
z_Hn?m^EIkeOxp#dN@DgRJInU%Y?5L84A3j!t?emgQVI_5MAY4Zwl={fu=!Q%)o9|O
zinxNX+Enj{CZGl*=U$wfPx-FkCwked<Df}i<U622-oZp-*%79(IisowSpqQ`#M6^%
zJNQ=t6<#~&@M6u)KV1V>vp7!T^!crtzk^+hju<2#w-PkcDo*p_`I9C0YGIR`jNyig
zJV8AUhnavsGzbA+KyJ*+%?iUTNq5l5c--EU!Vr6?jQtubKS)cJ|Igc(4$x+BOjR6(
zXG^_P?_~vtDY6rN&K`d#@hwDrAhPNyj2$ub{S$MBwi^zB#NqRAJL-3d^Mm04qxB!x
zix^0@&+BJV5{2;&0`yq`usQOkI3cir46HTZryNpyGkVwYQBYF5#?C6!qS^s`d2RZ9
zLkDkB1(zgEtu-t=&MH9W`lEmevk#aMJ!{Q1b!_c)%fLiZL~)ev!0+^@*asXq^z1(Z
zJZZ&a2#i<69TGp)-7w$~1Nedl8I}kC!2}Lalfk<$v4kAoRs%trq(!v{qTS<W)-MXA
zLrCU346=*;ARawHC~iB-q7?xARPW?<IsdrG^CG_$`L!m|7sDP>SDNo!UK7QFwfE{q
zb|g6yOhuanLf*+Rm9aG3RTN?Ax%?MzBadhP`RAX(U#D>x-x?Uv{Iee3zx~%g{>y*s
z|MB1c`M>`k|Cj!M{dM`1;v~!CEuUl?rHm?wH=;4=ur%c5k4*C<wMIo3<)j>H_2njR
zq^`5o+*BeHEwejy;!}WsXzJywiHgXLs$3DfghCM{hq;C9As02PBN297zW|N)gTc@-
zVjT>~t?d$Qt|HDtCdfx<h%hnR$!Q#$&%+Dxq-v+hTEBTOAcO*Fr4kNd8u&GLDrK7C
z!qbb=DBXC!@WiLZ!h0PKJLr{8hZ+r)HYELNpE&W8Y+5I4aN1TEt}ie0<o<J!caovG
z5>rg?f$kWYMSXnC%-_+l(3t>OvEDT_JWbO)uj1#Q`Ww?v58Te0oefQ`v4<9q5rI1q
zdlg{sW*m%*o|JUldne<f*N(<12`nP)^=<21K^DeEmgUdS?Y9VgT%88jkuILVW8?Ln
z=e`e&P}S7ksquco?i6kh<g3c?ftMVxLSt)Rc^WOTgYZ4yNSYd6Yu7kDbMhW&kdxTb
zFPStON=FpVwOvU!g0uEKlQgaJWCy-y_b{r{F?8J~3@`^)^9i0S4v?9i8y{a&U43SU
zjE#u^t-cU9<--t9G1~=RN!+S1$+P(Rh|(k2o>x@dz3#nV&4E`X)|L@WR|s@+Ah6oL
zSQRv(g&+ct%|`%aD&I~AIJ+KACl@=rbK^>t^5QdG*>h_cSe7K=4s4+|`*2)1fG9%Z
zL9xM?El#2$PxJqr>-r)F!m-9l>DrDcN~A~)0rMAAP?~bqfvj_-e<pO#nU8@pC0z^Z
zQBlT4w1cUO&0Nj-3pHzm+@_h;Mp7`3W}th@`+2WoW{&kL(lUE14Tl3oNd9z_q((D-
z3(}cnMH1z=Msh8|uTfNWDKMQ<b)ax~mZ@z9;~ft6KDj8VS}oXcg?UNi&2Q$XM<%%%
zDIdu&j1?Ert)aY9w2zC&K!5<^xv5j6kk}V)XjUevg$AzOBM8#dexjZRzWbETsw<Op
zn$0DW-451>DlK^Gd5$@ldxFkq*cn=b57wJbfF^_LG{Y<RPL*&lgP(G7Ub483m9HY4
zL@|cfFyY+YX8Ocb=Bj!Ra$Vraql*Rv$F~*g0iPqBp-YN9Nmf*OS>4}?|7Qn;mu0=0
z8c}G$?In^*KIrlS{#TP;LoxLRL4*_^*bS^Bau&3`Z6ggkDt7LiZHpmS*RFwdz}q2s
zsXZZV99SWUNUbzzMnR3IB;Rn>pv7i8en}j5ASWsTao|Q!=7Yi)U#B^0ftw+iv8Qn3
zG8AP@VFmkX91j_zwH<<+_LNbUTB+R2A}Y%r6qk2GL*_5^9e%TJrX$M41{~1@zbJa7
z^w9Ay<erVW1J;MIGy*#Xg2^y0B+n<1;{r#P@gx{&4p$~XiSF;fI8_!UmhBW8*N(_E
zkBV{!Rtsln%oXna6&P!?USL`!MOcPa7MEobhhessvxQ|^W;do154cYc)$E3#f#WAe
z&JOkGjB#CiWJi9=ef0Oh)!m(Vib?~3Bdk79_n|HG`*<R_k=WmFxSpN04KmOSS(~<)
z_$&9;)XNBbNN#27)=?&eDVG|p{4Q~+4M5&@XH7htnF1KWef@Db8^~r2Clsy1J0U{|
zBr&ALElxMk?Pszcc|_px;QF)7bs+Uo{JphU9*1eQ2Xo|yu4iP`QIP_rnRAA1kE~~P
zwM(7EVVXT({lT*mySjV-E5MOWn{WA7xt?Lo4NWu2c+vrx7n+6F7O3RrD&w|gS~?8l
zD%%0Te?O+$rKwgTUsLfv4jhtfXwX9+89%BvgfayvSc0?ih;}zM1w-rpg+r|rJ;kNa
z`*=&??X}-tMo>(ZI&6w@6ea`vQYd$(D#NDUD6W7+#siK?pnTY|MX*)!6{Pr5>(G?B
z;BO<;1&FlY+V=xnL$xIDCGx6(3Zh0_-vqvPYmZbIYu(z=3FUBhudpVy8tJEV@wqxH
z6NgFh{EdI7boU~NGu>;JKIJ1(5>-B+ool=ZJUEnA+oO>5>M?3^XP^kpx*&-D;AHl}
z<Ps3F$g@dS8LVRff_#ZcZ~-^nh+#t~I+JR6|KLa~7fuK_i@amoY0>>fhPrDpFN>-$
zjLZKd>ET81CI?>8j%Mi;t6(}H^FP4Wrc!2f?;T#W_l^TBM;MCJ8eCwSfQuc36FZ0x
zsOsMgFS>XQBF72m+Qe-dl~Gtk&mV_-90TeiyG6F{h$p|Kqg2eAP3z{&+v$J`gxiii
zJmeppz;RcM{JAzYcnb$&?%&yW<`LkPsGO8(5#2f@@~`UzBRCsqg=tw0@RCPergbc{
zQDOiN{(T@q(P<@tdVy0(#2^vDeS+E4FY-E4%<P8){0cY9{G_Obg!#Sr)YodIej`4C
z#@2>sc+^2{y6!+-iQyz=_6<KzFn%DE6=I{|Ei{8@_F}YzW1KtfFw?q(R3>F!<z;0s
z<SX?&AjZ&u*K$dY8Pf7}YI)c^=Jmzj1f_xSjs+G0W{low=2Jxa*1iWK-TVcz`n<9m
zD+I6k4@|BP5Zn+0GCC0sKB6860gBCc>5*bbbZ%lFV00wenIooMT;^#Oq#OtO!$CS&
zCXu&-tJrCvseIu^zjlz5F*yRN0w7U9DzMlVNUAu^vuxWV{l)*A<`9O>Mt6F7{ZvU5
zR?&}rSo0lwGX_{N%qQ7Ol6k|!x^Nj$<d^ZqP}_Vrh6SDBG+^%*B>OosQX=MBGqUUC
zIhu2{?R0B^ojPw1t5WibBa;UTG7^TzPtx246ai`x-3O*LFbZEJcEo%a*dSa15kz7^
znvNk(YJ8Z`>ZcCLg`Ecf7saOy>Y-DipwUm7v7=ZwSh-;?3c&vH7?`~)_i7|laKwV-
zS9nOA@B-KuIC(0n-12M?o_Xzj@~bdEFY^l<D9Nfcx_kHLUPDQcdhwK}o!=fchB^p~
zGj8z$|2+A!vK^SvwFW07d9sUfl^?gXLk93v?-Cc-t$h3$W?gFxjyx`k9ViX{Eu-$*
z-EL|G9suAp6AzTBLbe1L-#FYbev&0cn5R3CW%&1c`1bWz7ksvO$7Zu|o94es!RqTw
zz)Y=x)=Hr)O7rUZcjMtA6>`X9<G|UK$T5w{mYyP0mTV;ZUprwJs+5f$6dO>|w8+am
zOP-ICu8Tcg@-{bR37-L&IYL2%DX>A3RwI3!#bJ?z&nLTXbb`6)$iR7t03VLI5D@YS
zi8Yg2;a31?14(-1;tV7whdz8JlYx8=nE6Df!e$!RCxE&ja7X=TWxL@ca-ga`xC0(=
z)oMsBMQ}ER0H0N8C5f_Z2MYK1KC2eq&u}s+6U9>7COj}-LLlW9J;%H%!gL2Zs&_e@
zrbMr{?8#0W5M1g=Ae}<36gm`_U2e&WpN>#Ld>6->qqU9|0ZWn`$>c?R)?UOyVk!`b
zjl-)S7(n!^*vQZ*j~|J`kEkoDU?>_@$k$-M%&7uZ5|C_IkvnDh+6+?7!6%T(VSbOH
zO);b)Xv{ds_<8$M4+j*E6n2SdBTM~F5kqL0h_N!&P`zBHtiFD8&254irueXy&PRC}
zS38Icvugcz0JR}z5KN8^NI2u?hXGt3|BQcFLyryd^FSD~C+v7B_F&lfZv88R6G<4N
z>eG6*thlq-`C{@cd>=m@lff)8>okZBbg5yf?*bdJsX>Kq99V}D7UUG#4t5J-OA}gp
ztvG-jtelOYA?`YPUa&T{v`rmYRD*<9<y1r#gjtrf8`tW9BF?KUdVbn*w|@2fUuKm&
zO+nTiANuA<adtIlt&$?W)ky9Ecj|9F(+w<1Bw(-Z%JoFRXtN=*w=5e<=I26dX5F-!
z&mZ_rT=dgsnYI=U|Bd8ZeUPJ)ybf@hkn6qRwc~S&rwr$S3!k|wPdN*#B-#Ph?G{Sl
z)mcK!TkYKtLQAd4D`d^4i)qw0#l`?ndUHCD13?edm#q&rZ|=qLL`0<dxJJCS8LZBl
zr@IA|Cn)eb4hMqZppgn~rZefjp)o@#fGZ2T$AJ2fLrw3*EjM;=(V=I$J&@h3ESEfr
zqM~|!A^S*$+iMY(rS0{`%U!lh&W^1(QxZ2>$Ha3+^rtlU%(%!v+CH&xTK7hq-mJW}
z*~c`E${j@bpO@g<%mlvCIXq3PB+aVl-=cHQfUni;aGbB<EXK-JfLMIkQjD5W(6BVk
z7cK)<GW|G>i!6D5raz;z{M(dJ1z+{&>D<U}f%CE^aq^FU{`{Z+r*9ws`1Zg34{IfT
zT!vNneDwZo;L^?b=)lhTHd~ml#G``BbXy(EyaJpoE)^j<kDRYqI%sE5T4i3Nnc0?*
zKrwx2^?b^*JS?O5`82*qjJ;kQ=XT6D*tA&3>rHNt7Cxy*%V|JW(5c|31O^k?DTBZi
z74^qYXif&4K8_h{*+LnWMZ5zA!g~lBh)WB3Xv`#JbQE(XP^Mv47CXSbf4sx_i}?oy
zlsf4Bi{&nQnylQ5stVJ52Z9%OP^esM*C}S#;znX^?W3tFX_92xpHeK~f$T6L2jKuI
z#I#T8!!S8i<VDI!G?O87Rt~VJvqeQH*;cE(J9Q51%<~A+cMbXc0&#09unw;s0*j`O
z7MOfI<AJQjk0_6eJb!-t`0=(GVrmOU{%}iGRSDzkU?xRXO2b-gdbed!9ijt3*=F^D
zbaci~?K?qlsylTD=I4mBkiik*Dw+YuvdDW~95>9Iq;=&0?jR(Sgl(_TI^!%$lj_Fg
zNNJtRhBRauDENKfERf8+QkrNs1A!SR#)#FEW&w58z&du3$`j{lQe@fPsXUJv#IBk7
zbk6Isvwe*nXIm{I(<qLrJ^1B%=x>}0P|*+U{opAaq*R(sifOFuz$NL0jrP`IQiOT_
z{IZDb{%A#A(Vv<9i^D!>+ESnoiXwWnsR{jSM?7SnUTVGrCvmNcjLI^PZbTzBFkHKO
zkePyfme|+8eKp3>cw$PlCB!v&?F@yJ4`n#;l#C0ESs5KU|5kBYW}#)w`p02d7R`sk
zL8A3Kx;`g&at^OuZ8K0@w8{(T0^hWFV9JkhB6kqkLA4pVk64m#MCn-ga%Gsu)y6MJ
zCJ_TzzkZs*V@e;}!9rQz10#t6FAxC^3Een6N6{TU{rLz*hU&q8AN&QRtvKxtKJ74p
z;hW!f>Yg$Sn?UNuXF*?vCJNA*R$6jUO5srp{76F&w_FWide2dO*=u|axJY4+PUT5z
z5#`j^Q>|i-KqloH;Mv&!A&zL)lUZ{3y)HfeqKFgo_^)lkS_Cy*Gmq%NbJR)4hNh$z
zDEAIjuSK95pB#Yt(@~ABL{{hEE;#pHgkViN8)RUEb8XXm1hY8|R+krl4l4&!4>*Ou
z95HyAarbmj#XfJToG|5JRux5+-u7m>A@SOoheA0@KM?Onx)UTwjeK*vn`k{sE4W#j
zpkIE-aak2x_P8OfTSme-3o4|MF<rcQ=tO|mnf8SX$+9GgH?B5h`*|_D=?1k&n38pC
z{R@26uu_>yAprVC2A7@<&Dm%pu3<GR_q2#10lEJH6;x-YJN~cQOPE4{8I4-_{$Us;
z#r^ZmyPE@F9KD)JB-J)Tk+}tLSc@=nsdIuk7<q|oA{9jEo2g^S(<6el5SW74L}4xn
zPSk)k%^O<7Xs{%2_}y$Pt0Q$>O9zv(O3UKL!sh|$;NSSXN#%$dr95Z^ZErr&YgdBW
z)~UyYX&eQ3Fyvljdamm#?NOBHc@aKe2jdawu>ZMz0&^`*Uhq@OG8MfVb8Y=+Qo;=s
z#w1DevPzy0<t=anF0jTgu2>VvkxZbnb)X>vm=}9CKoA=NE~!cNdD{$mo|f5<Lm*cv
z5Q|e?Q(|hKsds;#&Oj5$$VJl@4h%7wXiW$ar%pVCU<Se#j<75$k}%GzEj9qZ8{Z5i
z)}X2z=eI<!mJ*FsV1&KTle08&ON{jc;y-8j7ZeZ%39xf@M=iayj&T`0bWpw8-<;1!
zQ-CV5&;MO6ud*o5vMkBX?YjEtF_(Pz8l6s(nlw*aN|I;C@k~qvGUB6GAcC-r<M~A9
zWw#h$H_@Pl@KV^84u6NxIhGcw?UEe12hGpChUxR=MHGffbpH{$A2n;7{lj_B6!pRD
zGlK6bzLsQJkwn>zf#Lyy^^AS7MWX4PsR1jhAADL4%fZ+yBcU2by=V_PoTJAw%|jR(
zzD#;(dKPx{*p>0NPfD^|_SfcgoTK5Bd3nVe=j+EoEy3)UJeR*@1wSQbn4MY&`WtiV
zJIh;=1-c1A1P@Tgs)HsXuK}06Ah$W3_n2gO91}HC+yvtjLmC4fJ%1w`vCTUiUOPa{
zs3M0l$B3}tHR*R$KoQU1#$t?{&Dhg2E{pK_&7+^@o*TVLSo^Y&CAO~Ii7blaVh2^n
z=JArt9Hw9V??~qhO9QC%oG{eUVp<A;tP)A0IE|w)ettfCr?5-I`qO4@7-K@9)6`nn
zcQylR%&C9vbXJm^B7(AlHSM-$Q5r@`6z!o|G_SZk*I|K9`u<h7zXo4TbG-fxE|DfA
zmKy;%U6@lSKfHD(&sq|RHBN^b^4G>J^P))i(12QL&t06a1gskoPDswJw+ELcu780B
zF6t7tR*7X{R7UY0DW3O|g}PW^%~Z6o&Vgi11YtNup~3;xN>w0)6P<?ir7@>>Djba5
zA(F;)QkE^I+Tjc%4Y*y=jGv@E2+oz<u(Jwe{eU|0ZD*_<=#63d%+Ovpd!(aGB6*AA
zWio7mU_9oeB#~q#Wz0@BUBr%!q2zF)4<cC+HZDR3HXJpvdMxIFfJhap*MBy&7XoaD
z(9EM5-=#*rO^u;#KzXx5%?yMdOb=-KB>qjH2D{pDn`T#9=6RX!F~;AQ)YX&KFFXuw
zyP1Lj6>2_==Bkt>A^|0$KxWhEuH<Q-7nRh(s@%G?QI<o4t|Lo3!JCrfzmykD<iTyK
zc1yzn-Waf0nLDu-LG&wax0(AHC1tn=`I5U5pgX991n`)PaM>Z9ui3Omv$k>KBnqpl
zc)lpd#&L{G;={TZSbM`rAk=4!1O)7+eIlc+b??l+AjnOj2^6nDo^7358fR%)ggfAt
zKJHjwa}O2XpU9oV3BgVE6FH8EgQ~VW9bckDa-x%xfI|&?p>Iz1Lzz<Jz*vFAKXind
zPDN!7^|s3wunVaksYv($IkWnWmk6oj0nR@23d1bJTUs-D;aa^HmQ|dFJ2<s&r?Hu)
zO~Xt~>mfwc5L2g3&yNxXIe-qt{^do$epvh)l%)htQT&|zg`gRnJCr*HuN_{Nk;$G<
z!C^~%$_OD@Av9SciSfmuvuSPjr%6_%(GJR<pHD*cXJ@2x=SqNT$K0!$%6aH+$j*ny
z`K^6l+X-ov#Q6>Y=Q}B3U(t)?4hQt~YOxGL@m4nFajTt+_djN2S!2Wn(=)_|M%+|6
z_&%SuxUJChl@rCe8hlpU0f)xm(#T_D8VZ=$z3?W&U~P=Ij94PJ&*gjK=A2Ge+=#6a
zl_aU5b)>9HcQE<4eMIv7mAWR@CIJ5_{l~A}_qX5vrS8}EQ65KGcw;(ew2QA?q>}rX
zpbnAvbN~zwWz3Po)DFgNYLQZu7GY5q_iv>=F7LT^XQq2$1l{QmR1x7Ey$~r|(zrPY
z3vNm>N8wU}&D%#XcNKGU-gIOVwl`AIPoF0ZEMiocdJD>T@h!$fm@UmrVF&yp9nr<^
z>EX2#@O31g6JaJvsW-YlHrOk?c4t<){S6w5QC4PA7442bbJyYjtIDXnPSB?3DEv>r
zVvs*Zcp0xUhLD6VNWI{|Y|Gkqw>~~jfj)4|W>JtEI8%Z!P3r<l%r&u&?YhJ?+JX_>
zD4`2MT{^ieSdCNWWjmvixBDM6G-!Y#AkD5Uo-)mgB7XicvCUb>|J*SwbSi|3e#J0N
z%l5223~L4-y&1@AWnz-wZEkgq>T<y8eG$VR5LM&K$kXSDORZtdV&k=^{AdG0{<Mac
z7ikg3>GNa2Mv&r4OAPRAzWeMkLQk)DdMn1I&w#BahVsZpU`rO^Ng>8NZCK4NA?Z?$
zELaJ1rolK+I2ebS`wnhzt?%J1QL!hZp+yp2Zk$OD0gOQCaCqtzm0YQ<qNpf}9a!bu
z#s1`yo7n7O08(K=^%tIV6+o*yQ+}ZnommeQH?@1hwhe=5yJ6lzym1_uCCR80YWS}V
zP{nal6luOk)a!P=5<2|&EF|?TPq|rlc8ZcR598v-nX(7mlAk?zP&&NrhX(%yi)*bm
zOY%70f!f{A&a=ATcg$vK!<or88vCG}SZTU!vTA5iwQ<s2YiLASQsvLbMeePK=OU%c
zbsGW}%)K=YSWPQ%ydO@|waplZSzM+&Xtv))czjXHezO);T22e9ETbYSqbdxml?9lT
zX%#2Y^Y2~r)qMUn9i<;_{Yf1AWmSZQSDGW%u!(3C+jZu3e2j+jw~}6xFi(nV2Y2eO
zy~khV^>P#%;D4<jn^jR6M$z->kUyWe6Y2$1wWhWiS^t9PI(cf(B<i}}z>F^NZ1n-j
z9pfMxj$V<<bX7c4US`kW<e@s<J{}RkW?Vr2i=+@n@TgB3ASBKFdPv`?Uqc>cU!n{O
za|{+)LZF`u3xu(QGn3*^I~RL8zBmI8Oa7H{21FZZauevqhA(rVDRn7&5Ii&IMY}c}
zmt|2@Wa0DAhWii4T^SF+PMN76$i1l!?7DT82TP(m2u6S*a%L5E7n)QtV;It67?E8C
z=;K=UlT}F(@4!O(XEVuVWt8do(Yg#bWkc*OIDj<KJiK<06Pcal8qmN&#!7BA8OqZt
zx>bKuI|LV!VnLE52GNWf$UoqCGaeZR|M6ou)cYNcN8n{cxF{~txXfbb(ROJTQF}}J
z(PB4+R1lV)AB~`0K-DndSrm0JJwVgE*G{4tLGrw=T|vHl^-*5L<)*7|*?S0fsh!2w
zjR-8hk9KhGjfRhaU-Dc^f-Lb*-SlMu6FAz^rRTu@|Bk<2m<`YKH1{eaetTF>t)p^C
z?69^B$GKAc^p#bO-nJs0?674X0BVH*CiJU?J4QqxJg++(uA>5iXRUSg`+~5pVr{H3
zLz?i-7dl<`($^vSaC0=HKDeIUfe7a*cVW7Ly<1q?s>6n^pX$MtOT`j7Lx2k<`!Zs<
zHgryb?Rff73?d-xxS@Ar%J=cHC_xp)MG_W8diVa_9heJO=#y|aXG#EYJ1hmY;nAOI
zOHgCQD7@6FW82t((yR)QrD2ri@gB<1%`n-urYA5xg=HY#>X6L_uN|&vj4x==hbEw?
zS|sCC^Y#zDs-IP5cJTwD3uJv(le;*n;^@|S=Lg*JJIo-_nDfk86e`$$tqe=ExCql*
z6|Np|AN-sOl50NeuW75>dtiR-q1ms~Oe6=xE|NSY@S4EJ)AWH`er)Ousvcah>44k#
z>1z>#{j&QG#Avm{@_kM`ae)k>8BSp8rTR^$`@b2Q{`54NK5%%kWN%^)h=`6{tQ#Sq
z8WhD}T3bfVH5=vQoA0Ex1--siP&>`a^7-58v8ROTPf8wYL64p$PcY#E_ImRj7vVTi
z-_0>xsl#HE7f2K^I2y{~VSYL>Yt~rdV`rZm__dr$aNv(F5yBiuop`6m%*Q?T>X^7C
zDnt5ZRfL@;MO<Uw{CVzPa(F?jXqJ5^wXAk#zaxV?vr-2T5~yd|?&Uml{|sI`BJ$Fd
zjVbrhM&q<$(lSiLGT(t9@*S4)74*)x^&##l!9&Xj<DtxDevib%Y2mKf@WokDMfr_~
zi_ukGWSagIp1p91d6Ja2+;Vr-WQeT&)*B))5BK4gAs?gHZdz<6!#*Fl0deDD$=W-O
z^Ej>Y`%7v)kpFgRoUc*N2dN{9mL%#WsKUY<`%Zf7LL4e-bmL%3P`T|$Ca01SV@mIx
zCwr-AWx|O{G=RG(ss+TOBK{IFTY4t7&;kgMpy0045Zk7g%UR4N1dsj=dLy9f6oq@b
z8hkxig%2`JYV>}Le>v$E5?|J8<&46uycXs1GEBl-9bmVyLHpLEOg#$v;>Z|QrJRhh
zDPlih)d__HDh48VTxS9)3V~QhhmnXT5Q)=IWwJe90z+PQ>p?|ei04527DqGagQlhQ
zedbQ8@289w3o=u>$)}oH8^MYpW#4vLw=ysDG|%%bj{fxwtU~W772vq^{&`;AzbwC@
z`F25)e2w9}+2bUNi#U(s8;_d@oZJtQQ(Nwe>q?+GOd7j{9ABiIB;y(>mSLvKyTG7@
zm>AN;%WMD|e~M`$DXmaH)VBkCqUwyRRUUC9pE!_PshK*?<%*~@uV!my6ou8Tto8>y
z^T#PTTuI`z=A_e)(qAbG<RpSx1cx>dp<e4)hh<vsK!o5&1+cD7O4p`qO7@e)q6WLO
zT7|z1oFJwcuU&iO1B%aYv`7R{u(sZPzk@5U6#kOVAiH1<nhEnH&u(qUJm48D2)vCO
z#sE3hu>dljw+uCKO5L}^fe_Vc?~A4;$1h+P9LV<GvVVkP+8FC$c=y$?k(W`C?uRqF
zosqHJFyvGbE%<cM4v}mg-7+-^%R|>k!oNgWqdsusUnMPYJHVX3v}0WAW8epXzv%oi
z<L15fcmnaqBTGjh^&jvCf-WdE98oF*G^M4ICsYoTEr!`7(Ak_H5-}Rlg(QiUL8zbD
zD5rsXD#Go2W9dIwOmGD@$L<|zZ!MZeWgHhbPtvb8Rz)P0s|b^Ovh~Wqi70LoOs}CO
z51~(8{+DXesEqR}ORSjs^6GQFJCxIZlQSF{8n2yJdl3FSpP6{?7Ch3P_4#!rVOnMP
zPiCJs$OEg>et9XB&8j2Y-j$QPNXq<XA=d{)wx2HyK*MM7a;VMm03)HOf{j!XDc8h*
zK*ss&-iibDyg@MYe3=Uo*Cb-o9J#Y9dd_V(%-xadQObGJDuebDdLe+FM<bU=TLEL7
z`0Nvd3R?~$D7yx#RYjgv`SY1CkK8O5tp$lILM=qKX(ufJY~zy?fsZgWwC2Tc4SP;b
zGIqy?hr-Am3&aZ7?GqHJT%|LGU4l3e7Dp`T>x<@K<;<07Neqn}(!gW~O4dK11W^;?
zg6<;AY1kH;Cp8{kJ8c}Z<t8AATdI~UtHLzf0VV!UB8kd;qJV~-L#)vuDGrQ12aiwT
zaFu#$1XHGEc`ByoE{Is$p}s9KdHLsSiA|nXVHQ1~*!=6*z$>S+tN93q@%`UDG2Z>$
z-ea6vWNQ}hwt(pp+&=*N$=gS=SfcE}p<z!cfGNo}gw%o>V%<V;0EqG22E_Qk*kfOv
zwKc6bhuv%EXFOFIlb3*yq}C`AX`U77^Cx2OJy3E{%28H7BnrSGfOxe|mCVvSPoo{&
ztFxw!y*+vh{7o}mKrD_JMgBA{k5dxF((JDtu27Y+w8o25N(JU+*q1PpA){l&e{0``
zHg;`hFbm@<xs{S)s-?>UD~Ns8FEyDg!LD{>b?hb8O<<!W;SLZg0)*12IW+5;H{UUh
zBNS84`GyK@lym4v@s3i(6V#K`HDszUHm^I8ion8}npe}KVmJh=c^iEgRUzUZd=Htc
zA1>(n$JrFklh8UDU05?X?f3h5!aq<sj(@4gVfoFc|MQ&Iiw}u_>@!U!ATio*zojEm
zUO3%V<IsjTf-(p$^{K9er8=rn-IT0pAJ3?SnH8*|-+VMuGvDE0t^1aqk?aPX-T>yq
z^cq-lj7c0{E>yU27FJ1>ZFw9Fn`z#}dW%r%&_X4ulj!OoVFei}x&bh4CF%v~Z<4{$
zXyiwIVohaC%{ueS;KRQwazpz|(-zZsz>J>PDTo!4;1NB0{x7EG(=F$W8n=LXFIPyz
zOL<3H2?^aWr*6TL?=a^d^0i56KHZ|jYo|T!qi=*r%DS*0qN2#74Nn)s)Va<w_hF<T
zBds1(!Sh!R5exZnFxf*~=TDuOq2TXz_Q;m5A;KA)k336cRgY1{8wY@#{S->nGQ3W8
zuAU({V~$8VKti=$JJ_=2{wd`&Ahf9Zft()mw>KOpcH|>DM+K<f&)Dv`7D+p0c{7$#
zktTPCo1W4$+D@NIqNob<I7!kZOVY4hty9w^u5M%$JRl`{++B6AGt8hVN*Yl$TB}&B
zSzH{{?%+_+BV{VQ#Ip~R5^=Ad$zhM52P~Iyu?v|9jv5zGdw`-~qi849upUO5ETp#;
zPgzXp<O3v;vm88>b6iQ`@+hnF>iKoyOoZd#ny;_Fg0K4X)cdJm`Ke1p046sly`G$F
zAZ(OoNt!*sz4SQJ*A=l>o4IN6I=9?3W-=eYQQznwYYzou2it{dD0y;&{zQy|q0@1|
zw3_oi78r!4EdP+vJ@lPpMPM`V*dA@;%NXFmzz~$~sH1Kqj`a1jED~|QahQpnTej=k
zQi`)Q3CkO+p$9Cbdvz)`nZf-96}NE#JnJdaydAFr2&7ixSFL*p1zx$KRhWlWwu5u(
z4i@P3n^ML3291`#%S2sqrm*VlOiXV(9JY}KEhqr&E7(7Lju{?A{l+3vr2Pdz7}@+9
z1;O9P)7m&r8s>2t?ZDn<$;|Etrl>{Kv^In6n9I|+<rhdQLGMC}64yqpfo;78mSj;@
zR^<+4?bi@k{`c*?zt8{cfB!$e|DVPG{p<hpzOtjss7j(8NULv}VY+0<Gqc(tPeONO
zBGSNxpV{OBc>p`ZFpi-6gaw+N_*89$6B946vU1f@KhsZu?G69KROppWJyp4J`TXZ{
zc63eoPWM;vt?v59E4kXA{~c9R7KLFJ?O^ir>>kbJuA9&H<FDYe`3wGbekLua*8aEj
zb^?gQqeU-{n+=DN3|k0?gf|D2_F&ORKHA$lRdEr;QE@A%{DAxX^Rx)Fk*T3HpB5XG
zj-><z$#u!2=Yz|@=`O-K&zvVDFSJM3r*)(|8%)mHOiV*xlLpMnGD&v8W4McK;{|#)
zq2lx(DKhZy&1pq0FG-W4%#!EdqQ9*pSHGDV7sBlUy+mYWMo1So&Yp!gjPwyY3;Gl+
zpu89RD^?JLnhrQhD_77SUvT6{ix!><W?w7fz@PY))S(ex9oD7*nG)>>xc6A}nuL#2
z<>_K@@E1;64uIJ6r%6nveFK;)XSui(qwV)vKunW7+QYEK8UNu7pxelyQ?=5Q_{TGd
zeR%EYfwkRBJ>bky-yBzBR8%G5^xvo7q}gFSWgg#}KZDPvJD&cdwy@0Xh5ppwh9zMC
zh)=R<O?@<MC_+x;2Wv%0UKM4Y-^g!$z-{`e1l$(D6g?PNIKXj;3UA{;WYvR5O=o&z
zJo2T@wQseT=3UF4vofv1`1v<=t+Kn!tx>?4#;;o=B|lfDSHUn)Y+!T07sRebI}hgW
zk&Pf4_O+5O<%c!aLNa0i@zaz{2o=3{{G23>v9tJk5~w0RwUO7tYZ;YcRzCmf{d~SD
z=$fSHnhO%BBx758(26G=&+<EebvW#(x2F@5pxbAA4JOURv)(=&IqI#n#@G)hqnq9y
zUuJ0ZvH3Ir?ST$(`y%aE!wUM=zAO0U^ghT7af%fPWj4}|ZP0&x<#Y+7yr`<@uaUoT
zUJ(x+tLw!B*(?Z18{S6ahGtwPCQQ+UI20&C#v{j2;4sZr$9-k)ibuFT{Q$=nm>FR`
zTRY3`;lykTT9j+)M_5$=;P!|FKV2wWH94itsV<|p!qde%5t_?GDUo4&2P%q^G|9r}
zmkygcaI+Vg6QmcTQF(~`hkzIa{J3Yd1WNT4bVW%}_H16FOJPy)H9A3-1EkrihGK-R
zPCah?1CRFC{oL=i`LwE}Y_`DF3c_tDWXkKK8G>nr(finlW2hCl4%X7Lu*j=q2Wsno
zdq;k806+!UxrKpg9+8CH*yf2x;ON;+hrk)Q5~!#xzctisJmd_|QI`wNv@x>Z*3>o8
zRt##W0#C<`vCZ6Wj^O1gJ!uGB9keCw$vF->T*sLUDnrzbUBXIhGA*^~5(DKqnK8@`
zJGp_dj?8E$a_JhTtFvmXXaiI3#(XuM*R%!-GLqhW1UiR{2QlW)+Wmz)wVFg{X%;@e
z*|(NNpSMSF5uOy=2wuA>98w`CWIPyGuGboDSyn|+u>&KHM@|jR|HYjo?bx5IYvTlw
zHJ;HTcpSWT0npRX^Ve?9FVt8?t7;ysg`5?r`I=XHx~^3+b)N)OffZaLi_<cT(&vLW
zkK>nIAqX1+E0P#RTnL0+AtB_X0J;fAo=1Z`yvrK?la@suM?37!+^z+7LDp(>V=Jkm
zI8Ku)in6?niYi`NqDhjbdk~hq3%q~Hm1#l04}=X`?-;((qdrd3s4TM`F1Pz7YzzDf
zxtqV}yC}5_GY#-2Q*;d}%%ic?1fv0)ORN@1Q57aTn3MiG{T2LLfBi>&GcaRXa$*QK
z8vZ>Lss!EyhNmum)_to|F>8rbnuK|^qe%FZqm>3Ta-4md|M}!J3r4z;O(@&>AXF;=
zZ9tO0n{k`%PR&&oHK@rhPv;)ahF+z(oiYrWCxGfupRz!ds3qEd)-!+mRY{qwh>|?s
zftR+Ar?;y8(%8!A3;B183D#TyS*Hoq>IPbk#SsBTZ~%^j1Go4{rFooYar*olI|t)k
zr*%UEc6&NdhIv%PaTphAoE25Ea)Xkn%!>H=c+{-^n0c$5Wu2FcjoEM7KGNKVp%+_E
ztA1+)pv?@gn_X(CcTB1{z|mTv41{4AC&}~U^m#3|C{Vko@JdLD9VHqd)t{=cxeq4c
ztt`k~_o#fmcAt_WNwZt+r`DutY2L49POa?^dKZeNIin;gqdd*+(BHL+R@#xMgo%T0
z2$Jyd;qT*#P7!Ttm|_SzZC@M$15%}BCIwYh&`(EpARc@DOMOJCLE^OsRC6^%n1E&v
zLPpewKR{xFyab!Z@o1Q-esR(aj5beQfOu7NvOTBiqnQKAps89<>FzsFWS=T_)vo?r
z7%WAG@|kcU_Y+LH54-_I)V9eLB}tJcMeLkV7MG9tAScg&*JF~63#%tCqCDBSdMF7b
zdI`5zVaVdtqx@_$ciLvSQw*AxzG+yM@y2Vw-fQ2hI~aEjv5)uK5i%px79F%`JDkWs
zoczKK3Dc;k?mo7+-6Z3hmn@CU3UoXzYn-ieogZEIkcyf?6=@js>@>sUTx(Tk7DjRT
z{3BxP0EB<t<8zg$%F{fro<F_yqvDrW1{0_Q&P~YCvBjn4UgD*_G~W-eokLK)l8+Im
zKJ~VyX()Y>VO@>Ce>5L!nRSvCak_(q#<LuMa9oEtFY~#3xV<z5MTUmX5WygxeDY~>
z6wJkaBwR8J&J7Wm7%FXe2}0P4e78naqtwC{cSU(L{s0n%Y`s$>K<?~huid4yfl7D%
zQvp0B444C0?SM5taZ(j!yaP#=HJz-BwHF6;_vrDQ22ioau`A@7$awx14Y4Q<tGLQ{
zaBnt-{A-&?f)C3Y&}0CHrp~8j*y9DYHXC=$a+J0#Nd{1AH|IF{ym899IouH(<Z?{p
zo<R-=IFY>ewF7||y9a-FHmGX|PFQ4FRNh#(Jm5**n-YG3FNDjVC!%=50PpOG`6|!-
z3T>6E3Y$eS`GzVO^ZX4I6yS4{CiJWzAlE(^!op3c^dC6c>Ni+^Fy(Lh)KpK26BD!y
zX0$YC&I8q(x~7qmg`IgtuPRVmnaVRp!430`Gy1lpbp5r1*E=i|Mr+qXM;ygr{`_QU
z^Z9#0Nd>;W;|IOXA8<2%9*7n_J!#eFH2al~XB}8J$Fk*G;IUT=g+YvvO}?d1^uP|D
zUm~dGi$7s5Vq25=YaIImWXxG@x`y<lfH-F+9n2umIi=D$smzQ@uYyiRTE#nPN1t&8
zF0m8OUg&7xBp-#c*hlNm2Bx*_t2LWMUrS`;Jd4sD$hmJr=C0N4z=mo*UaX??8)uJe
z)n}epRTe&98suJj24ZQU#(6_vP6pJ%rrl_cr0MUT?d%d1>oJQk0mgM_8wjWu!hh5d
z!adDt2u3CQp@c(^pO#9h=jrqheRCAn7Mq;H$@e~moEFqG%v(x0acQgl{_uuyvW|n9
z=0cVk4P^0=%Llaxfgvyyz?H$7NVN^FwbxGZbX|>Fjx_4I6})yf)ak3ah%sstD?7Q$
zq9WYEPX1AR;EFkhodGf`vR3YE<t!+&q9~K+=L-uYg-fTw)v>ZQnSy^x|M6@0{q47Z
zsaK{s<0Ouww0QoVc^ql$nk(28Mu4F8ZUhS)(RF4JP}7)?6i<Om->grBH#20_c>08<
zM%Z4!7g^#BC33$zYr2LUGbJXG4!z95xbl*l%-n}>S;Ld)w*Z15H5@Zb{8E45@aWem
znA4Q`GO?j`Ztcx>3L@`$LVZ!lZ!y>8+#eDYlz><}l&hr7cA%hf`=NYA>5dZb8lM50
zPVg}!Yrp{NuK0(ed<}9c$|Ns$;36~Izds_{B_mF-co&E*eZaLQmL4D2xd9n`cF||i
zTJe%WdoVIsmbneaFmb8{T8pAMq)*21WjW)9eeMju2~r*@kExl?L4kqamJ4=~w)2!*
zN!@ftfYJ=Oy4Ox|$QgPqE)-V3)X|EXUXq%A9jFWAG%R;uXZC>9f<OysIKz&Fr6N=+
z1H*8M)e?q0S~x_a+eTUQB+J4o-oYf)V-!{{i5LDddjld%+DQ^Y)9S&P1=4@laL6pH
z;v{)KqWq%^)&HK}H<;i-8VQCBT6H`(rZ@2L+M$XA@y`2x4FX8QBF*AkRnC-ja?P1s
z;&E*YH%Mey@{sW?shFfs1QZd2STddBgklwpnqs_eWws7@E)e~^skuq8<Vqku9(cSC
zN>;rPAOZj}Po}~tEa0V~z%_VX;Ux!rw3r~SFpXtOpaP>2*AlhrSwYy;Grux?oD0ve
zD%0F*nO}=})YRh|ljJP1`>N8&Jcl;@m(My;g+qUI1%C;bvUapa`UlP)cbGRU+8l77
z5tprTvyh3z!%OpB+K}FP39rPJ{-Sb+#F#*vQh;U(IY(2h*}2R5MMg0knM9)<(tcqV
zGt4grKHN=*Qa}h?U(?EULpo;L1|m9D+rA5O^N_y9it3m2yOXet!}0;l5|{0M)gQlo
z(@M&sPnQbW*{__p7DYL`pS~=QzUo3UpwLR95{Ge-B+rL@&uZ0cB2AZPid<3&Ax+kD
z2g8-qelUI*P<D~*Pg|SVvw?dUM`4zP>GPAkyNt$Mo#>dk3?VyF<9>s9;K5^uX!i(G
zhddh(CoITA$nXL}&R9(Y&k>~`;KA5!O%vp2<G{c&Q2hakATqo9qV`J$f^fhr9cxA;
zpgzb3;~-3t^Ptct&6^uae?W>6E>^nAl(>gIS}6)q9V59&_3M`%w)d2yD67&q+rfIg
z-C>Nh&lMIzdOuf_%!o67^nlk8S`L&t<PC6V4a?E#M#`IT!O@6;849)|%3OaQV6{w#
zEO3+!ag?-0XmLP38L+6>3v#<pM;05JQj)b^YyvdTr$4BB^w~%<0kS;?&6*eLQMX%a
z<-97xGJHM^|I?jmHlnfpWb|9otdFe7FkNGx7R-v(#shg0*et=&Yu*9YD+MR&$3Syf
zTQ!W1nd{Ij$_N736mXo+-M!RrsNpg_NqKJ$ik6Bt3;VDcr@hd27{!I)D(8ju=OMC(
zT$Jy5v0=j66hKs_VfFkhX5kQZnES@#_IH%Qe*w}6=J%)~=#M^Pt3VA0{>lJLD+OQc
zGD;9xaL{s8tRl-)D~Y>ZBZJxU^1!s@_{20%URrc7WW<K!_@|EE%oLQyQNzeI!YR$Q
zi)OgJG7|-Joc7D?6z9GGEjOr{F$e6Mqbdi&PBUAB#MA4eRCgQ4e3K}O%3=qNpdZCf
zt_h#x*2SX^^v!!!zNGFmi=Q*upF6dti9#G4Os^S~mjR2b?Z+J2vroUbTTJuU_A-5O
zl!lpZq}5xI;tghZUON-%b(`9e=@y%22GEBQ54ihmNcQouO7=<9v@FtF{Sy?#T1euc
zHG|o!srsF77~(aOS!w09bT}xC&q(I^m&lSRPouk6@XzV3+T)kz&&bTR`ShA%>g|S1
z5eRB+rzONjR6WYlEQxpEO1wE0^*>+e6ONYqHma?@wO3t3#ltWOi{klr<!++7s8sz&
z^F?lty2)1AZdI7>V94l4&$vtdfeZfOw1#>TRY2>)5nH01ol6bsk{=whoD%Uye29%|
z1DR7chL9?Il?v0~wIe{?I6n3-Bq#<hBQ1{0TND{kE#nHdw&BaH$nqVu(e4EJi5sXq
zLPC}CNm|EAM(H7(2DZ691zG-AoKzjyazoGqgF}x5j8DIY<GRv=^Q}2ZeWAv4YEm+b
zRqI5g<)*5(9A^&3XAV}_mI3l4u9Ecm&-rf@CGDG|F+MhZ7rKqBz)V_YNuKOrD#J&u
z*(q>NnpqG=L3d-$v$nYI$5kAb=?+rvTOz~N)Eg^f!7iw4CV!W9)j^F)dRDU)po6KC
z=o(E{PjX`k%$<r?f<1!Qj<Rs0HBIl%#Ve3$K$O<P<!hlk&5AfHci_^0i@Da-2L!f7
zgh`nAs(max-5ArYkATh!fls2YLI^!r^}{L4c^^O=bs&HLqxoR1Vw%W<b5(?{2a)>a
z2BK?#61V^t#$xjA@t_J;q;qS57@=u%$K4{`*5*n36Enj^DXD?mLDwh!XI@{h>DfgF
z#_qpP+^#s$nT2@>R`4PKa4i>3(y)l*=VyR3n$7Io;05^GSNq<a*JtOT2fxr%Uw}Ab
zy2XxoSVk})ba?HokQsCw{Fpz=xYnkVjeW(DbUe5&fntB<1kcMV%=XaExtYwlJYhkK
zj+p#T;jcXguN`kP+BU3A3z!DVkih?^fA;wmW^bYcycRyw@^(ncNX1-csMbW0tb55S
zr$9wqBWPUdpc(njn*la~O<5xQJAG})M2RB<<J^bWPNJV8CZiEeSI+R1T~dH}?X3FP
zRAOKU*WXREjHOj}>JLk>OO|C(lH_-XT^`@b-Yhn8s{vdb7HPf%f7i`jtSzJ2z}14_
zB?l0W)=m}b0fmgM3B)_FJ|zb?b!u(wOq(B2W{bltjI!|g_jd~*yo8OSv^Q)%0vXUz
zL-rcA3iZZFrKn*;t5KLLFk*KDg%vff0cnSoBc>|KBHV#c=_Yr9OB7iMt&oRNUSuY~
z5SEz=L!t`Q=5E&3JIu2Nhd>0kTwo+{!4Jz3l8;b;6bv8`0NEa9n=nr9GXCim3fLao
z6MJ|<A5Po=x$VN)+;l`h9t_FhfxoqpS)((SAr10Z>sh*8N@IL8^x+@^Aqh#*+@Mld
zEI|{F=P50foL7K)>Rhj##8q4+#f{5OPvT1p!3@1=q>-Epd8ha-`@WHkTwV)Ph>~aH
zc)xk{oeVIvrbJonN@P_Q7pdizUUbGl?j>J~=w~5UO^A^fJ|!>X?Ebxv$EgNivh3nA
zhY}|3b<t|X&`8TU&}BzaaG0rU1+&Cv*6fu45WKXV!U3#2$ObaO3rg~H5eS>8?aU5`
z4m08b$a<-Hme-wjJSzq-hiwiendz$Qm;`gaYyGcPJr|`v(r>~kUR*<lMvD^}@S#Bb
zhRA`avZYF!h~W*H*5uT~3Jh;=+rJMuHZ~gqU&-BxiQ^R{+@T7oG&tR2)hr=fJDZ>q
z=?4f=506(Wk0YSEBE3QI+96a?vuOw}G8|ZtWwyaRJWG=@&7R+{dI;EivEfIW7+<tA
zR505Q!69+;)CX>r3+rXNy-H%3O1XZpTLZb7@R(Gud9}SBheZ}9dmsn@02x!1tAW2E
ze>Jiw?iQ`Fv#O#f%J})X<>Q+AR~l4!4>6IqM*<^z2sbrqD#=(QCm0Ahf7R|p;nqKB
zMQpV9Oyjbwq8(W|{Dcd}vhXTn$xsnYXZIVK?I8NX$cf1?e4+qQ@o<=uTZ-H6rD~#&
zeqZ=ZMZ5>hMP-&oJ-gRnzBtX3;`xDMw$_($z1d5A=gqcOn(tC6&9m&!K+ZwiqN@Ww
zUcs41B?SDzJew7hI*f#k^<Q*^i9Ib(Wb36>0uql<rD=L&ni2pZGCYIvaAEu(w=$m5
zVnO)3h*smfdzV04K~eJuGgQv*%$~;4lugvbEH8_qEN`S9Y6Z0n(9*SoQzjOo^{iO|
zJ%x`J2$MoTTc}O4yex}2w^GT=AE^f0FEj#x%DH&^(S}VQDpPotKe9@rD!M-=d0ipz
zjJI@w?`wa>CotwzZBg(`+W)?{fDjwzG_c~<+@-QAoDSaG7Re(b%N>N4If}!kX$E2t
zW4P~5oh(?Sq>{m>B!np3aqcSF_}5Jfk6UEZE-<?nN0+qGsDmh*(90@L(sBp3E1p=;
z)!qAF0g8Fr$KZcHe+*KXOi4E}ok+z5lu%wfj2kVmL9r1+fgXa#+OjQ^q)K-{zI%AX
zaay-P@g%Wy;e%OjnwUJg<BgOwA+OOzIlZA^2|!I4jUOg7l5lZregcH~U%NJdbC<@t
z*`%9e4+A3P$9dv;Jxz%KN+E&Fd6y1G;!eFgFs_yh@l-85KOwp|<<Q|&%K0PgsBseB
z+#E0!!SCRTut66-kBX|uZ!EXAsS_BE27B;okQKBJzmT1DqFHVmfMH;Tegn=yoNJPV
z4k9y)Se)tT8Qfk5(C}ao>mU@Lg68XVH;K!sTpg{zjLaX*@OAAc<#DiOSeyz|x<Jqc
zdpe*hp1)2No+7>=D&@go1sIy6P=^2!ZriiI!C>-L=og^z_Nk-FM&S?Y!!eElb%?;7
zq_4Y>H^q4z=V4ZD6G9*)*5Q|E@~S?t2&f@1m9CB1ugI4ntV|w2Kg`&bbjSN;f0a0o
z^P)<uJH?er780r%tga)nWAqESE6@icIM31*<Y{QH;L@ho?O`%G67z-O(UXUzkVa+;
z{ppJP-dRR4l?k||0lAW$dIM+sfdPwv+X`dhd!<>v>3b>miR(_ih({{7Me2byAQc;>
zMH(QR$zW~R^FrCSnt^SO5@vkN&B5W(H9bQstz3JwuLlB-{Sn?1nRgTG6l%fPyT?Jv
zwPdi2#k^D1u_zssAaPCz#{E&Vzt9nnWf+iSHn4eI(@SV9%^6MMFVt3ykLK-0wpecJ
zCGJL?$5~Xx+1=};d(niPx+lkF*cOO)p*$F@5gTotmv#$=$`CK1zzl4`$_EtcjYHKS
z_83@r5m}UJbx`pKubpM;aU&j1nQ3wHSk?x}CoQ5XOLw3SHZQkkfqzR~hJ`vv42j%2
zb7>hjCia`_eZP;Nn^?(dS!GqS14q8cfydV-!ltF=l_asjC`bq;0NRrpg$EI+F$l34
z53gN)#GuRJ4&P3rxz%r5$uo<hN~0av>-?<R&gBM^ZSc|k^>Rbp9jZyus2+y{W%Mqg
zFl48OBuUIr9~|myJ=Zud!zkIoKDY}Uw(u^dE{3yBWeijlN)UKc3KRD1vS*O@SX2E>
z<0MaZ&@}zo^?Ok*%C0-c;Ys8UQ(~PunvSu#ycVi`g7t*Rck|oO^b_l^fVUu`m(~G8
z|71uEbowfo*J~#rc<oRKLy9=K2-3poiT4DB<=U8An8wKttPD0W+b*($jLWF;Rx%YG
zC&vfZ{YF?6>R1%IA!A6hYm`INd{{ZLwqtP|i$;hJiC{QFE+gV66Trx&u|C%X2^0pz
zDpGYwP+w>K)Z}~0%}iYY3q^4*YiXen`RLtPn%Uo>nJ{Z7VWgn~#k>{z#PIcLZNmvV
z4~R^qEoD1RKltf=PTN<f&a$%1<8lW&^p8t%uJp&X)hBU&#<_I38Muks%Dr#qflF5_
z0g}S6pSeeAyK*?kJXzR@iVyf@-Xt0~&5ojq&#hY&*~AVc6cD&Gwb3Xm3hPKwJ6|Q2
zL`ks&M#bg=;tHhX0)-W<hLgZ_;@6?iC`qF{j-G#{-^;WBFnmO?<|pWj1r*(Vo3;;u
z8XTm}KOa0f(UjPp>;s5p!$N;JS`InG;H7*R-?giL2G2|fHxwO43gkN*K}#bIdlCwA
zNr^pIJpzGz>2hFwzY<}KI8Tdk2c^n94%%srP2mzo%8_?Ub7gpX3aOP=2amrCD1r@C
zAQF+7E_67d3bDcVJJHo=HpSN(HffaS$qw%BwT7L=GJGFTZtXAjU-({~+gw_AE|M6<
zaE@%;wVr$ySH%wWR_@f?ym&MDsI%uS_cQ?26*(5L9#@i^(jkDg%s&=q@LIH_S@M&4
zRwR%irFwhZkbC7xTE_A7>x7?NyD)4r5)6syH9)4KF7??s9z3aAuwdgzj6!&sO^eu^
zehTAeN<>C&0QegyLxR(ab+0AYfu|*ize$+vi80t2=5|1s<nY21Q$_$o9370gtz%Y_
z%YYta!2N*y>OeQ8W<heQUrmo4*k^J$!g}NWg${qn&77`*oIe4aBMW~bvdL+uf08B?
zTov{3jEjj7{M(}wW2CL)>Jw<Nz?|&p;g7W}Db9*G+CjX&xA*8JVNSyXVq8H(xSil~
znuaifM^BWX*N@q3(X?1dZ@nH^u?uR~W?&0ZHd@gI$~yx?8uqtEhQKLsGIenXOz~@Q
zMQmx$WYn8Awah5W(zr@@P;cG^N?c^t&6V`$gOsXyIZ|XpMzz-U+Af~*-l@!7vb3>U
z`QyNb2*!I>k28Z_V%HZV8(Z@si=plv-QInPz@&R13kR9FRLvw@z|E+@01$YTS_lc-
z1X@O;J<haTr&F^#Ho<F$1%V9Se{PZ$Oyaam^XT~!I<rxfg)-}_eg9T}9fSA!>uYJf
z&8;(a$z3zmbdw|6jvlxLeJ=g6hGnKnRV8Wu{2XQTX!(UWOv6rA51s1~wewId^_7Jd
zW?>lZVBr4Vr`Sbbc{p770MlrXVSyso6c;2Z;=~2@dI^iP=T|)r?);->;Mfg*3b6%E
zlfe7)jh~W>IneBMq<G0J6%2GT^hTEp^p`2atefAOfDbXVd+ImO`a1X)4+<hXz|Pns
zztrR^&Rfhnj7nc$a@eEWtNkiPHLlV;&v#J8{k&luP{+J)D$%1bH<li9Q&UHQR9@%Y
zmepD-iqkmB(&rxyk8$vty@{{QaK`KRv0?32J$oVXFeZ8Mcb<b#q}jZJ=J{J;3gLmj
zf*B`qSfx7<(0I(<zoZGkxc-!1(RjH+Vvr^^L_Ni}LEoA@4^dQj2}|{pyc2{&q3oJo
zmMb2BC+TO1EYwz;>>Vko6fvzn{&{_343ha%5eT6f2*pQh`Vq|+ADd6lP!(Br%yfxB
z24sfj=w@KeMNEgl0kauIho{do&;tDtD^qCBJN)*bP>))*PH(a9n~{Z46i3zb!|u;c
zQ9uO1b%7kH*Nz|koF~<Od?4MAnLMWYoc?Z~4E2K7!f=`AS+s-J_$))O`)?o3U%}h7
zk(YXnm(%gtZ<@1BIh@URC#P=xhfm7IW>9Bk9j0+qMdkmmv{j`KC((kBC}ba7^6lE~
zOY$fx;^*T}vvq?zHRxNMIv$5_!Dqc-;&Em4!~K$B&9nbibCgCiI_<&gGp#+yYANT2
zbB8P}Nf2+YMyyr;$u;@bld-r=^C~NzpNws8Az$X8%3V1po}ANW){5;cNs>IfQQJhP
zXRb^zsx$~Fv5f4k1E;Qtef`mV*h%$I$?eXsG!4V7D7Fo5pzJ&GYZl)v$+Ni1x4ql%
z;|Z7Ulm>LQxBYbs5x$}^hLnYCp9~&_hUaJN3do1?-st-*-;X4T)9~)Z_P;Gmh@24(
z?^vBG@8b07Mre?fTEDsR2I`|Iu};$kCP+d4sSTO6qPHyKGTMRN%_EV$*?YT`ja%y`
zg{MxBdoH-UYe!OBfwH2qD$-l?T8%kZDI}a&ww+0Ugsx|538;Z=lQ5t)WWFy{DJ02?
znmEkZ!z~QV!2n;@Scy{LV+HIt%$U;2%_}J;?<RS~L;;Hlevz35QYD|Zc2B1{QVoUz
zSiQL8`oR&w<*5LI$foQ+aGEl%#5^eEhg@sBK~Y}NiGZOTGvDkMV>`|4k>(%SEiF0K
zMpc<7d1RvVe2tq2E+dq#KL9JZ;X=?_=)<MKH&>#q?L)!DqK*<Sd+A11QG{`E_vrg|
z`YZUg{`wDK&yL4-_!j*7RoleC{?y(Gyt!Bb%ZWNASO<bQ4cEw=STgPj;Gp<Pf+i!u
z)ZD>CWOKF<hH07W4tu8&NEGBJ1__dP7|U&Jn@Fuhp&5KS7pClBw9+hF@#9jPXPmgH
z2g)$@)P)w)>9?Uhz08CsgjIYDT)$m<X0C-PSRpkby+{aVtxoiaHPbhESEOkiX4wuV
zOMX!6)$Sb*g(jelLc}tv)?&NP3M(WIfD@6tSusQSTD5{r!?Mhh^u{dq0e5h7c7JW^
z9KJNe&a+7mwq<~(0^p)%!8RW+4M6`VmNF)tJ>&D-u8QqMWfh0%4s^5b2AEvTa!6&R
z){qaz0mMV#zHmnYgz!JecQ!JYlPr(JG<iOA`Sxj5_X0!61cyvKEL09#M+QVK#e`3D
zj$SL#t17Cp9n1yX&F|wE|7&I&GErIBz*;Sv`Um*VYgI~^L|Oj)+1kgnIj#tqVg_!L
zfb)K-X@1Cf7X(JvwlFId$E;z-k@Eu<(*8t)23EvuRS>s5XMno{&|ag=1hw6q=xum;
zC}Yb)0P4%Z>_+KtXtp8s!NJaxAP>6j0v7sYmG7DC4x7jzafW)~hPwzv2I8HfAPzx%
z;`}CA_ml~lHEeMYCDxmS>s$LiGY0Bsv;U0*>FK>OCtceXNmeH14$iQ9O-7hIsthcr
zgWL$|bR}1ck|?R-8>{aJ+?vN9?=q`qm3pwxY(@ZSq8zC0NG_dLAf>9*Sj1I`BcJWq
zZwLQV5J!)mpW8p8cXE-QeGW{U7^|ls-gykSSOp+Y`?c$vqxAawUR7Km5V7XZ#_m-V
zMsX28ANluYFL>`h>#rroJN?+_T_k`)_4@4am~ww34Gql}UiPCbW6IW$<^I{QNmHOl
zjFmA(5+*nf5t;zWAHL*3C&qk_A@a476<1*y=f#cX+PO6m-pTX*ZV?2=F056E8;T8H
zJH9(O2+RjROP;=V0P1tfM%@e)>>P}FTl0MpD5|13OJmz;xcH0_7y-p5S@2e@u|1j;
zLFoA`8n*o5c~Pd-mJc`foBmueor>9_W4rX(04oPpZ>|Ar(g=K_%e6(N>@abM0#D4q
zUHD=}l@;NZFJ{J>c^xCLP3-j<93g1!wAKMlGMY|YJ}<54EUe1A!-02Tyvc~V242L6
zg^bt`lb`Bd7)14L#Uo?cxaoPr7)3Taa3{DrMiAamu#Fn;mQHqIhV4}!4f(&RRcNsT
zhac?$&7eXD*O5>v5Y~-JsvWlK(A$_y5>;zPC!gJ+H9&{JX0w84&LwJoA5V~j!+kWi
z26AsKiN*d|sYFJ}hOI2ts^>gT(z1F!(%?-`6wcPQddU`LyH{D6B~@OQQ4y6<6^7MH
z4wmP6krvOtHFwy|BH3kapTwE5HdrfB;k<N2^Fa}B+Or^=wzjOoDhuOVNALBhzVcP5
zlD54FQtyzBC1)$ixNzSIlMFOvLSi(!#IO$rS&Lm(&yJ%ouJYU}|IHrGy!7hTeP{Wg
zkHe}+syN&7meMU@<v@5_NGwp}@U>I55Q9#5H4jG@A53pkN6E*}MNPbEPgJ?T)Qita
z>do%dk<^|ES{H7`^#77=?~m%5G>P;{lVtU9uA%d3pc+~T0N0WQ!7T9;DY5Ag7?JPV
zd{>45kw_Ij#|n_2_Gm3_188gEBIGe6=U98-dJ#9^r_7MHy}Dg#t83ba7NL<&n^ScB
z5~>Jo6>Q^Ky6lCU9~E)B?dGe9;;eta@U~@DMw@mFr%*IZXiiZ$DPfok6?zofI(1b1
zU0APKm_%DXn~BGiCRpr^Gv+CihG*U5wAg5@8Jb~n!-Q2HXZiib_J6SBrjq0mA$4a6
zbrC>2^HeFTQK(tOJl&eYapLCac9YN`tsBLO?S`mo6!~IcE}VKduj0r8f$9^}l-NvD
z!%|i~kbs$*;)8~D0gZf4Hc{=e_cMivCP+jx+wFHUL56WwULKu`LUtj`eOI}0JH3FL
zmuI^PdOey#nhvm0piQ2UCX-)Y##}=gV#P}LE=}Sh-$5(%akhHyb!O-5c&D5F2kJhk
zRgnoo@24V$P2QntUPV>81B0vi+)X_U-<m&zX*Hf)nmzxQ#Q?G}(gs~Uf<5VG>0V?M
z1nWTEdRkerYAp`iQJ#adwcOUHqR*86G#idna>Vc8kE%sb8=e#AOf|@8fRsA!Hag1q
zn|L|2!)u2lE!L-gsz)hjT$>>;$|BB^=Rf_&?W!xSHWiUaI>JVwoGdKUFx|mTJL@G}
zxeZseh!jZj{;yD45vSMD$UHsobZos0J6CFCZo#njCWn<Q&59~7p0AJkn7;3&@ixiR
z7^{*jnv-nf7cc*a2dxvP=!MJLtfAFuQe<UT?&ntjlw15I>>T^V+*2_uRCAJAzIA7B
zzWIkWR&`#+MYRLHggX*qJXM{h#-W{MGe#(QR=}31NWy#v{^YVq+Ws5t+bs)<Uwc+u
zGJ_b$sXc}vi3rk;iB?VL{0W6(n3Jkod;C<413NL8k6^(mbM7dC$sbP@I=2<)oZnUq
zCb6>DVkEHC(U~|W@?59FA1(ukVpg!zIA~E}q5y<K4+#C>n$c6nlpd5Bv9u=k?I?rc
zS_1DHB}9CvnD@Za2lyZC#<S9<OY@?N<L3vybN!JekIZW-CDdtV4K@-|W4$3V%b*pt
zcJdZcmX<pZ-MrH#ohtBI;}k1x6rV%13u%zh4V(6vI7D(GjUF?rUEj2bchI5uaf&^+
z0hP8lZNO<KLUL!kjntzIj|XVaJK0{{{i5~fuwJNEh<G}4TEgYaqbS4|_Hh+@Pimed
zjV_Edq`6=Onx<M$AQ@I~qlk$O#JZO;7*Q^)4=>hf2=!UzCV)&j+IUH|T^~_19VHzE
ziP|s>Ule5$?VyQs1EcG*(*n(^;8ElNDs!)x41?zaG6Pu4%F+U)dC4fUBSKEc;L65~
zt30a0=ik}|H1wjM!UbnuJ*m-E2_{a3a)4umOmlcs4u$!ti2twLv@osWJbM06{Pvr6
zm8<OLrci(0H0ERi$gV8SWV{*CZ0ZsdIksz?qMC6`z*J3=IbzvD!)7{|AeSb0Q<6bt
z2`y0HB>E{vP|mO@Y)x@*rLrs2q==*aV5L{7VV5d565+G-VN<j9!gm=z=T-9n!kefE
zNWNO;$uU|786_TL<WwRaJqK(lD<y<AW55Vcknt64El<NLzI7b*5l_J@k!@+j;Cklt
z$sFm@3Gh&nnm>H}#)Ss7TiQ;XbXbziG$*DLc+tL(GX%+O?WToOedXR~X&M*d^DEA?
zndRHh)cTDv9Z^g^a+eo-#CUQ}S&3`>upp$5ZnH5*=CV=J)eO4grH17y4X1ub)Sp9r
zB6Ma@0v12M@ocb`bE1HWvAS350DDq%R}WZ(+;nx)S}lzzi|wkir;e79gxAN3oG?jF
z6j|G~NE(M(80EKGyeUoO@>4Zg>TDX-NM+m3A^$V7TX;!Gtw+xhb%^|Q!k`>aG86>P
zm)9o(6de7YkLr=?{9vr`jygCocp?9K5Wb3WikuRc<`Y|)Q)p#?nf`@XVZg*_-%+Tm
zJ7BiYlPR?ud^dA0*k7a-faJ?z3A?I~*ahXz<gw9{!}M%aMVhe(8mFTwgBRThY!33a
zRD+)j_N-wR6;W;(tC!b?*&5Av4zO@ssRZ(fcdPBRzK4A=Jt(|t?1JMr4`!qCN*<u%
z2v>%_)yxwZ@)y1kay@}BPNANOd`n+Dj>~M**XBk6M3xZ`kANyWW{OA+Cv1Rv#%P&s
zo2e>Oo-YhK@Ngs?P>KcHPB`he01*J#mX^-Tdjd)3xH3#18ykD@2;_s6EdU!0{|82b
zzqRj>y`PSP2VzqY0WXpQ!@$KRjmy-pFe}5bu>6>_!^fn>Y*8u|Kg3I#Rz~jGm4_M@
zMU>v1HS+Ve8uE4cJaZa0J<nllS)}svCSqERMvZFZ^9z}vVa3uBD2?8h=;P8@oK_OT
zC~e1_@!xusoOkElT>R;rD#!h4XNk)reRwh)@EYx436?!{ZtyW8t_&|;d=>0m$X<J@
zL<EhImmEB`5$88lp=~asV4+&ZnPjMM<@gP&JPzaH`DxtUx+=_vV<7;bL4$0fRk)(f
zIm?tuexj|}pb~2vu;Zp|K;1PkcF9S+3PXiiQHJUB=ef@A^t8{rzk+Xd*Ebvc`jUm3
zjZCK&PF_I3<+Tg(TasR){p)(}o8wxsktRi&gwKae&Th$>8pFShbr;mf8a1yLnhp9h
zdqaPbA8UqBMS+uARq0ba!+syzH3CYOhgDSG2vwMosm1H1svcO^-26H^tC9mxN3|p=
z0h<QJll;*0!T}g%d6XoD<pH}JYdF9>4^PcG&{#F?xw$7+KO52L*<U~|_FO>}GXg4@
zg_C<`qpC#!<rMUcMh3#$K+A2+G!V_k9U*R%RECP-I-jc6DADi;M`rB9bTuE(h!zl;
zScX>Tw}TSS`8>JKSYtH2@QBhlNu#^xC_icN<J?;NmT%5>yXGiLtEfnyA8ck&_0k!5
z5zRJaH98QDPJ}U%>uFHYto3E%p>a*>Jxar{EN`9nc))G@+f)dlEshz&=mi6z2%fT1
z1fUyVKaqbRdml}CARe70^iM`mZQr6rCk9TWO%ezJT3IBvU^FAC)Wl!`j)<U(2tzFf
z<7Sa=K^=wg+<dt2VbI_jarM9oHk^*y$JOvT#k_-nO88~IweKe2+5sb$7J`@9-V~iG
zoL{vaT*8bU1C;{)teI=bX^GEYebzN=AY`s0{b5-|d!Wm$V9XcYFs55%iMXJaCTNQ7
zuu9lJ%%40iXwuZuw*n936W3gf^zaGk2P!@T(`F#*4Ri9S9*4>pKc$C+;nWAr{h^s1
zzywTKQsBIARb-x%e;AN~)upI6st&<Xj>V)-Kbd5fWEjPr$jpjOyDO0OEw;4Y1e$xU
zcz*=y7(Z{cAdAZ)3&R}{yQZDmd<4Vz{_iLQVV9e(!uiXVIIy$Ezu2_)Q^nN*tb;p!
zMtndERBkm=XKCeBO2f2D^K6Gz*WKvXSJhv(PsS!uRE2q*Bx#Z*X;`jNa;h{AcaS7)
zT$dN4BcQpG@#CN-n&5D{WR43mTK?jZK7Y&ru0AU_&MXHt7jL8(SXskySr%at{&)p<
z>AQP7#rBAWx(v~x*;}j49Sg!+Zz?-D%G^mP^n^+%an)uQP!-axkXAJO-6?A=fpiRW
zVJz06Hq37L7?`fb+8Nm*+Bm3B&&`ZKbCwajc6P*`+8HETJbL#DgpV6!8PIK{vd<(X
zOGs~7C2^WqIf~06lrF)X%_67pUC%u1Gw>||8Q0gYQPmrJRDoiMr4+H((}inI<0LOO
zUF+t+layf|6)~WYaaL5t@+U`CT5P*Z=IcpP%F;K3f$oUq0G0Xas1jqZ9j`8(!R1n%
zu-FS7sItn7Jl=MHnBhDR4PyBM`M&mtn(x}0fs>G$f+`F5@o}O?-Bbb}#T?<a<FeqW
zH$?Iw`GW!EuwXcU3DW|W9#2%3@un~C<>%Pb202#)(yWduo(FtG_#Y8uUcQ2|O7hIf
zK3~p<39pww=w0Uh<Wgkl0#ZwE%7ZahF~t$fI1F1C7DZl#_ZQn==c3wI7_x&tXH)KB
zj~bJ&MJ&MgH%Y;XlxBPCWDw>AIX8C^vDk%7c#5-AF~TXcZL6M0b{5tztbAvyG(D<-
zT0KC5Ih!hZAMNC>^BTo>w#CU5AcbekWeWFUjCMrpyg#vVBW+RW;sXf{UWcUTH6%Mt
z<G84H&;{7o3B2S`NkoR<dbeEUwo5aa>o0!h_1pA+Xg>}COY;c&9VSuYAi4Huq)a<d
zi;<t3Tfx?FmZ&?j6mj34b&SVPFLRI0BDt>VXs5L!N`JNn#zb&!9wIKwWCz&TdeFE;
zV4pWd7kQnWLrj}+C8<ryEQz8Wc(vY(1q*2cu1pcinFY<(I+(*AKpf64CrsbqoT*1=
zF%M(t4$T<sWXiN%SXRxXK%<!-I?G0{;$Br%gxL<p?GV4EKJOJT-LnBvn{0uvstk11
zpUrSEk)0Dh3*z`f&OtV>-8VJ#Ye?6IC@bH5`Yl*Hz_}}1A_<EsE}p+7HZ&geXYN$^
zF6-?E8gCXxd7hWgkB*K}@Kt~O_AU6c9&o4IFMN?<y39yuH2Y|Tj^5Rqj2z=MEVCUL
z=-tPG{t8`6H>1fXaNp7_5>nT!2@SvSz(e%BkEPYH662~eD)!)4@VB+BezBi~-62hP
zp$2P@a$ZP7nvamR#%Y?TNf|!>$asqH74_9R+dt(d0nCYhmm3QiFfeu37HC;!VH`fc
z`Lq#by<GKUhez}(-h>cTvsngnGqoMle7BA1GdzO1bmkmK!I!=jlFU{bTvn8E9LG1Z
z&>wK49}o%LTg(zxNOjnsFhJ<@>m)o`oJ3fdJ_va9*(s5XjyggO94wZR1x)hj^_(9~
zy3$7;{Dk*B$f*hA1dau4uY|*tQeObY7xOh{<v{n4c%gtW5SykU+2l`#_6;eU;b=dm
zhF(=5#n*he)bOCa1V9}aQ(z1`n8E;i!ceYg*h;}`M?fQGtW-|pV*t2i+7kvCK|Dkn
z+*I4Ht@bc3<23)zl2t6ci%Gs(Y!{-p1>7wZUYIH@UbO_`A$G(;8v%X9`=RmEkPro#
zPRgJI^)3+Z$2yRQ4aKk<Ib@_Fr>hCu!=^vN8I0+)7>2RHxA3+A!ttyGeJ}uMt3Bm3
zNs=85FJ6EA9(tO=xwVSctb<k38X1VFhpcSaeee$u8jJ(z%gcX<T@n1_IIJZ;Ws>f}
zMC>Vvk9g#f55SC^f#|PBXF}2&BY+>wM$h^eF&O9%Hsh}?fZ^PB#Gago209!MVYJuq
z={Y77fKLGz-s}LEYQw9x91U)cC^b@4T4ZCsIi$w|WxtPBDwdZb{r7OD&VUp!Vnkqs
z5vCXYJBUrHU}QhIevoLk8`DIgvB==dDho0x^CV2-=hsFzs3u%xLXa`?lwiQ9ok6IZ
zlMX?`h|ZLr!oh(jG!pReapP1=pbv6H;w?|)3MCL*(}<I!$)sXIrw+MCX8aG>eI&7Q
zI;vg|H<W7{xzk}_n`@arf=C8I<9Jf>ujtOfgAUJ+wGuhXin4ruO}CC*FSomt$1ytG
zROO>cC<U7tvX3wxSY=j7AW$%a@=`Xl+hEjLmPwfIz&h#g72Tsn5ABwEoHOdll5!<i
zjnXs>%jXl|{;dBpI(ai$qy?>obG;-z1#AzNZVA$GiK`95zeM$=AMuuEZy70{VQxvc
zzZzC+sm8K8zRv&+ys;ln0ahFDR^t#(VM#_QE={?vv`uk#)E-~#Kx4+yZeTiQX%vOw
zt=2vdc+hw7TCmd3%?C|+^v%)n%KR7~#S)}m)PfiT2}!cocSu-?I$6K*FljS*!~d(L
zU!G+}^8CAewolFu?@fE^7yoaRIGJ>kcs4v}gK)$u;VzEDG<*I{@&(P6-q(e~2e7ay
z@CrSTryC(L06Bd}+MX6@KQJ3dr%5qcA|m+83M=z0tajj<_Q+!BN+Sc)G&_Q3tkZPH
z-@X8{3UI?>s)9QF_XE)mxClTn!Rn@(>>sj40xtStk*~Q1;+Iui6xs9h{vU2a${8k+
z@}0`C3#L!JOB%BaV5Ho-vJa{g4hi};A<Q_-(<I!%W_TR^{3<H~HT>oinN*C<i)*9-
zAwF<0WPc=^d3g<i1XT5ArJjwGvZ{8_T>t4-it#i<gakN~o`^G5q@$4p+AL8Tr&XF)
z&tI>1bJE6yK!&ABl!9|A@^$cB56ENLX@IfbhLwVednmd`+<MXgJL6QII{J8L?5qpe
zl|{`UHVDYL;&j`f(k~>hqap{;YjA8x%T0e#(`NyNq_tpdml?uFwBd7A(I6_yC@pqi
zQGYi-;Ms5LD)Rm^(z@~@k?2%Ofc+7V;6O{NITh^7QTa&_2%w?qk)k{hwWt`iKH*ab
z+>?eJ)()U350fx|eh2y5RJZQ!-@e-S=KPuI6S`s?d@|j}X{Q1!M7LRu5Sy9?t%brg
zDT}CjKJf4u$j1Mcp)n8~ZV9pA03`-Q$PvfBqoFz&fpH{y!xm^e<U|Ir<S7wj!PJpO
zj!~PgK2y8X=5Bi=SQbZfs7`Ji`&fb{cGc`x7zb&>)xFUf{;jW_G63SkREra&yQG*9
zI4p(oLTqAtm}~m091?3ON|fbEu>*&LM^;YPwAMGz45d|4gk@M|K&uYJY~`SelOoA(
z9iV%_js10O;FUhP+miHgr&=7(epd%=bH?zJ<+9JBi*~R<odk@jQEN4Pc?51W!@AAP
z_pCMwT8&pgpxMDS&@U~sI7*A>k3&4d<lepLe3k$C=byn}r*RnH8d&Ln*2DX^|N6&&
z`KR<Bzjoi>e*2fYUn4DLMOb9dCoSEs-L+h~<D#jZJX~kImTiVBOMWJfZ__h*4N-u&
z9cNwAd1GPLePGHHkB~~6$Q_6SaX!cxNEmB0X1I!x#bI7$@eYWmKP4Z1w}qTWRZ{Ii
zI%cy&-u#7fPsBhRk`*a41<c3MU`LW`orCHN=+2QlL~9kBS><2Z5S%8hDf47S7KS@8
zK-dU<T%6o&kF?{cTg&$EI=sx>4pEJn(m8d{<(FB9Tp6G-w!9;jaz=U*`Zze<!;jc0
z<m$LPhAl1JQR>9o#S@vG#6dJ$6z{B+@R65!nS?iXlQ#$gSWr~v-K;3F3$@TGz@(f5
zEj<qFb^?4vKsiucfzdyGTVht!Mq7v)4&0nTHI}96+Po~Hyt=;#*<*^XD~gIn&rPLf
zl(z!_z^F>^z3p^0!E49FA*hScOll=6L`9P4>GP3+J9PqSa8BqNcz>vr<KsTCJRjxx
zdWj&ztul^RFEhI~iUznxfFG*!<S^k=vnd&N)V{SJ%rix4FP>=8&4ZnOYCB*}DZnMK
z0n`g4^zNW#xjjO_8kt1{Nw1tTpPuj!3qK+a1E5FoKU1>O)|eE<Y4sC2?pL0yk@I-D
zC_xY<VP3^ng5W9}42P1n_;D7G0OcLodKS<&Bucz?1iqv3xg16!{MegnN#Tg)>rILq
zuGd_u%S5M|&9MzQ6$QA3k2X>XU3g|?9>rEW{F*1<yvTeZHT3207Z+(%6x-e!8qsgg
zx1ZOwA>;E5omUSP0;u(d0q2G{G(7^^1=D9xm3I0#CtyQ9+Vre{>uaN$0V30k7>xsR
z{6Guf!a5AoXyYxFx8=(NAfF&On0k;<)E>R%KtB*!6-y2b4(gh$x*?<R)K~~|`c>p8
z;s6-S8o9$AHTvLsrnkT>MuVT)sj@re;^IoGaNC_AF0W}5_RSFk80pXPvg2C@CSp@U
zUE|amVDIuv0tHi&hi!5s%2O%^QBoV^nv<JEa9IZ@O2RUW?=R_b|KXpD`k>yz4O`m0
z2+cN}J6{JR9|`;rBB&wSYy9%z*&SrIT|S6i;_wh`SZX_X@d{EsiK?G9ih0_Fz2rUv
zBi3zj<!`f0z|bmcl~10o?x5@{Jk7nv$(oo)lt)=v?Vwxw!0!ICW4=RT;Gv8If#;ZX
z99tDu8OZ`1U+Ad#*kr{4H0!TobQ1W15&wnrFgborYtBiA3J(Ts0VLCFD2qUEu@QR`
z4IblgnsROxAQUA)5&6%v_zTaGLG+ovHwZK|#0Cd94~((MU7)y3)uqlg_Lz>zbeUoD
ztTGzXFfFol2Mww_C^V2|i1DB0c(7&*9VXE(tY-a|Q!@H0L0x@@HGAV+p97cmNSl_K
z8J;nRvY{25U4aP@?y*4`0JH}%=UH27Wsy|j4kpHaQX8B!k=>3Hy;-YTWzuctS=(ef
z0Fm}13B4%bT+`Sm8S&dBlbj@=(MhInnoxsxi7h^$fSfMWDv}Ih98<pqPQ?%Ak>u^L
zW@P!d7g6f!Ari7MmR=fwjWR`RQZPH2s-e#fIx#%H!7(n2!aNDHA4aV%Vy;wzBg?Wm
z>XkM+IvKD;gn6>|5YuU?#d0l+q9o3o_0Ppch7APBVtOTZ+nz9<WHkFl@{*9{5;h^i
z3s%s-S*&}rD2lSkN$*{}FuVcIyeW9?F!3QjhiRDz^^`E^V>9K>m)J!f0i3>`pOro`
z+<M{a<2WkspGn`15p=Cxjhu4CW=<UzAoS=CuN|ZSl$e@yMk#ri4nu7!V}Jax&F<6$
zdJ6m}E3(Cy^^EC2p!FMGnv^(et=O;%(=5HQCuNNIE^(*OM2*4@t`@coCHY%SmjH&+
zGJwCPRn2Pbm#+f?-{5Ftfw|_?8<!1+j)3QPfKo*g{^@ba&@_0G&PFmA)xn%`ipG-1
zY4AlDd}L!zJ;JAi7$?pDKknYO$8jvl68tN!{XE6u`|+XCIgP2A1$t_Br?C%UO2B~b
zA~IMLqB5LhX5{|*1?_DVB~sz?l)652SEN7W(&fE&&5j*A=N0App-_IAv06nza8TC}
z)4pfIF_$*qM%V`0k?-A58_BA-WDB}*;?l5+le~(YUED>pFJwkf4~K_*r*sz;-@P(7
zn&KTvR}-w(q==l}BmxQja0xF;!zwGI$f5<;jvgtcPF3j0l=w3av5G}n&vXv1wylBP
zprafZEIVPcilzTLYq@eZ%f@cy(+h!;1edn(AGCp-Bd0c{JV)aoHNvH*7f0o`r`HT_
zXc=pYeMeOeepq-ewv)B|SMw~3tQpV6!!8&&8vT&}pI~$~G&g%9dmW5)1)?z*{(KeX
zMYM5iU}xSfs<JFCVfR3Z5|@jl{vf+($AB3o<NRYb*qVRu3>MK?^uguo#-mjjJvGV@
zV>DQhw5(s{PKJUN8y$$x=^bE3lR=zXc{;M;;kq&l;Il^6=LcmAo7M`+hkFSe?Zi!~
zK{32(ch#c5V$6j_GZPHBG5pUWM0=nhL;oKwqfR2SYRuIac1V;)alU1Ps<-5n-dMz$
zKgYb6!Zm@c!nd*AskQ-Wj<bWW!iak3^F_kJ#8LIz@x2MeHF3rhCO5=Z{bD<yU(#Nq
zfFq5efbLf)60`-)ftizBv0Vk=4L`W5ykCd_VVLII;!X`>S43mqcV;V^f7<$kuNO*O
zI2DICcH!-mVH(AEPa78|3C0ax-hiJk&ES&MgE`DNLBOlvjhAZD_>sr7HmeauWqPZz
z+b0y|e{bHK<L}dweQoO_0n|5%%euiV%z1QO*hUSvtUa6U!DymW>l={9`arRJXYyg1
zpVI_f4s>_wnCgLH6>>xBH`qC)sa%4T)4pL299GI0Lzbjz(^HiTA1}Z&4JU|4HtMch
z`z2W!R^=0zo7_vs=|ZzYbeCbgk=I*JS?%4oc5t1Tr(u(|ex~*OU3A<VCKoY>h$@PJ
zE>6h*P5kmHVBboyR|g8{X})KChYSj%*xhtp;tqH34;+FiJ5U71yOv5D+U%adWFXF2
z+1)K3bOOs{pgsNC5a&Q090>(;l?N7Hj9Bvp?P3~fsUYnDs<5@FmPbWZ-CBlz!k)ex
zgmC4ibXSAQ!%Q`UmVU-AeT9M%Cq-TsH&QS@Vd*}HJauVeMUI7JaMoQ9WV0dDWk;|V
zwr8P8O!*IHQ6%Y%z|6U}xk>7zlVm*Ve(Bdh&@_ySs=O5h{Ue^yy_{^PKxWcvu{*M%
zW*!#-(tw^ms!2)-4z((T#i?vy&VfdA=1SmjeY>iBn8a08<?%Dzm_In(j(gc6$JF)2
zNDH+at~Y1>JVc0%9tGHtB{QWaTtU`-8%VM8HdPk%65NBu5?Koibm*go9d<$0CPf|>
z%Ez2NJw(sUv-DZu*H%RIaY~nlaDl3a!Lc#I>w!6%W_!s_;xjrGYgi&<GsxZI`pFb8
zGCTq{6qyb_B#LTRLqP;<b0_q_vLnMPjf!WYVcwrZ;9tlP%FNi@+&8VpTM+cpY5#r$
zR~RmFarY7(k4TcXr-r$Pqoe@j15uv3_w7Lq%Ii4+%GGlQ@)?Qqxl?qDZOZ`MByq`J
zls>qtV-Ok@Llj~Hwh`u?K_wH4R}T1!sl5(t;@UD(g|o<ANVSMM(03TvYEWrmL=umO
zC4l@0fCTMr_%|9#uhL?|B&#03rPs#o`1|hiIv^bm7s~vT8n2Su!>a6Xw*DkskJCZw
zhi@$WsNfQdwT?%{ghpeIb3i6aFOJ><7w$X9%Ic7x?{|+8>_Kl{;H<8ZNRqNFlgD3(
zTS+AT=UhjCr*i?!=SgrmDU8Sq)sk4Oj0QBO_oNfM^5fV`#)URF27{}VhbV|@@r#Ds
z*+!N50%%J)a0=%ldH{exf4|Po?=$;aJljWe+K~}LTa;l3q`z9hNa*{*l)!+HbaU#@
zfhp510N=QV?{1miK&m+A&59(Wf;ObpfKS7V@f%z-XwB0y$(}%O=w3sN)8)_9eshP+
z+6U|!*>H|~>fnm%*O~TNl2=9g1X}fX(`fl={$0*#l^=}?dO!&OrLVE;$Cx`c(%0B0
zahioskokXJo^^GNQOO!p0{k~8AtZMVZ~xi?W_cEc(c`z>XQ~ri6uFjgi+Rzk#nvcN
z7VJCD5VRMH+%I5}LTtwEJR8;*ijoz<aKp~Sx@bw1Bt@LwIO?e+jw`x$R`B8r%})xo
zTcC6rM-Xtta&H-*q46lGt1PoldYFXPvrvxEeep#C%ZsuAr*j$CsV}&jdesr5(zzLS
z3L`gz{8b9p%$>tv-b$08rZiZRI7*=TCp|m*eQ{7Ei;}EL%WUfa5bG<@JGYGjOj1u)
z9!(fnrp*9zA85LGL@ps(&_PNdUh3!XGmX<S&hFl8`*A_%xmXv=$w-%-DLw*C(}deN
zSi&MzX){RtY`h38efWi##~`~8>%W=yMf2A5eJc=$cJ*l*+~ftOLWR^H(k*x-!Bh@l
z<bc^@IY!zuaLP5to4i5ELqAoH{7=+B;yTlARAo(qpgb1Fg8z5Yc4qAZE^E1<k+v<_
zVQdh^j^ZdwvKxcdC)_BX<omX!kMJ-5`BeO+`qRI@{m;Lw6x3B3r_mD#1D#zDmsaG;
zJ;I$Nb1xveD4R}B1YmX3SC164tgf%tV2m2$(21cjT!r0|DzC~X#NmIi>>vP&p&pqb
ztStz3Zp4qpAJ5)k)D-9w04~TFcbd!)w@xl(!$WtkIR!0x7h<y`#W<^IjVwiseV2i`
zM{<8LWd`wJ!mXrEM?6}%F_K7_ThCsao>n!wIcP7RiEUSd+}SY;Sx$^}dIQY^KP7m>
z99neqPBu#G$nd_Kk$T0ReyzcgmuZwf-r8v^o^x#|=%?8?r3;O_!7n$p^>`fh+P#xT
zNtHao$j~PB9rxuK>qzB`1Z+e)s?(U!*#<adJyB<O$lB$sM5tys_BIpHYe=eZZTnSm
z9>vi=z?JU4?#L+2-Do>A1ua%a`_5D&f&)=#g-Z-lsWk|Fx}oy$@yGasHt`x8z2t-h
zzhkpy)G@5eFuHkk=o6M>qk_?89Y5wivvmwjGxHdLsOf#@RzY)|3up)Xj^iNyuCmNf
zRcK{vB_)6a4`0jMGoK52HXyFh0&G;c4JxOd>ZhC!O!hoVOc1<e6=aRV=UjMTL_<U+
z7r+vXv?-8))vm=r>86=Lxs%8m!63!^2%}&eg>lH!d$kPAyp}cr{4HvrLJ!d8HUdUj
zF(J%G2%OrXosnt9zgSG4uvVZ{2K$a%S}>#rT?Lb(jpCT4t3Pd7sU7RrVBgUjQR(d2
z?b5G00YzyPhS?L~-ZwasUA{(0F{nN+@D`e5K=%dT+;8ku$aW?KDG;Zh%uUo)Qc5BU
z6vD!3P#fN$Rfq||4x#Od>FIX{xrm9c{&VZX2uYb#W&Q-plp9T({Ez8F8V4E+B3hD#
z6rnHY34B6Km69Xyr3m3aBNN`Sf`XcdSq^GEfoI*!YI0YEUx#sK!1SCf`GCZfn#Kw+
zSZQ6ie&I%GSjFWNiC=FK2U`(P(z#|GRCA72PO$0P?oP5iuc{{?-rw0jwO$sioz+=w
z$0)y{Bw$+vkbRjhfoWnv7V#<*O^(%sFE7hm9g58`>hdR187CN&tY4iPiE;tjgE@CQ
zD=0$Ei@A5#&s{6c05pE&!)f>fw!4D|Q&o!Sf^9UNn<@!Z7$Ah?JHpe0hNDxDcYnJ$
zQW;idRU}bzcjW#)Z2v0|;b_G8%)Gv(mHRCTW)&o^+8%83Wwt0&HCTUWT4841;8PX0
z&PK_*DvYC>O&xWUUiGcE=C(!-&2K!Q>@zu&h#`DC%(f_`2(VjlL;>9<&JYxFNzimz
zHYpWrbwhfb4DX@r&maPW{0_LrvB%1)R;c|iyeLB%+7OWew^PTT&Y7*F@eSuSDga?f
zJ^gTo`YoN6xQe1M3GXjNaPJUp51Q;1e7Np&!jmTTF78!XbP+N2aS#)6v5a+Kk;-4=
z@?(E$KKru4M>bBvIM1F@D(fz@2^Y0VYPQs=`<AawLwRP?YV1Id%mY)L9*BRhMCmi#
zZI<{XCFHeqE=!Xt{r6*{dMO`21MpQU0nR``g$$7o&Y&mTZ3Sa~_(^;$er^e>dr%Z?
ziR3HI1(YLP)7;MEyvma&!k9UM{!s!E*6y4-J9vWjAtZk;d{0}S*u$`4hrqR*o7#-Z
zlK#H@I`R^*t>t_4nEl{|6Bw0_gHELfFOCd5yA5}!pyiA$;1Z+UY<liem9Ke)hD8?V
z)s0EOCp_p|*m$#V*vBlrI%o}8PRaXtbfOvBI+F^DRYF>_w6vlE14^^V{UXjjJo$bM
zh@}AcJyMKlG#0j=rVcyK;V@d_45Yjr=2|OnU9~DXD<?4)yw0di*W+*p>>dGP`CW<+
zoRxk7Ar_I7;Hh;@SV?njx9`~eQ=5qLv0*c>U!ZA{msOlUexKc8aLoOHYZic|Q`?~-
z^`g+eOl4zapyV%bx@BaMO3#|DXw(%Sd(4(Ue<mfVN=(!P=8m;_V%QHSJh)}|RWn0m
zcLMwtaC&qkrNtUfl6)#g?3A&ccJGjqeSRvT54{Fjltmat<>Mi_zn{8#_)>S;kNaQs
z@a6sYE;zQnsdWC6rZwz-$wcy#x5%)g&&=~X5w^CLG(~Zi<>`%#VN>2+dHbe91r27J
zA``=PRR13WtnjAP4=dF60B@fsryA5E^m_tB6=D)iO?+u)5AdG@B{FvaWX&+<>L3*x
zyMb4Q$Xm(&A5r_2;YOpRVzHH$6&V6(f7P4|6Qs=cZh_1qo}@RXcZg`Q!mxaUL%LLW
z8lxUUSxp0c;8Cd^4VsGh&Ue$J4fdUm4YQ>Gl(#cFBW%2Ov51VKxGKxo3Kd=312|Cu
zj|bGVAdcwd7t5zC4Gu65b>tq<5_2<(k~GT8aO2y7%Zf+<s7ZO^`AfMCO+;hT7Tx)j
z?4dd|l%4o>-V3_naU+rOYW-sTM*%u?JRIq-+pLl6orTXE=V6sQDMTAt=6zTkl45sO
zyfiMvUhZY>oSco*%0yl=bGRidrKP*@hNChs(~S>^z#F`NOkgwRBxb%W1|hRTG;PEu
z16pzTp*e}B_@j3hB0baNr4EvG^UNh_z#Jldo>=oSpa8^onvDgbVP%DG78WOrqAJ<A
zI6CkpQ^zPaN6b~_80tVec5j#eb{0j&{at1JsK>2@A9O9D4l$Vio&p@+fZ}&0e~j~}
zcnY<kJ0oHj&5Q&yrBh(YkD4xE0dQzfU^vdw@OUE#jhv+=QQ=H)#v}VsnR!EHiOcx>
zbV+sQ8k28(^p#}1pp2#76rleaIoF<WQs!B8W4`hUPxv0xKPjiWdfshOV23jbMu3f_
zR6}<eKhx>#2v)?&eIRwA*&EU$nv0cTy2fTX03T_JAy%BI{<|nGZ2W0eP@%2a_<6cC
zF_YKi${|vx7pH9~;ukYxqTV%~sR&-RButVdDwFi_^?{E7S9Z?@${C&ZZz`?|hj`A-
z#q7)0Vl*X$0vq;fXTOP_FH&Z?;1vf|pPjRzJ;h3|yO%SYml45`eaE3j29tb(XVdM~
zdL_;BB+Z^+l>4)-zEvm*r<rTJuEd)$EkVlcAfas!c9gnaJr!{o=UEm#0qU|brd}G4
z2S8=IPOR$Y$zct~Vwf0lqT7A7Q=g|#K_~oJZbi;d9cVDP?iSzv(@s*pFYPp|Iz#pG
zRBl>X!bU1$2BuI+!W2Y&*uRq5k~qVunDp1L<gJeP1nUD#`Tm#o4gW6aEOVM}wmDll
z8xiuJYU?eW?l`ZaD0>2r=6h$3mu`@nH9cU}5M$;ih_-Mwn}=E)r}iQpMwJjk`kD?x
zR+L$lKfXcwnd8;hberG2IfGPbIKtFg><Mug%4~F_2MW|Q2g;QgLuRj6(tfA17f@SL
zZ4?F`D_7(6FH-igSZ1_r<-lZVnPgS=_-^a@axbCr*B%O47;we1akwtZqc9H38`)c*
zumGQ(iMaV$+IvXTMX%ezmIxr!Vn^FXZZxB3Omo0as`zgV0gb=E+tDyA3e~QJ`q9lX
zK#i+Wv^)u0MT8A+jDT=tfW9myLvXCr%!)&Dsm#<>5VYyp-HLf3L?l7Gb~v|I^xRKW
z1CT}U^B`>+OJK!U;9j%L_n{m()8tiVp0&5}c3sQqvLuY6G=Dr2a)(aZ*>4!uCga-1
z0$_CGhJp4(Sh5`oos;FCIJE|rMDLgfIqgx*TS$luzM_c+g20$%7&d^SlK231b0fwj
z?@OgmIVXiQ-pwsoFAic%8dbM5_Lmi&pv_C(V?vM)_8od?@VM$IV6hS0nwON~7%Hd@
z8@TAk=AA0vUE8Z+SQJt5cpAwEjknBWCv~ckC$}+H*+@!vHaX+8+S(y&1?tEeW&YLK
zkt9v?Fi#$TCHs+29B4W=hqkMImips79oq^d(P?ZJ8IqqxH%$JtRtFSmQ9XgI-@4P@
zCB;ch-KqI7@*O63UEAU4ggLy{N6+{_;CvK$nXvZvY@$h=ew<ED^UG@b7=}ffJi+kH
zoft)5n34zewIz;eQwDP!QIO*l2(OQE5TtF5B@?AtmQ+uG*W6`Bj7TLXY}&(^BOqS&
zK}}z3%cGVp=M+nsxQM%7Qb#ceWZJvQ6fl{qiR!3q7;AJs-Smt=x6V0-r!o04DyNTf
z5)bHey!XUdO7KYGl{^2xHZbLBuM3mL26RQ(_+~XP0OV2DI?rC!B4%NZsyX@aLrUF}
zxhwRCH%r|kx3C63Fq!D|io|BfZ)Go6VG)Mm<7esTUG!PfxhWeJ+yreDs39j{iBm<S
z=^Tb!n!yq^seG9A&X#5<=bFMOR*kw(>H#u3b<M!ZAnAFMJah*+ZqIs{awoK%LT|Ib
zI}`uFmZSCgWfy<Vxu;!DgT%azXxG+i8wgyBxgKfTt=-~Tk;Y|mqu%D<Hc%?ahnt5{
z-G>HzQdYA$^=B3t%~2{!amSfIWk)*Z;6hr?w5JT=)EI$c5Mh9umQ=Y7-p@*!gSb`P
z#P*l=P5-j3iL`dWzN5^eYdh-Da0CMVUTzrDa~8oKE^LvBgw`j-_oC<<n6{xzsnbN;
z2)Y#f36~~avLa8SGTp|KX-A?1O^=L}Ll((KaaM+D99NrOR+Q-v7wlH2SId*kl0UA*
z78&`+ON+__RuqyagHWE3{V}&NBDSv8zVC1!ljyv00z{i3N#qvRw}{d>+xFI3Er8#b
z=s$ZJREzxd3xBVS@^s_hGjNnScyhbqCD<O!vfy-3jcsiwYQON%lB|d~?yT9(DK#F!
z?L3!<<USr%7q8Um{XqO<;@E|qo+sJ;XS(iy+nl|Gt_%nIDfeQG8}E#^V^$T?qhX~O
z4g=-^x=pqN)9(@blk{tfUI=+Zuz(X{!!3j5kj_DhS0mQfe8(SV!$h`<ej}Gmct7gL
zIlWPG>4!grN6n)4y>Sb&FeG6@82c2cSx@|vDyx#>`P6AYU>kJF!BA1WX=z3Y9o*DF
zTLNlSnj8zv2`Hiqr*%hX9uAYyu%&Zmg9HU_yi18%LFd!RhHNNs(<q7ZG=4l7bM`c@
zU@q5Oa!(ykBN%?HQVcmr?e?8mv)BEmxxJ#w^P+nEuD+WL1CwLU)MuD`L(pDllpNWP
zj0!@LByEl-h<a`3MfB`Qe^17GFxeyinAVcgTtc|18PSHLBKH!A8IV=$0iR&NN~oj|
zNQ8BKzhW~m7w1)#oItZg45dO=!%n1>*R_}!a?~`^geRVwa$K?2P0j2(8utdKys4cH
zE(?7=u1fF*Slga)l^03$49tKtX7JaxuY;dkfL4~`?#zGbD|lCS!PojXf9z-9aLqr~
zi&E7tSM?tq4-d(r9aG4Z#3<YlbqxMa`)D>m0dsZJO)I2wlc&Ksa7x=g!(w(DX9+?G
zGFw0yk_^;{Mi2$AS2#o%zf{$8Ftf9mY18gxSnovVd!BO}Pv7hJMVJ;pUb0>Z-Sc)-
z)BC7|Cq_M{Xp-c>3ZVu_Xbu(u!&lpB{7@BzQMu{bf1?ylh0m4kfKMI_{V{sM_W_gA
zKkubi6-OJ@cv-y|13xchVyAl<nSC5dmsL#HiFh~1SHM3E->X824xE@Fe-2n1&lu4N
z)N?a<=KgAA$((gHHwp#zoL|aNr7yV(M@f<wnJr<joPPi08L7ovX@_<AFMUl%1+Sp_
z?l}6rW|JsJl{lsIRT;e?T`@aS3baTkuM9834of)OisT<@JLj-vGd?@;wN&({QBtPi
z<^dKH4T<Xx6#?9=gV@NabrB*De37<1B1I8Y#LC)w0bVuYys&yAF49t!9XS669$jYC
zh0L!s5E?~2{#h6p9_0D3Wr=E!oO-LD0p@!+n}?N~G`&%ak5dRi$%sZV%)GzkI0F`C
z6z%CFnh|UC<w21cjBYsjj(?vMdRq5c{OeJF2#?)3NKK{(Tiz)7j9u6uQC@A`AZ`Q>
zAImJpxcCH5ae7Fa451vfIKu&NtUZV|KMYiYmoRsv6z*kI57SCa0nIH<sTn>%*qGD0
z?k<7Ym_6!&6-Nn+Pm_elsb{g3cPZ;-U|2{zAUwg(tm*s4k%<@s<M}Y?Ng8tEsb`>Z
z&c-osh+sw&M{M7v9egZj8C=+2>|mzG20FQT&clH9Gw)tB#V>54D$m2%ZlX(0(e^yd
zE)$zffw26AKNXjGwdqgw%8TQPNl&l-PW*Fpfd}N*-n+EgeBmRtYC3dudLd<3l7nv0
zQ-}WtU=Lc$2;F%3L#3btw&6qZ2ZH--=6uO*SXQQ`E1I^(?D@7F5A_2~iGkp*t)l{&
zeKpPuLN7g~FuDJDo|m0DhfyyzzpntUKHrhc$>6Y4`hYM2In-HI2|m`+Lw{i<38)ZO
z%CjiX<MIitwC_TCsh1`Fq%}y|Ef`58`7=Aq%E1_kPLq2>tG#6~LaQOm)yD(Ze8<Ax
zaYEK0$}lYR>Q=e9Pk0>LXu-?w&e)$&#e&f&E{~nxyp2g#Mz%v;BfnH(R%TByPI4#e
z@cai|WRPYigmP4{B55`)0l<}?F59(2IZxs|dIIA4=ixC|YI&`g_2lxDhB`wTAg&J1
zZEqWorM2FpdS;P(cu_HNWwAg#(|fs}Bh4Dn<<}3*PV8z}K<I3uf6CUe$;+v&$u3Mn
zkM`OuS@AZ`>Pj_{T~ip!k|?hp&)WaI-E*z@n29T6!M4WGslqG{9}mwjF!iQS{HJIu
zY1E{du$v@_CYr`trjZwMoZdQmt_U5y*%?*Sk)`ZO(d3EbaRA={q(urAETcqCX0bt>
z7gbTjg-MJT-pJW3_IR|w6ylx44QPl`y2y~oiz>{D@cLh4&#>XQb{Lv>@C!TE(?5@=
ze)#h3&;9fc`af4m6~%FyR8f@WWmHu0g+CdWMRfg7(#98M5t+O{b%6s1>sJIX0eds3
z0)Fn6yjhLMHCL;n8?ZMz^~>)$&BNF()770zd;xA;NIHo0J{Jh7;4&asu)q;Juoynd
z83Lk+Z5Rpl0HID{o=R%@qfCcn&;;^G?Q}c3@!+vhAU1M|$7$1r1uC*QsXn>->FVz7
z_W;L<ZLM=jnv?k}D)!3&L2af|t&Pb_Yz@;aFN(((FZb}glc+S?ZXh}d*bnsI6^z0n
z1|WkCl|@)(`BddUe62q0x^&6l1(r^B7F-RorjSQ5iUMKDqT?nRv{V=1_F*?iOvOC%
z4al*7T-5btW+sC2_~uSLLxpD_HLcm|R<+=PG(ikbVyI33k6y7our3AWtvr=Qf~Wn^
zko7taTg~3wi0_<6$MwUQkG-~ylB#$Ho5{@*AXmNP^hHc(lzUnd%cTWJ)FWu-xLJ<1
z+$T=sB2FJa7IQa0B{Bpb*1EE38m7tPcgrT>hf5Pd3V05tjR=Uf;2PNZcv~Hiin1)r
zi}dj;^7Dvp?%sw>7lXg=Ic3}cBBe<*^dQ43=H;lFHa3&V65xc&q#WloG3I#@im@>1
z<F%YlJn)Hl-4<caxGa()%O8K;-6J*l$$yUuef<A4qVkFyOB2z#tGf;dWm)m~{dkK8
z`Pt8!lCZ;s$#WW+A0Sq4gYor{|2>(3^0i}}M{yPAHx{#>xNINb8DFD<n|316ySd4U
z-G<dc`Y5iFA`2hCPzwd(1=E?UrKD}mvd3}bh5wBk*S`Ce<~A_G9Z1c&HVcUy>U9yN
zEQ<0le1g&1%@J*7Xb~kI4%}zA!HWiG86$8NI$=1dwlem^ny7V_WNB2zkKchGmFHse
z$Bf6Rx(GTGFFGOOw}Y<yVyVi0jBBSii^IGsAHU~5$C1T;^-|k~ZwHI)4cytnE5ic*
zYnw3(^SpY3x$QgA+JBn=nxVrGt&LR0NzrWe!id8x56k@Vn9g0MvkCEnql>w-&Yqom
zR1&a#<{2Nwdz!R0(SNohWJ#1&agsbizvi?3;1CDV@ll$6oFbuf<KSx-AZh4h%rKI<
zZ2H;?$6=J^#q%fyeTYDD9Yz<g4Ni8zulIx<QRyHm=N1tvu(0^f_!WjsTzShSgN6Z#
zH%SwRjtUa$7G3^=eTO|#Y*1M8DllOh8uG*z0KcH8SaC~uyW&oohGkehe(L^)7<F~x
zMstXf97=G>4bKy*s__=kE6UO&zd7}{l>Cdn$THr8E&`BNPfyug(&XNQL^u`Dm0v|z
zz4!h14uIMAAOw7ne4>~V(AYX&|JJgbTYL4Wo-ezZ8XFEC%gi0=LXa2~ljs67;(ciR
z^ec|r43_*h9(SPZM!0tK9XX$Lr7(qoFJM?9x{%OOd`Z?mOUt;*Y-{c6&Ovxw)tAhG
z3jJ9nUwI7Ok~?=Sq3O621cif)79!?kE_ozwxXk7gAFDQo_*VI;TaXaoU<SX7)r1lD
zz{dmX`HPE`C3#p_%JP+3r#a{v*ofCKNotCDEMLdh6IrwLJdh=?;I_nEuiDm0y6aB|
z<694;U_~*TfjOj|mZW6eNfdS^tB-6)Z}bs>)(TS%s%?Q)MzHT@SL;-H&{1Ko^YRwV
z<EYBEZb1ep%;Enwp1fSh@<WWOGzvF8L~gnN_S<j4@27DXUmIw<|5gugU;g>mfBNgc
z9skRJ`ttR!U;f*FT>evGk!}A(K=-713p%jY6Ln-CTlm=WXz94{@Rr=tR{Q4CiBIEg
zn_0=~%I%iEiGGu4yhN!d68*FpAqG)!n@a!b0JI}`qDYU-#Q=!y)25@qNc-kO=*q&p
zj5d7`h^DOqgU6G8B0U{u{6oV%wLZG`xcnxnxX8D@36zZGl|&$22Q0aJsT>K!&@t#b
zb@~C-%cmcZV5}j~(5P#f)3|Ub;xx<4tvmIn`FAng^sQraVAVoBlIaI7?8BnU@@?l)
zb3_2xMzdI&i1IL7>n<h<{NG=UNNQjW-!VDxcahP>?hSVsFB7_fcNDO_@3e8M#=(0X
z)dd=0YkD9isjy`sw|8*_xRF61@<}pj2Yv^yM;=v%-A%^g#%mFF1LPCjd0BocX_Z8q
z^MSYVNYF52O>L()K6vfWg9`Q?CYe^r39AMCnB?4XVXKs3RNS53^66D-PwMSnK3+U1
z=;5#RY~rfOl4sCH_#l;I_A3tR^vTSZ_Ko&@ud{Amr&a^NFp~;{OGn7kh=jI>K(5%v
zkdLO<7w!g(<KYc~fBa-=0<x>|d*Yr)T~8g1nJzZq?ttHfV22j}pYc{qCaSCvnj>_U
zHLOFfC5T&+Q|ARzAmYKHdo$EKEmR<xgImU`<5};s#!7@@5aS*=$|p#4+M@E2WpR~N
zPhdEy0-^umfBXA*XooMs&+ql`4wcuRFy#*{CRSyXsf}tXY(hBrxOBKO_)Bu_+a#kl
zBFxJ5mK8?75})XTJsq&c*Z8+pn1}J>p}=)%*5$P}DX=kdf&&2UGv7d>I@=@)t!QU`
zf2j|~gqltSlYDp#c*Lp*HL3Z6rb8sZOAJs>DuDJN+D8mV+Oa|`>@+pAGyj3lIRJuu
zKPlytu(O^dE_<-31s*C4tV&gh0EK)Yn@P|F)I5j*`hi@+>80yAm4KuTd`@C@MF|^W
zwbm8Pw93*dx)mAvgstewFaN<if|&hy$v*BU`yH%RyfHXtl9D8nq7Q-0YxeL}R%PiE
z=z4#`$RkO#nyef+J^PNN6w!?dRixBhKr1k|>d>zHlp(CmVx%w?`UL(dvssiS-kr^#
zOvNbBNv%fe)LT<iI>u%&>Ck(G(KD6|QoQ>`8dddN-9*7t?CS-h*usrI2^E;&EA_??
zj_a)@2^>Jp5~~sE65tR7>xkAnFRGY_HcGa}?FA~HwVnh2*b`-eriTE7P*Q6XjmnJN
zsyh>vPOuxDn+JTI9|zeSsH<xOtTh}I(7MYCvjIQkt9?TCE5e;q;>I%;3WL%ESh?pb
z(C&PEb#Mo2((-(%T)y54h<7UUyRgTEp+tPk2!HB{w*z*aD?uZyswm4J-|U&)LgRdR
zYdjy@aS}dMA&}=Tl-MBlh{MXr6w#TbV5U+c*#z!-(nyocV5Zq4aoxgGQ@lcm1P4~f
zcQ37mEfQ<h;WAzJ(uco14hZ0|+!Cm|%3n1b1K<@BR?tKn@86jvD_+f}tOH?8Fh;|%
z?~}G1s7KUxF1fSO0o*~L2GaMA3#p%&(M$xDU}aXdnWH={)9mqS{0H4WezM;oIWsYf
zN5BvxZiBkEnB%S?BYBb+Nq8f9L|cxt&t&R6YO(cRz5{dM1HpQSGq+ysqu|4}GsZjU
zp&&}9lIO<6Ua?42f^NH=E7MyMnQ3bYZkU4G{fOgvW?1jVK=OfLZloeK4!eEVL8r|!
zpcs6_5Md59n1Am(;vwV5pyosK9ir>9=x&-PRh8!D-Ql~l8^@QL3&7>ud)@vVyf@8Z
z8{>FkBcluo1R+sN!dyh!lc#>WLvs@4Wf>NaheRIb@rP%M&YJ{i$P_W-wHE{c%5aR(
zUgE&&$4!meYH(Br>4B)bAEPfSnS(l;sP8ZEo7wJ69uce%XB=idSiD&I%%D0M(*{@;
zcY1?uN1POfjk-e<c!eA-u8o#XKj5iutWpf*IQ|MAk^7_?I$kQ$%xCC5uZes>6j98m
z?6o#J<k}?6*p^&aI!)NA*$xo~f}-I;2O@mS;Yu&@HDoK!tEzf}LivZwIwqNN#GvNP
zIIw}g^z;@U)=}&xh+H6jldEY&5mxD~VMcGt<<C*WHD}%#B#TJwdYRi$Ovxu7M?vR7
zPmsH1`%Wxuta}IhCTh0m`r{BKmhPQ6DvB&Bvb*0q_cooamt~C1XN0(7Q4;9=t|UiA
zm6Tcdc-fp=Jfp4>5=l88U^nXJuqfoJ@KsiYVHMsg82bsU@uTS4H8-uB*eX|NC&DsL
zpFth$gR>JeLL3cyn*-%4WjI%i<B(nj8HX67OsO_ohn7Pkytet0JW9)3wNO4`UH{&^
zH^<+nv-P#Dk2Dsw*#EL$y=AZc_w=tnci&%s`5$$^hFc|h85NH&Y`00DT}xq25@aw3
z>R}%mD{lgq7`u%fHYp0lc@?MG6EyNZ4dCmz^z}NoL|~%QK%m>cIRMqr_31b-V4xVA
zuXW$<IH^F4fgo~Dw6!c)2L_X(3X?E<d~iHhtn!{Z<`A!ITN%i$KD;>Yk`aJH$q~zI
z{c0Pk1U2^HWj5G2YXW75WNY%8ZtKA5ToCxv4*>Gv&(2K!0JJlppA-_Lhbs@02uZaV
z_#uzgHk9bE8bY}seUMS~BTH%`G6*WHv=ePtltei|?$q{)K?nqJoHf#X7$?OOC`D|G
zg3ITZX$;dMlksVT5SLwY<ciS3k2ncM7&D(<P5MEZ*)^q6AZ6u<=2;cRPvH3TX`%8b
z|3b#_sySL~2|NN_+qY}COHzhO5#QJ&)xywy4tphP4-L-Ja!inaQd?piNKb-lTl0xH
zvg0d@usOCAn*%oDjaw16gTAqSxkFm`wfg3;+jm%f!%EJ~(3gtJq)g*Hv-Ih!U90I+
z&a~YFguGdjy6wrrgWi>V_{Pqb3s=b5uzBRxp17X8outh{ujv^2J5N9XMwfPh&}RUF
zXNi3yyWO34Mq&15+Hny1!0BMLdg)NV!%~o{G5tY#9IO@M+-TG>S#l^w8Hi&p`8{kj
zO0G;!Ru7BXdr27<Nm6Yy$s^ZcC_rJ$VaO-HO)$Bb&m}0)6Ye=;;=ly^3*jRKlhOS}
z?t(=6Hjmy?YT1|a!rsi2qRj2yyaHsyiJO6hQxZUL$Ls{`qMksmj)0q5If$+!h6AgD
zUrvbvQsKl;7sv~&V7BlP;wa9ZN5}h0*)7ZkS8ejhy%E|+$|h-bVPkMSa%$1`W+YJ;
z4xC+9n}cOkC1rVI@ctw2ySvQmU)j7wt2&U)`gESeAF>PfoeZDBF(vC22pVeCL3hJB
zsK1hAWLcV)(c|lYdH1p&hA+);!Bp9t9KUk@o%4$tI<7p%3zU4mi-dD!0xASRxVNme
z!KrsPBj3mtP1~4g7l}QHnpqi2`GLw<+Lhkf*WBxz?6|%<+$!=`$#v3EZGkz9L!wYT
zp0m;Tio_s)!`y3_6<Luz;UQcVd%JSL@G>IK27>mM{@uLP-ksWU$e=?9E6!KDPT8}j
z@|3)pnIXts@ZzCyB?|($CLwIUwzFfj4NJ+>{*w6`dPU@AKx6h5x`t-sf@h8hr!;EA
z1)C`_afQlDA+R;WOtAq{QEWj5=W;e!#UK%_IWeezaN@IT+@vguvuDt@`Lxda)oCMU
zK45{lY$#UyhXM)74rll{I^lm2k#7aL&EqhMp8yfRhv7cbqLg;xxE-z7IZ;|C<1)yr
z<HNRNU=t5G9&Alddm870GfA)5NUsuRKUIeHq-BlJf!Ih7T?LP`GiLv-$&&mshbpat
zW)vN$63sRurWaCO*xxDeuoHd=VRw9o;njh1_!<X(*6xTR%cC&9aU1<@OJ#xqN2JCS
z&s&_NEAlwYqjHlUH%uN8z-7aG!+v_Zea8#l^fO6@X3-sP`uj<l=bQdM)|t9pO-011
zijK_Ipx96kE^W}n+VxUf#OD;>q`QMJo`#$nP!Gn<IU~)3ejdH*IcXu)OZ?5RTs|AK
z$0N-h<Jd2IdbLbfG;dK#+JMd%Gq_oE)67-+B3s9Wdh(cZ7t~4L4~=0XP-MryTs1RT
zfy9NU8O24OY<ilYoqQ4_TP2vzETyPUhB=!HJ18!Tjb(e|@ElU{<xyUaZCI2koy*RH
z(}WD7yS}U=0g5>Xkeohhno%(7fEQLU%ZvQqL%FL4uEfzIj!)MfMgJO{_vCqUaG(ro
ztw~x&WtNnWC$i6&aA&#BjN|Iq8<$33FY;pN7M#j}nK>V>wWqQ?ufp;Pj7PjM)dlTk
z|3l`$PIm~)<nXNizJqPVis%$TIK4KhJgL(t9<|neDf2K3lgCqJ?lXvf(ZWxR7#Jy~
zy2zwC$_}1qOr3>Z)!>@#Np&W`Dt<LwN9*65Wt;VAhIaUOEUyCe>|4k;0`2}%Zx8*A
zaPVikROuC)qw1519uZh?w}CA&;fu&%R6O0=gRr*$Zr?eO9OitOMB1z+esNaiNfA9h
zsLkw>u9%y<pR@OOZ8d)w&2{dc>~+G4ji=D8;c8KtSH%<X)jlKsU!eGHw)RQOEUEIc
zjEbm?sxYipfr6q+)5l*1pXb|kMWxipZ}wE%)krB|F`ohd7fw9>6TZE6meVTF^T%({
z&q(f+N;74xwul;O6eM8Lw&{4+KtlF%UpN7|77)`Y%CjfXQoM_P=IqxDr3t4CzR!SB
zo>9eG;vijFP-#PPhhO^IGpaQ=^eQsE!Ka+t`Bzz*Bai^5x1w!WYvE7--U-Nw1(23t
zhyYJNYOKi(tWHQAjK(pQY9<0l>Trb2;=9JiX;bgC90RC_en#HR>0snkNF|)~tl{T3
z>RP8|UWUmNgu@#IJTHr3;hJ+AthRin4a=GlFiwC|T0W_RT?Tcn*)2TUY$Q^xybQPJ
z<&kOXB$H(ZM?f(RO1NYb)`|;)?9AI>S$L8xo+}C3svOFL1^0O@NY_G8mLySLB#++>
zvqYorzkF?e4_=%1_urRp#>?|nvlnt<-DbQnenaY}Yhk*`^6&}RxgT?&bF3eRBfMT2
z4?STu;HZEcVf_pgH^9K_e{Jd}jN>r*2N8?DRI^)z4T}N}2R!TA69;DIe9mD8t1x7i
z8a5BR*Lq0#+QE*(vdELi=N6mnr`(r)Oa80~CnAvzuN?n*vyLpNq01^M9pac~cn=df
z1ne8Dgu8R8AB`@8bTU-juG=%Hw;WK~n$f2#7~DzjPbc)PKf005A`KJ%0tqt9UBd|Y
zsCSCze%CKNO%4Pj__KkbdILqo=mgZrA>(Wa;ax;;X*Qolde`V6Ra(UH^PKVfa&Rt=
z$V;2ScZeEks{v6&StXms6q72<()<bR(#{rhx`(^pgD-X0HybC#Ye(~hvk4kwEHtx%
zO{RI7<@w{8;ag|1t~oE-INqDEgr!6MD#u=a2IiwzR;a3yqPTSqSevSshR3#pGF4K9
zWmsi#StfB9W=kEOs!HRqvOTg(e^;okqV+Jvqn#bmpn6e@Im~6ajKsu-z{y2=Wf&$?
zDP-Qwwa0dz;F}(-R&F$ot{|~czUY$LVdg(_<CuPh3yP^a<aEpi{eVu5{3T)$9h*fL
z<Y}p+EKBd+O#4tr1L38qfW?1(8`~cL#d{t9%d}lrirK2FimZ4%r2J_^4%8u+4)I(!
zyF)ERZAfy)$>K&x;o|<ixtfqHA>>b`IE&Z=i>&oJ>O(9*OqWDfNsk876ogi4I(FE<
z;4;GS*)*lai&7J?Kn&xMN>3zzIa|Ik4rW~y<F<ew6=3+)DWo(>vN9?kk8ExqZM#e~
z;KUeNpvXleMh69)VBeiVSp1MEO##7ut2@d`YopxQl{GDju&QnytoejBJ#)`I1EDsu
z@22aTMog$yn+}9zIN!#0x9`X!_LrW%tz$b*Fl@K)hzJThR2pgkH&V4jB0J1;*-n$p
z!m_HOCvxljP}zMEV;1rm8zwbho30&NZPJ326gi_ihC6O=jTO`Sn(zd&!&GHW^`UEk
zLIfRHq}tT}BE)g+ROAK76+ZmY+)b2Xx@l^(cVj5YMH&>OV<rsZoxah$7D<w@$iw^z
zSPIu9;B@(Zd2ipEbNq5s=gt{*nQI#;e!RLmO+|uhPV?LlwP7RyxOmon497+Kml_eK
z>4jh<fcXLhwNS$A*-kJDEq4LUEVB~)%2SM^uy_U&u{%A*i@*SpO?Ux$mczh848p9f
zSXESIkv@LK?ydK8Sznr87D{6asraGPYmjr87kTys1Lb!zV8)(~1wN5q+sgc5z#}E7
zwn=<s-#;3MHRw1ji=vEf%+?f3xcV6YK&3g~uL3KwFa`72Fb^F)jT;;fZD&to9kx&z
zZJ%CxiE*8URg}k>H7L5Su>^f-T2U&*W>wAdUn!C*y+4oj?5?n<ZPS&46RC`ljK@He
z7hE{fsnyaD7_B@)*!Ha02lxe!MVXU{FVDBcDq>aUdHw{`BzNmP&VKVpK(yPKO-Y%j
zMV9`f<o3(7u*QzfTeDRnNVw>LM$3z{P~-wWrJ-s8p)C;{hg|EaRe2cak5AY?YCd$C
zPoeg;GT|yI-W0G!#K~}Mnpzqgu97lS{ycRk-y_}vC72-5$pa-LE7D6J4C*>F(b`(&
zQjj$Qf~*Qf>O8ZG;;$T~G%3pX38bYzQ+oC)q5&|4tvOIxLXC)N;*>j#R1yO(SUeQ;
za6*?uu){f*ne5s29n+hzYR4O89F$&zPOaCjkuaaG^c$0ve`gQwn)kOhM5Kfx02YK)
zc%~4}kd+T^zMCO;ka4E03qh!X+_t`rC*r+n$9y_hC@}*C<BRthAP`qO=iRBp?Z6F>
zSJGqY2OBu*ml^Aw<mcN?B<jU-0vUwO@kC*rI@bZm6&T?hJFISvYZrzv(I+M@)>>?c
z(l`u@$7d=Zl$|F*Aq>(&Ya55)jJ!H?4YpBXL|HS*wVR$01q>G}h*w%hRZ=|uu>L$Y
z@RQyIN!O6S?*Ybk#>vEePyCU7Fa|6FKhlQtR+uksH}iL>d!q2|@c1;}Nfre;g3|qw
zhw_56Qc6|P29UHz$dRRaKdV|0H$vx}@#yuSsGhXGECJo9c;dD|n{gDCMf?N+&mT+#
zq2<<TTA=Mx9~U1XsezDgf>jnA2ii+;{zU#u?^JPeIXOj;01Xxl`rP<AI-y!y5)ts3
zH0xr4Kz*N1c8Mon6$3P*X7+XmsjF8C%M^BZDtUpT1l*RgFlL}wr8fU1J-0TmAgw4_
zsZJzMp-Dyt@kf~wFm36k1+bqS2&ebyXtcQM&@1JSv(_ohvOFn^$FrS2u4F4u9f1_<
zV7zkD!>X*RuzdXGc*7zr{G<)^ZEfW~z2*Y%4eA_?gKDyB%gE1}<L)9`aNNh3Ju%&G
z?ku>LjwDGIMNgpKeGksVWyaWNfhKVp7iAVd{%YE2z&QUgw^Lbo10Avf!oyingzW(S
z1+cY&34GjuqS?c3oWb_rtl>h<W}6yi*EVNW6mb$gzCU-?>EA-;=AWITPc_^N-WaHL
zVlX^6>^$}cCL4c6!Hm=4#aIa%<70q3_?B)DNc9TjdSnk|sPGVEHJlB3c7Y}cB)TB;
z$oq~aM3hr#IOoO`{~G$0MPZyj0WoF)vmfV%a945tZ>l@~g{aS%6=1r64-Fd?r!Lrc
zl8;=diJWy}r+)maXQe9QID9;u__4W?X*EqUh*gE1QQA@&#%YySdHQ(#&40>SWY`ok
zW{J4lC|Xs)GMzC|>VtIc&TBqwh%xd>2YM>W)~fCzO7kRt{EXMVd&d_#2ImqY+!Pf>
z9hk+Lc}z(Gq%=pP@k$j83IMO2?68WHBz*!<@()_^Ms>HRtB2MKC~LT=aA^U7lO>vZ
z6CjWYM1TkJv6#dvi8w#Qu7zW@ZWfs&ab7$DHTbN9cqJ3LdTssWUr9p&!bEU)>3UJW
zi`YIq2DJjFCs`S$PY@|Sb|YaMf#$O$$uVd~O%qjs{-P}_H88-rwC!k%!t{;}C&Wl#
zE$iMg1&u4h3{NF@21+bcHd=23?sveet%dWX%*!x)d;znOkKm(>3mWQQOCowJ+cPfW
zq<R9t<r73F#8{l%aseeYA@U?**rwjV)D(bb>aA>->P@36FQX^WPo2>wXd<X@5i}Tw
zFTt^1;7navX8#iNHO9h>y)X~HfCD8339OFm3*fi$=;JX1Qj5ZN8Mv3LGdnwCGJgRO
zP$LZuBET3-B;ON+)(UTeTO{uRACpY=!SpHdWd{W@r(tNccyW)3TM!pH+&W*|KS`cP
z@e^e1A0|WC-#6ijNwB7u1H38o_zg;`V%#Qs0U~tG05qpUgsvE@0Pmr-^O{y=96f%$
z@5Gs%|Ddis09K;RVydZMo3EQJ=At6W@}zitXuI3Ei3>#2GEDzxy?wDIMEU|&%5G()
z@+c|8CxGidV!33u$b9ZgEP(OfdgQzV4b7JZ<aH&w3yjI>@DnUB)G_Lde`rt4ma#_V
z29*Ws!BhdsypRWB*&hV8Rn3?WH**8#pVqJX@yPRKN@T$!Y`T2p8nJV7JOxWgWP2c1
zmLb9&y`a*`s7j(Y4b64P)n)9dPsV8ZSL^-_Ni;tILfq(k0lZu6cT(?qZLh{vUS<Cv
zhE|vR9wa3=kSspv>gu4~^t5;T?pO2;^PPL7C``K&w!<2n8y8`fJOM`Wk)uByMBAnI
zN+B0oa@=R03bv6wp+r<u;dHcaHitsY%rWL((qfm_U+d#VMO-|AcgpQ#n6oME`8YQu
zG%NeBtm3kIf=l{Gi@9s&0#scfTnL4O1a0X!%-rOG8(~DzWhP?Lt<0pJ5Dw5$;6U2%
zD}gkM(k#s$KNfS331=n{Hnp$T=z=o}f=(Q#*^#!5s;u=uH`Vb4_Ecm0REf9Pst3<T
z>!U}cuo>kXB^_2dtZ`b!kB2Jnl-ggUM`3ks*(H!l@!X-)cch{hp3;^MQW|DuS)`8#
zhyGy7ndWeEg%Oz=1glKuI@lS0Fb=lekfs*GJs|L`iRh_=_Me;_8+hXYkm<_3SCmD1
z^LW`G@t}S{*9fmWPUcBTw;vk(7bPGo>yc$)oaK+t1MbD3Vip3>#-TcJJ|xO}1(iV*
zG=bX?Xb#xtS=&QNp5|rw_~hX;S^rlNfo4!(Y8=#w%+ztc*R&UQKNgC_-Jf?!pb92e
zPe>}fc_T`QNHHQ5mN&?0(3M)+sw81Vb!~TOkW_(!7&J}UPl*mbc~lt@QOa2|&j9%e
zoVn3;W(_i{k~~kU$D<n`7MyPe5ehrA|D!c)-#pdeb*t4#T;y@_1bO&pNX@S((vhe#
zjfpr1N6U$WVOO|K0qOz%F&5jkaJC_UiNPi{4xu9pGED59-nTvgTD7B<&77uLl089^
zcqe9^85JC)yFUdcEUu>nWu?JiMP*bz!RcPBpD!~wy$}%eo!idWF%ruSn1NIM1A%Qs
zShicq0-ZJ}poAQ%h$9-uxE-W?2rWa?2(^c3@_j0$)<SJqL}^w%KB@cBYW^C#O|Ln*
zX>C)_x^ZJQ3Ij8CghsAJ|2XGGJv>i%u!d$X0_8e3fl@CWg1+LJ?)|uwoiHAEvbRi7
z6UeqVu$S9s(Clo!2GCiU`O3oZ9*h#<=4(4wUcc8kO96p(jrtemQTzl}5@(mis%NZi
zFY1;7?+4Jw!%^mwC5brs4j5B}`$31S?UQGLz3H9`W+(Z0;?A)%gtd?oYl4`Ej-??@
zN$Rl73u{usm;&iPAn<YOiAsb&ZHE;!eB;e0Y2m=_5PFB>aNdQ6Zk3=f=>12q8Pmk3
zjlXs)R&kQ&)s0O7)hbzjf+S`{+;7RVdjyT~=yEq$GH2)1&l7_50QIQ^3yL9Wm4r!J
zW!t>!AvCjxz)446F>4mlMz+@%C(jq>T(SH<;xdnO>xj9$J{SwE6br3}G=;D?DS<QC
zcL3yYFQ}=B3`L4yZUE-O62)1WRNIz_4V(LcY)LJ$G=;(?br^gKVR(1lmd^o%u6%rW
z*c1;;cVwN@kyJ&JXHQTI{OB!y%^Q~TaP1Edesr-RwVSno6GmZ?KR(g9H?{Yo5El<(
z{r1~$!SAPW7+)J0#`>)u-oE_vum5!XzyFW_^ZWl*{69bczi%s*W|~D=Ts<D4y^q77
z{grdpkR>IU;zn&{rl@QpXt3|Vd|eo&FO02Dv2)5M;EEL5fJ9o*Ttv-FGki2%U~4j8
zX&EK?6R4wY6;;2a6>hu^QQB7MZ~YL6Spwl-ta^n;4z3l^;D8k>C7R+NOdF)B>vZc$
z{sbEGlm_tQqfE;}GL(<O5MDEEq&>uOlqPBX`1E+K%sp=tL(yTeUqnPqohtSITGUOl
zsK~O%gCBob)HQe1Oofx(Ixr2Daf;P0W16K|Sd~AVDldF=6Zc@w!1R}<M?VEL40Kq2
z9xP$mRLyhuyu}1C%aSN9Vyo7FfmjZL;mE^nj?!F2g2KrX6sTR(E&jQ*Dhp@Me(_N`
zsRhW(H9mAuqjN_@6gMao?DpN6kyt%5mKoVSmff^x+RqCM6(?DC|1|c)W0wk%8ZE^$
z@}8;%k3@!ZZ2;zlu5R}z&%-i#0)G3Q#6MAbh8%tIKcu6B2KKHXV-~j{13QF}aOKIg
zpF0FIr$td`6KRe0u5Ok@Srk42it|B{q~&@ZwWq|`z2#lHl42!gm?Y&BTw5P*Kw;Z(
z7TmBWV&)HE_>ZMR)h0kt9-9lGxQ!yCq|MF_bWAfvcBv6oB94Qn*P=%{NI0q#or6|c
z0c=XWz5`ymo9Xa3*!B^NSK&7}GfAH2mp3vclE{$NX&vsy_AUA=h!BmOu(m^&ttq*O
zt5Zhzr+ZRlRtLMfn8~i)@<oxR`4dcs-HrRs!kvUb>ne{%43yOBOgRr@7%H!gGowV|
zoC&nl({}_8$3aR{7nnWQ(l(`LYyebhP;W5fGp7T2{NVY}iCFC~;)a=mIf7L5^aJ8R
z(BmhuP5hI(cR-^@x;_H&&uv1%kb>P08bEg$<ezpOc?=N+=%7BNGJ}R<OAU5N*ZXm4
z6^2<FK07k9wY;AXo5_CUJRBM?R&I?J7mYvanM8!fvvw0nGcA*(tfI$P=O4UJ5q6U?
zJGFnqJsyyDtI2jZNFZflRaJR>V=40qi}T0LF7~a}kQ;W?Kt$;&nlA=`-!_j&+lAyg
zMPiLGpN2Oo;qNG}Ms~tH&OE$y^)bL5Pr9#Ab6WgL>Qjk1H9JzHf)Mh$FmS<m$t<(4
zeU~WMcK~g9*-?y-)F*v$9O|_b6-^aE@dU}(Odoq0-oNaoUZXOe^m=7-_<)q-TCl;L
zyA-LBe2&MUET9sbN%OVmfzqaDgaICbG@PK%*-mf9H3yjx?P>4ONA7q8mfBRbm!JVH
z_d4^)=wc%v?VYUE@ee^xuxdD5#&PxpM&}<+z6I;G-HM*{dV_s8J4nV<7Ly24oLWm9
z!?cRi#}{y)NvXVO4o-EkCYPEy^?fr}#9fOtWmZIC`uIq5j{%Fh-&Jk2#{x=zJxA0j
zha!2Tshy%cUN3VuoIn>{P#!5A`F6p;fdmBvl)%_<<$)AQT4vSbv7mcVOh%q2M;a~4
z3`j<$g8(Ck3e@%NiH6&qI{e415L#QtG%n*Pe0)UxoR0d%5etR2XVd679<c@jWn~sV
z!@R@%^VP%frTHy5Hr?U$|J7z8=HGEZe@zP2y(M=yP%#U8c0LOQ*V44Vw14S@G<s5>
zUn0s;p&FpD<(%e(1i5|+MNSiAP<|6<$C!%BxB*gl>1Rg1OsV>xwWwq!jM!R??~u9}
z2#MeYvWk<YX_>~+6HMIS&GzQvohtrQgGxJN{_briq=JUaWVIa{#zp!B{ELsuj?8|=
zv`J`-1M=x)<LlA&t0_4T_8rd#;O3?R&m@Z~VPX=<_xJU-YZQffmOOs3xA#yk!ZyqU
zu=QkZ7`p(>5aJ8BB^SX&;UhX7{|GRp2j&dGFW~B%!CWP2G@=MZofkAT<`ReFWpgsX
zGDv(J#8OdmBFMq`i9;Zh-l2eyj3#r3=+v7J4s?aDExIZ*C!A`A-M$m`qv_q?M9-^!
z66PS|)Wj-MlZ0g+h2i5lKOYn;GglQB;P!@q=MK7Xr0x+QxQ{yw7Z?*|V4XlvWam3m
za^R0(Ue_M*zMQLw%s^g5V&F#th5+QgW7YqbOrIr=oDMDWSTwPrO5A)ZzTh1^M?OvL
zrbU+?zFBj(pBwDf1W40bp*cT{|D8G`LqewmHmq&Ch>q6Uev68%s^aMJ`|X!zXx@Xr
zpHS!R{q%eAbN%kJEdLX_)qav6_T6$@WD$73g&<u-VU<Qt&=2zTi8JcJMS4XC6bjLU
zVj$gRfa>zRLHQ(2lQfN<z_Q@}=<!7hLOtnXQDS^HM3c-}5-^Y_fFB4Rfr~%iQB+z|
z1;F$!l%V6=YAWnGd>OnJo}02>Oku@WOat5}h)c+4RJM#A9-B?;8I-(VOUC0cE2`oN
z9Juc!yl}A#!%NzBI+B2leE|!RkI!3zrh-JSYTnzfZK*azshxHb`2tccEaLiO7m+|D
zQvy)Cv+aU?CoU|wjmCjSX^suD$N=snc`UBgL<I|OT26M?o_${BVg3aAz@IVqdfDJ{
zsv!sidNoctJ8~+j=QaCOgG?*Eqt(SL$##s)oSPq(qX#3Tua4w3;daMoN6Y|kK#;#^
z^fZtMXYvwD!f`>#1&l*rec?DaW@(uE)xF<Kf)+gmo8ZMbC+Iv4v7~5dm$G5j?o>pS
zRbx0(c~KfkbhtBzN#GijEy<Fydc5-ErpA^1>S7aPp=JIu?{M@if<)Oi!Y)|N%zlIm
ztA$=9H@K*2sP~1vEObu=c3a@z(uv8QX&10TfX4~E9c!t`Ls_+9*5T_|meK(xJR!XL
zAzU~<IFe358GCFq1paiOh`a9~N5|xFm7P(RS^Nyc7h7ng^aYm%a?rPc2rFTN3Btak
zXaWy_Z@f2FpBLf5mBSWhSrliFU#I(cDqrd%GpF20h!_G;ZAp8a$squ;vdi)!imF>@
z@|9zL@%=WnF!;<M;hExJGtA~|>mC>lOFZekNRpx`x0=DvD{qC`ydyuTaZ=?yP?P**
zrBZ6T^>zaLNDk&sx)3Rm|AiM3&DGAB5mLRM$qCHfH6&t?Wl>=-_0q!fWJQ$Ofy;W?
z{NX42&<rnf1d<6cMd0E$rbRQI@`b;i=V4jczkX?J;POCHA=E7RRBVaBtIMF6aa^3@
zIBa+EW88Oks+w<cWZ)AE`uxq7VOb>6`cm1XMZjFlkvM7bcNKcRu(v0CJc3l{)}uR+
zltmyMqG}J2RLSztOS?)1EucIBM>;7CDqt7ROqRvz-De9vv*&-VFKSv8qn+Sx2A22)
zlM$#pENY6Y+&I&R6{1=kCRG|gK6U%t+vKPDFTFIxP_?7{+^v><2itRH0m~|n;wKPE
zJuAyRe7CS;-`?x?=it3*4lAB7_UG)H%GVhd6&F?d7qTGC{#^w;(yYqk=n2^2Yr}+>
zHFHo^1Wh$(ZVcSH*x}i=(`ZzL3P>(kHS*j@3{6s<p4d}>t4nbrcC`)z<E+1(&lBK`
z)3Bp%bdM}{oULJv4SkQMJW=s&px&)2s3d6~XKC_yddml!EL5#Yn*uq7nlxZaK@B^q
zew?T!1QpPAR=PFW8&e~!ru-4fqieN5TE<0@-?*-STOCl`Y;BrUQ5>g96-8NIMnx4b
z+{sZ|=2cdvHv5=AhJ`+sA8VmrC+~kL1x!DPLXC1lp?e5LalM!pMQNFqRk87nxgpA0
zJC`i71j=jZ6OBeI4W2I2Q`Slb+aja*vY+~wdS^igg)%jA0#zBbmpd}Ve^IFU#AHkJ
zSBUw610J=K+b=9cS*2;dZ6OSehWzCTa8>ZAhvMHTd*~>z3<;A1=s0NI#1&nz@2oka
zjakU^?FXyw-(L7oRg`8$v|%0>ffB$5hk%=fl(@o?MRdm^!e*Od=FoP5w4CXeS_Xh|
zE0}cy4NDSVh9fWi4NSWE2VqRdB8MpVL;G6;vN7y|zd8kwjwu0Fc7YK`0v`ZLq(q%9
z5nvnff7negtq^#}r0j-*{?o6SAv+6T1zeig5&@#y%8pF3INb8^a7G$#F#0F`53*F2
zUpz~*DA~5%e=>jAfx1vQ*NAt?*1xb5<1kF~yB8&&m-1a|{bJo=UHEz9`QBIU0Bzdo
zblj(3H*h1Xh#<<pa^GcDm8DOh2yz#uqFDqTWabo(ixXIuDIiYQixaf+ZID&mFw4p!
z&!2$katEqZGvIYA%BDLQ#-ELsJ5wCU#G2JiHHyn3NpB@$|7{yWM+R&(Kn!onD!O9r
zIlea}20@L`rHB$&Sy&VneY&_-AllP&m=7>_*WM^X&p7>ShG}X(wAk3jdIesp7W5GG
z9=<b`70^EruOVr*9!|S`CfLzy>F(oe)p(TY9b=ka$T~VPr;D<UU|K*Gt`IDe_&dEZ
z$<uAX^Qt11!-N2vVwgGyzP)256UX1BCN;1W^nOM2FEL)I&!`G=(W6A>;<GKQD9NL(
zu&=x#eK_feg8(-+x=~B0UJ{jy;wmoVEZ_R)@R>n@>A+whKp{!dhJL@aQlIvNw!nlM
z!yKw9r{H(aMeNRG#kzTgWN3v&PY0Ww5%Nr<>HE&v4Jgpcf6x3TcgXggLgU7G3-+=I
zREodwg*6V#EDE<AR}0k({YAz|qyQ2kA426M4M4IOxP&x_GCi;5eO9G;UL;%I6eh5E
z{NG0fVy8cYIi^`Ro#)zjfM45><m6eW0D|X0q{8+4pu32l2MQm32vhcaVU;V7a$nua
z_{OQjiJyff;61^f4|Puw$a%-ZFJ3ywNfMTu))#v<v<LCQ>5L2@<yN@Y>_<0|K!llA
zElfa%=}kB&X7it5SE<$Sa_3;$Bvn#oTRsHK4Dj0?bch;15?yP};Qx18^b3zOirpP|
zU4CY&_R0R7(##$Id4eZ<w5)RxiMzJ8*Dzf!B5Yf`_IE9%QF{omgM~M!nD9UVTC@hB
z=oc(D`j0ZR!6XmN2bkoIDq4g!n0cQAQB)C76l;ow)y$(Ps<u2x8lwd@Ec^aY-2#<o
zr;7PPsEd*`O}0KY_Kt$Eq5uM(D!jsIKOx<VJl3aGWY|GV5pytriS^RVW)tup=LJ@i
zTPGQV_XuVv_R2T^-Vs%d_Zw{%%rF_8k`6!KYsSy<0+2x6z~->P{^{k7(PqT4MZAsq
zTjJ8Xc#Ok%^I4iTW%ap8H}Aw=0@%i@$^K{|2$oe|Ra^fsg<*r42AJt1%ZBZi<d)Ex
zY{tnYFk?)W<pV1heaw<Ic^?H_+)D?j2tPr!Y_rLa|GH}u$_c>j$otyav+>jp%-CD}
zhx0H1B@x78LN~meXs}=h;TQ;kR$!^~fTlvAJ2-hv2(L$DU%xYTuhSwizVn<M>X8T#
z1nk+#;yAsmO#$7LXQdrFTr#)c^l0$OtOeB^fNX;<4yR~7{WO;u&EVZQrs&Jle1yPi
zC2uZs`0T8!X_wIalTGJOa$`&dg>r^vDu*CuFHN}b@FbiOsuktL9kDhQn#XY-J;9*D
z88&yV0el(9t4ANsA%Ry>5DaJ7Kj5@`ddRG0BthO5w4AA7-UdJ?v4<78SCz3L5C{yN
z{albW8<>WlAmmXBjC(>}HF$BB?Y#B05UpR$ohFS!Ih^|2(>9w=(D$ZJ>LqYcCZeWl
za@DO_ZzN?JW=|l7^P{5Ovv0Uv#j)0ac~Z5&=_F-j<;J+U!59T{*VLmORIPBqO(3)T
zcLU@XrD>W}PcRNYOEtI42uK&4{Vf3vUHQ~Wl1It&S+D*00Q1$Zq|6s6f6rWnfKs@&
zHSrL898@@-%-w}BvyeAhY+|jQ?l{ZC<S91Ur>d%9rc2yA8Y$`rEJd)N>u?SjD4}6;
zj0Zi<%(jE)ahsOXIo%qR|E$Y8vN9U3uiK9QIN~Sf3cxH$r)TI*5RK4VoA9NDci>n0
zKYQ6=Tl93G6w2!-^Z|96xrP-Ynn~NxQFuJBz}+n7S`#CT(=2&BJ?O)dNoEJ&ann(3
zN|m|DSy_@eD$6LW9^Vt2EA-6n*DX>$(}9A#UMEjbkQ>r5KzJB8G%^EPo_?v<ZFrL?
zE28)bEJSXX+PUJW@{|7Z9DJgnq8TZScVi%0okNY2@(Gs8_x>*%FkI$sX?Z8+uRJS-
zL7D-9-M(XlZ_2?`@((9)_Fa2GPS=6`r{)BWExfHN4~sN^d~NkX?M%U>r~-n;0GJT2
zqre<Zwa%)0t5ZEyMGec@jv^L7xn83z8Ez^dv86NlG%0#v#Xj=C0{$zc>h543y{Us2
zZ*$*Rsa!#aEg%Qm<y^JWWcA)gvpEuJn-3xvVejbaBRMW=KAS?Kr9mp}OCTD9T|TNZ
z&y*fi6pp8g@bVS~MUm2izpn-duWLItjLJB90-pE{9?<5i=Y%0ml<>a^O<uWct1>CV
zC(tU`c5W~0h0(e7(itN8ftec3H&0uSPEu1(*Rkn#L&s+(&I)0Z5GoXFmVCCRyxDNY
z#4LD?7M_J=Ts?l_KPswpdF~nG3Nb_VLNS^>Q;|oxp_yDKOMK4Y0qZr-h|ygNKEee*
z;N;FCzG`Qh<p=my{L;R$M%e&7aVQz3?@uFBR6RnmA~gte69Z&_9zo1Lko=dze{V(8
zJJ8lRpU53#YE~r{QIEF~yBXKh<9Xec<S@+gB#&;)c>ZQA|1M}|If;H2OoB%S2ZMXK
zfkUFP11Owlz9*>JZ#r?o98Bcin8?*2dNK}Yeulvd8Q{wbTU;OK;{AkgKsOO`h5&+}
zfnY{TTU|b6BN1N~<%YUo--(vy%z{8~_}Lf*I?Bp_FLk_<Fe}sCk<OP9CZjNflU1i)
zR!^Hrq{=_?MAiA9%ab&#qPus8{y+s5+Ez}`>4gP4d(GegG=d|h56BLgWBY+OC_4tw
z#0t!h8x%s4A>jpE6lIDvpvZw6QFa_mP#$sAeLC|xuto8)!RBw{Wjw@NMl!W&FRt}L
zqM}HXe*ir{_xrBfk24bTfYA|HuMp{#dhv6mXz^e}uk`-D^~P#?bgs6X(kRNGKzj17
zrMcN|a8*vr#K@i&<>KW+B<iUcSj)-Ns)~#9@yqqe$Sc6Ce6Xou5@?YIk;NTz9FcKy
zgc_=5Mu;Psn!Du1^3KHnY@BLOz|-|5aCH0?k>C?&S%J-P<#J?fbX-H!<0#CcEPVWP
z-RgUJu3xMV58(hwJN;n5*6csYtK=E1yM9<Aj;wp}|Mg=x?Dm~C_U!TAT|4l3n1o64
z_*vsWRuKyMQ+V{C`+y=5ka{v9?98mAJ+RyjXo<5tf)jq9PV5&W(Pg{hG}xpxWu#BA
zch`x!BHRe!KLw;<)`nv#>b4UwO5GIkuEn&6{|3D}I*)0C#xckVm27I0JQ-aDkbMO%
zAT(sK;C3${1TylHo#G`n0#96p@uwPzcGpr_Rrl@MgicXJMg9aP4fnc}u2_oNOclFv
zGl!TLQSpXen9%eHwIe1x?_oRk2~9%8HCd(A4ba&-sSgm1wtrZ!JDO$`SCZPyjmjPu
zA05z3=gZB$AXw5-l?_Zv+95=*H-uDYheNd=&upyRdqtJ!ar6Wj;~(Xr%MyleJY{8-
z!YZq(D1ZDadBqM4`N#U*Ly-Q59MKb+*P_jd;+<xIL1}u14%k@E%(wBhvy;MDB+^V6
zofZQZO)sj9=H4_6dc=rM^E<>+aaa3_QJIHH5<k8V`v*imgT*inQ*IT@bD~b0G=ZEx
z-q0L(@IW~+mKg<_U*ehe1_ZuU^+>3AdQCY$bV$laf3Ro<(3GUMIpq*lKh$nMDgsyR
z_GCB=!M=l<ndpG@u8dCl`^j^fSK?q=R8?L)9_+r$lq=~Js)`8;78u=vHB_KVi!i#?
z7W@;IW0Sh%MF}E_J8k#E3QcC$@gdMb{${$G_Z@F`yk-xrW_`%v!UPsI)E5|~s(U)E
zHzKj}M^UV8bvGte^aOf?Kg!<pzc<4>3Bksv!O*87?NgnG7YYU^oWeHk5o4s@VwP7Q
zLEwd73zKRE!o*3T?;Dmf?4ZekM@0MNq}8|89xcntG|H<RaY}7noG+-X6wAT<_S<j4
z@27DXUmK8w`K=z_zWnpA|McI}zy92PfBofu)cpcBo@Hg0WT_oKxk9MLX(~UcM$_9o
z3WZc?y_b1plo)U)ktI6U4j~mex>x!^NO_Vl)UTF)N7BP8u*9M+^P`3dv>)xU|2D-w
zY5KJ^I|C1Y=cv6-K!ZghVUCk>9O<)IS#j*tnqlgh3^fH}5+md(0J!^RbMyG}SYU%T
z8thEi-~vx-UZsT$P9s4@0Y)JTAx|reo(U3r%*E<)W$X-%2$WKj3tGwYF}Rt@Ws7Y=
zLG8S}3#%x~W3vmd?0Dn^(1)dQ#dhr1=JK<wio-Oq<C2%6k31Zes)v+kXJ<W7mJR@g
zr6$+(nbI;W@7{H~gG2)#!}cK4j~zEW$*XGR+K;oWNXp08IiCS`U1=AnqCGX-8%4j(
z0V9u=pSxB>eVo9wIbIrT+Rn6^aiAF*^mJyfL9kVn<k=IjOwU}~uL&2fh;dlS+Lw{_
zs;Q!piPyQVE;Sz4aIhqft0(Z(`;6Ut8L9<J8`B$V?3ozmA7n&EFK<5ODdTlGzN>gF
z;<tS5`QpoNb+vYW<=bJm?}$T)&)JLgkAwCvYnTxQzP$(7>}^L`#(YASMt$pp6v8X}
zBg)G(e*)Ria|hNLW&LdUWES!-Qr}n94v;a#Hyyf!ioZf*3=R+tw@Ei=>oNf+bQ9zn
z^zDEX+LD|Di2x``A{laYo-C}AbN**+qN&pq{N`+GKMo5svDS0ztYc0Cx-&!y`W-tW
zN|4z|twL=Ud}$7-C1?IFoHaQ}TyE5X1Ut?F<ui~A^J!I~zo?=ziym)Cavy}t{)+6)
zwqwo|aix|RS*-hcWVLhQpD6e>ZEt!dZRAY(9W|2pO6P}f;V6th0M?Hp;=@i2I6=L3
zUnf;qWL5F_`{##Srf^!RH6p{g)R~wri`~BCs4G!_I>kI(y%K-3A`YwU@%hZ1rkmx`
zbxijoIq6|vl0zR6wAv9%%N=v<P0`(Y2Y<wvNR&ftcKpaP@%iyY>^mpP)Ebb5v~Emo
zsP9(1pSKvTW<?d{;S;nP?=bizh!Y%ojL*#e1RQ!t>&7r)Gn`q{3}WNb@AOWg-bURU
zp&+X@AYX(w`Ji?}f$86|B^%Ir$ANdk88el{!9?-@1#O8?5(o5orZU6{;56UmGm(+8
zx~+3dTW)DH>0k(}P{IHTZ*OnJ=`99>Z{LWukPyWh&niulc*@rvzR?y0J#SCZYjplp
z`V;{|HJoWfDo~r%epqDm&iX5CfoEn-B+2$5&lX$AIF9n7jBjj$D4e;lRtB695Y~dd
zpqe{lk#v&U^JR{FYu6jMkh=A|7yFdfi_aK!UC}T;SmTTNs7||tXvJ}y7D-}N<*t6{
zH5B)+|91Q@|LM!uzkc~||8eoJMMYM80@ieISYH@9;&DUlZPMZ9^UtupZ3x0q_*Gnx
z5w8_@Npq!<O<Y^6UAxh03K(NHGDDE`kw79^%5o{mffB~L?32e^w`ZmP9UimM7b(bc
z=J9>%pIc_iMpvn{NTN7<d~W}v+u;hBi>mt~k01e#nKYtGN#fTCKtpRtJ7{f3;->ng
zGhNXR`Z&#ZV)#(Lj#nPfq`(DFDgBPNkdHaF<+BeA{L@RSZNSW;632h|rX&YAsaL7D
zG#c~e8h1ML^_>PxGq9UD@q4%x!U(R#M~J%tvx=tV-qKr4qb!f}Cm1kZLJEIG4Tc&f
z40Un0<lL(aID#DicXA_0O%9}H+Mt2jgS<41O#)*NukxneQNG;?_Ju)itw=2MDvILA
zFaM{2l*<lR%`j(xo1z^OLIoiut%dvBq}euqh5LSr==FF;LiG%~wR$E?$~b(28OKe;
zF85`(z#u0hGl2^Ba-%D7*OTf@Sv$G<$STq}%R_aC5`HC!TQ-FL2THbrF>G%{KH(9a
zIs}`659V!JA;!zqjN5@(n{ey`dKWAtjmCF}R%Q_KrLodrxZ2dZ%`7$MocW6%eM6~j
z;1tn}{7SMM7G)kKH=;e7EMI(>h^I1Eh2aKoBI)ZHMHw%!CU=!$6D`c;n~y0<9v*Mk
z6N%dHlza1n!WtvgF^5!l`wlZQer$qCFqs0cJ|-6~Wx8RR7qQc<ytqES3iO(c5%!J3
zi1V3NTvW+AK>R>Pgj_<}ocbAeTcqi@IFqkPF@by6>}%MxB5Hvo3dkx+5b%U)59uVd
z!<lUt4*|juj8`b2;s`#m95XlKVIgh<QE17uLlQL7`+#vnP=vU$S-fIdr#KGFxGYMm
zVt$Ev+E@n)amc}oRE;~4gE7^^ETZ|<q7Rx)Y8L{TD?tA_WBq7-$TRk|$ds_F`URMR
zw!t}@yD^r{^uMeR5r{Z0-(jTODQSnJsuOF18&yoaHA3vPHhh9Fosv8(?mzMBtw-KZ
zzXw0p?~ZMF$(#hklUyS>n+0dn+}F65A*tRekra=NO|FBb(Rl41jSP12#1{}XrYFi1
zDSSZjQSfWvh^&1aJ=^Dv%36lxT|USeXT~^)WB<X$4;A$gY_BFT&k}uTh-Su$wSkmo
z2Ix<@YKPezgz&B1PI*{GPrzrr1FZ$_b#tHBmWu|_o(w34oe2$QC<1R!`ygP0s1PXv
zu$T~lKt2yTFNh$ZV;p1)+#ceI5&qLc4nbZWL_5{DAsbqL*QNu2O{#%5Hu54mzWj+G
zw(q7iMZ}o7uX}>*0DoppJTNb^B)YW#+-SE#Z4F3B)jD>;$^GCHbwv1xX~(Tvv-;hs
z+v%s~=ceEf%O|Q(uO_KxrVA^*nOO)$i&n&k=^Djnx)g}hybOyx*=8=GH+S=WCZk{-
zplJ`+l%HJqvq=$Vn}yyH8$nq_9QqKRJS`H*vYSH7&LY7tqUF|Z-&qRtxuvv-s&W@;
zY0c8eIsaXK^CF{x1X4YHT#J7bwQOJ-=t@eOAt%c#fsj3e;46X&+P~DBHn8|QTzDo~
zo^6(S=j@G&9+rp^-Rk=2l64GrCJVw(FV-qZFs~bwWPr?V`jXN39vyvZAsAG7T5W#&
znC~DFj!APe1u5E<_(n(>hCka>LHLqh9}qnPFjW|w60+XuJTEte78g6PzNCBt_(aW_
z`k1AjU^P;^K_v`87oKkvCdJ)zuFV?sS9puU&USIjsG)bvZ=noH_6^8!;W=^EeMG_~
z2z>=SNy<2lpMaZkO_@tU#b4grx8|H&wW-yATOa2d=3iB5R6K##^5fU+U;gu{_)GPt
ze|`I(e_3NCmswIg!HnucWIW^6&=*|w%i<$4P7J<XjG9o&gvLxgCj#3juW6a3Npve=
zdt)xg`u7msxwVHSv_@qpy~kmp;S3Wb-{lt(w_}i;u?IK0T+2KnyVIV?8p3!$;9z{f
zT@l5;pvyzWSv~NwqA1S0we;WlT)wTj`vmTJi<dx|M{%56cxvG}V=YW@4mhuMOA`cX
zndL<p$Jbv>Z$NWPK@~{rS&!stJZ&WUny+WD$hq)w!qs=+<PvDO=c0pNT4n&G-~F1r
zzZjQ)i8GRh(-fr)5xny>G3*Wvt6dp;D)!zFoH^l$Be*6bGoYnDG{h({VW&!9%5x}d
zH^uL%546LL%%$-isbR)4NT+NS0_6tTtegfU-PlGOM3Gbu5qqc7#AIfJ{V2_MN3B2$
zRa_nsU~xbz`!38XYp$WE52R{$Gx%Bxxm7}DSXIU2$0#>i;9t2+r^EjB>q$4E>V}$j
z4`W(NuUGnn^1i>*4x3Nvp<#*3(7B?h*OofU%Pfz6d=m1SiHz97wf4Fo6qa{2)`M7!
z0*+#YDDfv8nn12_Ffw;i{xA^Pxtp$+99)D*UeRw`+0bT(celfQz0VUllsDjjs-QM*
zanlf^Qpm|A1L}u{qKHYD(g`0CoMPLyQ06-j3#L#|GtAObH?CnLJxgT=L}0h?I>fl3
zisPT=8q5(Fh-t;N2lqXj5149<?q<KE-JlwGIToGO^0F*ThrV2NnU}=GVE$A6W348q
z#X&6r$ug|jJ$!%E58pS3r5iBH%c6**e8am!u!^(6X@McoLfMNYwXCMR3v-g~Cc9GF
zM|l;-QF4C^bl(fOwO0*OAAXXDpdQ4VR9nPtXDm!5hr|EuAXHo{QOm4I)A$KSe(o|p
zaS>!R<A{3rC~UFPt7HNzB}H6CdHw``?>~<X{A6Dr$L4D=jBo$T&yu*WJKWRz1owv9
zRTIHMgT8di0eGT5G3C=1s6}T`=sz*DOK0lZ4l)|~JD520lrg8}_+u-Ln<&roD1SVt
z@_9pQvu`+b)VBp#=mrI?;QmG3RKqRY?K_nD8|=MGAq9l9Wh9?%!Nk2S*mw0Se%-+I
z3|LZ$I+7QFcCa_ds>Tt(!jH#!?kcNVpBbHyo&w1ezmSogy`g0J`c+0vQs!~_jOqH1
z%?G*eZ7+<TserK!3HCf+S)3{_tF(H2T$qPlH%zu+#>_UpEqsH18?P|GyoNg$RaM;D
z!2E=zm{BMfCIQ~tw=ebkA$Y6b-<R(B%l>oo-<+XLwdqa~UN993&{YC33%1-lG|Dji
z1#=4f>?Gs(gr&4f#<`m(Y<RVjx<C9;f!Iz$eiv`_=HULcB)Qf-0h4fK5RzoLFHc!H
zr6+k5)i;9(<ff2>g8^&8s$!!n0sB_$+AaDaUi-nmn|Bly`@j|x)4O<<3R|E1u3>Z9
zx%3*md;V!yEBzQUpuHXlsv-=Zz{lugWxzOC*(D~zv6GPurGqEuba_uVISLs5($|5}
zpoQ;B<>ohy@twkh!QLE<6E{wQR@6R7MgM}}z)Y%uCOuV>eNe(5YRZa9Bogcx6qt4c
zrjp8Iz`Z?F*2hI5J)eV%n$x+Flg7M98d}!`)wPs``w55DPs2CgnbX1!*6<%+9Q4;r
zDc5&nE`jIOkb$A2I*2VYwq}8-g(;PJTt_s(Ji#s?h=ryw*phekJ}C33h@POx``C%V
zEcV2Oi(Sr!Ht+N!bN>eCKZ(EUTuM5?l%fAE93)gr)={Y)*-Xml3hi{*B4jr&EShmp
zfo44f)O{hDp_j(ccnoGaJ$(R_-#qmi-X5JgLAMDe8HI9X$$}`9jIRG{=|Wl*S$1QO
z?9;c$63bG*HfPV`D4VAZatTA*fQj~a|IcoB6mv1hQ@c7XwUJh^^rDQ?EPebTvukvl
z37Kq2{_K1KVbI6i6EYh3D#|;`KrZ?wnP!9~i8B5I<UJ1G82s3Th3*)Pg$UznswABz
ztr-NbH#*PukK?%p=ARIlsO4fuV`1Yk?aL0rDbTk1<cl;(Zk4rAX#djVm{t^a<)|DX
zx^;jI3^|rV#yNcPa|0@ui6StvB@v0ca|nZxe8<9v%kwz3>T%15a70ZQxw(+ayYI%c
znHy~PpFlAl?EshmZc&s)yyfqj*XBWRCYpM0@?P#_T)c+55XRA)E*83n@%ojEoOiKK
zC16*@2pledlq{~Ya`mIwXUTUwzN1>Pd2%=d6FabL!Nhp<CPhX^2#3C8iFW%ANwZ4h
zWsP7y{?rg!w6H3QA}yli?wI+fOxs=58xX~c6F8;7buVb7#3y@lpg@$^Vs9B!9NAV4
zHF!Bwm|Zt^V>*dE0cB|ia}9-tF)W-!oe{}7rtN%^fo}S)>n*WPz9=3#1G`N=bXi<I
zhpF?K+};_ma1PeV&*~=7q<&xz$XCx3r1VjWEft&?twyF&2(&@Q*CGw8=@3u9o7G^h
zWy@3k4G(0IKnbV^*=vjI6Aa#N9*fE?+aH|`WkaO4TabFi(0bAm4Amw^jyW%+2e9w>
zesQP;5ML>xtT61eJPYIU2{O)&yn{=9N=ZSi^`-6~es22?d(g@Ox8n0mYU?-5RAxz$
z#aZ<DBlro52qxx%YN25@fGRsGWk3;Vs0$~cP`l|D_&M_x-mN%if(?E5n1CZcoiBed
z8$(K3O97*-h>Gg*$-jRtv*5R`QzDkGzP5f_R-WXW%;;XO-5_aHl(z~@{_T8x@;sRL
zvkSZCm~J{!kTdc06ZK`-OB<rC4CJs7Euu{bsxB)y$7xxXMYKU&SxOk1%rMCwT*%`L
z6_|r-0P7L3tYnOu5Lr1A5d8zg5`YuqhVi%wXsqK-OgX{%0Ghg>iI3SknJy0=&+MDS
z4$OBNwaj212oLE^tH&El^6%xfEaD<bmgZ&8A2^mq=mdrAR36SHeHsBnh~dx4J0hby
zdf29R(A`5}MkO&xMiu91#94`SNNO0D;KxCg16H5#s9EKbE_N)YrRzZOgt>76>zNjf
z-Z+4MyM4zKwp#Cw41FRr#)8aTmt0unG|j8<?g{+82pm@&UI=J2USKA7BAK^g{SuAJ
zsH)QP@eP6>M`}n?7O3W?{*aV(#td2jx2NiX(h+a_M_uY#r3p;!xH>pl<Z1pqJ$)Rr
zpShp7((zj3`jTnN6#vc#kOe~!cotXj)T^q(sb6!d3&SMM%f~md&+6~lI81YFzy2N^
zo8RHT&b>C5eQ2&QCw}tZvvd=Vd$ospw#f;FRTZXjb|X0V2`hRRox~PJm$hRiqF8Gk
zpfZlb@bUY~S5iOb-pblvYFk76dm^f>hW{|hqWtmfh|i5urks*g&`QT0NNLU1@Z?C!
za6?z~AgxiW83&#)rRfL5jh?P%q^Sr{Vvz@|alcdhfI4nW0d#PM2a83<0`guu11u~u
zyr2&<vJbI8=LTdY$EW;@d?{&Co+fdHv`(2FS?eQ&-FO2{C-~}eZ<DmGt6_&#npH{i
z_%rz_(Cf0$nK7{<)rQ94tt1P)!EZ9D;wp^F$DiSAQ=;>h_QI`)g#}bk0wKxV<4D4c
zh7WXF10v!w$<jD_d~W-P*_E2g7MJa9R2CGv(OLDK+T~|r=t*6bwPDhtETbowv;Bmb
zKl@9Ti})@sNnjYvT<{LcTk6&F7a8DQIlEbsg;DbOD!~zb-|Mfxd{HX5@_v6LO_SS2
zuU;elRtI!%F!2tx*!saiGh`e~!wI!TaInoYU9^GrD6nU3P&zXKHK_QxG(CDd97fGd
zc&L_BgTHu=k@U)N;SXU(Dtk9C$*=@v^nsxtS})tiNva{FqaCU<Y}R5*faua->Dyq1
zuSGi^2efL<5ns&cF4w$32j$O&IvFP%>m|2T;gX<Q4SldFj;uC3(y&UC$KO|fcwNU#
zDrDu_G>Rpx_Z_hT5f_DD;F7N+6wUTdr(b9eFZF@h8bo?9SP(s#wL&1zlPZoMpMZUo
zG2R~LG(||{XWj!KpGYc?ojudUK@|P1Qy1(z25~_cX|1G6(>RK<<VIZo6ISy67vsf=
zGUND7Fb_^riAHiG!qkS+&6G3^&f0U(pOTVA*#qCuFiIQ0>*FF>k;G~C1QQWw;o+<c
z`1i5yg8ES7bNapRg2UKt)cA3d8Yh+Rf+qnzAexONgnlI`q(xdJPk<NAs<PS6K5JZG
z9+a4W$LDvBiSTMUAu|anYIZR2X|8SbQ?Z6A1lCcsq0PMW7P10An+t$&(#}#@@kNO0
zDn5~G@hB?8;tBW#pE&??)mMXH8%~Wd%fk@?hJ_#jY&*)CoWO;rDlv5vjd9F_m(a!3
zO}au1>xrKz^chEG><hD0RM|K(npTA0okF(Y=qgR1jZknDS5+A&|9G|W1+c~928Jv4
za;}`y9M5^v)JlWquIL-^(gP6ZX7n)VuE92Oo+tSe2%?=`C!Tt~aJ1gu>-Oj1y=e{~
zuy-{)Q<HF^L=LVw9gl`E3@cABd=|nnO|>MA>XCJ_fpA7)6^PXINOw{xzENQ>0LZIh
zS(B_b?i?I$;X1FWy&9%&AwoVq*X+dfCko{7ijcU=Vi<gS9M&3SWnP5Y6SzZsE_m-`
z3Y?3IBXG#Wv{Q-Wz{V`*GWVf$L`kxymIF;R0)o}yyXMI{Jpiq)g%1dGXVisp@%w!w
z;rS^sQ)WKkbSj6r?@;`RE*iSK%nPA9%#{7E0-#})6h#?7KFHrA>6Nd!d>2$e*w2pd
zUXi7-IMK<4c!LeW6xDP=6Y<ySy;#wz9z|%@Q0FMji|kfOjB{SsLUwP)Nb!T4L<ON8
zL)(E?4dycq>3*r%6*k|`-+B~fS!R{%+;cJSWTr$+L>~n7IEvEPB@4D#S}u#S&)j(_
zvt?~+n(>_;h|+U`a%A{oPD>C;9?KssE%K;X|7dGUl>fE=>wo>XKmE)9-v8^*i+?Aq
zinNLrcw5U>@|1mWDZwJGBToc*zF8n>kie=&f=YXT_$s>niNw{Iy1H?GqUfRHj2yV=
z=$wHwd1mo9@rJd32r7T+GMLumNd%1Pe`t0Tu0ncQscBwVU|9sFe{H@(Dj=$~7)uE*
zz-`EGEj;<EqWK!Jp$Z_yMe9YdJg+kCn=r~P5AO<XcP`?>Kt+3a(SZfl=MtW{knu>R
zZTW4)MVRL6+qdmdV8fDnrwofW*pgzKO;QXLCcq26%eLEj3{CSMqHF@}yzfxJ<J7y^
zePbXFRndi`lc(;8URi2$pEt0XQEgJeIvvKN<jzd!gQV*6TPVuBD%Y18J`&o$p>Q=+
z0kHC#6Vw8^+lD4lth;Gfd_&tL>jiV+>8Giaa=#RpiSOC=Lxa{4mOCVGjA0>)6F3mF
zgDlrvnQX$;1U&SpvSKK~(BtG>^F6Rv(MU!uHcF#m@kpKS08L1(XX%NK1XJD7IsLW0
zbR4oWj<UNGH)l!cGQw}a>S$Z`w++k*_2RfT2a*(Fm8MTr4+_utO45FXlZ<IM5qwRD
z)P$cIxI&#LOyZ_WX*yDn4NFb8X*Me=t0XGp4`*Nt9}2D;8kCe)FY9oey^ku4(#om*
zUnA`|2O{G0eP9FiL2X9Jcg^$AF-EiXfQ-E{_T&_$ktFZRDo!hf?qu{8=Qk)&K9L}A
zvS@92j>i9}BQq+FG$u-zR0G^m@CIk`Ni$s<=t`4W5E_4IU=vGh+B#DP=`S^?5(ZW|
zm<@+28l+QjEhMBn61Ds`E*V7#<|aK{=?L#T-12q?8)vP34+`g2nY6gDfu<^M(KPFP
z1L3|f<3QH2f_A`xW`<~6NU&|;X42NLpA`N^#-fy;>sF8$XIGojew`TKcQjQ^xh?C0
zay4So(3x@&XJ-cR=}z6^Qk7K}$8ojQn&M+w{uE(~BHj34P|Kus8W<#1j0<{B<aKx=
zH6hhok#uheu3+9Bu_mVfK>T=lM}<jP#aow2w>EnTc9`*KUXE`;P2n#*oG6PnThU;P
zoWMIP#B|}si>j)^tuIc>-DK)qE6zxe-E0pcT2J1RtiE6C>_EfI4bRhHPpm`;kO7q)
zB&-4P3({o9@pmuuS*PI16ZUXw7By|lstAkx{^`$WwrDPDlqm~`6=ftK5WV3W$uNrh
z8g%qm+Fn&zmB|w{eEkSqS9fo}2iS|>VwMiu0w_-Cbt<Y#xQ9t(pJF_h!LH0^jV79w
z>rCDD4)bhG0wOmBDcFr9v>-CaKyE#cqH+^NQwmj5Blqb}JY$I}N0w488XTe|g&<Vi
z5XA;R9v|tk9ZbioL4Py~jqJ}@o8rQl`K)4hRh&O1HEC6d)BS*<97#WcAT`8+e2fFw
zZY8Hq$}$ei$5R3BrFQ^Z38!d|M726?Ar&Wi5~k^`#l<Hq#2+wY2wAYA2F|4!q5_g8
zXRTB97uL&A(8@13kuEB5eM5X6Wgpg*8IxcgiRDB1lN-XS^ES2%v;+7<u27qo!i7sC
zvGO`18e%@Dn8KrCCAZ}z;euv8)ErE*#L%hiJMg)&lFu-0k7=8?wcy^rt$tc8iPUco
zTS`);z@0#nk&-a7gAJQKugwgkP+B~G7k{E~w0j-1t52+OR$D~t*XFC#Gl3uLhfyCG
z<q;i*(}7vw15QGlMiJFHJRHQ_P9YA6cAsMvji7C1k#xPN&xBa4vkIOl%V9+GB&?mM
zt5uGJ?jgRNmF0U3IHeHw66{G+vP+LsUl9A8xSX!TvvB||&B`hd)5o)uK5rwQzw+5N
zq`MH~*~o>QJ}_ZJU{FFqSm+Sh7Ue**8y3dp5My>*Kvmn(<VMijKJ`mNpom@I#`COY
z*hB%2ubH6w(wN;xLQHxY805!onQv-XwPO(qsSTO~3H7|A^W}8(dJ=^rxJuptqgmDn
z%&K@GjK%YDD;qS*vp5Xnhi}krb%g)A-D<WM-j3E;Y6rq}qLVj$b1n$UhUJo<!@$K#
zGF^mOnLfcx-z^I5SD^z=3{VNcQ$o%1x{mC$bis5U-~y5L69ONwf~c~=DhHAx+Oh7;
z(iIOc)H|`P!1Y>)ooYa{T5PX%&;T<RuA*Eslo2`*Hqom`CqD2h!|+4?{L`+Xi-$D%
z1hl6NTRYeGn&3KbjjmY6VVIN;-%FoImb*$}{YhVinkh48nGh9E#=zu#b#^qY;$&Lf
zr&-s}p^*JF|D~BJl_qS%23l2CCPflGqcFwow5lr|c817@-`Zi?<8P<qpO5wQ&*P~d
zzI^+0Kh(q6|G7%bEUEIcjEbm?sxYk9D(EOm^IN48|F(@3@GcAyIttvCQXs@Y@Jbm2
zMX7zKcsDWz98ALIU|)Z6$8QOgPVy)%k}TcEWze@F>L@jje_eR>B8=UuU*H2s+@D=0
z=5k>5RQx$o4$@{JH53+P6M}sw6Pb`4kWLh$hQijp@cy%`x<7vX`98&HPdO!`zDcXX
zHfqb(9Bfu#XUa5Ht%;eXJuqBwoY#hHl_j$r@f3fG$V@ZO40_@yp=JSJVnIslM(l1m
z0U=F`GwDCx41kyUoqu)mB+s&}yzz3;gFbtjzJjj>@^x7~r!KNmV9oKO8g8`=@-igl
z{Qj|SQC#Lt7=}~YBaMgik6NT*T;AV4?{1S%v)?ob@vNtdLv`RD;czvU62P5e_tdnU
zJM4FzL`InlHE=4#gtRf@(q=%_)vsVtiW9{`*OFgSA!=bdtj$=2MVdcB+PG1Q@(N&0
zo85}MwWNtb&?ypbut=cB8R0UxpiE#u(x0#JcKZ$+onj$rigb!Kl)i7Qo1-i$$~b%c
z(tjebb7>sb2%$9x-?(!Y6?ob9=mAK#hGrn}ytpkVY(~9_AwwBR`aoYF>oG%Nhdlya
zver8onm(%zwgEQT4=ySinh$Y7(R;~C6P-;|smP>xFD7glq;m?lCN<%@kr+`_iZa-W
zxjN6XDn>d*n9kBl%)2%Ko2Zem++A^ArcwC#?R!44x_vsrdZJiGfbT|TXth-k7iAQN
z#p5MPwgF(58tLderhGPA04~{!yBkh2atfuuLtC59DzYey!^b1rKPpc>`-WXioFUia
zkN-VoS8Jq<sLIPHXghu6RMn$!5TFrCc~J+j48!zdZnTo1L~)r^<>L?6>@Hhk7+4t~
zgA%lFFyhXB*Id{L71gjcr(F7VhQdQXnc8aDHN_KV!j%!1V1lQr#}ktgD<Mukg)3`2
z0B3AtOrabS1Vxk3=wRfeA9l!AU$BPf0{vR}OshOjZxtcaB4~NlS&X{xQLsm^e<*RV
z%f3XM&%z`wW9wjZF^eIE;a;s*RJ}mf)fbbnU{oUP@OO}6C%HT?BH4G*^dtI0@H6G7
zNHhb?SIK53z|TAmm{tK6&dip6P)D>t>pK(3$C)B+U?1k3qS^GQ`UuTl^veP&pzcgA
z5}6A~0DaTT)G5`P0GI1PfG}g1sNOU6DzF_sPBr*(rWvG}Ak(Lu4K-}?>49*2cX>NR
z*=(@nqQ;A4c+-*hMK_@pL}@f{k+umMP4&KRG=(Sc0PJnPxyGlxw8?=HNtgWbcP8bN
z-8lV}eJAoGriU|~AO&J5fLVHmluSgq?+229qop>zk)8cy24NJ+8cA_4goi3mvgq!>
z!9pWzdcuE-Ohl(I_`u>sQsI!%nGL9u`whiMd74=ZMK=VbuYo4quK}-}Q3egP-jtC6
zcx5!1Q#G@iq5z``Csf_nH4nUt1-VkvMBteT=LW)CT&DR`SlF!_0s5cNX9?42YU8L(
zKs4{=5s~rT#-AOzZE=|>_qZtPV*$poPZDPk&?N>51bvQoI}z@aNd%6IrbQ{lrG1B~
zHs1mpJA`qSglQSx*j4z1=k*5(n!r;+R}aN*`I(wbi4!jY(VX9o)mk+e;B;RZ_D5}e
zXoU$f>Q!a0M6!#9VN4ZUY-^ct#=ko4&43OyT>%<D(O<Ly6+`H4p3@O1O~hu*^q$<C
z1!qN=P?Qf#ZR(Ton(?oz2LQw!^CnDYK#2@$A{wN9x9{|Vl`Pg>SblnYt;wB7NtN9g
za*TK4RW2uZT?+>X<Dzw2!y4}YC-3We99NR;{)+TEfI0mBFtFHb!+;HV#}E6u^};UE
z)7&Xh_ZG?No_}vJPDErRMT%0l)Y7g2d*^nSS|uejBO^|nIEPOi{=m;1f1m}F!tb~=
zl@RAu6(_bUwdNJYDG7#B7tFq`f+lD9ss!vu2O%WT(^i72>^0)^isKZzC@Yyz6z5r$
zg}>w;{*j8CH9Pq<^@iPUeHbB=!woniBL3Dn&2o4hPPHoADozV@K-vxqb|*mq2y$cB
zR&f-i+3R$}ubErDNb|9YDJ3t6GOS~v<$&#QUSv3iRhpI0Cy@Pn^VuB#F@52Wwm!1*
z<FeDr!YjSnv(_@*0jt<eB#6{}a8J^S<J3LX?^|$46%|qT0$Ag9Qs(Oo%6{N__>+`&
zU4tK6iJLTvUbrgc3t`+!AhR4UcgZU668Asd{GLPHRN1nCe0`LT-fU(TRWfFQjSyag
zX+>(-A#Tctw2fbS$gRr?eACxUX<8meNnYIuhdkg3-)nqgrCRpJp|zt?t5>cp9E-DW
zor|mti!i-$)&6a}s5frPYHP{W(iX!dE0ZLP?QpwYKgXH0@R|aBQeFJL`5+nz2<Nuv
zB$^_E^avkXR&M1prD+_+cfZ7cuJxd&yyf9pn<3gM5vPOe>e{!CQ6-wNW7|em6WMBF
zrFmTD&u?PgUy68@&d_r}bO4f2Ts?^>0~M*3kzx@(|AnwA58Kcex|&);a#LH3yI~Pz
z`b49oscqi|ZylrrX{>uHq@6&IgTq15uV;Dk)>F^3tjwe5KlLj~4{OK9X!aA)n3-sz
zRN<~esR4XSY|C;H!CNQOVoH_JVwj^!y%URQW;$<#<06fUw0M3>cmH#>;(g(uvyb)*
zjF~-Uy=iX?&0A)Jw8yM}<I)deW%=Yvx_*EI+abd9(I=0Yq8<@j<EwF8Md9m=uil?O
zenDo=qs2}akQ^eNGZJKuYDE%|>L@ZHMs151MQNBN`K{2!1J?I(Y@Z9HP(yG5;|did
z2l%75gSCkf*oR>-Cp3Bj&El<alJF2f>vuV&6|(`dD+e#&tAoQI8gGgRGocKzwI_hZ
zMO<dud6--~o80I<2g0+Dp`e3`;%Pt-g0@`ITgq5voE2IAd?v+gD_s~p^?u-|CsZYS
zf^fUtpQgjc0Nm+I+i$E#npR2v0wZa^&@AmY_xJO*)9xCR{W1@$qPh`Sa0S%5z0q`n
z1#<I?zB3zkz96OG`eR%aeagx_POH$usH>J~(pZ7ZF?D<Rtj&ODHCCP}UvW>z<*{Ge
zci$Aup{%|K(c&jB!YE9vD$@G8{pS71AP`CeFwG1ADe7vhX4-K39zU1eoy$DS!>YV{
zHF&2fgH`m%5=?|=0SzcG00T(qMUdg$0_cB??beN*M`fPmH$n;z2qOOE7Z&qae=eB@
z@?X!21eUX<y#RWubC(Av>-$D_nB_?x-)xbwAQ(tr!L&K(I-WJJ=#D3SP9D7J4ICtZ
zAw5-PPb_WjJdH!2$g{debpJD`4LxY;<4fnu)T-Q-XA#x*;5mTK#w`$4)SzFe0Zc-f
zzK7+&Eqwkkt-KMYwN+Fi57181TjhdIKvg>>%U1UCkLF>R8`bDSGNk|a=EJ5sl>d&O
zC{l#DWIKc0anWF_0n^AW;-f98cV&5+=1F=U;1?d9t$th+cKKbCqRN-G0%r?~M1${+
z<+m#Hvb;ZxcK>p96$V<NuTvY%^2PdLw@K2>!Yods^!fSLowSc^5&%0Cv@2*R-2Djr
zKgm`I#<EIc=NeL~6Di6Io;ybG&LolPrqI0Qp<iZs@d_NAN9y9u-rHoBl<r`ro`gSk
z5S(_U1OHI6Gge3ScoZ|!=?1C<hT9>$D<AXZR=a49oZIDy<i?ypYuow6gVYR06lYBK
zj%MoC=}W4-sFE8m=Lc+pTTb7_VSZciAFL5r@5JqCR)-t%suf{y1_(oW8Wgn%x&Wfv
zLW#?`NUQ91^1th)?p7($oDSG!I(44^Is#B&F6!EoJcj~GKS+mmtF@mdab7&1`rw0z
zx8~5?VA8IJ<AI4-6}rN(%A^{W(j(`M#WyOaQ-<GcAIh0rq@wV`C7h`v*Nlg8F6xR@
zkE=y?xcb1I2L`2}qUqWbq6v?F$P=l2q+`rbUq;g`$_gdb<M+WhtD*Ncr=CmZ&&?AT
z=T%ka<?948J#kZU+WjN=T6cYOEu_o~qx3m~5e>nN?j8@wC*}hxGD#Npe#YUt3|d!M
zgO0wvB3CQYJbMK_v8xx^|9iW}j}qXB^P+qSF`b{8!lKB|jZ)w7%XCtOw<v^0AqZ~Z
zt4S6`VR~b;$iV@ZOh!3U3K}opfWW(RrM(@i9@hdJFc*?DJ33J&!PW?_L`c;htYL9B
z!y<gMj{%-|92f;#bd7ShLu;Jtj&ON>fP)Avwn01na>Q&RAo?#Sbx)QBZN5u?Q4&NO
z9x!YN?YimlbCW_i?66*)y}Pwp749$rE)Eu$b=DVlL!9`9^`!?qlgRJ|QTZmb%g&uR
zEDy|47C%HD#^nQ;E%(!x*w9R24U<}x2<U0ZV^(5RFg;F9hfSu;`=TK>`0=Ee%ig<K
z=6d>pwBJ5aL``XoIcC;($LdhHJ>Sgc6inqLWmhBOpkLUqhEX%e;-hhh_TVlviBQ_v
zBR;9|hr;wC2MdD-Yo~$yoCO9Sgi_*&`ji3z6=t&?KNa4joDp{@NnQu^_;oJ*d?Za^
zRiuw*S9lW1Ssn;q(oHb30*~%*#SvA{VLB54G?5GIX8BYD+In!LJQ?S3YEJT_DJ_}_
z_IzjMAL&L(>21fQ_#+z{)HpD`On#)_pGP_AijX-uuN9%l4qULNh>ltyU@n%RsOF5-
zXF@}~GQ>e3pibdgDuYeb1jdVya)TaGnI}p00-6qYY9Ot)1x<A;D!#U6A*g;^<}Qw-
zJj`Aw0$c;UZ2IGvT?DR%$U!+O1B$&p_Y3q;TiC`WoJwxO-K{5{rzmiuJP_3829))%
z5~s;@Fljv3jA`IhtNKU+%DG<0Nu7Qq!K6Q&$y)bP(L?iXBpQMsfjCx53nmWk*2&7_
zFfCtTtNa{MSMO)feFvj#&0t1^r-ebn!B2+LT8iE>jbk$ldI*g|>I`?d+uxxiweK}d
z2bg}v-c4*7wSulavJ|wul{`ekQydA>cJAN0d5%m00Zl&qw`?)@gDpm66^2>)ijtUj
z$rjFEw}9rJwM3NVP6_LDdg)f1UDnLRput(5lb2}_j6XB><O%r&#&?J&GC6m2A;XFJ
za*1gI-2WZ_S_f=Lz+GLQ`%n`Vs*}7y;HK}JV2P(8d9cEH95=1#)ocJea5OacwLF_I
zGjR$*KBl%!d9Ty1=PZdNAsjr&rku#Sf8U--iOR4jix+4!-9gXwLSD-Q!nJ3()(=8M
z;9>*57R;G;6I?3iw-fy`ofz^|9k${`ROWH=0#n+v$?I`0jWGMUSw$uhbj;8PW0`CM
zC57MGZh2J1#S1``XHCjAPTtuIZPx|$hXU{j8p`34*$R)MQ6D^5MB0p3%t0kl8t3`*
zPwGRMkE>ic$jIYTh8wz)iKo*y)n!{0+Bh!aEPej{>^1j3>yO{RI;OVm>#Z)*vdxvT
z|F!@KE)7+zoH_ezA;3NM@wlvLNR9ZdVkwHVB6<O}w@2*E)k2e%CrER+Z&~w5?rmf*
z@+Xkt-Q*M%8D5qQ1X{BSNe~=MTvfS96Ncp;k#<{lmi!8KR?y^vp)(;&PC2#c30Ztk
z3b^(F!A#Dm14)nvsTe(2*-qR05*v`2XpmJofR2kbsU<|OjFzSC=*1r3@p+QjVW9}9
z1cLO+W`zUw7u12A1UF>VvNnhfHSQWf>svI*F!~vq<SNs}8Q@RFvaOH-td2vl;GA1G
z{;k4_PBZvU?1BO0Vi)qB3|#T<w+ILqz{ax80ZRw89powdbda{QWYxc0CP0QoQ6%@*
zK)*uCZ*?44Qh8lFD>Dv!UY(7_g~U_@o7Z<-hDH7Yo}7=H61p(@Au>HPXMBLb(z<|B
z94pcB;|K)dcYQsfVNB)F=+v~}p=lukD-PHg6fk(}&frs5MWPJkPd2hyE_Yzy<;fp}
z&FLuAc)kCFjE;1@1yCGM@Gri1aA<IM2p(L5Yk&lIhakb--7dJhdkF6C8VC~H6Fj(w
z;Lf{ze^u}Q>i_Cd%U$i<?re8Y_oruOdwO#2D?&Jbyovhuct@%FFF=TzaPX$*H+oYO
z^b6Ivf%$OBt8e>TueCcf3ex>}4k=<`vw};zCR#Roh=`LSufHF`twY04fUK?RwLgb!
z)sG$+>v?PU_EykBI5VP#am0YooCAv=KR>&^I!5HX2!On!ihUnsMc#<m{{`zwOvUe=
z_|hwIWnYzg0c%rRGo9aNt$gBM8j@)B@`C&G3@nJtVmX(&<=QeUbG2;Cy&fB}%tkg^
zoW#qTX*#gI*@5RE-HR~gca^Cn7t<Hi-wpiTNQt!PX}RM-gx0wJHOJ@PnP~lYitA+W
zW5e8w?P*iL4ie>+me&4o{wat-|3;=0QMTSQ<bz6P>VmxANkaWQ`sE+Wx+7&nxZ&bo
zZ9dfeRtQ7L9iQ#je*iLSTAQvx`h-9}Mj69>EYmNU?BF6YHXVOQx(`Jpk(5@s6lE6f
zwXl>@mwI<QRvL6S^n%%j4*?ZnHF+=lfhG@sr+o@5-6r2}t}%m1>Me45qtcpWwd}dk
zRG2mF_SU!0<7x1~l-~~B$}*xN(GSTy!(6DwLi+H@H6)Ey26%J#5hcf%u3ocdnC`Q-
z3{3j7^9a-Ie@`UeZb5l|ebZ@2SoD~e@56{Z-Sp)*WTE)DZMI<bvO4DnUpw052%)AM
z#r-UIQB{C~##)Aalh#jU6_m@fxCJ^Q^$`vwXWT#_sj#@ksk%xn0R@>$f?iw{N-EeB
zq_QJJruR5e=FcC8c)}KOp1gSCAQ%lNo%bX9k8|?~#oRM=*2r3mUDnQx9)G3ndct<M
zgJvXG`Pg1Bm^mi0RKA>KbOkXx>>*CBs?>+u`hZ1l&C|!1394?KVs>{i+O8K4CZOkb
z4DW2zvUud<ILkV9R<~L1KZne^cZi;t4(DxNyw6Q}?{ym}@r+@Nv|zY>>*FQ6g;uh3
zS`v&kIzqU2rLm>*qpbe5iTlErYPZuEHXGUO2hj1#MwLkr8UALk)s)@FeL<u)ah1py
zyZNO`+YT0Zex|M0ZEx%Rd*SjXix&IOn(pxB+ipfG40lB{W{uip22rTdqVkU-F?p7L
zLF49pdbT`iHV&Nr)N70sTszyv%PKsehl3|b$GV&#*c1viMr*IEjnfIte5sKiGvZ7%
zl*ASi6RFh2d$0C~k?NW$@GG<8aR5QQcdg)K1cd^#v^KZmx8y$yBYx`=qbFOdT|?st
z=MbMYPUn_b6$lti3-p5+lg>R=;Zrl}6Rd?8KScjd`MYl&a{JSlm)axzlqQa;*7C#f
z9#Qsg;e=hQD#><|rNyvkN*7gZY-xXe)Yj0Stffn@RN86Oa7z)zaqFsBJd`e(O1qdQ
zN!pCp{rK!3O^sD)Cq<7vjG+2w8MHJbae*t+S#crx44kXV+*;SZM5<Pjuqohz<)Ga-
z^vW;PR@GLQNLT!KzPuj3%>^!ayT*jVq90!Heqp6X?+c=vEY`<uggZ?=r@2ig=!Sdx
z*6;c#D!uPDgT`9Wh~wIjwnEaU_Q#!n->*1|X6=PfySbwE{?2WC#Vs7SBzsOn7Hxh;
zGZ&ACK+N#5?m=*uTV%>l#BD!&YT{M=cds_e$<_kXVt%V0@8n(leIeDee#9m-CwK{R
z$8e~=u&1>9!q4={v4cXf{=e13k{@)qM}eY#>4`Z#`4jfoC;}tHiB~_<Mv^O7PtdEI
zU%if@IWg9v2+SEbpUMhcOK{^;K`_I>K`x?6M>H<d7;BpuzHIVa2ctwX|L7-B?(Q+f
z)YX`8QW%1BVQ9^0aBF%mqmTD%mf!#pErG^Q?Myz9$&JD>vxxX<Wm~k^DV^XqYPim$
zuLjlZ$a=RQ>a!DZ*k3sboFD6lzn_joU!L-w&ufNW?nJx&A9s#k?i}<4X`;SqQC_Wn
zqI3cUH!pPT(|QTJ2N!gGtNM}4cjegWwo(4%ApkyKs3T1?5XN35CfbssHTGdMMLt{j
z9a#s@e^-)4X_zVHmH5~S{}cj|$aFe<>-MF>Kk@`2mOzclS_Qmgx94^ANb+aUSmq7W
z_-3W_mb1*8qsQ5%)#}qF6Ptx{f^uw(J9%F0E>rV2N9y)tzF}hXW2Bn+Si~0Ii1qiX
zE;OT=8VUW}QAzdDTSwia4i{v0rPkN>$)^#2Bk2klz1~+=S{is-yAp_mWVxA&>p3ND
z8N~clAhu{@R1hF@S72eR`WlU8YdJPvc(8+zS(r^#_j>WnUBCJd(>mkCIYXNd!8!Vy
z`kr4mnCQP7HO%uF6`ZCRf?4<Q6W+2UvR9n%tuMy)<Fk%QGn{_4jEU*{RCQVq&AYgX
zr@W%Kr)DoXz0*k)jS>UbBpl}PMq6V^;<DX-+#|!ag(Z^l(-Kl+i}~MTleXlOL=|Co
zl=(aCR9mNNE(~>^1@jH@5=h1mF@5Zu6U1Bm{Hq@pAJ00Rv<YkB;Y!OgL<V?vL)*aZ
z;W66pQkIED%Qj!P%}3vS&LWwKZipP-GBx};R1uOa6vL(MjM8GQte{g>m0%WE`!@a*
zZP}FH+u4zFBJbhh2Bb<9`CeKp{&XXAV9aE-#Xt#h=I7K}IhoZI(_Ev5qEF7&Lv&zY
zsGNTYuX`B64=Q!R`l8U;4Napy(%8We&F3!(Zz0<|<!Wmemn<zh>Q2OTGS}d*`=Wwz
z91rxNa8@e6b|tU^?3a-`xgc}RT&4u}%0{z}lAGHR-)Q_5XBsL;jGFiOUxMCR+<xS(
zm}fw*V5rK)fM4&q3Fy<0hYASzv$|MvkMV>yJLNiNsc05j7RNMxz{QNA_U1*{ET#~X
zRLtJiZ<w?v3&!+YD5gxW=l9SKBKnnj%bI!Q6c+`5JaMbL#A4fxs;eUyJGl^(7$TLS
zIVn2qu}`W$93?-AsxjI~0p`M6n)7cF3#JDjqvYg(_|?{;xvgxwnC_#C8Es7`WLjl*
z14};*l!(joXJLVso$p^V?Q3bnWN44k;H^7c?<XD7dP{H`g_cdg@nz}7&K-CC7rS}0
zH*c9F>%!*tQ36$S&1C$KNGIT~SFTc`Zv^0~WhSDm$novDNBMgrZ>zF&`ma(exmh?d
z6cz4<Q_uYHHN41$1K{sO(1W9jeUuO9wk+XIKL%OUUJB)we!{Mq=Xv+$lvgf!!^42=
z>}41ezuK!<%DzxiDtl-I6*o67Jzt;94@Y^#$@Am$9Sk`}XyA#Zgus?X1Nl@9PBJ@A
z89OZ~#3Dvk6k4-2e<8s=A+j@GYd8J48iV4+GEEiZ2*P=l(@pd@mcJ89?^gJZt;-#n
zdEC+^bqqQ;eymFoe1ER`cvVDFC*10t+|g3~M#^4#KFKMs*B3z;-(<TwmO_8zI&1ci
z6>NNb2M#RJiuz_C{hcAt3Z0S~vbK-Xs+i2tBcc7{Szc`Mm+wZ|dLDAqnD1$c#U64;
zUUD{BuY@89XdiCNRdyZrkG;qZ{evmjXCE;e6xrYWo85ibXNQS|Xffs!MwI;9nwa&{
z-jrI@p-G$a0e09#3Z&d4z;}mvuO|}Ml+ax^-9bgPtV$+~F*)-u$@LOH+2db=Z6gb=
zQoX1QQw@XANrx9<X9iD}7f6~uG47dKeu({;(U7|fE8{m#maV-#MY-;K8|Z)(#`CpU
z(Wj#<+9)4`6ZjAtB<wuzhi_uyVYEtSyN8}X`RxmfDG0M|gIwNX@%HXnV-WC1aL{rY
zMCPD4ZZdw9p7{`R!MA0BmdYf1&>G1nF%~Cl70hIHuuqBcx;(W5Wr%Y;{9D#BPv0u<
zwWemM6mc=H?w+ub!&7uEh;M&Q;aw+hfTRTBM6v5PzwoG(56{h&2vIcU-;VDr{_e?B
zkshN=T2tI^iLfXo{B=hloUPl-B<<_fiJQsA<5i^y1s!1UpfE3Q$<6Y(?_(!A3Y;zQ
zsj<WD*=`40=}1na>I+)5{3wc@q)jZfw8a@f@P@~tOC}HyCb)h}U3e5X?bZ1AeMv_c
zWm=2^Ih~X91@0}i=AXsQZCkJ4rbe0a@gN3EocEs|%hm;0eogyvhIDsrit)Q8$>|-a
z;qQ78<4s~r-dI_&cJy#EE8PR$6ec8Wt`r)4p9FAV>-LIOU~w1szS3uJo{x2>S>QRd
z{bu&+a+aNb;-r4~KtU}~Exvi65bk$5I4D=%SZ)BQx9bi%el)`PoLH!cWVGd<pl|ES
zZ$~AplS!v@{wRDYUDJNo(@4W_fBa_Q6_tuWLoD88@ck0?^riern7lm(2GXp|uMSad
ze_=YX{6ly<18gZ<&G|mWcJegnnXNO*hrzy%)NV7X5N-;nMoWBk;*V6?C}H&Bk1P4N
z?@7(nJl(1a!p*pG@-B$u2{eVo))|RBkTPKmk=6xbTB`1#=I6kgla5SZdHSY3kVGG@
ziY#b-{^ID)dGV7-SvHj?E_<dWiNbqmKH17PV@vI4zKqy5`<Wcw0{*JDDm@{Tulta2
z8IO88?K~-AM{oFDW+Sh1I%P6xrp08VSBaQgVFs*mA=P{)JS9m=LMM!FVORoiBn<4X
zElENKvm_Guukdlz3@viS2fHQ6YrU27#zOa^20k`==6SqEGue_+`i!h9M(qaut{X7*
zvwaw!<F5vClxwas0psnIm$}X58e#Y^TY{qBa@s*8BVPh2Fiy_i-X2-lIVn7}TnutH
zz!yfl?G)lr?VN5GyBQ|qs^E7++mBeNQ3(DvO}DYmxEFksSGW1loH74+e?!+!<$5u{
zUb@t`R#iu;iMN!YII_m^!FngQ9X$ks0RO8%A}B~sE9i*fj0t>!;4O62w{K}YV-K{K
zY&3JD>$XsaE4ZpSLWFaA2IU#1GN%*17D|cIICMbc$a`?OjMKAMeX}!?>qOQT+A8a5
zlpGW|YRLLZg-L{Ydn)=GtLB|hI?0Mea=n`tE<M5QR{f@3s_(xbOuGl=^nEz}ZNGB?
z8ZYLN<g_L1^7dhqKc{|e9XmPSZ2C5gcAC8sJ)M}!>eqsVQTSXVI<c`6#Pc2X2SK&p
zm6>R<@`jr6o7YfMFV_#>ZNgzYujOPu=^+9>)nlHYj=ad3Y2_<h&XEi-YM%A~c2u0x
zjC|Wab-{?U5;v^h#l-Gtn0?njo$!~R#XU~T@Q{3Ua9&x`4Et#aI;0ho<k1Zm6I1<q
z-y?sn2rB~x9KvF~k<lRs_uBJ_53T^}72!vZe5?8DRZ>BC!QNN&05THqq8jkgg08>)
z8IkHU-dBm-fq23n{Y0K2D)T9ye!Z_Ik$)^_uSh(*t8mMiJ)$*K7!UvGnxkr0CNE4D
z0kk}hlyV=q)u<lXk7jlH`*UD)>^`gn&4mx=vlU`YuUaI=bZDF88)-Sul4F+Mstx2%
zR|(#Jl(^(y5svh=q~<Bo!NQ-vP`Ur0m4fmr&Nn>&?amfp9vgJ`@y*H_eDks-@@EVB
zfuxcuwO>=dM4z72?qxpUQB5Gcmlsx9;3_}Ea*3gJn8RZ5rSWcbAUgoKG6xF^c*~Xw
zjfr6I-5&+)zhLWpZ_p%e&8+69WuMeviN0_3{&aD!2wRobK(LW5LdUCnggZPO5~R3#
zYS9R>45pJl-L6&nL9rF#I%w8A_)5|Lyp&~9Ac#Yfvjk=ME?0${?fYwc*VbYRrUQ@=
z2A8bDTbQd87dsbxh`GIWmO(V2viR1g7gn>wHF2y>`(cr#u{si#u{SrM_LSB#TECy1
zf$b4gTVMU-G5^)W_rNa#T@&>}z16-ANWan2WwS$36>@^Tr`o#wu>F)qSnQS1?bU0D
zLf)*FsthBSX5-ep|8(9PJ5I7_se^CjX0!SP9eUa-HWNna=iig!N`SHv>QS9vrlI_e
z4s6u>Om~i@OtYF)=+Tx|V#%T;)xg%>k}=%&wku)V467@b`LM>S;XsE*5A6!Irpn%W
zOT4#<t@eF9|9gk4zeq<B7_#G?+{R&DZn?e@rp)V%MipdN&s8?K@3$DMV<?H~HLg*T
zT+$L}`Bkhx$FTr9{Rmo|{P{r+Cs^Z*sDSEV>3668X7*s(Knqkvucq>)L+eoEb5)lU
zdx60T0ybl8g7i~tHtou})mhty$xYM&fd(J-MsaDZ*!z(JhJsavE{%O=_*@KxAa62+
zHicr0gM<TD7O~b@oW0!W&v3%}@pQ$+d*8cgzhlvwY3%-rxry!f(ds-$YIoxGSRVJH
z%>Iy-{bQxw<pZKwF0s|S_eNz}QKt*oQ-rh{gtS&(9{GP2=XYtltjpfR*VC$MFSlfV
zYHzLux<tZf8-yQ{J+5p~@jBhGXIZwP@PrAeUFo_C=7YxOR4pNz#l{&uV$?_Iw7<tb
zw1u%oEZmpGj=scTv&($tdwPi(*^ljsP&&TZk*9c7Py3L4?>E=y@%2`ZT{0E6E({#J
zpEuvG9XeU{WvUT*yxsGFo!Ho$O?tsB^<l|}N@0dwuAJmg$Oq<qp?8V|5@fzMk4v-9
zC;W_goD^ISy`IE`sND`vE2O<gU_sQ$n0cm(dRXR-i1l5~k3INPB*8SFHP#?pWTid2
zdCpw3n)>_8^W6@wVtPr7QsjF!zZGR_8mCJ|%r|%3es+Sp3&J|YVT~@?S;wI@OUPPp
zxK58DDxR3W#eB1?JHb7tGLq+==m)1JPW+gSO%B=n5axI1GH9k>?4iVYD&b+E=C~<8
z^QSJUByNJ$ggN7|DWe)$PfI#-gD7gmTL~lo*PN_$Qmb^q<=xv%2Q)X4@mmS44bVaB
zPE$UUy-#+c5}zG5+&3RIiYcTn71p)V<3;$N-o-uD4ESm@Ld5_^Igy(6$jffmi}}x}
znurb)Wg$jk^1rFABp-dU%gL!Moso~wION$#N<4B{eH1)dgjJywvPNWj$r9-|Kit)6
z9b@?qeJm(xCCQ4feoXX)`jQpN=<oi%P>asXYO}VkaHlqDeH}sW*+P@^Y*lvMar2k2
zf!Z1qXMg&OuhF8VAcjm2^4of)CZ`=r0=x$owff9$^VMwH6N;phpHxQ&+EaW8d@8PU
zm+x1&5<D8WkTyvrBr}3iR*faKa+pg#$;{_W-B5l0##Uu0DK53qUTl>(;C1~NxFNzj
zb}oi?Mysm67qprq0PHC$c}7Z`kLq~2lQ24F*;1)H5vJDUr#v@E^_FjtS@=4$uqk9k
zt_IqiHK_J2q(;Mbk2Zu3{!Qm8dZ`(U#Qw6xVV<1zUBIc8RV<T3LFg~>ZVp*?*<91x
zvEEm0-)_)In8|?OGJn+J1qSGA>71-0oN{}2ec#G*VP~e!970n)x(xGC!@E9{%QwfK
z^yy|C7+Dc9YPC_lL-DJ#SZHZe`)i>=i2;ab)VY<bTobG6C?xER@m7r`GL%PNLNd8U
zYn<8QqC=ix`x^U1H<k7wH5GMVm*;%DyvCX=;FC2p&OA-<tJ1(@#;V4GV7s`;SzsTU
zssSn88d?-xBfpd^$D4<A_jmNUss7~D-*w^qH2SRa9{nKx&(31jNJ-6!AVzNk{|5QX
z3M!$6Jg&&7q7e(``q$l{m(i`5MZ_0V6GrZ%8-azyN+p8kW`QZSaxeD0fwx5N)fma*
zM1|yF7H+GT1)`q@e>}G4sZDSdP82e2SGA;IG5A%FNQiZ|UM@WHoF|oLWY(E2iu_E2
zcd1)V)YlbJfqiO}?UQdj2X5Zs8}Q~Po!_Og6mZKlbWp$Q!NueuV3<@GMkqLW$HnQ8
zQ%|JRnnsV%;@rb6UrysKB6UyhEQ6w!5i7`V86zM;SW6e8g|{48O74a9y+T<r=O@di
z-8Gk+N0mpsj=WdjrGsRBYF#bYJKPjcY^=}1-hHF=NTte5$Eb|KuZymB_=NPNTw8u&
zOgyA2RLuuF$rCt81wgU;-FMM!pTuQcd-z}DNWqfIv2D{{a5;D0dyv0px8uQ|rl-dp
z3fpY1z#9{36B9*uDfL5TsEO=+W7v!Mz@af@{R7dY-9Mkn`_CMbMqf6W^hzfKughNw
zp}zJ6sv%fr(1VN7-xXZja^^kV8G=-)AH>aon_7%Q9*b2?G~5#R%%^W#`SDW8w8W`7
z?%k*EhpMDscqY8#H}NPB*D~W#GeyFu_<rFvOLWa!$(6&NOt8W51a1PVp3=khl*+!+
zFOKW>1|<$Ow<E%qK8>KlZ~07{>dEa+wQu?A$02jq*B!yl;q%lNzE+5;_w;Y|GljtR
zrY}52)UzEMYV>>DZTNMl`&}w?s3yPH-L0EH;LG@EP9IWC5t4CQOi>PfRJ)Gdj<gjn
zp2j^GCrWDuk@d1>NA^A4!J#I)vfH{WK5Tk&|J`3uj{&o>(2l5r<lP&SkIBtyhgB-d
zH4vd%H$n5&Uny&wF`?_o3usjSYEUyG?8AH_Yk-zE*rpw>;GKd483s2p_oogv``$H&
z3tNz?PPSx?<JIcq%4MJ@`JiO+kTE&qxKEwzusFLi96YrgE>dWbd~srW6H2c<pW9Ev
zpbXm~lTQM|QyU4h85x25Q}7L4k?3g^BGUpX@4@}kfmiz_SDo?M*KoSEQ_{;#IfhQw
z6qdoi&!zKJYjJajxOu|N_moC!HOhC)vO~XLh;J_QkJ`A*)%Hx=<Q*YkW$;qVbDGU(
z-#_UM)g}w!SkWj5MvOWkdZDlQt;*_O&`egG-)U`VM7mdS6YA7AFTY*BQzJ@Kd49Ax
zajrgXC^W|rEY|B#$iulTdVXDwS4kuJbF4VrOMgd0r4#sjm2kIP6mh<OynKHq_+9yx
zzEXk@*SdT;-$-tN#u`)NFY^*R6Gr2qsZirZ<r@of4x0J#uO6HIbG{}1W51V(zHpCy
zE%fYqzZn;cJ7#FvS{s%#e}L^>_+!Rx`?_{sLOyceJQHfuQ5nlOQkv%kH<&`}=QYk#
z)&Ty@ySMr|a{F<%c=joe7~$aloX=-4K_Sp0$ga`cC+!c?w?e7H(H>H(GGU|F;V%iV
zEJvhlo5+v<aMHO}Z%_649}va`nbGdYGsW!5co(zqhW#Qwz`Y|)bZW}E;57I+3rpwB
z^sC2!xU8MfQZd^V&sBz&Ox+)EXUH-lPmSbY`cE6l7sAzKYKV}Ok+MYKHB!z(M8)5I
zM&$(;lqIBYIt8~2d&zpqcBPg6cN6HBB*dzNAU`{`RGDYKzhCoSyL?o4b@9W+jY<?e
z7}#wrxTh?|m~f2^s{H_FCfDFWSK3GHQISd(UkrI~$EbnHgDhuV&=a&OCoWzhcS6QV
zO`mt?{VpXo45Hulw!@*hW5$V)!08fP&2m#=`4rGrOJEz2J(^(kg%X`7tIvK9|9;#&
ziXjTNFti}8pP8bzkViBbSyn(+&&*zRTL(|LXZ9kUbt&ZU>iSp@Fdf?TE?aSXAtEM`
zJNhd@>8C$i(;G6+6eq*X;!<`NDHa*gN5K`=G4*;SoFhNDnO`n6zC{_NDLR_7o|TT(
zY0?S&^b*g&RU}CkGsdQ;6AyAf9$}Q%>-=F5zirBer}UMx$4PRsXfta4vTFI{xv+)q
zS)C#a^dgmk_N>PC=ld&q#)>gHEP{ZH7>@xB33pnrCU<8lyU2G+WF|;Vu89h{=ETlU
zN|Da-9KMAK=0NdY8);fW$A|{gjOC^EcGAepj|{9H!klU@3Tu8G`L7J)%?lChqf{CN
ziu7&(1FvFbkZ@r-Tp<KyjA$T!B3iiGv`k0;r-f%-Q`AQ)0{mz0RpVPW(K>@QPAP5N
z->XTV0(1w<gtLymGl+HkF*yuG*I!vn<;-4mwr&qeE|$q2`g=hY>f<Sa-FQ4WdwE*B
zU`Y}#m-*dFbya%Rx7S(7Xmb*uqm>xGyrl`pNoxE0%5`U#OW6*svwvl4tS{+MT2c5V
zw@RG@t^ZcEKYA?kEc{KiQcDP+r+9-+5cE1Ibflt?;%rU7X>)~=GHX3ri-dLCEV(<>
z_K%-Sp|{rtYR072LKo>S3+*~u_K-wY-zV<)?lO+N0D*i_$bF+Od#9TMiwpe<`ts6+
zQ})1o6)`V{C;CkV<>Ezv)f8ZS1jm)Ib>*4ztB+Q2=5;Xhwq_2c+cuWJfW*223T<>k
zSD!1NRT;~-T{MR!@d{|tCuHm0b)bc-wKkAf?Q%u1oUPi5tz@A4tCLmlz|2jsb(`X)
zVSD8!gUmSr<^4*TaILJ2*{|jW5=cqWSG~v_+3~5d!FDsJ-0ve7##uu~*ftlzokt%d
zS=()d=!0cM{pTyA)8A1rX0+FZ<M5P^vD#I8r4Rl>g>R=&XlL0;NVtwYY^Y)*H+LeZ
z=XEb4Kl@&TIczweS<iuCZl=hzfFLOlE2*Ga#9D$E>ND;3CA?)Z_GzUxm`Nh0DA04(
zY&3;)i%8RR@ilBW=cCJSC$97#iCNz7UeDO$?r_{yQBFjlak`Ymp{W(9$F7<W3w#LK
zb(lmGBa?y<4VrqU@}b8zYb6;5Yb4RgC+(%#Eix{%O*-?vS+@)pBTfFifNYKB#4(eL
zj6z6ewi2wm^+s`YFYg=TJbrN?SF#Q{cHvr5QC$>c%pXk`g(zXvt;$vnp+nH<Emxm>
zUHQ5XLROtTVI#(x05UDU#jgdUh*_A`lCbf?c~xg5T~0{$eWmAQO49(Ve?$0a6J0od
zK6{|FByt&gk-B`KlKtIETa$dExxO_1>D*Q@dug8!v1Il0;7|*#y2EM&CivQ6)swE>
zxM)k#U#wrEp>zrFyHzfYjFSh=A1!sI_e++9aZ!8(lJf6YrpAVLpBplg*K%J+_cP1A
zNDywY>{(Nqv6lwoR4<M;Mo$H7u!e<fc6oUla1dv&>(`dW20Wi|E{9oMeXr!a=uK=Q
zu}HxWSpr!RGF3|CJD@sGoWH5sq=-!>5Q*1LnL|{<()S{}O73Kl3Z-F6q<P~K$KPn4
zCZD7{E4a}AOYDc`yvh`#2PAFert~9hNOsDVmofHk*^H50i77oq<&($>M17^x*auU#
zNiDlY%FPdH40CU#<Xx5lrY`EPuDxQLllRD4Y`7}V6B#_=v@KNz!lBIFYOS#KE2`?N
zAT}C-OnLu%sOFu+&WNV5iouoXY9~|=$5&p{9@V|6p=@&vKZ@fVP2L65r#2Y=3@p*O
zuu1ec><1>&sY>YJQ_W4=>k09eP^l5{>f(TMfpxh^_JLYQ<Gq;cTa#CZ<0GZr&i#jJ
zYTsYJ2Yh>c+-A|z6qJK?chI!rD)`ZM4NS}!zDg^;#EJa+;SgQHT_^Md@0Iq5VLeFY
z%@0fs#G8S*xFrL8dWRnewls#-1}4_DDTT50##OXjTsO@&10GFB1X-(!J>NvYB5C&t
z7U)IQygjwDDv1MMbc)>G5^o~aJE83!cX76yWOJYww+tH%g23*CN@Vp-Uu@v%+YmYJ
z__-FP;74OeJPS5Wv2^)8li^jbP7mZsE&NlMnSNIy75kEh@JD^%Q=`Q@n$3=sg$tvv
zVX?;>n!d&_%%L>C#BjF~xA;8&=;RR(ULd&I6~Za{^L^XQartCxYk*pP8-9YrWalE(
zOl4;|Z?TQo->C>9|2;kaCoJZ?G1R;}e3#_LXG=lKf(g^+HQV2B&q+TcaQMC5%bcMH
z{@eLdgmrdKKk@~IpHj>i`h^s$JBZXdPWXNV!}G4{^G?oiS-u{RNN>uWYyFb<jtKUy
zhT#NUQqJ>JPe-oRAYy-PAKjA}{nJWND<o^ym>|5`(R65mN`3HZ7hCBPyvJtaLd4lp
zSm%`-Fx>NtefBu?=~Srx?_jZ6>uu?|kbE_=VW=A`sVjF$3<(Qgt8LuGYLG{x<5(EV
z?b&GDm=;3phwZE0j|9Zre5k5v7W8{3_Ipl01uu4VL-j=YvQgyQI|;oq!~VMcqS)v5
zo|JpjS6j?hK708&2MKc)U9(ox#lmI{h+l-o_ZebsZ_V#e?nLdf`PRV_fiP_{G_u#;
z%<mX6UPOK6T=o|XRkd6Ro4Jl1(m7aW`dm)*N-U;kojhA2*`0V%L@s-K(bg!5Y9Bff
z2wRfTPbqu0=qOA!$oPpPd99KTBBL|#O9SL6p0^^VjGJaOFfF##dAj_h$BSyKW{;|v
z#hiJrpzB#Q?q+7~bgMo3G{fG`+F~*ItB=^Yo*eg&hEkc|&P|aO@s7t(9QiC#=Qe?^
zTzbic;zo|z?9xD3J!g9xGyqs}ayTDeDlL1ZG);c(`fBB56B$~;N%z53@u;?4&q&oE
zStq^6$iq7(Veh5uBOlGO_s=W30ZasH7gO;^kuz7^&gS_O&vFpFHWtx4DOLvJi&d~;
z`9f_G>F^4raNk|-ZwP_Tm`aMquM1=00PjO{ohx@CrcW~QdsR4%(X(?-Q;o}f+fWa#
zIpuBM!|`Z#lR}NzpqSN<MH=`PlS8R#p(FlKb*mChop?EWZuR8QNE)+_+q6zM__Azt
zwanwLgd~-px)ThtiTexP#r>*mv2$fdD*f_yvweR-{K6TYjMML=272~fN=BTPRqC35
z=0_CNOP_lhGq@X{R2hk6j7n$Mspq$#mt|k17w?#T;X!q{8da!ecvHbWS^XgGAL!sz
zrE?WF?L6jpScdv44#zX6CNK&<Ix)4^2ds7?7tQ(iK1)1AsMGPVkg-55f~lKB1vgA4
zfo9Rq#^Q_BYy19v<=S9dpRe_5)9vd-Uvxv#T#aTl%|<a8Wi~yn(!GCg3AiF9)0+%@
zfnd=Du{6JPdoJ_%!KTV(oJ9S{jRD_U$El-H3AKiM+qD`5XH|H{Ro(;dK=u`$v;G97
zxw#?to{5AvRt@#;qtJ=>-g!|zH+ZrkLFB;TvqjL=6P0<tEXmf39A7W8UPGU$XFpp|
zTS>>{LpP{H+H5<6!>-&B#M`>U=k{4}IarbseDa&L=zDNG=Yl{A_SuDlpdixPHTh&b
zG0pISIt8KO$3*<bbbaL;nq*&@qBi7$v)p?;KH<oM&f%|z?S6Ja7=E&2WwQ&3#3eV3
zJm~GPov!XaTb3OdK@YqOE>jheRz24UF1hWTN+nfv?v4CKKR8NxiH!wYPs0CQLT6b{
z>B=qka$ObhBMV)Bc)8yb4S2X_xgD}19b{8D^A~u&(-ZCtc-rfEneDj@xJwIoVtaWC
zxO#c08SP<;IcMnh!MbIVh6fwB&W^Vm0GN-?!as?&5KDEr!|Wb{7-U8(hjT^s9GhB?
ztiK%R;~$}v-M+3TTPx;zaqKlM7Axe5{LQAs271mnkb3>g*iX2n{lF@vXlMLuDu(vS
z^1KIYernXa=1*IVCZiFdIp)j>5e0%<s&rR87<PI@Z$_dx*>Xk0T$@EiJiNpi51$(B
zUx<Bq#v8W@LK|z0Q7w(!b;!y%1<-u+>SRsoL2_FzRzLYH415SC)5E-fl=_&K&?GZQ
z-;w=oAKaUnqfY;Qo!v+IrzGgR7j5jaE8`ysN^<CsE695s`KIe<t#czm^X1vCwaNCU
zNCa-?<NDWo#E_u1C%ux0R4+lR2=ABxL~c7Uo|%4U;BX*D{<zZ*yL^S_aZ2JuI}2^v
z<I$}dC)pa``JAs``o9EcD(JyIxHiN+lAk9hvrio4@}((LKOX;`#gwIN3>Tftz#&n-
zd25lyuG%+HeYs97;i!DOCe<m{TusJm-JOJVgv^6fbxZVFuD-7erGa_kg5+-?;&F0C
z-*=WEUy(|NV;$S^25N!X+QTm~Vs*xE0@ekzgH;{H^ToAB6`79@*-ZIr-7us0nC;(A
zKD5}}dwvz?DLRtV+k^kj+9Opc!=+=L_$i$nHEA^7LC}1bdEJ=t`$RzjbN%_V)t`@r
zUmkhu&a!Wlr}@L^k!c1j)3>VNhQ5h^XfKgp`c2!X_e(-!TPk5CJ?>+~Fmj-Fz~6NJ
zQ&s!mE0%h#uT3FCEQK#KG$p0D%l)|)?TwuxB=?#QG43dn{cX0~T*#g3KWC{ghRMf!
zcbbCLTiiaT2rP<FC&F#k>*}%!g>m`^UpW2mP{z-uHY9TIE6uJs;VSAcW^g}QrrgM1
zCWwUbexXO8^WE)gI;ttfD4>x$uWi+Pd;J0ifR`6#IYgwB-kJ1u2YBG9l>ktdgM-Hf
zkbwXDuLxFTYV2yv#>vjf!OqXl$L4BgZ0Eve@9^)N&BW5!-rmgCh0Vs&!OOwe%ZiWJ
z)WX`6+uY3F*pZKq-_gmK&CSKk*@exV-<ikR(Za^*lZ7?EqpOYQTTe$XM>9to6E+?$
zH)|(jZypX;Q!6e$4-<16Z#V0=TwGiZY>o~tt`^Q_E>5<FZuXxX-0V%wObyu$jomF+
zTwEQT%~)Km?95zP9qlb5lodaqp%A0M=tYx}mQ)1*Fcbhl8%S`l5-<ky0_^0ivb?&~
z%gYO_BtJj@-&ZdHKwo-+7vS`?R}2^)2E?s?zw}Z9P_bU<3%e0C3IN2Qzzg&x;AO7p
z%^TRQVjEMi`-q8&Ve}~|D43g@2LuFUWMninH1ziNj*X4&?CiiEamL9Re;Qx)bN5W+
zY~$tSbT#m$xv%E*^koqyf0#&Np8>C<Ub9AN{dXQkMC1q~1pvmwCXQeY^a8tRV)_L)
z=_Nq<3<`ab0`8&C2dUm?yU|@OHm#wkS63_fP|BAg;56_w8JJzoUyWB5)39NK;sQ`y
zT&NiAfI^LWp++yzfAovJ<iif5mwd;U-rg4&KQF!GExBheXZg+JeJ_3Ey|unCV)-wW
z-QC@Jd3h8R6zl8jJv}{!hK8b|qCl=o$7u0CIU+ks>$m^_`oO<`Pzn<|2>?(6GLquz
zp4lfk$jx6VaV2G%6P{{g_j!*4kPS0b#NLM$9%i4$Mq&iEFlL`4eWpYT{C^$!65PUT
z2~`1kzd7UsBI-i5f)K<-i~e%>e$#s)pIyJb@rvFS{=Ri~VlrDS-jjc`^@QZYh0GVm
zo8b<uEW>h-`q9~EQz$My-rRb<s#(l$KE#L{GU3@=v>lEbN3Stc*H2x$zV=!^^JkHw
zYm>su_%J<0KR@zieVWgtVdL7LS?<F1jO#IGHow(}$$D^-`}}V6)_)8hz29dyj;*We
z1QptE<0~xk$4M7K^W!#0%qKMXU%DH5l%xc*=3Kik*k~K_Q$o&N??qH6LJWN8^^J(w
z?`CMCSeN;sc||LY@)R%f2}O}!^L>Ws?cJ?kSkKNxDL%&(TQA(^niD*2Eq@<0o8aS<
z3)Ti$K?IQmyOm_21ZP1!_dZC-7`bg&LOK9zW=uL99nUjtAG0-Hl>9fGx))MNs+l4I
zQRYVG2KWfP)cFiNl^?{=H+=MIBH@9?$T1hOSAp?gRdU}k@Ac+cWzG@5MZ`@K>0TWJ
zl^}AYCon+Uhli)549-LSm94=oj}PR06sJ08m!3~C0XU+9x%`|KeVf~x!p~)+KYbq%
z#5A`5{3YH?GRcNW#EK;5npu)iJj#walbs14WKlb~F`YUPW*<RE2hC(Y2J9~L0*9|1
z^bvz+uKMiI_Gwt~9|wPdT~h~<7v=s>Ey({fx7>Yc#`Y?xMF_rWE^GbM%Q9;xIe>Y{
z_SbUAqJdpxVe-4UvQNx8$LRRCp-wUc@zu)`3T_XAH8>DdIUwS<;w!&}KyPEL!237A
z#yL~~2)-Y6=nLpa0=`ghiy~)ilY}^YJOzo1XyEL3z3Mll_eJ~a6<6H-I#>)T@3P6_
zFE!(WhSg9Y+q7oz?I7mi>GF96{X`WX5RUmFn6L76Fdxl8n9}%MmfxX<>P4S!>mUJt
zWdZ%W##dM~7M!9)@93U0*GKPb_lpebY6yVGUzk*W%(Vj!G0Y|D6E!2k$2gM$tH@&e
zn05h7esGi&6wCU%5a^UF32+zJsMs(4oUI^{L;-EZfi5~$*C1ofnB2d@x1#V8G;V7#
zy122vfWrjNEF^-teN$)AggavbYC?J!+4DTK^}C6mbXRhK;Mk-K6UUk`Arh~nulscS
zUq+VH;Q^|=?OEC_J?7|7cS^=>=j#-pGvbM>w^U%_v}i1AcwD%3bNEM_8#tr?DlgoH
zK5|CgcD2d)-jZyq<@TFCb-U%9!c)42-ztrDZFl+kA=;}`+&VJM1&RSkIpu;NPqe-J
zOw2{he;hAP!N|yDJReRG>G2!#x4WI+)gc6KS<dy1qefna=g*Vpw;xhcng%D&q5y;b
zwrZl+1ifd}T5m=MFuk@9uZTb!i(y90)RJ`2wGY*%&e<n5mEppsi6^wi6AZ?7`GTNZ
zlTRvOt#XK?*Y=MQ%A?Ld3b0?lSDJ0w0=HL($oVe`Oc@FZaJ!G25EYr`G}R>OoZBE^
zZA6qLI2^2P(+8_|7i7<Wa|OrO)&l+axP4^G#ruQ`+WE~b>OJVLmgc|}al+Qm`!668
zvD8Wh>QnfQxUv$6OBF@iYa#wR-}(OR;BZtPaBnXX640ZP0qkP#2W&?^vW!|=x3<4(
zV2-q5%PZnzzI~7|)pcC>@5j9D^7XfRAHx@9nh9+8IGjel<fxfQ184PA-e5w{ZEJ%E
zEE8&-^~l+q!_*@vg;4Aj+@WP30XEQC32e;2X-^8^L7JWotf2-xf5EgM7tb%osPCq7
z-v%D2(VWhCY!DA$!}pEp2B2wZARy}yb`sjx7r1p^f~-j}4-3OAf72ca7_s5G{8qxL
zTz7C<^DZkN-j|%LMQ3AfwF>{l`gmt``M{EQ)sNkR5RVTg6e|^mu2JMJO?QD_6(iGu
zd&lJvTbegigGM=2CMOPj(g07i6lW}19Qkb}6u4d~z)`D6pReZCPt?OF{F^EQZAX75
zqdpD@DEUuI<(fALdRGNNIi#4iyOxf-ufV7i>qPjZsV_7G{yia;2A_1eU*f#h{!aRO
zMqOuNy{Yj)U~j7g&My6bJgTLz@i`Nj-=QfyR1tuTtfbyg&c5pn><B6C!93~gEm(Kx
zBXyicp$fqTxXXL+_PTpN^{mg_Gv5lOOoDVwIUM#%{T<LfS0lZV0QcD(pz|xl2NVn;
z0rld7dhMxT&Fd8i@xTG(v4G=ZK@buuPaq^ud72GOxQPN7G#8Ky^atwT_NEy1EtZvr
z0Y<#5$i3_J8+_2(4V*V%=zCZz!g6Xew`KuGkrUu}P%o3lr47FPYk*GIF<MUBvAP?*
zcOQxbETiCeHf^8)T5n($2!=9(p{uU+fN|gZfA!oe08j9s-cijt2@73E)$!VmBlS56
zpf(FeUKxHR1`Vv0kbv~pz)zNe96(5^$fMnzh3}maJ!<uRTPFJduC8Y)Fbc%nY@|lZ
z%%>%aWaPLHfu>cJhAnBckG5>gMH>GfOf2iLqXIB?VK=w4LOH=er=pawx@8{~P=!~Q
zqsH6{?zKSziuWskPW;avU`%{lb>qHrMHojwegdMHp*Y~_D<$j-hk7k4_=JN`szka{
zTW|pnbd=>rc?dZ<c0?NWrSjmD!aFwIKQMdJ|0@CVX@SzlG`?0HDT_k`d|Rm)7=CED
z)csEh3gE8xmcS<>C`$t#wHdErLlWp22)w~Y<gGvgmcUS1nTQ}gb=P8}zSX${8q*ZM
z^c7J<_NLUdpv?O9ciBy2AbmTGKMo+mGKpQ>+$>%K*F`J`^52#@h%aS72rBWENNs`2
z>U{zHYynbEkFg+#&)nI&M$vzSogz`{zzrX30=>m8n~xDeB$}?dnnN6J?^{8RSKJ0q
zr18e+o^6rd`#!)*Hd0O%4ELx|tKn*MAdA55TYO(_DPRieKXv*4DO03gEjlWyy$%+@
z9SIBr8)bM`Q&r4-c>l@ve>4)NjD3MhrAPqr|7gIT&e=o|MkKxVncJH~D&VJr2l#B6
zIb9R5WNsxC`%nH@K&P#g@Z3<K4KNpC)TdQZ8e~ZUY_S8qqZ+Q67JMGM%Q}t_s5J}o
z?J!K}R+#^;CzI47&9?6=1FHAXYd3rj2Z8DvL?~V$Bn#m!fQg@7Q315B6euiV0H;Ta
zKyLB8Qze2jTYn(PC=xIdh50V+S}RQE+u;ANLU`0udLW(hhL02YsSKm?HNHNGvMU%e
zT2;HD4-%WrcLtDw&YVmgb~}^4Mr0_=OUO^{fC_=L@JM_6zQzoQ4?t79@r(x&TO|iz
zHY!jW1DOS*nv;P#Ljj{em^}f#;hSFNqC&_cX@ypNqk#`#PZv~wp9}S#+pvt@N$v@2
zl>{tc?gRvVhL_p?BI0XMab9aw0|`S8hJ3&qRvRDcq&1rXfE!>1X!}J3gyP91^2_@H
z$A?69{WC*>lL%*P_@weUonvr&0Ti<qmO14|0zf@AXk`Hcm;jO7^Zg}$_1~&x5#s0I
z_6@JOE$?R0dTmPEAWGSyU(#~eT3aKA7;t)Nz@Uw8;=Ev_7mfP{d}5kP{{?y(|M!V<
zVK-YtDr~60EVd?&pcgmdDUrUxQ-;TG0K-+|hj})mEi+gCwo}FhHlQ83S|jIocdOJl
z>lZV^kQKg|!aF3-B7UQJq;xLCV_xu@4?5wnn(*1t<krn3$ha>?J%DLqLQPmCc+d-}
zQ|H?u0~Fl}s4Y6ZWPfLYicUd*2y3$G41C{rQh>4)7)nrGsyqUG3(P_RWUmn8L1J+*
zco}E${Dq3&i4P=$p^$qHpyLn;wHV#;18Dyk1GT%n8&3=j{If^R6Du$!3{?Q-CPcuX
zwcuUdu!Mi@hCdjp+5xCmY=Zz!;Gc!)IldBeA;qXS>NZ2o-$ujteGhXEXq0f!#fnm8
z4j=<<!x&#)6`<Jx3?u;Ma8R!c3<iC?-wQy;nbUJ#{d<HVBIOA}{wq{KskBs{UfYoa
z>WU$j2*2?b9tg1qQzqE}8?eAgtG;7m{1xnf262i;34w~hfH_wdv34%-Zr)b=Oczi_
z0&)vshU$Y#SGy4d<YNNN({Z4mY9-q2pCNE!W&S{UzaKI{1XNB*vGAcMV2GLZSpb&0
z@Te1bKqF9C53?FwDKlBb_<6X}7JN8qVwlqdiG3jj7y;W7K~TEL2I52OX9zD)yB4Si
zgVG5Nbm(U|Q~+cYz_RG!Vz)bpKW5aIR=#fuP`i<VC_&J_1AS;rvSeq}fP3u*7|_#o
z<cF?*>Jy9zTGoIEq~w77ikyMIlQ*&p9(s;kK+P9x*6V-p$Do4?JYz%ugT`c`jUnLJ
zzAp=+?WjMme@u&Ruc<-@eWvySpr?c$Z=jbgAl!c#np{Z;73YtZ;^hI99Zt|G?~GA%
zNuSXn@gE7r%pL4dDd&A)b;2-pB;hXbF6dM<*Wf{k{X?}8Go~7d;o{aAsOsz<i!u2_
z{~W&3<<eGU)qY%0IzcdYV{+u%huuq$WoPEDXq+UGUgLvuz3?E~Lu**8DdbcOs%<a0
z<flXxxhBbjyQTnrk6$!HFGZ=J!#b1O{l~<zMlu629DC^-fNVGY;TK~5(h9OzBErVo
zxiigd7#{aW&TxC&ngKL`qmqX=A(dTk9Qfx@pbO~Owl4zkkAhHWsc=Ad32{Nvli+x8
zue-o(pp~QTtS+48pLJ5Pt~+(0h6-S4giOH$P%<}qfQea~44!@fC3_1HS`Pfx%=Y8b
z1b+qA!9%CCK`;szV}n*gpzwgZMm?ma_san=BMV&Z4%gs70Gbm321WV00JLOZ5#VXw
za0X<!P(^V5!(mFGQ(OvB+mTevTm(lHy0)Wm^sirr1b}-L@m6833*=j!>K6#%U1$Lh
z14b#Q@J5+@P;MZ<N)t%51-eGF7WxAJ=uCfvO$Rtm=K%6eM)(M|VURtzTXj9-K0uib
z==FUfgjz*{EstDLMTmNB_K$$=KQt<UG!kI@QDp|oHX+Uf%-Dr5YqK|LeG8ndV89SF
zuj$}`al<q1gg*vqEX$ue>hl2(i(FV*5ux2gBQp1Bz=#UWT+_>7N^H^x0wnOq+(D*H
zz<2>Fr3`T9iduZs%`g|I<A@4;+^?MEMuDlW2#gMyr8*;$xLIHhMw}>m{@bLZe}-oO
zGrVSe-`CJRJ$BmK4PQ54ssIJpJsJY!RY}Em!NU_EWd~uH$J<W>(Ew+@u*(tfebE3p
z=Jc1<<v^FdM-EgGOfh$H-~bEQ#kw^C=nl|<!>SVSz6vW84IbF}MgS+hTDlI-7gb>Q
ziXg3`cqZAQ-;T6F%-1*<LN(U|tjM7>@J1A<=>A`zk!@!s$mF6y@Q%(6+}W@4bt3_3
zeL%}(o*z&Zg_=@`y&q14+n-drxR1u}T`YfW!}nzYt`-b{L|j1F+NkdXh)@xS86aha
zP+owgF%aX`LDHan6+Q(=QDBtiCxUX-A4JNA>kF{9WnT=)*WRlm0TR~GhyuX8ha;sB
zx|lmFlm>tSp2!v0@%C}Ngw}2{Fo|YQR|{VGrK&{}Jp6{GmAF@|!)0zXu+0F*#{&y6
zG6^P>#W@Bn_iTmV7@j##<zkDq#ll(cEH_;|9}2Z6zfhTHa3sOqG6L!kECK2|6Tw{+
z^Zd{|Z;ib04+=Vi7mo<%#3X<Q`39u71pbWi0&?-wHia#Hk$OqYE30Z{@RKm&*&Qza
z@!Tj=nZSGZo||!k<DOSv0n!q)V;dnb-6Uv|6jUY7!UqoBgPOx1ih}R=pgIy8w5*bX
zR)IrKzMZM4Q=)>1^8YoaSPx{;`^*^do`oM3biC;0RlLX?wCIy*7lgVt5W!T>3t#?w
z3eoc&F)+x?M<hlJA72cDdG3jMaX^&<x?K*~*W=N_-B!ZG%vS{a!w6iy_6kV(#vcyY
z2`h!vfC@)|#5aJ#nA@MeK&Bl?JU@^Lmx4%ng?|E1ISPt@4>Z#G4#4G)k^s?f#sj;6
zL^;rYgON;jS%@Uaw;lLVQ@vE;-U1Yo0C`uyb2`KjEaol%WhN7=|JO%fQw3)Hff-hO
zQpET?US%I1T_j4U8%M9NwHwwWUtI~I%&#bI5Gk1u;&(vOfRW?@zAp`w=2iY1BYadA
zPgJ9+Kpjq~9_j?b*$}fQff(0=Af}jX`o~LO;3`!Z;EhEEDh6trvO$z15akaiMtui>
zy;l%Ks|-oZg0ccMMd}YnNoxTIgM|J_cV=zyup%ga7a*)R%0xFRfCvJr1igEiEwr4>
zd<E)21RNy`TzoQE+8r?6jACblEj))>59q_S{zd~97?CI$;o~zy%z;Dqh^mE8V5sX*
zV3{pN6F`Fn=&(S^LA`8{_<k%%JPlYH4rcSMUsX}fiNzL(#dP5}lGNe$>o#xzm;tgP
zP6@o&U{H1mLI=qJqnPb8cQ`;}BuX3Rp~#=Op)^=x-+!zEraOQtqF6In*&Q8-X0q=)
z76DRqYvHR00;Md;GzKdn{{(^|HiP#MS~aqefECz~E4qRWIsl#`#;^kzWgyB!jEL;(
zfj+=K7GMja6vPs<J`{rV%7S}{dTCJU?0`Aa1a#m%vvyyyNnbrOIiSM>^^(|#(>ZH_
zgLP(M*ykqI0pmowL>|aM6hm#R1`hdnpr(jo*tHwPfDSG6bAS9-3WWG-fCdrHav`x8
zNK^;PK=Cq^AR~DN7Hy!E62|CilTkzJHe73yktQ1D$iIec<%e$91FFDJU9CnV5;1J}
zc$lqLGL+#nkBruBd;)a%|J6(llzPDWrA1(AYk=knG`ENX+Ne%sPCro8T%*Sb;`1EH
zzApj~Hv@^x0B>=oWgiC&HPV-WL;)aRED#5zk3Yvj>HWG0D1-pm^@x;RIM9MFptepC
zLD?|m0+5!;fp9rR6vjX*u$IB`-vUXbiBHHtbN$MgV()}uY!AbRF|dJ_A1a*)@XHCP
z=LQz>nH4=60N+f9;Q_pHE}%0Q@`nc9UP}eW4<BHK2a`R_$hc4bl}*Q1qiyVR)VTr?
zur3vt@&SUnCP%tbSs>hmI3->L^Mi2EIo2Lj$}T3Tj1H=vdZR<%93rIxDBcU85e8^L
zsLi2ozAF-ntr0|0XCmZxwUa@YslTBkI<h&~G(=(p$%uitfTdarIwcE2{DBk<{ZG-2
zc9Fd4fvt9YsPiYOPM{qGYegd9M-N8b#ui9uD)8&4J0R4z2@N_%_k;vwP>7xH0CcqI
zbWayBQ3%Rwuc&P=%-;p&&D`TcVK4rk9%v2?*SwChI}QyE3|>Yh?Tt~zavRbDHkP@u
zI9u2q((S{lM}g8$tbhpK|6=bwqoU}VM$ztO28J2JkVO#&1<6^I%n$@bB}a)WNs>sA
z3@soA5JmyXFe;Lh<ji11KtKs9S(1VvNpiaF^StNY@1A?UpJ$yvmj%OG)4gj~*REZ;
zYs31Zx9G`xwyz?R?Y^1HKUm*1+AU}y$w#Cvu+S2W0To%;1a$GHcShQ*r7Y(O|34PY
z7MB4i_@q#q_}Lz1lJzs2YVaYPE>Adr1Z2B%Vz7@BOhuCy+8&?u-ow-({;SQon~00#
z6U|ITa<W7$f^S?je`QTEAi6rq0*svhyJ-3SH`y-$2ANk7`8G~7afNNsQnDTg>vIq<
zBhdqNr$qUiYS3hK!a_1(?UfQBai#6ODJvDJetZuC3Re(0aTU<jsQ?k7W~l)0jaV+-
zxWOSt1<Na7iL*2$en2p7>g5D8a2`)gV<6B{=_CMuj?(~j?TiFBkWl?V7nr$nmd2Nc
zm<AF=K!hi_*-WjLm6op45ctL6Hwxqm`450JJ)ut!gHi{g#Zu;t)7ju+WmwgzjS2Yn
z0x&uK^O-LPQFcg5%NTU91Rlo$m(R5xrQ9<D`Hlf>W^Y7ILBU&I0N-`sF&D6Hc}W@;
z<shbAYhwkn5S9Yr(>Nj)2z_u_@}`35XhadncLzutoPpW{?7jlhIO1n&geNDA!|vPB
z7;xj<E*%33EbACx6DmPx*Q?14!0+dOt^w5iK-HJ3mlL7DH%ow-o=}1!-G3+ooM(m$
zD=!%$R-eKf&Eqz-1P>a5JO^<S(1`(ZY=HzN3%`vUK;5;r?m__8|3$E-C#F$N^idIf
zfE*fNi*;NL%5Rj_9tRMM=3@1AM&b|^QRe2JC!nE=A~7{4G(tL!RPC+$OfVmoOz2O;
zP&Z`Ehp%(W0KS7IV9pERvjT7~G*^BR$XNsv53NFghJ806M-^qCgvJ4p?4k$1QRE|5
z7~bKxg0SXCE+uwrh|r1d&9E)*zCSZ*+<nN3q;BT@lBo=8O+}6R6jb3MN~WPC6>%0c
zpmCG}3aGKbse3P_ai{JeR2KoN(&|Cd4#+3Z?mmwJ@&j;?ju{|qb>>0^25{iR5Sj_F
zFFj!x&{3djmj-i=5}V(OtG%!Zmxn<dduZ(ra<us*VsBEB)~QKffx=UcV4WKxtPr{2
zN+o#A85H~x{Vrq1)zpX`gpH_)?0~_uNgC4QHIT2+QSGnARZI&frkrT_5>7>I{VEP$
zz2nw)3COt%wVz=x9wMO-#bog42?`;nkrZIb18n230eq>zXF1p;)*j(A91*#=4!Y=6
zw&OsZ7B0l3a0c^jUwDBzAAuYYump(D-V1|-1fYTqHUV6Y?jl_|M1k`V9OA5N4cw<T
z2rWM})Myf>1&&u!k@!KK%b?3(d#<1`pO(p|Sv2VdRX%l-7~CKudu=`vB-H_rvw_|+
zYg{)??`3lavO=y9ps*YT^gmC)k&9~?h@<xn5zo%rmkmfo6FMPMJz(V5@YGcTAe{k8
zBuQk0XrEGr?As$k?do5khX-;XmpCgdoFfJ!)UF2kRDjfnNhiz#OX<lMgp+0fvWWm-
zDFqkW1pSoiqycma21Jh${od+)ucGb^VUm~Ma|D#1JuMsg5Mjzh`*%YY>`Hpqqlkml
z#G+3}i8k#E=S!IT>y4dxFc6SQe;trkg}pzC27nIi3I%`>NcQ}p0(ara6|XgcfmUwd
z{+(nTc}rLGz!5y6!evKKejo9c-(3IOY1}ChAQeZD!5x*y5#KE+Tm_gpD9)$gDiL^N
zD_0=aY$j1^d-M!Y8sE+cxojp^wy6|XOmo9;(4=WdX9-2tO@2Q34PegmMkD;>qB~^w
z-skj*1{Rpxa9ApXKGAYb22s72fr3&I27(XRRXw2$d=rP~?T!(zo;CeA`G(lN&>;)E
zst69^0iFKq@Qp~h4ik=hVEYN6LK9%)euFkxdp10PCaSY493`4jlVz!;bAQuc2IkTJ
z<y9?uKP|QqCvKm8LBb7m(Tx`U$`yAMD4-!qT`mUQJ=&;`EasizvI6}4cYxDV>3{)P
z%Se_44?)_33|x4Y>!$f?9y{B0OQ4V{6oU1et8nBL3r8sbo$El(0Z{nF(0J^2?A$G6
z6ENpKxd#6EQ837((kC}`UHvFy^$Q?c)FSadReQcogrYGoY>3mNA)SJB_JDbt!O$PQ
z)le^gUrE$)ELm0U@xgLnNk=WU!J#u9n+p}WKn>FQ^VrdLez~~p1sZVR1uRd&(&~uH
z>|O%|{RJ-Wm;LyqkLt}n(OrC80g3NfaDSBy=LHH-q#@w5AnfER4ull)OTbr$#o^pc
zcK8jBPzmOo0~AJQeVxfPC8gE6?JtKz&aWyl62l)~tlX#oIwGB&ZXq6#5L^WjCut1m
ztW2m}x?N9SIu7(3tNx0T2M9j?wA>_;?q5IYjN3n6i~IGqoy+~a0JGavM}(=3ICBZe
z#{hqR@(VQiM1_Uw7|4n}ug=&s16(TMYu|K+EA9C|@_eKs%}}))frw2w#4P|i&;rb=
zu$hJ3`;tLEAOS<@V|lH#USVHqKJ0L(BO*C0=c3*W<hTzoqX`$NdmH51c)dg|YV#O~
z&x#B@ZsnR~0*UNgKZ)^2tdheEJ4VC3`+xC8T}aS5da9UR=0wNzwcgtmMMxPdN%Vek
z_K8b8NgwhH&Y$?m>GN1u6@6ZzKo)62=fw6Jy<8BcVqLxd;q}iNA;45Iu+sOlM-ta?
zqWSG?Eb&{ZfWDd7@Ux*#2k3X6OK+|nazb@>-d-Fh^5Q^l$*tWieKqbw0p##2{^B^h
zXwHAVBkvCdDg%|@4PIt489d}>cB<x!>3F+{(djb!gmJmFQ|vTHo~(36C7KDUN(H0(
z-=+=>^;h0*V(OKlNQrs>#2{h25>?-HDkDb?cg5#7A8h|sNtVK}C_Pa_{Q_WW>H&5=
z;vi~F6n?+|H;FNgaNxV^2fbUOUk}bro(4)RPuz`KdP&{u^+JLHX~>yP#XNdOIS?V^
zws~j`$oCP5eKEG?iX%5XHU_dj8#12k)k36~2rm;7HzSXnr^;tf2VG>{Utg1lhexm4
zRG6KCt@39=SFi`asmLnN=37TLo(&cT2*X{}2J8kgFW5y@Pt$l+ezWYRDo>j4IuHjs
zeC!Ivi7aj?OrmpF%QGe_gT*RFg48)nRls8gJTk{26?Pr~Xzc&i0z8VDHv^35$rfzm
zw=Fp`5DhC14{EijS(aA|9ivdLo`9q34lIAd+w3DJ-yk}J8`#{Cqas#nogGG0vP~@H
za;_2$$e7X)RI4oaOo8@EpzsA2xZmiaeQC?-7#kEoKME0Vmaof}S7C*&ZG6(BCb2<3
z8wap}zaJO;R=_2wCEIW9Gb0)El7?*ARc@bcEDS7~TH$J1U5Apbti0xJ+wgZ9lF&Z@
z7rWnAjj)tyyts7%P$3D6qR4yUkEjWLfV&za60U~Gp&>34(%h=$P89-Ls@s;<oO&g_
zICB0oEU_q4uac_7;zo>8n{lC{;<7wY$a1+6Fiu|NnytZE0z+>Tz^Wz5Vv<i<I(DKN
zoGZ})PjBW~xAZ?dTHXJ6owdN@?R7Sz&Ene{KPv5Oz+TZ(!qj1um|V`s8n={jS#>Tt
zvdoh}#|L=7cs0ARj}sDD^2@>Xf)egirgsok-7Myu*!b>gtJb}#Fiy4cH`On`)SGX0
zz3;WYX>JRc{vp8Ki~VeHTp<t@s|R?^oIm51wXa(?<_`9+r1Ii`tddBu82d<eVi)Z1
zVf<E88YAh3qXmy3?cHi@UhkDMO%j13?fbdFgQWE9S#RxFDTT(vZd^NVQF08FNE=}!
zgpWkqUS9VJH?yNBSb>77=Rm%0qq+}3`NKF=`5Da`^bODiNeWEJX8dwf4?!BGVyVcM
z$9yagE&F8ShQCB1>2Awasyagz*uXec3jWpi8xMa!GEvqV2a%3@v^h|b&uUhgjy?P*
zC%%GoZr!fe$~zf_#LBu#Sr~#sLuKGzdL)2c_MH>+>GYf1fZ6*xt$1F|K0K1K+EE`B
zGUfPl2hmhtmg%BgjzYkRHw8$_kMQRX1osyF-`_tw2J0z&Kf`A8{5}5J^?SBJ%cAcq
zWs!*ACAQXbf$l+Os8OrTI*XYFSL08zN>sdQ(LYfW!fsd6AK)QgqZtPu4^t*}f@UE=
zQ0HQQC14@>&%d7Y7}Rz@4Q0{s2u8su9rp?En?G1P`ES_+Ioo(Uaane0+gm;H%~9kq
zyzuOKv;MG0Um}+lzbVVdVGTdAvPC3r7GOV-^%G3PjP@pjTZ-}gFKy#*_eUMM`(^8_
zN%hsE2d*vcTbyrh4*$+Ns(n{*$@q8#>t+E1GN#Wo%yRkZ2G<#$&$24H$e0Po!vk0K
zdlJ%#(E*`aH%Dq3^WJ^p?btQ>XV^2f>{D*R*Z4xe%#?kxM{wF{n#IWSCQ6w^8363j
zM;xOTe}A}Xa_@o4z&~SLdh<REjUDaolT5{<Uyi;0Jj%xV?tSplCx_W=B`ML5MB|LP
zBY0{Tf6L$OLY3C(uV1Wc(w{lZ*-^PPxbZzjw0ZWp-@QGH3*TN;c4)+|xo_V{l{Kx3
zxEOyo#Xl)};=M;>upSqc{mtwSwW?fwewcpew5i|IAM!pQZ=USaECe$G6kRVPFR^lN
z81#*cfuc*s^0$lTjA`vdvriSddSyOoDLj&Y=(JQ+YyT-~2=BvV_bNhU$E506p?(rN
zp+n`8`Nu!2{6|exOf#o_RF{Ti?$t+jXxs}c!5RiLtDlBtLxuHn3wQbzILhWpbV=Fv
zzYg(l1%6FE`yv^~_G35u#ezErTZzF*`@nlcostTgrr8e;sZB$LFB^{MaSFG-k-NCp
zIcQrNGGKG>Ah^j@;%<0!>&gw4b<t+Lay+X<xGJ9=WcCjwEldXU6f`4MJ{rtjdSV#2
zer<+6{mWeK<hur|o7p<5eD4f-g?IX^A`&+WXm3uJ$o+rIr+%6pwOv`9G&6O2<JEhe
zAhGwAf$vY&bP?N?eWVSPyKEoFm~$Y_PnntMs21Zs6<Q4y(N9u-M<0-*TMRo-9^cCx
z{JwvgdoJaTF_*-z>kMrjO`!oHT32nUd2F-a|NMPM&s+6M+w+6(N^Cc*vyOegp>`D$
z#r`n+yi$xjUD?X|R@3|IvzMBd_u0?MNrWhdW4(+dA{k!?`}$ACV^{a5xx4}`ZfxOM
zZU{-P@SJGRHdnVRaO9f=!lr-8b{fCi8C^T~>UQ#Cr$)=9qx-?$(%s@)C--ReISm^m
zY5JOU_fD-QOHQ=mlc~L~IDEfmZCl8+bQ+^cy$0+nxu<$?T?{^Zr7iw0{ls|1rKOW9
zUKNc^GSs8`VZh>#J9pSbfbpG&67o!Z?C|S_^5@D>T!ztc{RL4lglFIMsYnOogjI{%
zOF=ov6JQ;t#!+U>S+^twC$FHQ23J8rYGrzI3Y9LPy?y573e;}*NeU?B@G(*90-si^
zybgKRK<$;L?{!EWSgYP-n-5fVN1O$^olj2f%4qi|UpXa3nh%h}MVsxU|L{QSeEbys
zp6c1sm;jf*fFFWtH@yp%msTDDEpPjK9=tE3YVkUb?=Wo3B-ymxe(JCeqp1jqr5kIq
zO7v7}c+@|?{rZQpy7hZ;Qi*a%F&=RKoStT>x_!joYR-qVS(Ceh0Py$kzpv&@MMnMa
zuI4;_CeZV=ufM0Oud|zs!&Q&Kv+~!kI(fTD{kPSe-d_KI1!v#?!3s|9_y41U^S<A6
zN!D}chR8evZDZlI;35<&b$Khozb6&-e&g7k`seXclvwaD@BJ@+P9G_{Q!|*p_*Fvn
z_xl>xy9cxHZvT*}8NJvS=UT~AXxZ3ubf=W3==bm0+j%lIlU6crd1p8{?izZY@t4Il
zp&f0^WrKXUKI(%yAHx{Gnw*R~Br@dqg}OB~2gy@sw3-cAOyTi4T5%CYPi3ekwf36a
zq64{NJ@I^6bfI@^`qDk~&T>pPrlH3oiW?Ux8(Q2{?@kb;J~uehO=7;9R);Vv6Ley;
zg0DAod*#oEr6zcKy0Qh(cQl0kUK?Q^nK0q{pPuRKQ_sxKrb5T3+I@w7o=#M-Nxx~I
zY-dp1O#|G>(UpX;ZvcVws@NxQn=ckc*;P9N$Sn@{&NcfL`C5e$cA9c4jsbj5mQzLO
zg}3Oz(1G-aidNKPa9vH&(Ra5V8Qco=*>pbh+k-1WsoJ7*IBs8Q`Urv09^3e&sZ=4+
zo|H5s>pr+>k2eCn+R=x;j9<jett6Bu+D>1L1y>TJ+fV0A$C`Di`fnUrwm;D@JuY*O
zIyIU#<5NLPWqKpgPw)3yL0v?64<Dz)(bb&T{%!pZLLaGzbA#?MLS^a3*##=$)(i7{
ztu&6k*W0zbI1lbTU7QIFuY755MioT`t~vevT1&fFud7z<xo$l`w7G2eR&mBI0w#zo
z<~k2!T>iPQ?ZHF%<7awt|CC?Nc|*6)kx^iQNl9{|eQ30uRQ&n0nO({Fi`Iwpaz7dg
zNE1;7`t5tEqe;Haaw~SVYjv+zD&l;d%a~E9?Sj#G$pR7Cqb~(4_Z2%=`rHprU@#j7
zc~*^DDnF;EY~AV$TNyb>x&uMlv^CCKsaetA{=iIM6xAqAoW4g_nL_CVb1mPQ9mk6w
z+m~Ku`*QW?0PsB#A?O2@*LE@CilNk{eaD_D_7{P#Zo?C1y7<4K&eL||P+jS2dAyo}
zYD9cyB)_>+NN_-Ml0x_8BbY6tjbv-FqGD?0*WSL#NuKWGe1xRJbux2E`LwIa{^Tbc
zv-y{iu%i?Hdi(FkMS7v6;((?W%FB}Xg;uVAR@L5TK9+^}F_>qSjnjqZ-S<B?wY+Kc
zNY`WirKZ9NssXzfN~fP03w_-=#nCC?DPvjuHhzqc@UU>bn7OHO+V%Iulb1^^aAY|4
z2=pWs!Eu=1d~KqpP|J_*=ZNRIt}mkdj!R8#EM5v9bD5B7K9}2iSG)V~7%?hh4A1iB
zGX@bcn6RtiAJ~2+zu)QglBKUyO7xMKTJ=txP?x!P+9CWy(vj(!Ol$Azw0lofx;4I^
z8?M(cp5GLG|7_*Ph9IaaTAvoK(9!a!ME`B7k6)+K#Jw4d30@-6ON1Yz^W0Ur5Y-1l
zvmeQQ_!9`F10?bI5nWoysNizEaGQzr-}RQJfBM)k0-k95&!88V$tZz#7!H(aKOLp3
zMGHmHP=ReF$mk^3+sqjRDg+#%4=>D#JP$V=3RP<q0h<(}b-g0!FezsvFKXmF{J&;m
z7i^>b-#t+Wzgm}od%EKGjkD^j<^~1-%vp*tia{7Qvq$=yXVi4r(~2^}#3o&LcvsyC
zofoQa3ig|r9y50E$H1ejFFY52eDgRPv8q<@z+}+N@LM3L^z5s(;~4XdV0DbM150@p
zzfAV^rcq3{KW|g(5-o4WqYK0paJU|YnjxL1Tv?H@qNSc8X;UtT_HU%BwZ9rMJ^bDy
zav%z2g*B6=BEoa;cAlnR+ax38KA-sL1&#Y%Pu^k8(}H)opj%1XO$$nSNb9`mbegUd
z{kq8!7Iir)h`9%m2B$gq9zoEg#V-P(4)i$wqlcB``L<pt>M}J-Q~)9N37p`Y;6fOd
zLl*V{Yy4UsR;Ofggj-!SGI%cqL}Uc%dV3jXu+t)D%STZckH=3?O7MpSg53MtHt`(g
z{e?-Q(^<?-)twS;9C|1jOo}1`R2);c@=ITpr8f@Q_9zQBOYH{2-!X4@1mpD+LOTL8
z_gBvA;{O@V7yiyEMG7Z(Dcs#>ng+b@j7(?>CV84sW(3R{wXqn__woa?nEY@hH6jTf
zAYQX09zbAc@nu?#RflCpsKZa<8A^jPiAYPn3ixu<-x1#%;d$+gSizA<n85A^X8L&Q
z5`Saml+7vLg=V=Vcm4ps$=6I?-l&XNxP~>G`X7!YB|vGN4^z_o3<m;g^pCU`ht(Y0
zyMsJH?Zn3hceHiK;u``%C(?iRwes*wW>PcpUtnCEB4Da~OM<g1!Tu>Ch`rT`vsgKK
zXtf$%s0crYL5_S#fL#~dP#MVRwo>?2)k8Q|*_vWhXjVh=<va*2t%0y_yGU=?NH!@^
zw*T&%=|*^LK&$U19Pu8DsrZho<63_C5Kgc>JaNJM>o^8%i%9j_&}+G$>eQ0z@#HSN
z(=M?fA+AOoGW``zLUE2{EXu0dSG0t&NR}VROWr`V1{cO<HY>Ht<44GFBMLS5jm^N%
z|F<>I8dd^@lIs0M#|74(oTxfU4!f3*Agxp7I?BPUs8QnKG+ShRTVRo=GA66qKOA3P
zhcKW#D@hTmpaRP-?FS-TRVOxMcxqL%tdiMJ`KJXg;O6gdR8YiR6+AoBHpYoa;j04;
zvV7jrc+zz+(-F=_#eQS>cc;5kpM~^V;PgP%54$K7l8qFkZrRb~N|>7P4Oc{kD0^p}
z8+T}*TaJaV)RL8QQQ(|uNxDXajMH;7{s5y3wrBogF>VxbelPu82l*4pQb?cZiORTz
zzBs^O77Y{5cxJ!zNBf$~<rP!#%Sm4Ei7#vB4JbJX()SD5gd(*xV&NU=q&e}{WlC+L
zJ@cW{BWah@C@8{eTaet+jp09%<6uYmfT?R46XQkX;WO92)8K=f%TmLh^hxcYf1pAx
z(4Jbk!7dc3snHdox^#-B1@60#-D3yUP$M6de!ODjCpWzL!X~MYj)rgCR`gb*jFSzj
zuR4wl;uSYV&-Ep@)I+O0Xar2|iJmFc^gMUZMVyNr1E^-bfnq)8^u0}sBDxp>OSEC+
zLh)X!sIJpEi)h%S!}$Y$Ky|Mzu3ZTnJ)6O_+`?>azP{>F%pM(BbiJtN%5N=$7Dl$f
z4))%$(Lm`u#r}8d=b>BIicnk)se#W6(n<@0oKN!cym96ySI*D(dDvo-CxR9d;p(09
zjqY^MD-qc?IfZRk!TfBEEQfuv1<>wEaOTgov<^?yOxaT-l?xJW3px~$SEF+DQ@F3@
znOj5Y4|_uxg;$A`<y-C;=JNky0;#X5DJ|@udVA8282mH2V7ip{7x+Gm+nWwgl6D>W
zjuCv%y9Ywp`9cla?qjRQ(V2md7}v!F-WJ=Zz_rQtZN<Z%2o6^~fASoRti4YSd=&oz
z4i7gYZeQM4p5o!vhT+j(sZUf_k47Kem@>^wRb2`A9Amo>_-HrngSg&nUmH^imfoEs
zc$QCZBs=#uP`;%!SGK#i!zLdPR_R7YR{S)qJ`^0uc+knYDyv~Ba5m2dJUoFpGUeZP
zHL8izADeG>+yb1LidvLYL)011O`4Y9%4JX9d(u9Mzu}e(Kq`2jc&gmw!*9mi_it=&
z${?)rB81&I;?lPy^Ypc9xPIs+HNx>H<Kf?_wpTJN!?2**<$h<Jbnx44hbQV1Jv<{f
zR@n&?8Y%sEwcWr}cG5R_=WPYdmI$I4=a`FQN?V3Iox#4EDRV^Q#%j{PG!ErKIc(%^
z3JtF)B6_st*@7`m$X#e`<g+Y(ndz(A(j%A!)r3lNRck=~Qgu2W(Y!LgbB-3d8xaRu
z>fnsOPb07VJ{`#NgX;E?P)Ys?UoE0Aks=^DC)1P#b3xBg0<_yQk+^j#`TY}TtKhCy
z_Nb>QyXcOV22<iDA{R+ZI2Vqo&Ll}{45oA{n`q1;w&S_!j8^jbvC>7Ps4ttZ%=vJu
z($;Y&lK!z6W702_o6hx!drRd7);DxLmWL`H!YsPW==_BuMf9{bq!$M#$d49rD<Fmh
zn?A9AGVzyHsnmO|ypAC@$+Us|6coOkuFjdvY@qx+_vt3ex@7<P4?8Br7-9EMwm;dI
zo$(#VOzL2`jhG&j7`glDR&&mO?#p2UG!CqmFO)a6k;0rlJ4fs%@CdfauZ}~TbiO^;
zy-Fp}pP;nb1x!j_wW`5iQv_)!`1R#n51Ut7F+4U}8i&rQ(D+OC;=eNe`{KPU#M+^R
z)sWv{^S?|g>R;*(cCm@5r$LEArAyutJf0})<2>_c)rg4`a=f#-xzbZQ#HCAuZTRK)
zr2X54EnSgCUtB-|On}e9)YtUFzJy>i;;!S>TSvX_sQT-$Vsv7!`%$TeitL_OCY9Z6
z4Y-C+X5JG~CkhXoFs99Fii>OXPoM6#x%4qPb6e%ZQ`qDd2C;8nvQ${Q_dIm&(<RQ*
zx&*Z{z7N7nY8+5~#mH?#db`k2eM)>JeWE=k0McjiH&C355v@0lT>OAYVv%g!Y8~T<
zZC#>bVN&K(RuT_(tL-#$>z1-Zb+@ZFF}R+|hY_O;`X7p8?lJFWN<eyA#P8`66TUWo
zd8W})>`!{X*t=9Fg9kbNi9es-OU<|q3#}EH#F+4ZW#Fw7ZkV;`!M0n2Z(~|<TgHmw
z%TJguI@&ohA!=ma#|uyL3|k54Ye!HoMLU$j8=Ci1kLTFAs)FDREv(Dn_KGq%;L~@R
zLJK*4$TJdqoM>PD*+fN-nZ&vK45Q<Cmx%ZWccE2dNMWBJ)uh}Szy+>Xx5U9CmdE8v
zoc9ePXs0>i*+{{VcP<TI+I8hw+2)g|i|P6=F6W4~jj$PH`3x5)Ji76fNwVp<c>p4b
zE6R*8`4avK0-7OUEv`DFR!;Tar?_EhUHtNgl+IBlFi#oWua$i4AGCcO6ChCv&pxiZ
z28!V&^;MEwACXZ${?I$$>*J`L)y}3DDC2MDk5K)W=MubJ(OnL~r!hwu6DMRxm<&oP
z)A|#~EWvCPs_Ws7oLwcp*K%?a(@r2{h9Il0M|&pkOB^br|9ZVIVq^a`#sZ)RFFq<l
z(qi_nq76O>s!^Puq7#28bS>Vgii(hcRA@0NOrhFTc0`{9Dt#g~_+i?(fW3_~=1RCW
zG{k`g6J(<ds8L;{?{wmC9;=9uRW^pPa%vR8rY2OQzqA)R!wjl84%!*smcSaBS8t6~
znGP@9K+UL9>k~aP4jdRyk^v|y_n4KCy|Ju~@p|wv-fg#hlbCUt{xl=S#S^vl3IpGF
zeu#NKg0$Q*qp>0p{nrq^kzDq=u9oR>D<V7|5Xkd;gGGx2F_|BqYfvKm+n-!ep4h87
zSEc9ccd5FPDbY@8_<~R}O^5<}FD`{4E0mQ3%>-?j3bbqtKkVJBNbP#{ISF=^-!})d
zUk?6Z<%K%3Jb$m(9DBOWjcnby*d*Bc(%wFwePT2#2?S3%6r0l*qa7|&wv)nFIWhS}
z+Bk|XWlo2<j;%(qMPUM5@fDJX`rE;)*_Oo3ml?lUI5zb9DxjSk2O9#7O4~;*lW*ME
z91V}+0->u%wO-YaX9hxr@o7@YnK5`z&mFF6UVbO*wCK5p!ruxPHAU(w+f(PxD+N2&
zw+!P@BU29u&wnZ;ziv*>elWH3O!r4A+KC@LE6|r16X$&!Sujy8jJ-MKyqJU++F^c;
zz3Uh+8L@Matz(LWZqw?kK8l_tQQ7)Pf5f<`8${6Km%XFe46+rBadbyeO8T_W<0v0}
z;(;mApInR-)lZzOYp@jGMD^P);(j(CJ3x$Vl5Vw^%p1z!h^>a7m$hAIXLF3g8^8jW
ze*rmmg4Ms>lrYi5=~NLfU;AakI$k;I@tA3g`$<A1oW_jGxh?f>q=%?139ZUNX^2Pw
zQA#m}(Zg5D8m^QIwR-ct+C<FS3Gu(K;$;^{-(+W=`E=TwR!;<a<eY6<JTbcE5R~O`
znbu{=NkJa!;3ywZ<3{aWM9{WR>(4h!wh$pFeo*aNyYSn!o=$`I43Xk<F%I^Yn&XRK
zyI7*k?$!K`6B0%qLcLlNdayKKW7dkPbJZb*v)<Avro#j<<b4(fQ~Pjf<^g4@t{9X_
zB4NU2t0+U>2kkH@r%l{k&wrT*!`Umrr^TLr;n3TW#{@iLMl}^(t~2g2BYH-k)b0rV
z6R$h>9NAu~S7SdLcj*#042c_ah87y!nTVi2dqt#J{^!)K`!PZ9f|Yl-Fd+~W_J*l9
z)%8GhVrR5qc#{s13bV`$xFbQsI>ImFb*WK%_x^Mr+fb+cL|ohy9@*Be5_mN)3{A}h
z!{S2{va_a8nz1`xQU$qMa=GqD@Ot&M-lzQ-UP97mZT_iI$TK-VMgPXN*@JGpq$A=$
z=U%(qGkP3*k2wRt{8Y{8I`?E&-42uTm>G4^Ol(kux&^cK{=}B{i$8`R0-E7lUyE`r
zw;VXQ?s;faFxgl1W_Ysxy5Xl@>n#*qQ|0Gz&Vv2Vu6=4UBbGkw!&&{&<ybix_?{k<
zl7#>?66+dh?!LpFP(NWly4_L#@p{fJl2E9L^q4TYxygFmC30B0IQuR<C!>p(L}$SX
zB7{CDE%|m-(*>eiLPK~oJL%U7qL7d^epkd^3SaE0_3|Had(x8f#Y24V;U~O<%h*Zs
z*%x_B{0_g1XT?<g#%Mqm=R|@%-5+Pae4k^s+sYyY9m*QIzqVL9PyWx@&8_${yRzHx
zeIYeUdDfVGk)o72F|_x`rRrieTD^>w0C2Gaa?E^k<Fhe*7t(Um?ji{|BJeN?Md`{1
z#%_!2O}LH)4<$>YU)*bJ^Jy$1U+IxGbJg!zFRozjE#2&cr2WrbthlAg7-;m)7=3z*
zPPz73%baZw1m5_F2w9P@Pou3(CPpv)d<GLhMz-E#^WLG@?(A!37aLX4smLAU!9iBA
z!20#eG@N<+8nk+(6>D&&(CMuqHL6MGISLHd4p*pR!{cW-p`&m6{l$>&)sH+*nR4^Z
zu8^}-IA!Wwqnm%jCGR3pi6?ElGZ=c6^qs;Ju49s7nNfSu87`?RILyygI`HEgocWX;
z#sbTa*(yPzp$7AB%{K7MzFM)j9B_d~THm3L`670<ly5&W8Au%mr~VDJ)G^kIGJf<<
z4h2C&ZazX~?N=Cnix@k*%FQPFJ3qwt`fz$Z4sTrE)AQ<g2qGIpFKCNrwv%9Qh_G;7
zj8D)<aV19{G)glNhPykQw^8p1NN1UL3o*JivpzGA*CP*)Y(Hqu8WWWyt;%;S;&fh2
zlK$c@3EuT|8gnVkbt@eEcJFc7*KOtX4|c6<efpW5h(--o&q`!EWnXe;$nn~d%!h*8
z+23z1+@@-IM$4RI3f+3v<0jn5Byf0gc}Yr>sk}^KrTXl#o2zWWoBp>>9hN#G_}U=&
zVwiLOi>om?EplsVDP-&B%(%?es;L@;8KTzVYpRU$(f!a)z>hKFTolg8+-8z_;pCF^
z_B9$zKC^iHzYfOl!ow5$pU%qL?8PMAS3SGW<c-SzLVuh^*?#hRimLN)>S1FB)AQrC
z(Mm!mJEZI<@4L_pfRkZI<9T&Ro-QKtYzco%GG5P)nUTG8En@A1gG}K_X#|PczZ}U=
z-c!0$9(!c5PJa44Le~89*LKTX514wpTi@uSSP?E#^#gV8g_{U7r2eDaiJ>c2I!oG)
z|F8kwJfz^Cs<|F|q6+ORv41B#K8Fr`eYf?0+)X5Ia9r8B^Pd&ZL08p=w*Bce<`pMz
zQEzh7IfA3Rws+M3T^71mkgd&5EiP&QQZBEF^aH%4tq&mEj&%{Rn;1`cDn!oQx8gSZ
zHwg9<>$0mNyo-fSwG)KMOFRM6tmtX{vNE34>p9QA0lml^xF}vK4+)RiN6=M3?`~kp
zh_N`ZXBSZeM37j#ocGlJjR}%Z5yt0$f&~#w3L!EDuKP3P(aVhg!rjau4C(D?jNRIM
zZX{+9!Q#-1H)z<L>+t!{yu9SfRV;eTk;G(hsfE&-tfoe}LB%LM0P)MIy&Hvof7~tk
z8=SL`h)qW;O(7`O;xLC}^dQ*k^q)}PZ?@%;K*oQ;)tM9f$G`Zb!(3C06y!p2_`lJ|
zSfs4yOY@2`r^yBz>LTf847~LQO|Cyr+@j$-i$uQ;wf}vJc8Q6lNV|VwwTlyGZQ%<}
z;LT3ei3D?s+s=Q;CXEf)?xINwMT0C3(@ec%D}P4%Wdi5}Q5jwfG#ejIOyuFh^ws|Z
z@Pxhnp|+!)8U@8!kGi<`1vdJ?XFu7BX1%}wYA7Ox|KA7I;s#$!=l?@HM4+@q{*MTE
zH4zav{|4%i4MzuEWygn{ih(U|11gWsQ7Cl(8SM_H*SH>2<$>NYAX35sOfQ^EE8JYY
ziNUC_SW;@TkQYVL<E1cigi^%G-#aQ$^+1yP>A$P-hVAdx8yK7rR!7Hu(h~kB+dvny
zu&ZEB!LX%tEYX7Zoh)vl>9Wu{tHJ8TXPi$i(PkB5H1NW$0w}(;E8pnUbFr|-Gi+UE
zG)NFgzwZK6RH(4g{F98a)u!-XQEsi?kQTpF?P0H_s^y}+EMaUuxv03L%9A6be)PGF
z1tn{M({N)!3XGh*+*ExFxply_GeWwd=J(E-^5YuAH2cz{UpvC97I*b&Qe$CdH|ekI
z$j7sVZxX1BIJ2FSMW-p623HqLgXn;p<9Dky4x|@nNI?tJszV$5d65^jC|R<cVDO-W
z=C{iC?&i+>%VRSaMu%cAT)C#KjdJ|?7~jtzHZefbJLf(guA<`{wP2aRRPKC9D^WSP
z>z3bOd{yMfI_ANu&MbxxKMS2)k`GhW7LN?Yi4B}0Xzo4t7(X;7DTg(-IDdTULdh~c
zOuf4B?OILDwXo+|<JYCdqr@a^Zy6J{&hiLsb}||3C^}IU>2mwoFfbju3~wH?I-r|c
zoJ}Q;RyilZ2pM>9-(UOW-P_7}jGA41f^eC+CVl>vN`q(QhMx&YwNb1Ph8wEXr5p*~
zNGVtGv)C}wp&9MDBcV?F<RM0gRoY>!Ra4iiJu7JuGhEq#s+>^Xy+eN9arq421m4d8
z7nVkPZN1OP^O$$@x`oa%A&L`>+$iSKzq4rRe44w?xs^$>^voesDdXqHI}M8sq}vB|
zO#$Mpyqvi-bQs#KXerJs!Da{A2<(dEQX9xitxoL2YI{%G`V##nG=1#`zOzhT8}{E<
zT5eKeQub$AKj@ZI1&d{%jp7d$b#?#HboXKB4>N^<5B^UDTwSqwlMNK(n^SGwa>o#M
z*eLd(X>4-#(26#``9Edz$Z|tFTY-UT^Y7pEJk{uQ9r2>kNmH{iUrBA*S&a~@49y;|
zv_6z!Xw`~vmJT`lbl>L5YZX5iiSzVX?G<Sn*4;yA)+^Gkk#KUZ&b)Vh9m85m-o<?r
zX&VkIRygz+C65VQ@N)j0nzz>A_~Bk1#B4*b`1ww)^tJnNLs8Mox#(|a1FQW{+MNht
z>WMiAN479Gd8BuTr&|aKj^)LH$w@(r?e1f%5o#k*6Pr`I%Q{c8bTD#-B5qIk-_3qr
zLtEZX{*k=iysF^-@{hkmQLWU=24nt0VbM2L=FDd=j-sh#k6>cqn3FL)qu$C7n=;gd
zKM&2U`P4dQvs`Vsk-%S9XbtYp$ggqN^LE7r)*lf}2?a;1UsbTWfya;+@D=b5aqyz`
z6~$Vbg{T*&^jj=xzfK>Rg6B5S?)`VzaXi74hwy6sAd^@9{fM8`j@&`SawmP_w>eI5
zMvBZ_Zfq`HVFSJ$kT)ZSUW)5}Ek&@9saYfXiA_i{dhMEJmXOTZUBOJlWi3kJ>CduL
z87{e3sJ}f*Q$mgddl06AoaiMuyZA>lGmWMnQdooC_iLO|g%^qpX}`8>s0!$JQ4OZh
zpjy4YUu-uwxZQT$s6B!KpCNFta@6egf7Y3J^#Jreb$KaQu2=W(SO2v*LX}d$Z$<!s
zzkmOIal}(()c@|{h^s+o`~rgH99*3oyk)#RJY3Jp%li7Ab#n~-?^<2CI9~A*yY4B5
zbkX|%+g$x0ERy&yZLXeF3gfk^YrltCXrF$!FY(loS{v1`-Wsges+zzrwQ2ak#gq-<
zrT^8B7gej--dag(aJKvWw+hu2ee-bXv)CpYBol;2G7C4+?n4dxvHA_R%K7OlFIp0^
zS)rQjm89&Tw`|M1MZb8GEoeXjN}G~<;L9W4SGM0l<1y?zUXz@i2sM<|L2+5PLPx(5
zfGEjZ){mFIjz8?#HEfUD^lJT7@#I*paTzPA_48qWg&9RJXZeO>B!GWawkVgqBjQh`
zdQIY;v6qbxSbu5!vXiwCA^e45SiSPZS6M9j5*|=57uqUnc;%TmH|(b>LRM1whWFYd
z3T*DXBiFppd-u8xIN$sKdDA@>#Q1eryLU>3Ob-$9-D>ybeDTn&y*o3ZL~}~~Y5j#W
z545kLj-y}#7r472!~Ol>UE+{`_IRC7oiFPGR!&?={F4uTt6!hrN0(9t1VrCWqUZ2k
z#`Vx&<M~#q$7%kcSTEfB)H**EN43EbPP=Rn<q3?SkwhE>{#%$*cW<f8!(YG!@?zdw
z*x`_QK(PtgO69xw3;p90(%;^=6D*6*&^!3PbRbDh-Tkb<25htwL7rf4+D_{As+9)O
zi`i!JBj=5<%&JRtdu!XXQ))VgyCa{^EJI=R**z<d`o>gD^GY3l_WOEo^Kwx~CLHl!
zc@uR)<@ug~GsD2fB#nwx!Qyln0oeY2JQMFVGO%0aU6GDA*a+QQ)E_>OEa1q{82=@d
z^xT<edq|TA=uLGhD$C}5;iA(wk_7TT72#-9tu>UtdweInc}h*;y+ph@VBgo#$>`^Q
zmNPmPn^L2tN$5v0Gnrs#zjU`N8v5>~i7VnW!yn!wzM$nhp#vUkk!in69#}L~@DUb2
zJj!%imqkajF6`kwFIN@^j%O0oGaS)p#;7)FZ-4Z9ee@8|tIzUed%b&+7<AL8{#_vD
zQSHM{?=T*S{n+=@;PIE!`<J($=J@B;1<e355zJ^*o^)%7?<w+6o<*_aMo62vR~Lyl
z;|If(I`)EY%+x#U+=rNT!dXvbBt`r>_@a=z?;03yAJ*NrUiQJ~G43x^QE-??bwqO1
zYSUx-e(B2JI*<>(zvdCpKl<uw9X(wAPG9XQ-pC3UP5JhKK(J8HG+R_zJui^`YqwEv
zZK)H*M>-JHloLYxPqIfB(j*=qFQ(~|`#}2__ChF8{!_E5V$|O4x>k|!`o+r8#s*EW
zt>E5gy@xHC)hcs?b2QHsPYdiN{9`7wl88Ic@!yMCL&WgqUorUdMA-<=W5%UjD~lZ=
zdeu6m!8SySd4<x<gPw}{bxh|_?5()^LtO=atPWw{@E(cT{#r*;LnCEgR+-D^Fv*u-
z|B}fF64k4J%pqNP^=e<y(c#(mxFfaC;JB7UU20ucJYS{UOh*xeVsmMuhiazIU~>o$
z6oGn@XZ_)Po>BQ+rkLhih16n4p|>2kf2T-{;K;Lnc$`ah!-l<lQy<ize9_inkj(U!
z<sKPa*I%ScW8Evc)Vx_%2@6c%yNa3kv6xllvg!SyH}gh}!T1w2?m4iCG699UYmwz`
zik#8Y>?X$<{at_NYfRIyn9=gDlha>m{^VKTkF*YLt^7c&`g2o>b#^Fiw=9PWjESY>
zvFD*IQoRS(CWn%OzNxY~cMq)Gr10ckYtFb+zjy}%V^Gjo{kusPm!PPA){8V43kMX&
z;`31+jFH!Qw-5q;8Au3f(`n;8F@3%b;S7n1DqBfZ7aoM7WlA_=Su<|?=h<(1wjB(J
ztu8JGwc#bH%Gi4wt;+rVaL%>1l15(9m>YU+8%No@i&=L(o9!_vysy&Hi7ud@I78V#
z0L=63<LW#l-~XnI9>hh%oB{RlPEA{qkKYBaX8W88Iwsq!hyhtqu3*0lF8_}2L>G6>
zbnehDeTRObPokYCJ_>zpjy}hGTG2!zU{Cc2WB5w=bGWvacVD8^*2~<7YMq{|Ye0-+
z5O<&vg-qu|A5&*lK1S12ZYz0bks6darz6iMQ0h2nURyQlxE|3qrZVwrz1E~HgmU6G
z>|gpweU_XVL50pK=OoxaVlqNi-7xw}hpg3OBgv9Ix_@b?g-xXrk~2oA_a6$j8+|vX
z$+0*3hl<^@M(td+dG_p2B7Qt$&}l0$`0B}_Wih`%us`o6njs6G#juhfJV^;p8agWE
zzz`(#bw5R9!uMv*#59Jr<`}Ar^{FOkr)7_g!~fU&awaY^5eVBDyrhIq8;u%PJoMom
zDzKmgL0M1%{mWm-of@N~qAmq#jY{PF1#rL`V#E*)_e`sUeZK?$90g-^$#YEN7u(kK
zmzKL(trJz|m<aZ^qzFdu>sY<>ukg#MNG67W=7}ZBql0<w!acD>HDY!9!l*xXOIk1o
zNhn>7Kv$Jz3X^vqoj_?ePgG&rgygJ=HJ_ujvG;=7?lYCLdDRDxF!vU#ANUw(^y5zH
zTVS1Hpo&Xi@~hvN_CeI?D+tesaTnXFHBS^HVFJIf7Wl;DlLWi1t6=kF8&^M0g_YOd
zN!J2<%k<b86jzOLd1HQUtO)rfN&9LoR<LNWZpOtxV#^@vHPnH=h31+q8`>O1v10Gw
z+WnfXh#&I5-8H91fWJl*6%rDWJG4%L2QFi|xxnTbuKHVOr66(sy9_*I^v`U)SQVkw
zEN5-v`xGybga1A=X;hpn%sukd*6U&v3OpR)fKdI79%hse$zNH$QfLJe>WQf43q%{G
zBkK{@PK*dm_>Q_Exg5f^hN(3a>yi-oCFqN31)rv+0?T^D$vR2&60MvlMleeZmv7r_
zNz4n7oJYUkqklcSt4sV*ee?E%FF2<i+28G3Wd<KZoI+OgL*sByxr=6A@QpQW|9Ggr
zCtICy?>XAU<NLe)>xb0Wp6wefZ^jpKEZ_tyB$hx!2|3|cenKgM%7mg3znC6HDD9DR
z84Xtxx7P&<RnENq1DfZyUM5i&(1|of*P)J{a(Xb{BicG|(m+Bk?$-wR1)ZoEPzvV?
zu=H@fF7}U0+{6YP!Tj_tgWpMeWd1tQcl!*Q%T|z(iAv-CKE_H1J|{od_l|lh36?nB
zU|&|t!Th{y!Db-x6kWW5cG!g!UR@ejsX-GaN=U4|41yYzbM1V+e=xzS76#Zj7O&nX
z1=_}7bwc+qyn(t__8*Kd>QBbd&EJcV$~{)l1GC=o5t<K=_W&^gA~Yxy9wlM>YCiJE
zy5h8Tdu?=vid+p^mz8u8x)e`3LFU#`5+)3@E#vX!)0iJPIZ>RP150oICO62V`2Y?>
zX%n@n_)`yv?BEY1+Wpo$8+L!jh@!jucX;_)B)ztg7uzX9IyQi{F(;Kx><b3$j479x
zC_hD5LpdCSbg7Kd4&78@V;9gNcp)f=>8qqDCO=6khAt4*e^rC>S)PxOaJYOJP3w|q
z7?bbygZAgx&`A<AnlFLachVgv*M;U9G+MTo_(0FREXe|<N+2QQb6WS93>H_<gQ+LU
z^~>Jk6Oz^hvK&4fsZV^Feyw)ghNCwur*MH)MeI(XkGOrtZ5Ghcjt-n-k(lr@p<KB{
zd~%+62FV^-47vr}g&mk(@NTW`Vc0RIUKECz^nz9}`KoXV6H-(4INmE77S$nc>+l@Y
zq;*jd=7@yR-dfn2AEOMIpJ~1Z#9V47XGqV;3k}YFKRl5z{^KY(s-|jA31#s()&<6S
z8{#Z1!J>J7=t)MzV&yce`+I9)ZQ}Dd&iGV}ph~AS?N*-FDH|}J69e|dd8NamCKNwL
zk?L}VPonEa39d@uB4^s7O`JSG)`C6n#RNV0EeoFK8*hQ#h3#i(U0RXclrA-x6d1dR
z%@^xDW$$;9vVC^sIU=?mM^sDQgcv?S3KHgK#BOVfYF>5BxIYIb;8qk;ge5n<aW$b9
zLYYL0Y}8#nWpCPSNvXJ}*TxGmIAdK(tk}FZcYi}*&#6|})#43S?wFMdADPQ+<*gM<
z?}7h76$fT(gH?&eYwW%wd#_uv$iyorvcN<q&diyOG=nd{%t}%=rR<@LK1}UX8-oHj
zvLwhi2$gM@dYoB`J>&bt_iL`~g#7AUii{W#@JfSc%hl++ka5EL#9FQDCZVvU=FnSh
zuB$=;mxu#1a!kyqKMY~7(Y_IPY2{wCEk9u$xd#zC^6kd`nuPCx=%W2`dpTpuegB(~
zLWxYzd7MQfKPjX1lD8TH14WxZ{!xOwpCLfztSY@&mkJN4f&MKa0F%PKgHpr0YziFD
z?W>UzsI_cAbISK}*wgFGXg!W?nUc&%FuQBExbZEs?HAUJBO@YHuRYx`+=3!(LYX%K
zZybxh?#ooyaQHzuRnWrYKATq<#T}LLfbEohwa`SgN<TW0zfgWrpG~Bx++H>?0@c5i
zi>dpWEkZu#B0dq+r-2^XUIjJhdXF9QJ=Cccv?%!?Os+5L1;LLdqGydra5pn2f~MgV
zY+MxO^o6bX;G}^|P$hjuepQ%K%6lzho<UVuw?w6HvhmXWXP>8nW1v#WFzc{x_VQU=
z(A$@e*fGJx#o8H4_U3-g;R&2sWAo)N{z(g<Vfheq1LIE>yCv}Br?m>Wq0;Inn0h~_
z?1gWH#1a)ZpR#%sL&=fg-_r)M-w>T|FDrk_(iwB9Ef|`Ak;*Po3A4(TYMB3e+<)m~
zBayYZTa>IgJdLD8M0(hl5B}<H+o(v0LE+T{cvi>Pkl5Vy0KUjo8AYpeMMIrJ$8;6V
zm63<2GgB}#s!?LXT^)xCVK;=#ZbJ+S#x1*$nJF1&g<;P2lY~l$LD-c9(?PaP?}DZ8
z9!6%8B9a1TH-y!oG^zwwHA+%V`WI5fR6ru^Zce%Ha|KE}@O`@2X?Nm*KQ@5zn2?(`
zam}3<Jv^){hHYm?(Yfu85-A4aOe9OD<6!7alk<QzkxjgO(ckzP{NlxgBY4OKa>lUt
zejBemZcm1F+HNL_5v*7Zj(?nwb#)(N?^T^xMvb`at|s4`%!I}wH&1r=3<c?Hpo()L
zh6~Wq(OJeScPG6s4RF+L_~|s>3&Y+U?9|kE94X20dx$bxHleKN6+wE&<+mQlw`7VE
zjJ&ww@dh6&Rr$!@Os(0=BjD3tQtld~90F0rlc*d3MK{9?e&l^;O=Le|j|L?yrXr2J
zY!RW7@)tQ)LGtHUM>zNhYiNgCO+lx~eYzMO&xe6^T14|VY~Uipl=?MN1Z}AlBMW$U
zz}XVj&$(3xuf2Pms|lXZnK%O8Rf6UNqb@u?&Wsn5V>k*)FIk$3sU+o!;_}B<;$<UH
z#YpzcE%x0mC+AvHr@(|HQ*X}KN;HDkh`kkYR>g+{$3eP7izE{ZWNn|wi?ev81(m=-
zLoE{a)dKcM5EMuFCZ>B&oF|rCE{B7jH8Xj=mBr|IJ^XYLeOmvnGDuS$k^-}IUDc(`
zBgr`MAG1yjlOM$ylJo?XaZHZG;Cf!gveB;xFEqg$7uwE4X;lrph{`JO5c*3y6Lf!B
z7utaZeCQPnnFT#SirnA%7$Z6Tqykf+Y%z=l8oNbDn4m_gMRxTVKoKE(M}~{B@Ie+2
zsww!Pxg&#r&ZW3JU!A{0W;dZUA!-(I@sN#`*@a1{?rTsRC;IfYP%9`+CkvLAM#bii
z1ho}F^WS=8K$<W0XfP?KhJWGu{Vx$gZQKcK9^WB`Ti<xqh&93!mg8HVkNv!2Xo}3S
zr5s!m6BC&BKL)zRuqje)!2EMx=&J~Kmr$dvS0b!|lvh1kHK7bREr#8<7u3`lc$)R(
z`QK}?@Z}N<a2@A*Wi$J&lX8s7@qnj%wl8OS*CWoNPRE%TLPtACI){WYDd%Wx`R6#-
zBLpCZ-%|jX8q$Z669mOL(K#gIl71VPVbd~lRiE9U^r|qS@<u79E?_J<LWK`y@-~tO
zF@Ow-&dE14h}X!>z4R?7CVb9+X=7y!Q%9VK0NJ@I`0`8bejK--m)kr7zHM-L0P1k;
z57woq+7V5EeGy;62>wF(fR{?_s~NV(zJ>o<k0{%YDdt$X(opBzkGsVfk`P4v@%fDN
z#JLb_8&bh*sj_G9Z<ofu;vU)Gg>wUzPtKzmjlt$e2)wn~2)K)_SAHJP)5AX@qtpKv
z5zS`%_rmLc>fqQCtYG6sF)}s8Ui+?3`h6+vK9~ADZCf9P8|Zb~IFJ(u2c9c~spdj>
z$oBjPA-OzwEJ*+0DzX<D5b2U-kW}+A<y|f$y}5>iT2h(OO^WCrOp@DH20G-Wi)|d(
zx`2^J31pjT2pLlPj#$r_q5EC0^OV3zOdjRgYS=Lpq>w}FQhKWonh(2qikx+ps)Kd8
zpS4Mt{IhQBH9xrMW=1^2RKAMV#Ih5Kcl|)iD%kav9U4sj3s477@}Lz|c`KYVfgTel
zpQUahkdM1NC5e#BJGof(QN^*aDH^OrZp}!Ys)M_jNCkOWu)7uU1;MBsnOcH}gY@B=
zjUC1H9FZR7D`-feJ92y$*|T$opd}g33u}CgNa3OuSR)0FJftuo!elp5&_25BJ4P<k
zzm<=?aem<seH(-wME%8&;sMgEc^Oi!*ip7+oAJGfza&EvCaeCQL~0sSiaSfWguX7H
z0-Htixw%+Ks^&<%n*J7Q#Ph>2g5lS&@q>kzLSM04$%qgu2OtHX=YuGuZY`3zR~DK0
zB{H$7n~(+4FdXGDtAT^0b0(e>DUr|+qZm#wvVLFq>oZO8<Zft9azs3)E(7_v$0`cL
z^61n57kh6WPv!Uh4e#p=9FF0bjzT#yhlmViI%KL$Wu7S^GL$jnaZsVqXpB?IEXtVi
zNGg>mgiNO>V<>Z`=Q@4*{GRV~zn<Ug`RBP`_x;EHM{-@(-h1t}-)pVC_qFz3Qn2NO
zON%6tEGr1mm2}cdgnD1VuBCM4<q<`vq7X+(8cvup`0e0EQ{xXw)HRszTV@N@q!G%y
z3{sRABIB&dZ~Sg#%2fdMp<I<(jM1)^M7OzTmRi(Z$GPQh!oDdJG0k3JqL0C#d^x*3
z+)?(YeD+Z)25TfJY#N8Z$C0Ap_RllFm!yr3OOITDZjjNkMZE8pIAZoZvNQK_A`V<O
zf=o94G_vp@v_&6vsAj;Lt31Onw<W&Dz!6?m@1v;SQ{_o13~hYu|DJ1gt&QOd=>qKR
z`=^V4Wsh%ttnZmdGcvudB%R;q{0+O78lDx+Eq%4C#T@m0Gt}mh%l6zA+eX?R=-W2|
zJ*tZpHLOYZB@o%CGwHk^;UC%Yxqf^a?aqU9-IvGMQ<b7pr)C8$ldqFnZ^E$gs~((?
zz6v!pyqJ>Xg{^K&HmOyIs^xU@@Z_;hEMrqrB<d+|wAhdm%NcaZMvn9;gC<8gEZ(mi
z@wAY1&f8!Ie;Aft$`Eq9Y3x43{CYtjb_9+C4H&pfB5)NVnE7t_wD)3H0tdMKs{1D3
zP@rr*JQU}4dm8N@ycybTNwnBV9k5w$&?^sJn!pxlN~IR}{BrS@pq0S}RFC?2VoP8i
zI@XKD58PVcb9V}I-^$z*Y%>L=t8d^(E-(3B2m+iOr!Tt%=+g26SLl?EoL#veFOjd~
z;0|junsL+?UgGWl)KK=&LKa>*<3%XfFKCU8wvBy9W=O?|1>WyN-OiTZaw{PH=_vQX
zJyJV-i`dtA*yjk*E^!>^_PeDBrAra)c*`@euT#jKV}<nj2%|9NcH)4B33}JNf+cfe
z$~{gr%dwVBgrz<zV7>s?Pv`9z%-dcG8cu|w0kWB_jnMX4KMZL#!d<bc%(d+aq*++t
zcL{leIdA;Y0rxU6lLpF}i|(kNw^~#)SZ~U?v-GJ2O1V*qClD!D7p$S(DCvFL@d%%b
z_Qa?+7LUa9vj+_+ArDBc_QZ!n=EOz}sv({eJ#+$QgKgwSnfkC&?Hd`kt+*N?Os;dw
z8MJ^KLLOrvN3Vjyuv6mlerE9_d2XsY20=D#FefT;rL4Qa5plOAXnM_pqRu=*gy>ma
z3X`l6j9P)&8AjBQ=DOCu{I}>3)uWR;P$lpNWqQaRlC(7(ge=OuE1O(OYRx9CfA+IL
zA&f%KF>6Rr_981k!RLVs#tW0fy=(U)qQx4_sjPUkfS7Wm4Q}C`QnU;KHl_3ME=sUj
z`S73}$3kcGfNShOW72R4Ey(2;*=k0Q0$SCFZ5eANsg+FHj1Z-SzfK9ApZJNeUE63P
z?b@i%frr7M#S2jcY3+qKi4g;dL@vh+@**ZJsOdV@S0C;Tj~`MLUUpJcM5+ZfDkKS4
z8R2L<gGw1n4XB0fy#3T_KEiSaaq6|YK?|9&7v44#)eA9gq=`Zu!q?U~zG*F!g`DGa
zXSxg%E)QAC_BXe!<&n5AvY#p^STL4_l&?OYcplnPH1aKh)H{1#Hco~eLKhwhX^Uy(
zeO$sTT~U^PVHyMD3*~As2N`)kpL-eFVmP*EQJac*O^KOZ@G0eew^^L@ZaBLSm75Zl
zLPigu8mb%@T=@v_2_$VL$hVYt_Pv&K5{c)OT;MOJ5cftnAo2~SV1%}#O)MJcT6iDY
zBENhb(v5f8$PQOyPOJGO16zQ##4_Fnc&lKUe1~-6;rql0!MJ-l;}}#1(OIzTHe*wj
zW4Xene2Bv1l<>k^MKK51!+l||ZY|xJ#y-hpErjOf{t}OPsbk>V`i%o~=*uI-kpi1#
zeYhJW`q4pd)76a!B6;Dl-1eTa`WTgTG}m6CMpk7#0v+uIC%MXtrbJMtxHzne;cGm<
zy-qyhGq->gA#Ny!Zp+Vk*B<->3u3ei0^ZISKU9l@zyH89Io)PW-UVs{lKB~<q&0xJ
zKKuF7aaBkni$KtBW^Pl5xVg~{<`teds_-0!E-qc>Ne2YHbC|S%fp(wrgWU^_1_w_I
zqNHyzVkCSL;<)WSV&QP|&5z2=c6$-bZ#Ya(yu_nWZKv*%+?IADG~%?;0WY0S|CPQd
zlZtuwAVr({RhV0pHmlL_1c8vJAKlYsQdzqqI8rLXt|hceKw}f|a(sU(9FZgtjvhq(
z4vSP--{3yZBUj4$2Oks`=v#z|5TQ!!wh%$qdh3|oSnkrHr}O@`dCr02372&qpS)f}
zY}UWnL~?3MxP3aV_1d`7$v-$$3vQnuP8CBJKMNmKs%8u@4o_o*w=SdU!>2`UnyGt#
z$;GlfbQUrAo2y>Wig>vtb>fD!vjY8X9e)`0z!CIO>XlpjDUaD}9Ls;V76&eW>OSh#
zgQksV=R8f;{!YL}6S-hBAwvso@!Y2PzjPt@Nigo<eVR|W)N@=VQkYOE*a4K>9Ps8T
z@wumS?*JhL*RD>RSKaHmkS!b5;%TLUSu=ln4XLzm_`8&~%=a|o%iHjRLMfWajK_4y
z^OSsV4ZpV4ffBKl&d}z+xwF@_yl&=_=BqHOJ-WEJ%~xe(h4bkT<oEs7GU%+=jF8}o
zi)~9yrI(yi;n^b2@AJkw;#7a25S`D0S>$(nVU%<MQyB+N4SyP8?7NA8a*X3)trbA+
z!+AVkJhjlU!hsSQip^)591V_<gvz}5YWLbA>ZVeg!Ny*8Md&D-x`Znmf{x|glGdXm
zp0<~~c$f#T6Y21}O-hRVS<{Gkq-922;Jb>M916LpiHLirMSxMNwhyf!NsFFKejX%D
zXJ@Z4C2Z}&r5NhHAz8|<4F$y4%bl_@S4l6MaS*)UOmE`;CbvM~+pxdYOE?mvX4ik^
zkv5*`Q@`C3OjSk?b(SK2Pbu$WPLH88AfW``^H|F<xN)-Ihu$IWCkVD<@WIdvIi%3F
zIG0aTna_-fs!PHB8vhnJj20hv{I`A!YHf_uf)0Fy@s29W@LmW}$R9@^!?-+}Fc<q>
zO8GEG2UbjZ^flEbbm#b9=t7&U>Ciss)2M%|Q$&mF{Y$2eeo-0bTx(B-5Qr<Bu$CSE
zQ+nU2g>lDkNB5|2=imQZAsl*XSgdH@+{c9RuVbqSRm9;`vPxSUPFww^@4Ww!1c_U%
z%qFc#Plxgm{$5v|Zsq-`>$^V84*e;bl&|~GZ(7V6GO(;uu9kN^*TMicacr%v(k{}8
zG*%s?pQO~;m_J`OsbN<~M9;rO^UG@M6jU1}ENnfh7W!d#sLDFX<x7{u5$$l*fY|+^
zUelN<I|cG&%vU|>eie>=+KPd8qB@hG^ERp_y(b5KH)|#%OE;&!V;S`hay+QXi#Kia
zG2#-6@Op_;m$sfk4-UjQ*VXwJ$6~%d9QD;kt;>9_#dMV2(i{%|LX{BHUix(CPqCCH
zMd7rZT}+NQck<79$6hsUc4JAwY2{y8!`M;_F!yXDoBTYu_XtILWnezob?X?6W^lYS
zVHJGv!#j5DzJ|=`_n#bfzq@NTcRsEuEqPo0tmNX?+6-8XW7l~S=J&*|d-jT+uhDYz
z$zPwYIm6RWOh;{2yq^m9j>M?z2adW6IqPp%v%U_RE(gj4H-6oBHOHrEAzH$c+Fx4u
zyDPS|5M?-;@#>iEtJ;Yyib?OPMG>jdLsy$WBWS3@XG}R%4|-UW_c`W7f5vg@c<FAf
z<FbQ`GWb!Ks8_S8S>&@wPT_0(zqh#snibFTpQ_F?Zn60M>6%c*&#MJ+I<a#4g$XX2
z6*pKDN6!A}UCJ@}D)gc@{ekf7>zO#ApM+d_gxGnbON2X574HfEyj{9mcj-p;x}fk1
zrE%<#cVC;}%Fdept6YvzhGFDOJp+Nu2RYz2HggDPz1}E^z;VS7Uhxe&hEKe3c`J5~
z@Y_x~KITjF%3#E+hn=<2lTRu<?ka0d63UZsjfzGn;~scKKGwK#-*C4(()%s=oVZU$
zrb%0%Wd7Gk{!D^&LK3c7(VM^Mb?G_bp^N+3{)f1P+uDQYn`JvK_gt&pTj^WOusQ(U
zG$}jq*m}ZlKHT}e$LMeQO?iq_)FF`&v8^Vi9~W$tHhP+_-{e!{&?r4>-}gC^Powl<
zs={GDcRe^RD!jQg%Hgamqi?3u@Oolkqpfis?fsCN$*Y;QA&v_|B6URSRAggT(m=IQ
zUr)11Uvg9Xi6+fo!q0hsHl?BZXWq69u5_;_#;21{AFg75oj+66{O0AD;AC4PCTZS^
ztp7Z0pAgN&;dJZ7?#vUNhvkurtLr*Wm$a(WkekI~i591C<|h<9Eyr~`9@{MJ>5xl_
ziKb#+@A(oLu=$+tl0%GnZk591E1$Pb;x7VtZ%NiZc7U2U)hn)r6W(d8)*Uoud5fqs
zyL@*4Cq(2s3nx$g@{6eRuUH13sXL2HEB+jRew^Cb>%?Q~YC}z~`%JF*jC_x}JzteX
z+7x4cz<>K^7m_S_0`bPU6C<$-!Dk}tC{Jv;P3`l}pnG^HCPVreQD%`pLMTUg$_3f|
znoEz^3CSLWL!R_o6rfiRZ_F+73um~bIR@p5?M))L#Lm}_Dsh=!8=Q(hqR3VNduph7
z>a?JS`C4hzacc6=vj5lk3si<N5)H%Qt{tSsz|fK<ggrvU8E<bXzPtR#Y5+j;Ut^3l
znT-Ex_1=d*_Wv0f#TNWj?t};c^nd?-WYhz=)c@?rC{N$uGv{2q6a(B`&jy4XIvAkj
z=i=h+uHYH`-$h3G2e_Q^`ahvj|664Myjx7b>C!`^>=|k0JEDgwR76htNsKr8*F~K^
zee(LM6@;+l`R6jD|M#Ej6d#)6e7%X_qFd;2&s&o#T06p?K}}~&Ii{zZxQ0y=6PE3A
zki^MT%M3#Ai}nKTRWI6{u0x-LXlQy$dg$mv=p+m2-nSFb>-68m+FN4aEO)PX0oQdj
z=C_Pn!3`X1qp4aDS#l(F{XuHH4MM`6y9fNz3m8Jb1=Kp;-?4daFA=C8CxwMayChb)
zEwtN|mX8aIY>3@dPR?X76>?t;!cYo$Uj53qtXydzQzAGG9}T}pNI3Nc%2qu7!Mo_@
zSGgPTI9=}?G(+9Ke^R)>#I>q`;8EkcPYGO1zjRjqu7C|$Bv~UP0y3@MYcyC^d>s%1
zbmZOP+wM2vd#42ILhq8@!Dn-?W|=|Kz1eciBfG{cPwx~MF`n5aP10s({XB*=qaI`&
z<0Ed|7&o2dEmC;CfADrJWpsKbkIO;!$?jSf`=_#R8P<=>x9OY-ZTVI8<s2(TExxcq
z^_aKt64UgHB=(#)F_dR%^*nv;D^6`a1SfI3*e@!S8Ae}Fpue?5WW&CKlwVZ}{pVd{
zSJUdE&lvMBr7d*?4w+oZK9&DHdodXsNSG|o2(=xe_}~>YbL3U;*+1{QphKLLj*m70
z8OO#tUgjG{J(x@UBvA3@{$dZy>3#1F`2>|TzO8Tx2~&v7myK_g_din()n-(<HJY|#
z-aj?Y(~T9(V1G%F&|c0GS3F~2Bq8{F%1nX1(X2Z(?iy(}Nbo+d7n}1#^1XuH6%MRh
zlHJ%c3jx<Ge-v@jumhYo<c(SX@*PdW1ypN;u)elssiyCeYmS{1@t$gB-d#z^-xf+5
zAKt4975fWGnC>HKyqKEP;|+h4iaazoRKV%-MH)G#5?M~r^vJiazUn!sWxU6G@Y5C-
z2Ud8SxoV{Nq!+sPBHzg1o#G<#63gn}CR@aS(D-t{2hkVyl{@ZP1xaH9k7&~RSz%{K
zrbnksVlaA}JTXl7JZA*bJ$_{BEt7h2l{-D72`6MZ@WzK0Sg98noQq=~tXCg?8}4b^
z{fgz{cf-}Wi-1d)_OY>5J1hDikPG=DvcCJ}lgF&2xq@}Q4u=x|7uSF6D&ht^&O#$p
z0qT?GSK1(MSIyb6p?s5$`J>x_dR|6nciO8%N8e`TUO(zoYZv)5<>+AqrfmjGD(xtB
zY8||Cw1N=&S_rJ+e|UwJrW7_IJXEXsK}O^+SJ$VTk$@>zlNpa^&|vN9U=Lf`e<k%C
zvu#|gMYZ7hS2m#?4`lQrOXi7&XB5mJP>#cfLH5@s;+`BwsxW}+Zd!suVUoP!<lE18
zuLM*3^Q=Sx#@j<LgWb^Eum7VW)L(alJL>3}Bl)bUH>Myb%eY|6jone*qyT<u!=pQ+
zU_q3*%t!SIA|`Q;;jUDwNB-@>I#cC)-Jc_D(|-^5J|A*h&SX_yw6l+c=rK~|a>@%#
z#3&PQ24^p*<P%_KJ$}YiA=;M*YBs#MUkJ@ryT&a&3%YbgcF?0W3r?$>mwsxgkK`(=
zx@WlGTlyXsnb&@vfol7QOGeVl%g0E+8AH)6QvOSI!*??EJaf7#Nat2|V4de?1SgA0
z%$_f4vAU<8S&8~bOl}Obu@YOKlUYrMuknylnE?Kb3nOXllwjQh@gfwsFXvt7JkjmB
zfu+9bm|9}*xG-3J==b3>mV)2?KbuXnWA{ML9KRW8DvVtnM?8uNfGwgc@kgLZ&B2Y5
zC7;-D-PeL14a`aV-vNZ^rPWGw+>L{B#^Cox<-@7CGzN<5p|R7L;KhUNivqK!_tw`_
zUn!~|uNb!Zjv(n;r$LjKEobLH42`q;|2#f(57Bc#<H*Q>{xexC#b0iw#d7bsg5ByX
z-dP|>rg90tIH(`kH@!X3lu+rF*{Slkfx}q}Uve58AnH?|rL%iT8l6dQ7Y02TL5;=g
z(ORd3*<0mryaU~U-Q4;6Io1=|4Gwo$omZF+4Uid3`Q>ar4fj@Ytqs-P?*w&&-j)x#
zD~dxGN%h`fV_n7>Sd-&SP|pHuyWhP2#9rZn7>X|Yl-YJ$YT#MvOiMKsGu*Khay=o{
z!S6W>wb!pxzclML2lb+B{`4iIMP@gU)NSt8y%V@fY_gljn?2sYb^i3m()&WL)5?22
zn&8mNwd3ov)4iYPN;3;*X<o(4y4yjmN0$<+zuhh_GMjhk_B+V(P*8CO=2-|0-y|X0
zJC*Rc_B+ECOVr}I70t2iPb;^jhTFddb>C?tR(|=QacOYA`RTVqAUqMxPO)QjwF~kB
zdqV1=O}TGHR>}R3XTPkMszj9;Uq`Z~C0USXKkKto=DlK%%IzfvziCB~=5IKt+H_n_
zod9*oD{YOc<_OXyk*)x&SfQmC(D!n#erEdg=mZ8dy?TzK@Vk9#Rt6%uoIqOVA+r24
zLyBoX76nEhd@}O*3F=_53=YJl9S3sBs0`2hfo8vl*8IDA_jFE$*#FcA)ORv#(G#Mi
zA38%eU)X`RRNRTgO`qCrt8W?)(xaq6+P%91Mq}^4eBb?eO8Fj~>@1F3z}h-`+$X#;
zshNqIXs<GW0Po&BXCU<kw0bAR@z(i0jpGFGY_NB=fp^#9M!xz2rkV={&cP{^`qTYx
zZP<Q}xR$dYB4#{u&k-x%CZliPVGo<Do@d*JuL=Vq-YzVVfHJ7O^?Su$C!^OCLE7zg
z*M68qbNPt1!LxyH9eN<8QVBY=$ht(W2n&CHOCzrkuKjzq12fnxo<$swc-6XB<Kq^^
zh83hdjr#!a_~7-}X&B&Z-XdAc3RQAV$K-RV&kVs=#P@KMdOw$9hZuv*npf1<ZlKEf
zLu$L-TqIRoy;z`4fADf-0j_5Wn1`ud^)tKSns~@-I|dJoR|kTUR_@WBm*OX({=$7B
z<%O@miQfDuK(%=&JMrOea-ATxH>h`xWM?D$Wo9j%Lr%Qo)z;=!K@f1f&85nrN|UyV
zpYnWM(|ov4r|6lxoy*Rr`S0OuQHP4Z_yDUxiw&etuqf>KR20$OCF|aC!qP24UuPIy
z9VVVP;(d}yK@Sf!R``hv-&3Wnrk?S<QWi<BEZ{Erq7cEZ%<*#m=W2<&)l{_cRi=<u
zTJTyQBYBS!-6g)`Ec7D39UYNNo+{6&_72^ASo8{TE1sz?b~*asa8b}6w$;`HLg=u%
z&$R6fU*>Eyp~EwTh1j+m%O<V-Oyh}8hN9qWr`S(5+s}_hGBmpidRVsl14~7AcIh02
z3vTf*zS(%iuq~X>cd!g)qrMdXd`aAOIZ$+6b7DSDGvP_ICNeX;Y<{aKstU6f+?veb
zHxaDJ3}5G8&+p(z>#le?l0}YD{APh$QQ{9bXt8Z?mGi0he60M8jjf#B#4cQxv}nY-
z`JF-V@+P2I?q~C<pZ?<|mnx%{uS|3_)v)$ow%gs$@6(&8Z?B~5EB|~^)KOORg@E)-
z6;c)~)L%rU*v>IoR;Lfg4h6(~+SB-g(X-bX1?FqI7+{|%Xuq_43J^;LpxnGqRV({z
z8lFD&Iv^M{%LGvedoP1iA(rnR!pP-(=FaTf)Hd<b+2>cZj$%m?poU2s?*8O6rpCGj
zQH9@d5SjV57;ctk{`#7CMDxez3Iu7@14+FxU2(?80=@wKwff3|%)!r;jPDxr3^++^
zEYLeA5P`{h>5$Z>2@38AlRDpy%mgAkx1E17?E;QPe(uelXhJS*2Rg^Iaf-n;9mA++
zZ?E{niM8~nB|$6G3Z5F<fCW_-Q471hp-FKEEn~2-zv>L2<gBx7<M%^U_lqVVvt(Q|
zc+yhvy&{QQpitjaBkjzQBVc~ziz^by2|o)c{<Lc=!_&4B&=fO3mS!!lZ2=18yjE`-
z_1arZ6x!kNyWhpV$wKmZ*SVyIv5!C;;AW<AF$eDs?dO3rZ|1-8Eo1<}upje%t8Nx`
zM(Nu(OThz&=xx<|HVuO=v@XIbhlGtogrvR;eS5}hIDr>VQyMwBTc&vnX0iTaCkypT
zc<o1U$}e{g?Kjl0tVNsV^1E*ed~ar6@T}%1uQ0(WCqKy4yeLXW!X@5b><rIHWb`X$
z)F%AHUAQDEvip8-|Dw9akOu&#%rMTii1EY8zqr7))XataQRh!iS;xUb(U5}C;Zir{
z(Yd8B#z=#f8+AD9n;(alqyT5_Z<M_RH?=sHRoNH^uE8v7iGmOZ=9QX=s30xOxF+1~
z46?~%W#t8VR<(KSi^hMMG`Y(klCEygw_D{DSV+se-+ZuP5!yZtJ4|=CBv#Pzg+C(X
z4ZUy1CCZvBn_jeaZNa??0OX_^)x3gYH85cB%|TBje^b^YPM{|1e@%$QzP^wZt$oVx
z)uZX}FE~5VUF;2N<E{P-%#i6ZzYG5Hnuo5h>mo1_I3utj32s7NYC|8dYsEC*3Q#4n
zmR(ZNJiRD$D@ShY_=3U-!%l(7&rWJVs9%B*FD93k9ZW{cG#qECZh7S?ra85g+8-~P
z*Ow`{dE#mq>ahk)0}5PbVlaIy&q2Z1Y0cM85Aa`h!!&P8D$hR|S!Gs76U<Tq6^mol
z#R3-2ywTu)FMZJFVZ;kdRRnc0Fp3#(kxw2bNb-lCF@yT2%KIc)Hn!h!-cq<SK3`_^
zW1aJL6w02ELN0E4?ET`*JGSb{)gvqED*c^DB;hQ*Kbmi6%SIQQP|*mWWFMp$;GcY9
zaKZr!@rnN_U!(f2(P?}nF+hPNKWD*K{W(zguH;$|=fiK=3ohb<#J)*4!0OCbeYyT8
z^{lw-$p<%ChNC`cMxC6fIxznk>~e~1V1E(0eW1J$8d`U_uFXe+mthihel-G@Z9tmk
zX`aCV8^l^Hd%i7!hKN?8QB^-&80fIj^i(s2?@ZKw$MC>J=AdP1)C*Z#67RGRh->8O
z^Sl4m#f<gH<Dx9J;RMyH7uLIhT_q^v>1fAH+})K<Hd^R@mgctdrW1{jT&vASbj_>5
ziJ2>52Y1rbVHGJuJ%I+AuirmojN~mwfiv>2!l!vUX7A)+;T>uNz$KHr;rA3x*Er{E
zaueHP5FCI&&4euiNBWs3v#Ioo<Fw5deummT-lkmo@yj39nq(}$?~oX%6<P?+fids*
z-5N4b2>UjneP43Tqp=i8=<rH~>qpdD`3!T&FI-2E93#K*2Sq+RDGF+3{nzfK@<S>A
z)*K1!u+CX=@PVQ#A~jAM8hZ5UM^iK^yckgK42SY=4wrC(p<9QCP?O%^oLkwZy~H8(
ze4+B-&RRK||8GNUc4EJ#toq4693i5p+RE6$J*8^`(B{3vp9LM*GX|tId8?%X)zg1+
zo<eV^=1)VLg{__H<o8?vMM^FLAnI(=s7a)7M&na|x;5gbI#m&uKA(j<1-4Ip6i%V&
zK-5ZiKdt!vfGU`N=9NP2RkyNPIyX^eHR@2xWYydEF#DSaTxsrTFxYwr+$%tU%{%0%
zQJnbST3JA0t*HcQH1611XOSOx!aRPC2heKXeb~-mUhCGbV^_8z(CAW>BGrEt{NR;(
z50>JZZd&3_Euh_5xt{~K-I+eNYDjg$e~hT@KtR0AMlB#EflhW(^?M7^s@NIW0Rti$
ztV#OMP9%G*ym=od{jZ{H_Sn@=99XczPH7CCizdNI0t!TGYnyah1?3l7_c1wZqN!34
zDhd^#Od2*_bPLLTvVQkxhQc2;-%L52w4i?|?Cb;r4vGj7u1g^v>}L=xPInH>cU+l$
z!KsM|apq(B!!!!aGOicT<RLo<EToL%TTcpf{a)%y?qW*2>ch|_X0v-<#MPl=|9Ucm
z=_Kvd?FgkTo3GV!C<EP9goNiO|2;Dd#|FCiGp8f+TOIS|W;eJ_lvFFc8p-s_p~JNT
zhO1f*Ic_#Oz>q`yq-#*QF0$ZEPJGN($*qe#Bz*+o4-?$L{6p!7_`CH14XA}4PEE}2
zv;-fMmOCeEs`$^_<k8Gd4B<0Kt^xkyuH@1$K8M@}m~67{iyU2bTIwAAo%T(3<U5nb
z`08SC+%U3F>tPCpG95O_Eq&%5Hu$Ye8k!U@>Z7QZ#6YcrA>~7d)Wjg^X1(5|F(&nT
zi=&u}P^_AW8}dW`-CEJ}j7Rm^hZDSNP0!U7GVHOkFwXXAyJz?Hau*_3_~tE+_c9lR
z(SqZDM(d9nAAq$Ah=l%tv1kgco}V_<-jAc6srf?jvH+yFwNV1Z2Ln>7^uhN6$t%(E
zj`c7Sxv6n-3`dWn5m(a-Zkq#AVyz$ti2n=HGRUwpWv-PAkD(*b|32E_L>q+J_9z6v
z{etFxz}ewA@XXYMIeV-3<bQ#gB`(vi#~e?p#Tpu;!LAouuMfz5n7sp|GLJS@mc&ZZ
zDRT&dO$Ws+@sc$P4esm1>>ZeURi^hZ;?<yC^}BBU)s2AXI>ZDx_rb&cfXKhfwf3*F
z&4O#mQU6xO;r6xL{2(A}X24W?R&O04=u}w2jbxDbkm6y~hkT-=9&O5`{H1^yXwy~K
zV#oxU@(1a#rE>aZgnQ6;02U4!$A0-?$wi>n!WPiP3>IWBDWm=sTU5J)^S@MQ<Zi=k
zdqAfwg+QJS;g7Dq;|_mrtMZ59I2yM*t=y5Fu=cQY6&Zqv`iGx%a_26x(4QgF0S6fj
z>}45ogDs|g_0Y9ZHaD?94Lvnz*^^q7>3_TjaF(vu%i#Rrycc&+y!p37PJ!41+{ftN
zRSa=8zMy9rkg_^Ql$1v09sTp1;uo+?qPE*tzh~16Me8y9OsB~Hr@CcvdLzVa7lZ9!
zN5TYjhpzyo7&&lpxn6KdS!W?m2aI)I_WAGwuo<;lG~A+l({W8c;{6ywvy}lq<M_$w
zaY{Yp+HeY3#^j!#yl#Yc{;O*K#{)JwI@JGE9L-&VxW{1Hb8Vmn&q_&(5M#R>L5t;t
z?MnyjJ&PvupxgJmRxVkAZ1a7be)u|Gsxev}>HJN#^(}Y!pGNM7L9<@Md2-`Qy$4i<
z5;^a<PHwBNJ@kD()faW8Q+?+OnY~>z%BsH?d3K|z_@n{SR6@}n!!u)FYsc0q4X#Oh
zCXk|T;KdrB!-I~ggzf||e}8(gfB_|%5-1$a!uY^MlEa9qwuB?eGZ$43n#Z)a?`z-*
z){FN*xb1@#%UI$dhNR=)ISj*|D1sI=vyYbnB9q$3zyowzJRmF;j4;uzX+C&1;e&-|
zXX5Bi*z9IB55lb_KsY89!A4HvLTd5|hIX1I!(;9l{SU{F!4|gwwz!y+pEkgYQz<2|
zuKjJpRFB!QBSz?-fzcKM`;Zg4eXyGS`ZxpZef4z?tqys^c2_i)c3o)K1I4JCKc1JM
zV<U^iozS}2JqU&-$+&;SuMJ6tz|+QmaPwsguFE|?6}qZL9a`ECYSx7_;MFZ`b!zfy
z?2FD<KW)<cxDX0%kQTW>?B3o)u=zsp!;n9{i3T-v6d(C7ThHqu9mM-n^AK+HY@sr=
z_67O3`yqkM+u>YE9v!1}9?KYTyH!jY(ZqM!ug!g-g%d#JZ;QP7G+(B)zhv`hSWI?}
z2;w!ZiDD~I>xdOd_$w&KOmg!MhmO}aUA7@ou!gxw1B`kRFIe-E6!@35L+G7pB-cN^
zba|^ixc4a$N4(bJDnlo=0&82?zp`C;!@a5cU-Cd<`;h$?3hM^!_65aAo><i(wzQ3K
zen3c{SOxti(1Lz^7=i#t5m4a~lgOoA?rTUFguPk2Nm``n+8pO9ipadINB<)R^!FH+
zQ{t@RTa?z)wsXy7!>a3bDgoAPKZ&n8GL7vJU9ooJ3v@$XD*Jmtck|4FqAhFcPvfR(
z&pb8{5XTm2IN*LX<fSZ#N<9XD{x2uOlS@hK#8nGLgEyB)`prSmk=a1z)}~RruT8+<
z{s_hz)>;n0ubU2UA;-w@5%+8u3e39SyDbQ^Y3#Re7z5Llqdl6}1~ulHsav8C(AHTW
zp;^|bkGKCgu3^!+S+Xe{ejyE;25n{^fzzzPW6^JoUq8?homw0Ht-n}vA^hiJ&6ujy
zj_HEX`o#Q~Uy97}o9j4nr`o<hzDv;iKH8dc3L0-Tl~?})JFE3PpPp!ELa2MZ2ZS%s
z0lMBId<S~!^Y~_?7c7UGID^@>ciKWX4!|Qx>0(eTeX*siCDFqV(Y1z~IH|i2Nf3K*
zSMms$V<&OTGt%FOm@#iR34So-p1w|^V-Q1xh04PN*x`+GqkRb4ePHm9u;Ny8X-9u1
zYd3Phl8fsDSB26}(|w690#5Ve42MblDK3f@oQ2E^lo528bHWzax?BQawwdv)AlZfj
z2TH&~eXe?H;mZNJxKLqd7{T)Zx4YI=9X8xjw%kC?Ga8P)p}+SvXyJfT{x+u##X9EZ
z!;_x485i)-=U=%B?Qje50Lg!P7=navdS$=yu>zdl>-;kmPpv(G`3tR!CM`GqtF9sF
z#V(d55g6#&$%tM2fF6edbDI*(oWw@@D~54af-R}56^uA4=@@rHy9ED>%AeVI67jc#
zDGKyTj+;PNw}4RT6=3+49ymm2em#$tyQcpShP11}S1|$CWfqbL(6&5`_*b6xW`3s`
z@=Sf{01>hRH=>2|#Q`cR#VQHVqju<TJGrye7>@p}CL6XbM{m)s;a*7Y13mVJt{AZM
zy4IIv<ZA~)Zo=a?4hZzQ-o$9KBB$J;sf*x}aMW^4l;%jzlF;)yK1SHLU=xnX!bdj$
z@VPse_89+r^>$46iCFah11aST4r1^sJERG&iv9o=<Y9~uT)xz&kYy`ijp4*Mc|GJp
zXhk1j@Ka<#YSnli#<6OxdR~xXBmc=-wBO`|(R01*{&&(kX<yaawUu*!r>s~Vs?rD^
z8*jACiVM-qirZhObT4k{^EK0e{MrxVO3`r`Goy}T6qc;~U`$eDsUdMk>IJpqkzGzh
zcR~%$A#+5V#}57x>itq8)Ve%K{8w+{FlS&VT;g}J1H2`>$)omOTLI%g^+|lb@~eza
zU*12ZLcR4oBF?z3rcYb7ieowQF6;3bl+!*QZ9p?R-$uK1I^{I<B~;*?;JO36L$Om;
zyYDZTemVMe%k@jG<V%Ztuk3J&GtYiI@y#FY)P3~PxC9*mHz8OqUqw6Z)m?M+p;z~|
z^6|$Vm{Rdq0w;w#7x8SFr<^P-@ZMUlmHhK<jelyGM>u5WS!MlO5ZYyzsdQPaCl4*x
zsFW;K$TD!zn3_Mmv7d+P7<PkpwDqh)<}0h;@j$OH&$~sGPWMbn_%`R+FpD!kq54|`
zvWL<9jGQvB;rmd~uln+S3O!PCV1E43Q$dgE$Gev*_+i%{Kb8dV_Q$34a(lO!`;g;a
z7#n<p3=539ZyYb|ponLm$~>7ccWz^6*OPle_j~+=zSeKW{4O%&`>9cj+2tj4Vb@DL
zgF>Ul9Ks`|>+J1SyB|$H(Hog*K7677=`p^mbJJoM<ict9CSB(hd<eD-iEj1GD{Kf=
z?1!o;842CqyqXk8xPgYjedk~Eo>TV8xZ>Luf7|XtYwG@f_coiWWgYET_CHk;$0iRY
z#Qc-y>OX&8<nV2Z@|m;TQ@J+a(OJx}F-z1dsY#U5C@zi)cab?ZI^o|VPr0w@$r+me
zdsJj$tUUaBp?WfzFZ5wgC0pa;I~96HGm{;LNn&XqT&!>8EQaEGD+RKYkIH<{j~~f)
zKUKbvIdM2lyJOD>tPlr6Nc7;6+Yzye>mJka?EIJ8-Ef6Po{q$AdlSU$@I}A(>1jE6
z?#$DR=lM;I`o@kb4wyMjE<2)L4c_UJdbIBbgJ1cH^F3;3nwRX`U7eSoWlVbEU1ttc
zk5;Lae!Qhts+$?7nAUy#wB-Oj#6(DjopM^|r%=yxzKX{!gy;FYm*meI<(!ji?KWh7
zJcFYeM||%*D0^t2?=gSO(+^6dFSlK8CF~)+EBpPFwPim@dCMa893ye)(Ma~;0XS#!
zwwX`@yx%|2i$5+XOk*Z4?q&z(nG%z79<xFS?GxUR2RWOus}hnSJwM=4q6GE44G;sv
zUj^LRy@?)$(QlKcIjN38eyTq6mT97w*{BrW288K~9*RF#SCgeXlQ{k3J}-+*PkYcH
zGf~}Vf?;}Ag@TmZ#aMDT|Dd9Ie{T#rB|Xo{*(4dMw2Lt|N#d*VYZD>l(fUBNG=|g_
zd2iIQ_57}XzYbHpme`{&AK9ip`U1y^K=jb482k9Li}1t$Bi7{FnxRCN5CHUl|9z}U
zHeBj|cC3k;o5H2g)2;!B&Rsfu?&3NBiwFI@LN6V5I~XkMeaZjAd8a_1)4qW|u4i4H
z<eXfB++|$+&dCIv^FI53@)Z5A%v1EASMbo|Opf`sZj~o_uxvPKzqKdqfB2v<IC94)
z<}OBA&5w+OkL_#UH<kGB|1<8|41JXw<&^kx-hJIaBzpXU$6bXUSr6NSgkw8N-G?H+
z_raN=vs0J8AJ$Q~o$uSIV!UCzlXUt<w+G0Y`1I_ky5p!#?WC2Gzmt4~)0o_~$U24v
zEEs>h`6YfV%v#CzU1+$hAp673Et`*VXCInoX5dY})i$EdPXy1aM&?}-*jh5hszgj2
z>pGm&dZ?jk{+uJ<+b_%6BMqZ#8R9=7<|-LB-Ye(7zLs{AisZsljI98hv7q0%J)&^P
z^v9<QHaDFb8ng7D@wDJ^RZ{25Dt@ms$D%Zgmr{2zG#|qdn>fXTqm3D8TQ46u=xmy9
z{BFq2Wt3%U=ePoO<t3ghU+PAJM`H3*?+MIRkJdN7*wSqJzp#YLP>gmyUucI&^X-%)
z@!d)iJ(tA-IWv;In-w&Rzpg-9q0*$U$~GVi70T%T>}0b{1arzxWHJKp&du^M1{|nv
zK=|z)?RFn;Y<IDJ`BH^h&wHl$0NL<uS70d9<F!lF)lG*-SHR}AF?TdYh5dD>Y4cAt
z!hSQSh8NLw21Ddgl>nl{qesZA;wJyY=yiVN&tCkRnzDeBp4Mq>8y;gm5-D|fL_PM1
z+1Gt_O$*x}SGOOSPI#OOPL4rOq<e7}6>5BSQ@q43_oP#vVme_^9dT=VwLSkCj@WbV
zB9xUXv>?A<51e#wf8rb|wJ?(yLF~D7kwHjD?HF?8n3ki2dDcay0OQthv9C?%OOBth
z&e#1RF13Z4l8_qEdKd38ve5DMf?OARb^@rrIj*U7<jwI&T!ds&@YY)6q>~D2>i>TK
zF#4$er5SqRf$RH5T_4JN{Vd*$S-fI1IT`XfcB_~p*ZB4o^gwU0QW@iod&SC{9bVhC
zn`JkOf012K3%oJ2(^%@wdEPH)jJCe3+~*aDzFX)HPNsTnO)v3~9z?|E5C4h-57bHl
z_x$;9;)gYiKU#mA%g=^%us%GlR%Pp|h>v#<wrB2Sr`}*1_bu?>5l5^gY6U4quKTqf
z^6hq~q1eXc=YT!i9ml<W3Z#OW@dkdMkirjF8<(byKOB8n^_c^4mHF7Pn|$N9=OU?^
zd?z}i1epo8e#L~a3^%rPPv~rGjVGkJoV}w3iWyx>QnSX7twO!r;zdVa@2o9E%kG3^
ziTgdRGf+o{n0X^YxZ+davHspI7=iZr7<Ki#X%Ry-#yN0!57oaHo_V*Fk^@9g<)Ju~
zoG!h<a0@xu=b8N2;OfZ6<ts;4pA$%|FMNp3Yj>q4Sf$?ATd5h1{^SJ>rD$K!e*--~
zbn($>x%}MFMa6J&c<WKZ1SuEt_RivEo}DMJF0B1xx~_jP>V2+rDJ2_fD4cU{X|a2p
zrCd_W9=RyFFmfw=%`i`xG(61)F8e+s`&wUciVzb2bhlgl{Y9}hL4cE~wMe;c_n5|S
zX$juXi8}w&g6Zq#Z*MNOCOn}ftHHrFZ`u2)P>QbCo%p|PXm86{p_*LU*tEx)_?c*W
z*sEYAmmlnE`t~NGH6fVqvg{jwS*NBWwhPZrX1ld~v3vZE-*WBMNW4e;m^}CQ{sZ3o
za!%Fj8RMwaT62K*QpV~xtJK#stEaM_S-$E-M*a*cNeV<_=L}#u3XvqIcM~gVmRd(R
z5!UJ$MB0O2t4QX<^K<)|!=mn^^9wdv3+><6*C#yJAYz;orW=GmUkW^R(putAnK#D|
zNY4E@jUnLRg7&9|2HPy>=d`hUZIY?n^FDiah8-}3{l<Y{X>>RaKcs8Sr$6<IycHZQ
zM2Z;Cy>L5{L1?7DKE(R5D7-pZYlRw)u&=HaDp~X`h2CP2p&7+RP`U5qT>ZY9lpY++
zb0zL~F$YSf*5>wptv9l5@mH8K>=WwG*$BgZSa*xfWR_9U{kKch%sN(EzXZAna8&MP
z7Pu~a);?4@{EhF=(=fvy;$;Hdr%;B4JZ-Eo2g2In?~_l=AL5`C+KJZ(+K<ghBr`5#
ze`dh(;1Je!80VXCiEKIzjJzNidB<SnncPQ<GeIRXf1hf!u*R@JRbheV!o!;1MZOga
zKH>j94O0FP??FL^r#iuinMcbpZQzCd=c(KKA7VB#5QBAhUb2!VB1Ec+`{!v&2_`O*
zheh;jB3T!xzJ|H$L#$mk3pBD13JtDwHZPer>}^vVm>T9F{_{K9MF%@4BwqT^-m_)S
z+##0haI`C`JSM9$>7pcQ#N5FVc@=*x!CVG>GZ$)e5hTD}sFGg$!Jv(uBm7fpoA4r#
zmYp~KTlG>@$q#dfD63TWwj58hz$sne?9;!2l~Fksm^W?vwP7Z<u^C4d=}j+sD;VP}
zSbha=<&-F9<eKUKAEGD>!Ri%@VVom`NXMpkQ^V?v8qn@gNT>Dy{{K_fvEH0l0Yi@h
zX|;!JAz<TuU|_hTkAwPo8X_L&*YSBsAEm+b$hC<wYv-2Ct8LI#ynryuPXVI~WSPPk
z@11UW1XhGm<<)TamRSh43vMaWpk=#@d?pt7Fld1?m}uFn#UXp24)7{A0qf!z=LcP6
z<ro3Pq<9#-iTMfx4Y81cBi9OB-6!&Z7>QeEO*s}G)i>~%gg41f>?!nUd8L(M?I%KF
zFQ?TgSoEnF3K|d)Ap#;?RMzKNlx9F#O!D}-5n~p3p{km86bzVHmv7t+pJ|KxXV@&h
zGo?GuUwWZI>G_5iK+?8k`qL%P+3FE;R<Ro-dl<R<Ar-FWy3Ob1tGq|C#;0VkN`iOd
z8k<98gh@Y(6fhifGhnU4EbyRMR8n6@=Ep?FR5f(>VNw()aboe?t>%)gs?9=Wi@wyI
z$387lisY=};em6|&ZgoMc5APq$DLkj)9l(lFk%l`WE2&*KdQB3h78R*m4zwjD`W~f
z2aktXUh0D~Y#0*mz>z-!eTt(Vq6^edE)w2)kx@B{ahB6SggEp|-M)G(2S1DKPsUM&
zg-AxQy^pXiFQ|s|Cd0gQBX(Vj;v?y=hpCYwCJ*AX8k)_d`5`q<M8CN@jA(&tojqx%
zr4F+YU{%D!#ASem%bJ(E#iFs7s&V^uyCnYIrTqxGNUPE~u$KusUz82awvlbF;IkMh
z146cb*KpL**(?NM;}Y2Dx+Sgh(;#w~yn*{$eZ!qSl{B;GBaB4TQH*m&C__1Wn;$2m
zvmWhwsc{8uW$!hxcj^kHHs<Nq2@k&S*$EM>23YuszXp8HGC~a!vpm{ZpZ%x>gDbt&
zxx%CYI-afN5*ctZDg^i~hIV%^yR+btuOfS?%a?bf9-zHi3hUs^x5fU~%ZKUg9x)4y
zm^gRxdbw%m6X*1%YTDB8vmPzS=Tsjs%JM(~0S8FZ7{VnyUBit)gI?sYuC?5Cq+g>8
z793+CU8tWPAm6*BjiW|@*5q;v;J1gsMBUn2Wu+*XabD^eef5rq7v(of7KTcETL!>(
zdc)k0B6n;MB+#65R_9b0cla4FoG`;pjiHzEYSC_en-mi@NZv}A=^>whN*)}E!3i0h
z(Kibe-Cj6cn$_uwt!=!H>XJ@8SN9^oR`uYrxx-1bP;~xR+tZI%g+H>A7W`Q$f?mE(
z`^>waK8BsZp~dR5P;5v%x{NQG1v}yanUp)PDBx#}dzUF1v|&gj9Xt+Wx`&)J>{aX-
zGs~O)T6WN1L#2_uw!Zl|n6{qdE4JRV3c-p=j^w5i@f_4dX%%xLciROaQb{zN(mmt}
zx`us_h1z)W$6n$`W?~KzRi2&%0&a#?(Ds9A7OFG@bbhV{LlH-HCH7jwRz4lw>Kasy
zo=48Z+vinJ;a}E5u#rln5*g9~V>kuJaYjGo{^`p-5?IIDMmB11b{DzRd>+ir$_Y{f
z6BEJSNhQ1h6UDd19f?`FLN_pSw=<B0VMI!_B97W^K1fb4Rr~Y^{q_zrzdsR_>_c^#
zVW`8l3lPgJfQBqPLD1=z&Cw=w%%WTva6H#CLN`DGf`AE;R-6r;&kF#-F>Q!R-@Y4Y
zvq~CQm0fEyGwpYhIjZ~)+8wL~VBaHP3~q7*NknZaT;NfKj7nGYJ|oC}d9sUK|B)RS
zC;`{GHyGMuKHG($XCtr3=j2IBP97}>wZYMNW+H6BaMejkkgMO>X1um~VTE)*i##*b
zqpFQ<(l$Yv{t#k?Y38PnU>zY$j4RT*jl5F?*7WxSSW<cb8IPgeahbu$gao>Jw74@v
z_Iq|Cc5&MJ5k6En6H`WhmRZYXNyd8#6vv{q>C}{u{O@n;ta%}dk^RR_p3)4#mT>)j
zw5o#W&tSby3}Jx5&xnAKFrN|qHtIseirIlTOOY~ZBc0^Nb9^JhmzYVj;*dx%vg=;K
z<(<du&Qg0IgHNC?v+SWRG&%9$0lHfUGzz~(mM2UDl};3ditj{~GhMfkUQ;lZ0S#}+
zNU-A5QV1BNL#hUk0@*5Ocbt54?ugQPO$E^{?{`X-ie?{gGPvV76SrBkM+}eM#HgEn
z@MI8fYxTS=%9mAW@M18#(EyTgJ8=`dNlz(g=Vx3nktr5zYC?6Xvo%V0r#H*aTL=FN
zTsAyr--`KesE@rYWK!X5>D;pIV>61MeSiB!Tm&&QWDhBKA89*!2~Af}-WACEt3?FW
z1N22udwr6jhD!Djy?zad#hM3^Rz@FLdF*?}u1;Mmd=><sS|?@Wh#?{)46K;h-Be@g
zG>rjrx^d?}28n@F8OjyeLm%7wEMT~_@54u#wBBl(2+)$glY|e?J_7kE%DU^!;iw9&
z8lTDj5O-fs7ukd<5ioFyl2A~C$oV}yb_=1;qS1`+hdeyqK$TAdj@SvNMiDgKTT0D&
zh@X(8N(NH#*b@8r1epCq9=5%&DBX|n2ZVBG1|aecpT$BOlUd7$STx>DAq|2+Y^D|D
zXK_B6vHZ?{JHJCDN3mZ(<RIWIgGx`g)VJN0fi;5{Je>n9*KZXUxPz!(a{FG=NxWea
zFs!EGNXa!cDUfS|P7xvvOCYH~O8Ko94v?PVrK{m-jkfWz(B*J>5_icNVFD>4R=tfp
z2F{;ti3d+rux{HIN`VeGi33sl{_tUjltZX4o3Wpu`X(dA?1Q+S9CD@~69)F$`LU2f
zs}6z2v7&t_KURV|7M5QSEA1G*0ZX|4)cLM^%i%v7dO>}JyaA>BKp3n*xfog!>?-b@
zf|l+{?WXpcUK#2jPnp>INePj}b|Gr>@8VfJH5jP!Sg`^8Z137xyZ{Q;*C96IM}AVJ
zB#9fEJ-!<pu~RO0W=6~+)6TSP&Wm94LWf7IX_nIh#GgmuFTTnkmkC_1%M&d+WYJeH
z&0_H!v6YKPf~mV`1$H7IngD@1d<nRY?0OtnidHoX>=<*m0jPZ>x!lhu_(-l;A}2`M
z+)H||`oPH-G4Vqiy8_v(T5*%kvl5>4lmOQcfUJH)k#u`{rl%fQo-8e_!ypRI+`>YY
zUf$sKkaHM#j+|mA`W7A7r}j*(<RPPtTzdr#kfKCE#-2I51!m$jz(h1y2f7{KH;#2@
z(gMD$ghpXfw|l_|qWa^!ZTYPydq6zev=oPc_0pz1z3jfotYj!R{FRRzoV8^k<=TOJ
zTCbPB@0<{`=ugU@{@BOY(_<f=v0tV1ZUIw$gY*%z;A7y6xucqcinNp4Oktf4-y_E+
zZj#$QQT}QFpGXipxNxl?0;4xR8g94!@YgwwidO|^-h}MCeh#$Bo2{z9k;k>P{Imu;
z1*!Qrb3)AmnN~|j5K7a?&%PQ~o`NYpm82eq&KV>b*ufWEEkoX3`rfry@uvC*WeCWz
zK?|&b>MXJjcF}F|lh3sKxo)Efi!y0w2*z;ev)9O!^T6OH$c+a#=cM8EZS<*<-f@)Q
za9}fzxG<vz&gFn=_Q4qR;Ny(p-#8*4gWOy4aKsHGtPe9~$j%8Lu5FDfmj&%*P`^Pt
zIHCqe09r~`I13U#vXd-gfhF2BCpAofG|mgnwvyZQpWsWTHCUX<=x!q*`}806$YDqk
zK)i;%PV4vf#cKlKUa3E{bnylw43C@e(FoY}h~gj}aNX0!4-GP{<=UZzd0Q|bYa@s7
z0JjTMkp_`is_k?yxdMo60c+i6h~Ur5K}5;vElbz#g4dKzm9!HeU}NAgIE9kaQb$^!
zhzHNRg{8202x7S|hRDg#_13%-Z+M#S=WviAL%CQqOw~@_;(QA&u;<nj#X*QLHi_=B
zvcgCQe0PJ75ukkvuC6?}{Nyj0eLOHyyN<yzk#8;bl5z!z`&aOYE~T0e_=Y3pIzps2
za8nh$768X^#Cu-t#Yt_EywrDMBV!#k&g}P9z^b$gA5}`m`m8iWv<4y=nxGKInV64w
zJq>vXXE70kG0tay*vWMux{d`yxi<KB;oz7EX&gt)00c>>Yp+8zj#>-?igrUKC6O{J
z?9@HjBu3m`6D5)q)~$`s>r|($93q5;P>3K5Fm~ykJyqn&bV-Sn{#z2;1c(zf9JMMN
zNkD^BPnigfIO1<t(D~F^{8<9}7J(#$&2ziQL;Cvh1v8a|meMw6Tu6rBszby)AfgP)
zuTit1cW}-T)u}*f6&6Zn;U3V=M#>cgTJL}LE}A=}*CB|Pfm_jgbB7q~N!Oys=GY_%
zp3k)_kus7+up`LwMs&9|D64W_OY-<d#_GD<$59i3h(37p;sg|sKb^4_wR!f#BNs1;
zcJet^Y!a%g!@LF`j-i<CwSsn~iM!5@i++Ov%m#8*!Ex8q!1XM+X$MVq-hQzW4adz(
z@49QvM(U7Go3e+&9u9(~tr@)#1RG>XA-W6%xJ^&95Dg5i!1VHGgh37lo)lHII=SQR
z*(kTN87R+8zn|UDMZAfmyiYq;gdhm<A|^X{XV+w(1r;4|G?<fz%wVInTxsqX@!@l!
zn2CvnD1KSq!tC5Yz~LV}k3yaDG%Suh^wc!gSjR`Xsc+Y0$Q!=E19C*X=ckQtj8x5A
zgKs2j-}N|%?SYre-M#Lo`B^DPG;TdkGCTCi&_rJh>gi5C2ei%y7gglam%7hlI3Q;q
z>w<9XWh3XC=x$-GTe}Rw?1z~m_7khcMXbU88d6_2V?f?C-$Z<|wsip>d^`=>y+Kd<
zRgf~wPE>){>^GmH9ETWP=bj=7OppgJ`)`scs7rq{hpdKDbdZxn=PxS@m)v0^*w5}F
z2C0+A^Fhg(7HJkj%-btqx}+-{oV$%yD34JjiL{X=ksrFDTw}eXKw~?o#1`CCB$WrM
zpoyFiWs8C!<;s&-N_M2c_xLK%bv~P&GAc`nRRK3ufU-<lB}13%n!B`$Nz&L&ZLqx0
zUJpc}scP8AY&6fqER<3~K!^dMctZm=(o6D>A{$^ESpkJNphuaA7iGcDMToo6f}Oe#
z5yl{AvW1xZF3&}zHKM^yK2UTP)n&1pbnWoHrpHhZ$5Rmd&=w_EA|<`c64Q=I@qvlq
z`1$?U-&fK0fgMV+AcTo3li39=1*nsPSS?YM_PV8a#h^#(GRRGaYgYt^Uhp6>wkb!z
zrwZqa#Q%%EH;<<Bdmq2|eFhH4aFBx}2PI=6LZ*`>LMWLtWu8@Jc6XEvg_I)Xlqt$Q
zCUH)ac_^fkoJi)9IpcGCe?IH^{GMlhzJET?`u*{<mc=^fzW3hubzS?~*WUZJulqdk
zu`>tUcPddLuouuj0<%Ge=eog>N(XB;QuX`uK;H{&SEXk=)78M12rM#$BAcVAcUUlU
z9cA)upoe*e4H#vcj)~GK8eozGj*+-z>zURFk;D)xA0wA520kx<Yaxf9v!mQE?#A>4
zaeZcj7Yl$)nL|NI1Teaud>mL^0VT33Oyr>&)70KF>~X+uz84NU*<H)<25~k6CqT*#
z;GWnh4ljNNKPSHfU8}OLC2_c!*np<Wp2o<Lti1YcJ{l}RX4~sv>OnmqXLw=C^!5|?
zaFSl|!Cb^=7du5|(|m#6cdi(Kh&>z2U@a>EdZN%i2<Rhjy%qR+t|Y$(*1Z#mJ945U
zu~jY;{No1nRrMzUE^9f>Y+}LK3;&G5kp@9B&CnK2mDHGbMpTb9oA35CsNzk7NbHvW
zyr5mi(q{vi#O#6Z(e?q4OF%&VG-l3Z1=Hg?f+J6%^>*8o*%|+g!jq>U+<M99Pz>Dj
zRp+y6LHRPsO-BZFO)fGDszUTtwLM<s1}?~cnmk_&Rc+q^@IEvd{xAuAk?h<b4|P(E
zJW+5Ij*1Y=m+|DRhd9zSD>+Q>hYn~r^C&u~KnqDZy%TgII}#bcxW^axfyt%IfaK+e
zs8Zq1M;fKw%&n+oQq2xeS|y_=%-WT}1D=riXlbbLMmCyMxgG#y!Vgf)vaaZG4i`c&
z3z1FpHb^-F6qLV;z_~}^lSISwAbl!m;<a(DLq@t1Y{Pq(igfKP94QcTJ_)pG@zAv<
zCxEOagBB@(lQb6yCBaV%>rYo9(Tle*xd*cg!W9{v>}DchD1b8LY~{ZPsphLB{4_nK
z1d~h?CqR9Zg@_^boU6hrqm#4nRL5sA*o^JRvca6>kAkq9r9Ug2%LQM{WFkFhA`@9i
zlXxUhD&d8zzMGxjL+dxQ4fT|Iw;gnEdlwukb<l1kR7wg*&HB~$>`+1FNWw+?U*l0J
zsON@-TSlGZ;isgF3f?>pT9dBK`cm5Vw3YeOJHxm8jeoX!yrf;W3zCv0802k3V0-3|
z2cVnTN}ZpvFc!&gvrN7IHL)$i^!&l=fmTTE0Dc}IRyBy4GIx85b!Kddp-B@9sWtH3
zFWu8suwgYU*X}<MCrb)kgZC9;`?3Rjkkki(M!k#3{HEUXhfg=<SU5yN5^@~{Yte}%
zK=E23Cz|NpepLsOh+kd?uL|p1t|*<eumN$*q#<<j8b~<|6#KU=!BbnDN6=yITMa&v
z!Za5VCh{3J(vvN3U_~ImB;tXdz6`ufI0e}Hj4C2o$>NvsAYH_dhwQ$*T&f2IP{GgK
z@%abgDjPtT<$eJ^_<)_srrVL@ptc&-bLP?|kd96M($yyp`w#DeZnE0!zw|Jzn4$?e
z@5EFlXGanK+O>rXeuM7mG^oOg!L2Eav1o*Ku2PbPs??PFixsLlN###@p@}E~ZLnL9
zi?;7CaRzdi(!!A3ok(yM5f1WmE#Lwba&W$f9~0F&uLhez`&)kqW;1VOCKYl}w~;xh
zq3m`ZTCbETc}oFqEI|{hYK}@l(mJS}$@VhM7U;9W9USh7(AO%5D8)RUXrM3%b$+}B
zoIeAUa8;hv@wd>#%H|o+C)<JqI;?QLUkWF6Qe6zTO~fX=DrBaz2eOeQnUk&X`9F4n
zz}Feh^uC$1cJe1daX9$QO7`UIM)kD5)`ZQz>Yivl2<IQRM3XlM<YBhG1!q+b!hP7}
zKz0Xq)T1Df`zz#r5Ku7r{LL>2Lv8Elf*qm=Oj!p`O#?l3a7=(1I3Fcodd&51`?8V(
zpsEO>_@MTXr~;ZK<_N5CWS{E?VQ(Jt;}vTxIaC1-;`^e%2ecYNG6&?G=^b~=-_e<S
zj(7#VPsE@=3I@cTwuAI8AG8I9iYk8wgj+T>;rcE#*t$K1h*^&tl8K(v1gHZfKn@az
z*U}IXz)C2Ba|oWi{#KHyr#0S_s~%gHNtR$WyfvZCb%XQjAT~J<;4&J5L8obZXdra$
zxjobp4(K0`_~mDFv6CvjBwlS~7NBvgvu+^w9N4!TF@<E+>RB^3Ri++r+WVz0z&!}!
zBmd#MZiPA?!TthI!d}17hK4$JRXK2y2emywVCyW({iwVbI3a0W+J;UJ1`p(4Kg5QO
zrpki;N1KI1lUaYk)N48LfdH2i+1{yNK_}nksY4NtNbOcO>Cw6B0GVBI0@TExklq=n
zPxdFWgme_%hZK(OfO__{&w{E{Q}GC0O+bo6C3~ZAr?Xn7kO#8@f$<0=_dyjX3{a4P
zi4C+I0cKIt`H^U{<v~JnGWPJe3L1PVjYd<aj>_?Coi7I0ijT#SEt+oziNI7@1@K_F
z=3Wg@T#|AOfSk*m7(a_*_-)WQ1r7!L1FO`qrp>GC3y^aVpERJWUc^%klhA}3$3aj*
zf^~##u6}`V8PV#Strv6G{FUH0kVy%?p29>PG;~K0Ma8E#z%~2GcZ(L7XV7l-KLgpD
zAlcb*8QhJcx5MF2wJL=$Cc;v{q_UDJS^iz7%p0Khi<u;iHbLdG8YsKctlypz0sZ3-
zw9upl$js6T_*{uW@g*=Pmq2Fe?}38LdY^q~jg=?+`LQ_#D%Qj;!xcRFd)UHd#uSMo
zF21Zkdbbc+nks3Lhs(aEyH0MN1Atj{hcofMy$8ghseG2Ezh*WF<TAq{G*j?Y*2LM`
z4k#Jo+#j!sBf&#sHc)}n10$od2r%|V5l8)g%NK=Ph_Jn{=E+2w5!tWLg%%{==K-Ya
zFGC7a-Y8rL3VdXzQO_ed2?M64V@D4?-3@~ZC7AYO@igTsZO!b8$R5C3B?zVnF<K^x
zrw=M27(TnDa<hJ*Y8|`Ob0IkL)*gLg;a=4<5$xwIn9)NAcs@tINI%(7<aR!$PX>>L
zE*HhWa{r+5eMSGEHW<2G;HZi+*>=g;!%1Emdqku3o2nRnBElpKGodkIc^ehL%}iFA
z5OL=HdFbxlq8MPE^Od{f1xm+)vwt{*nam2Rgh(%++n4t(J3V=wU7~E+y%(NiEn@2F
zthf2~>)Ua!i7b;VMu0t#MU+5}9@tGjds7pxh<zg11DUwBF`4CYcO|lmNuA72kvU@k
zk{X3h=P8he&R8<{H&yk&+8h5lGgP>)pRN6D-z}x{!|~zIXWx7*4^FKv(x{#}=d}yI
zI;%ase$~T)eQNKGVRwb~6JLM&C3TurGx;CL_?h8z-}du|tKdtg`T3G8?LShlrRmWl
zmmkDg7Hfwx^K^{{CDUA)`LD^Tex*hB22ln^OJ(5~M$|`!mc@CeSL)EEKjG7p_kW4Q
zQK4s>LSnTZoEq~{vl~0+Bs#m#uOaBbaz@P*`;VvG@UMpROf(^s?8T3M>1t)HkUOiy
zgvBEvY=R_L;nCq0DPHsaEgZ0$TOJ48)o@<)8MenKt?It@4|3G+x%Tm(QP#32KS@ut
z`=OpFN5x)nbUdunl2@)E26bCVrog~#|M-)Hb68rx^g?=s49|mSYHvs<jUvz1{+%QV
zx#Y3JPxX(dt=N_g4<~rdPgQlDd#o;_chahm+gZs6@$0KH+-lM?)5w-=TU!Xo$G6v?
zOHQn~n1~%``PaW6JP8!-w}r@hTCbc$U!iqYtnQ=JsZo*~|K?bhE=f&tbF|k)^XxnP
zMdhCE-*9Q?yp3QcC4tqW<Wu{E@+7pPv+k=m1qUWey%jWTr3MoQIY@f0Ro|6TDkOSU
z471DSq!(5t)gDf&wXxbT>%}@hzI(TnMVmE#08@CT!7(+H7(VIK+%K&Ez-~dW?Qv|i
zR(1txKKR`R>GhQq-WrZ%LaUCXq&-h=Zm`i#9eq=;^gg^3y_3V9A~35abFA&LyRro9
zW2l2ep^$$XNZ!7D_wl^au~Yvl|5))s_5)s-KFJO4zi;2aXnJ>Y>EX$(JejsO_0!h`
zjr0koj?*CSw)aXgHQeY*Rc>%UUy<$~rs{fC@pG>$3RzNkZ<Tf#JlWS)b@{ed!wa)}
zsehMJ&X;VE9>4ksaf?|2e4B+*j?3Gp;Mti5kyIw@wN@A2n!YtdDWH<jao5F#|9;|<
zrFlmxBqM3xA0aJmhjq9$!d_G+nHBQ)u2M(#+Z9jCvW}A>$$9SU<&4MksaBFQc0Tmn
zy5QGR(}o-h=o9CAt%jx+4hn0@<elNxA-Xvxvqlq~fQ+=gYQB_=o!s6-GU@E8Yz3Ws
zRA+z90QONu-V=Z4tND^7Se&eBDJ0(0uhS&1k4ZP-ufLVPbS5WQ+3ccrK<3-;=TtOQ
z?>>y(YKWP?G&20>aKt@Rx2?E|yg2?>*p!Q+)+cwweoeaeAGyDHv|%81$8)G)9<O+u
z@BT>s2ZMm&EL2=lZqBaM(oWXaLw16>LwPFy6@BW{P~uphoZo%U>CG&4L60eXn&Z@z
z#?u0+nxzn-XJsF?hnJ6Re9!)!xtn{*u(NsJ&B?Nvn!<%NtkP86$d!w+C#{-SXup4?
zjdcp5>*9`AROBX={??hf#2B56F#6@%`>f^;Q9XTSY%-Xq>Aa5mR;&>z-fOLEUc4h<
zPyY9%2;+rU8Q~w-Wi7ZGVlM~qF`i|kg_~D?_=@}T?iwuABsCfPZEy=FmC7Y36LMFi
zO_O%{#bIFkB{TLW`X}|UuKhx31q)$eV~0PD)C?c`b3|<9<7r;g=VhQ*^VEj;6fge-
zT|xv+a=W%5|HsYaM-ChJ?f2g_n-p!17{M&ccZeII$AFf4r?=QP!Pz3%jBN>X9lEB>
zY9Rd)G<HVY6^ZEqcyy$U#~V6utT66?vN>q%)-*FqVnwf-Ct3OX)WFif<qHn{@G~WJ
zQg7anCAC@L$e$+!fQzsRq*B<-kE~1maZbdVXeH&0ItmlUrqvFj&k55)1Q?OJfz{fY
z=bk{A90o7k?(Q5KbwBo}Vuy_286M7)bP40^yx|&@NoH;DfvLU_GCN6yQ*Wd5+lJZq
z@uhR1(Pe=14bM2ltj-yG%Jf}o^6^LLoX7nrqBk)8Q#5S<`i0|vfT=0WCfcrm^;q%a
zp?}hV{jW*CKDWCceklRK&hP&WVp9Kq05MfnJly5Ie2!dna#mFdaq^W{3U+c;J$y0P
z@qYj@FJ1P#=<<J1%wLpWcftQ2C?-A>K{2m4`ywbNhf)mkHbl{R-4lCR1G=sZ3W~DD
zMybTULs9=@m;W8gJZF7Ld5`yIc(ZS&*46TNn#ZF}N<Z}78s03<_T4hf_EV<I2{&8S
z8e3(=ght2sPAor9SIry+3oNkPps7S@<AP`AaB9`q%Hr(1M&Y;Se;-fRzl~jgo1EU6
zs3FK}<=InvXz<-5H>;mM2`v>j9}g+_wVM8ZU*+)HU-0NX>-=cM<96mSd<lJq!y(q=
z3B5hCn8eYtx!QatA2qc9OhMy1M{fs{d3s*Pfh`W!yaakPDU*MHf<WnZG{#@VUEuke
zhmhob!_BpiDOcIkyga{ERLn}l_V@f;dz+KmUKLq>s}C7BS@KdcW9nX882hAGL^OKc
zP&eT=)TLaZI_jPa6oD04SN_6jX}RTC;kNe$qa%A8{9lKB0M6DogRwXLHs)F%%7o#l
zEeakBCw853--=8lIuPynqq}e|mA960btn}>L-lqJ*!rFeM{G2yt*0tWyX+F<w|e)8
zkUaB`JB@)a9-zB~Bsv%ba=MH4do|m6-Ipd#sOBx<cd48UGQq#rx);+2Do3x21rj@q
z55`Q2-76oM<$y)o3#JRke(-lwOk)}aHN4$3>I3)36r(vR8&nix4Fa+Q6hA_rb?<Rc
zcTWc~BW2S9$!2wp!B*&{<TNa2a19)Ks`uvf{{JV5`((J+K_+Zzu>VRxE6a7Mr;aZh
z8f7<(hi{`lB_#ZkFthqIc(lgr_vV!s+fRCjPdtkE_~Kjs^^9QX#(ME)oekUdww$Df
z*6=$&Ux<C<rbx+ZE*oiru!jAZbGGYXIe1&8s3Aypb@jG}gxTKo10p1-YP0tEBMx2z
zhP!N?KR~iH96Gv{^zKQ%NN000{{8e}sr<Nzu!Jn&H5?q#aEo{6o7rZ<{gF>R#*N{M
z=jFcIImebR8ps!Uv>bXXA+&wp$*ebdlRsRM%j^04NMk^1_5sh&_dopEj+D^VU`I&K
zkFKT*Yv-Hn!svJZq##GL{ceWtu6SC?M2uqK)CLsyO5XpI5`_nkeN)5Kvd|9i47PBj
zwiGmDE%#$cCgXy4+ojefEbs~_zHjNT9Ch+m)mWyp!*+LjdR&)%K5{YRrTmmfOUb)K
zYD3Ad2N$hMf31vO{Prjyefpnbf8GD1Q`b1yrQ4Thv5=z0a_=lcaL#+Y$Un-iF8^oo
zq=U!b-$`i81h1E`DF>F_#NOaqm^Ixnmk<7J#zPItJI|1shAwHB*?4s6aMT~i1C292
z<0(-M)_@TB^y7HP(uQbLJxV!_Z`$A8em;p06&q?M3y|`Z{OEUGpQu+7Xkiyf@IB=E
zRDD)jv`xv6zq9^}E#EZ<Mh_8ad~v5xo3*y(FP{CdcTsrw(n()4e*gKM0wT6xtN~c@
zd(Iu@@oMWs(!swH_b!XTEAO6Q$iHPR2JKtE-{{!-lCxnjI8*ww<z#v8Q!Fq|N0t;{
zjJ2&Eu2|-48fdEO><C?-{){6{RqTSdY)Wdh3hPj=T5FW;JfC}BKclq%oB$u4vYVXg
z-)u_mL5W%GYfxsV0S)JnAuk2_r$)5%u7@QIUCBV7!f(wj?cTbPSp9o&3Vd)-_3?zr
zX5v=hQ>`t1jW52oH1x?GLZicL=&JyPuz9ij08$_0^#><UciGov`|QL1R?N85Z@qi+
zhJrkB@qy=~Z~UHD5Fd}(e{ucPhBW^laqkBRty<l%K6XLu)BTYj)kkYMR^JYmn{dr{
z(jO90tD+)sK+#*xs20jJ7h+3nn4U9;?I^@Xh;c(Y8sZo^yXsGFy+m(hJMIPv5f&N9
zRs)h$bPvTei50qOA?q6;@^0(4F8;`MK#aQzVv4Xp&@9642602G|4J?wEx3P#=uQ{-
z;)sW2xX}>XIXpP>WU3*Nifua8FXVx2^;OrMXeZ79OM?PY_yn>@_Q(^WE&teLn#s||
zN2U^J4%NUx)|YGVD4=ERcG}kGuVP^OKUm-xOF@}PZG*iz#0K+OD0!m@n=wqSeQ0+J
zXqu=tu#!gwM7w&QzNh&4>G8wWmpzY?-krUhSzsXs*DC*T0S`DUAI^*iJ;G`sSGQ7T
zZy;zW4D3u4NXwPi@QB6OP_am&)-(c*TOMh}BkX;GwSSpH_B9wy>YdmB8`jUsJXc=7
ztpcyDv(W;3M<a4JpZVvaCN_-Zs~9#ipZ1O{)@x)$4N&^E6~ij37ZyD+WhTc7WXS-@
zM2*j1LPC|gAiN|m&H9?M*xepk@QYAqZZy-0bD($zB(%w>u+yxM@<K9Ph}6vSpyogo
z!$Abze+@7phUpc6uW~R}J98b}i@o~KCxbjl>yWl;gXn$~TwRB?E-Mf!)CLA`$p3sY
z%Oa~{iF05Pf$4~Vt-qpVKlLV>Aq6^ZFu?_*V>ZCsxXF=T%YOuAsojKPuw!Zf$-3;o
zJ1$u9J~kW4=7#_|8i*v0jtmsukX6CZz$2`(G)B%+7Q_-~;;s_I?ZYuWJZR{dSY#G!
z4I}tY0+^e60}uo^mAOZx<C!4TA+U|y`HQgag3!(?wm7OFa`nE*EGaMgH!mO8A$R(f
zx1~r1o-(9&%YI5kU=lB+$izfo&eL@I5tbRTA(4Mq=*@f*->9UCa%UbV|7Fnuez)uk
z4qDCyqLjhPL+%JRM(R`#CF5K%u-hF_dRkz#4+U%a(2b$s#>3;F@hydmT+4>C)ZaLI
z?gK^A+TZBUG=c~|BO)kA(1jfAFuyQ#`ND4$vVv<fI#6h`5+CsVETD6e5VJk`Py6Ps
z$gUm(?<udZgL)SN?bOHs!ZH3wKN*#boWavQ6eAHB>$Hbm2}dm?0`JpwJBuW280BAr
zv;70JT~OvY{n*}a(P{*FBjF2|i#BEBOxta;!4oka6Po5ud$ro}NH+C32^@-_v*l=4
zr@eG}g>sU>NbNImSrrs*PdwJynz`vwB{z=L`x{t3q*;<RhpM)=(&7+jfA}$WI|iE_
zar0r7gXZ#|N5;k-=Lf#)<A$2vb3%%#0<=imF5QbsaA%xQEvZ7PmSJG=OEh(WQs4_z
z4;#i0R}pCbV;U^q$rtz5t{S$RY_8;IkJS}x6@;i74vct#UwyKmZ}>j=^`?5^ke0!>
zG5gj?>+iAq2VSt9b;WeZ_tz=CdyiXnbA6-g;C<}*^4BEm5#)qQw~AZra77R0b!wz!
z$?vK+W+P{8FKL6<{jWN4?sQ*)Du&>w80;&6DN9*BhhW+Wi3%y9si#C?W^H^>I}T*c
z-<MJ0qSac;p(gGf1JZH!dA?N)ci?jTZBP|s*faxtLHHDHq^xulF<j{17q+5ECqUHM
zVoQH1SoInp_7sCNVTVy^YMRz%HsU*2yT8c4YgL}yeZZam9qCG!+3zmzZ1!K3Ds$Kx
zx;6K;*sARJH>N5F5loM4G%)AhMv_-!n?V}Fp(dX`CeJa<30Y>+5M9$L(NKpIT`>cD
zw)!)g(b_yAi_n}8To^=9Sjl(VW*FswEowt>2zPVjsC^gcKrCAi0-nvB5Ss<k-5u#y
z!4YRV1Gx7u?R33P1)Rf)KYrZSWu+y1kd|EoYg28Hb_}-0nnDcsLpq8C>NY^3K9x+B
zGi<?w{v52ufpHTdw{AS+*mn}b@TDEz5<}L>=SWPgUUUy|P>aLZoz9{Sij8m%8h;Wd
zA7F2w-Or^U-IBD6Tp3!$m@-p_b20F;?hBDp?3|lynmEAShjN>VYy%LIt8f4!$wG|N
zND7|am=a_gt4wG%J=H#dXv<Ajfs)7jq1^ir@>u>SaR_s_C`fE@scWZngUhn3M`6Em
z#sP3S@m&_!d#e`baQ+WIZWXAvMX^%HMLLpD?jNIxw&?^i#$*!0FQd|&=|4>I;{UX^
zQ^9oSDN`alDd$0FD1u4pF26K?i-#6jp|2I9aL+aDrF~{o7BZ{+|7hNQ$3)`o^(<sn
z_K+)gA&kWYFUnF2e*NiI^qtl47v<gD_Ju6?k1XCFD6=NjHgi4fy*&}n-Y72jo;*N+
zc5!i$OCLj4k{M0rP7$LEt%Pl>^R)~U(0PW}${z!(?!vcJaYP<>+kaQ`z`H2RL)c{N
zt9!r#4?n)8Amih(u$X+{YxR*mb1B#twz`l+5yGWj<fR>uO-qUhpEw)mp^E;?Hssd<
zb>>_JH4vkrVWOJKZc~P4Ty>I7`++jC!>eO@bYui*d)j>I3hBgcM}+T3*InYSs4s;`
zy$WXA)k~GACwb4YzsK#NyB_xjx{Rx4rG^nnZsyHr)d$b)=Pwife6Zqe!QgU}R*vSw
z`_M$G+vhIG%w=`!@Q*iP=GnR1&-~w{Oxwr&tx&#bGsoEt&E63zt{Hm3agwGapn$5;
zWH$5a-h8rO^SqXe7E1`Z)=Dmfm0bC7S;q2wgiZ5{$M;9}CS$2Db$?3WVTEQR@Sz53
zIJC7u?6A0LV2L2KdtEPC%blBMuv^dF`ol%eL7eZ|4efbUFjavV&P37&1cjYWM71yl
z+_LNJh=zmDZXA)}e+3#G=$fvTJAnN`#Kfb)$6ZayqB1H3a%JBopv?p>;h@DS4G=$q
zV>Gf_&6)abm0%O5wr;vU#tKjJfqj7hR}OY3BvPIBAp<9VQUShEt_>*~XfTs(u|1m~
z^@t*{od}GuqXsf*Us)M0_~o6!E)qHIaEu3fCKE|1Dsu>CCC4(!m2!%~b}!iwbZ>9r
zO{{R&6Ct24f{$dQY4MQdzz+`r&Y+zfo?@_WdSI9bg4tSH4?yZHLD|^jOh5#^<960`
z9w0lvLg3-zn{!BDBai<!tFHy;hkc>%0k`&8$*y(-6VhdN@*rhW67GZMWQkw*!3>n%
zOw12JsDN+<;FSR+lQRt-<jp#`0ZPJI4tye(a1hdK06z(+iC#%K=<^jQ?GECDp7l^h
zA@5$w=FWgO&73R>mm@>JLYoJj4=5(|d(n~CKxjmVmSgXm`XcUuKj$B}r7r;^J`%Un
zL;27X$T5hIyjpf4vMT)Kr=JioR8);<*h3MH7cLb>Bh^YQ*kO|!xo8&FavGqgnlX*=
z3vy{Y722Sa^U*k*gZRt$l<MOJCmNjT&ET6S{jx9(@m~?zU~FKCKqJapZklr$Sjx%z
z(r^50V9vP-k?w-zI`Aq3c~bi_1_pd5kZ~xv8w7GTfs7{yE5WjsavS#$pxRyIf}9nO
zYK&uO!iy2$o~a$4gQ-V`2&nyS1v32V|Hy;~6$?B=Yq4Q1TD1-;Ov#xxa_j(+>;{1Q
z(4+`t!*kcw7r>0SQHZ8+6zZ|`k<-6Q*x{pG<?-al*VVw>SBfJuSrod)1}Nu^t|869
z+57g)Z()#tQFoFHF&KC2vg;=#U<A^}IXuHogP#=+7`Y=%NX42(2ug+N@z&-c8h-Po
zyEq5seoktFsOI*fFyKY0+#FI_<sMDj-}r%@Xs8XsKT`g_^T)?r0Ec!E)Tq<V=PeXT
z$CV9_uLST!+}JUAeQA)-#n0aI=}^<p(mQGOs>-m-Wg*(jS8+r`XCj{b2`$$`F$S1J
zuvxe4my6EyBuJ%rbf`x)&TqJhNPcUa0a9YX#^v6%^$YuBxGK<=*Rec9l-cyU%&IuE
z<Q>k-z-sOs$VQ@uuSnEjP$rD&!6vUl`|?1pKNIP%5f~SkM_cL+K#Dc?*q%xUE_Oyb
z_D%-4#tbdm%(-Poa*;Ed)u3HUw`ahId}uNIT8Gd8b>y(@@g@5}tp>5$#V@x!1#drm
zk$>WYguyM#sKKjigFnrqbR!)ul>~mvtG#-{#kaoy`QG-WB_>jsU$LhTT0~*lIu>2`
zvH0!4)W_)yrT3Lpof-~Wj>azzGm(bvD{78aUH?7sMVOmh&gtxB(bvs-Qs((Lm$bM-
z;R1b#U(mjH^b*+#acpY2hi<|zE|F)||9WG-W}s7YxRUF|NXQHDl1k8R)owrQ-W4t4
zWmF(?&Rw}zvIY;ZuLa;_L2@uRIb^B$H?3jU4PXZm2(-sV%@lSLbvL4Zy-^tzZZhk8
zpy^3heitPSlc0Ub`mY2ioanm((oRl-DHj9lG8AD0xK=UvLEPs6oI_eTka~j*asC$1
zWj>LTjjME~DzL9vU}sL60nr<!$I!<!@gYN)zX*UJ3}#L<5AD7y5!)ld%R-8+ok!s;
zc0Q#LXnJ6B8rl%Rizjzdpa$?^22il1h)39M9PE#WZNeVyf#;5bg^2)ska``A9mbPL
zFrV3e#CXM18xKT2MJi)dJG3~`cgfayZ-fCw4huGTQ2>ajA+)y4qs!pdt0OQ0M>UnY
zfxQn1ufXM_2eok|o@0Oq7>br*LAy=a(N&xIPZWI=oGz25jRjk(8ds3hd}qBt3L6p`
z%-Q83RMwgmz7e4Sz_mS~{-3XVfA2Vmh8_yti|(%l&z-_YV#u49PTR9kzh(@e(@yFG
z?OVhR71+1?`~U(^rhi7_Tx7`bCT8N0GgSt%t4rXbE(h3W4C&cH4tt0E=+=q5@J!6)
zW=aTM4oL2SB=A$9XsALq&E*8xRKQ(bhptIM7-9J1Q6-eSWEaKgTfDX0OTY+3&Z;b0
z&Jjh3<XF@kC!~&qhbe}DyI(OL{Oq|yG@QMRV3;V9<=e~P7=$|se%3PZ;MKZ}%IUX|
z8MX`Djr6RYLz0^#XOU8^%MfpI{5LAtnf?gG*vt`a8$0mGlu!i^_hFKE0fHT1d}*tN
z_z$#Gial)DVBPPQ;Ffq6TJMfbnk%NqQp`-_I`}nd0j}AATnKOnOCoYr5ujP(^I3>9
zSh-J>Qh@s>2D4zL#>aqn$jCN&cbHPxG^d0VbOL4hhT_OaE~;KmCGI(J<@0`a^2@<P
zkX{0$_Zyff&b<Y?Hf2n<^;oaTUEsCsr)RBh^!b$&KwlgTJJDCb6Q3o3%R_7!<PH*f
z$YhW(U4*p<$;2`T*&CeXky^%VEl9T9!^>o{-S=iH4{!^^Yq%>YQYO$-fN-qj$f_j7
z8-T@`k4nfW2jMlbgb^rrP<obIJ9)>(S#yN&ja=ldkHUyL6TpX?;8hY@qJBgc=*HPq
zIS9jMshv#J_xon`?4dai{Jry6!LN4AK_>Evud1*=4~&w)%yq4r61^dQN4g6@G`AlN
zWEEomiTEsck>kO=<N*q=Q>S&Ar^8+#0+HWO>_QD=sLSv61E0NOz>K-u{ev+`JAzDe
z9S$O6I5}kQ-u-GT1h|Sy`o}A)#6^a@cZ)0C#Yvq?7XtkU1R!rV+9SdIN9&exkr9u$
zR-a+L&X1x^8Uv64pGOR0D|7Hf>qT`^1_FGytm95cDN9Bc*|Ae4oWPTd8z{K<=qh_w
zYMNz*aPR2!sWOMpN_O~2Kn_j7jzh`rVHR1~sCtjh%>eH9V3mUAfj~jn30aADwL)U)
zGett16@WE60)oS5MvrHwTmHP7y|~(1?@K2-{skBza!%ZB@XNaF>R=%FE(#l4&uPN#
zA$l>ZtwjW~yAb&d7yN>#F1S(cyrbRi&H+oH&jhv=z-lh`cjmRUt#-saXKh)GxP4w2
z@)3kXLpQ&B1d;Cf;5ofQTWg_~(URZoieZ16Pi=U3SOq0?erV8;8RkyD^LD`}L>bgx
zoaS;FjQz^@?OXM?;$jY1{m^#yxRvzBFS7H+YHwE@BP5q?`l_q1*M_y%Ha2T%JX;{o
zaQYoEooS04oIfel#G7b&akE`cIHBn=F+7-S{wt;R5AKP8kpTYNg90W=)#V?%p*WSw
z`J3>?l?^c}t92pP%d0!*9{+fp<naw~9q2hLXu%cBCZLd$9LJ;w`d>JLGlyXH!EO|?
zkiV35%24ROXxWcFb9=}=0K-mpLh1QpOtR5GA;M#zo{naMR%fai>m!JNGX&p{fPTUg
zS+nCvnl?0fo*S(6k>D>fB*dAr%M%UHv0H$?soQ6bF+DlD&^~39gkTcbi=08~m4dD*
zf^$zaz%kTnEgG3`3Z+6OLetsUWILwhC-21If}_mI-&je-oa9f~9zXiEGpd|q(0v)f
z`*?Q-m>iK-B=U8a=%Kv5VUcGD0<R$_?vTl!j}UnB`)Ge@cppUN_c#OP9)zuVw85@~
zg9DJ+^z~A#zp*h|!b*yb<gJz;AUZsN7DBtvBovX*u)ZfhIfaKDDnP!qA4!Z*@fW%l
z5Bjv~3XxDy2yebg4@8kvp&pT$qi_!awvbH|g=^v=y%gm9n1Z_%n0yIdc|l*_i@=Mz
zppcnXd|CoewM*iXD#e~91C4p$Ua~%hN`8o{3rOZ7D=koFkn;c_{!+;bir<&+iR-|V
z)Ui}s-&Q=ywj4Rqj)JL>UIqHe;HUF|y9ew$2L%W3mok$DbvaJ~CB}perV8r>19A(C
z0~5ZBj!dWZx*<iv3t@67Co&p!?9u9=6b5XcgFxruRtdoS#sSj1h<eiO59QK{&n)7>
zDbwplB1lWg#Z}fprsX31WPK`@>K=FPhBgb(mxBp_x*QU3h6mR5OjN@cpvXpN52)S_
z2UFYU(I#rn%^?1D*KjK*<2e$?t35XR)x<)5Fsuj8C8>f}h&SF3cKH~JBZJ;~JVF-F
z`lvQRobZo4@QMR|fbDGuDSYTB%MSu$SV;O<e*-%vlXI;nnfb`9oG86SfQ;8Et9A*A
zU940?aTJaNPRW-6DH`Bh(<eY_9M8v2cgCaTSYC-kX3fv!;G-U&!M-A+qE#jEwr&dO
zkvPajvtlUs_Hu>}C{(vc&KpTokXXp`Y_OTw_$SJ_lO%ZWBuG&QX96sb)P(OeYRc!_
z{bvfS<j0UiiIX#Aq9n~m{sbjA3X;z^s9gsAb(e+6tslAIWjGBYKju9QcHMZP4%c9#
zzbZ2$p=5I7E^=ozg1mXMD?@!--B{`~nZvNtS!BV!r^?~Iy$(tu1d%-}IhaT;LhiL}
z)+JqJqw))hfxh*mv3dst$MwA<GRl-N?I}Pu=_Smekn>PTuR61r3>hlIy3xNdCdGft
z?sLF%Odt?B_k@Khbv)qK;jT^rVWwnl0=y4L4n;XU!9Hyx&))!{&}H$6Bk)g+(?{Tg
zj##iS41Bl%mL70I`=~%09Db`+;UJZm$^S|b^oxWd;3g~8J%O2g!I%6|D?6FZp$<{&
zZUo^ZJvqJ~%4G&0GN5Z;!7JhMFPtP6CX=VzY~=cv<-Cv(St`2u2^J{%oJ=l?d~9YI
zYzW3WID)O2lbx|9S=b>g!#tzgFm4L4li$Yr(&-@n<17?BNwD_hAWJ18euS)5KZZy~
z#c9)C9u8%G(5VZIT`bGkNn`*o+JUh=4m7!5>9!qHk2|530YKqVmU&R;MQ07c_}{@&
z)!Q7PC*OjgeVSk_aKH<+q1~b-rg!<7sGiRo!K0%rKyCr>9L>Q~KZQc%&rQhOd4vZU
zfQ*17J1|kXfTUA-GK<0?cjG(&S%Q~&2t)7&)z?o~@?c7?f)704`yTR|C@2iTRYl8&
zoqZP4a=Hma>WBKI&+2=`uLED=Qz7xjU4>|g@ql-FQvP_z<X%NhJS#GJ7M+FkIH0~T
z=`+`%eUpD`T@Eb;^u`GIBpwL0fpAv=_unS@5f6=qu_Fd*fTGe`ha<(lH)fZ%@j2pz
zqG^?P4?viTVp0Bek=ihD_x+E*oXC3pt3yE&SA*h?GZTOlRK=7X0X+C&(qZ=<{niGX
zJ?(@{a<MR}Cccvo>Wd+N9#jKuU;0X#*vX>BBfDW8)k;pXCwLMtv14IvReWSs*_VLy
z8DJ9cn%~j%^|4XnRs@p*@UvXc2NSdB0Uc#hdgNFjs%}XC#O1BK-49U`THnkJ(6Q<F
zn5c{kYH1r!+yU!BGP6mQ0t<Nxn>>{&`38yE)lYZ`k^5~na-P<k=e3Fpl1%`2PSjHU
zTX*2GF@&LdJ~uY|P1-tkgz07H+aL0GZls4oefQ8<9y9SJkq%~($dvydi+C1I2`k`v
zix2Ep%NKV)0<Y;w9gox4CtATo)$^M^a}-A5<ezwyohjmk1!1q7LSXDhSMFz(n;R`N
zo0~VKr8r3Mefj6wzn(hZYL~jL4^mIWe)uxMGBO&4V;ni&3*9YNwm!XDUdddC21~^$
zoWk%$IV%Hcw`;djW~0fqch-f#F=DE0Q2mv`13m%$D1X5lF8vj84#;uJZMdD6*FNU<
zI3Y~+avwP>z+G^Ldt}a33t5mLw1~hq``_LEAutj1=H8H=RDEH3&2ne3<PB4#r@=we
zP9ZF}zxgARg;ycb?qM>Bc4xbkr#h+g;Edy;EjF*FDMC?BorNpf#6;|*E}>UqDE8)S
z-COeBXcHlIW^zR~YN@JaPX++kmK_w6MZWh<n`6ViDV}^Ga=K51g_l~X`Q1NUB92Na
zUvvd|ed530o<W;ND%*>1wV|Ix)mQuSoqq{EUO3>|e`Z<FxXLv3<a=Awj6YXV{t3s}
zboxGtoaF3wcg(*T^ZCYyk+v4n^c>K;+;+>DCyIGdoDvcBpkLYb<Sf^V3)w&K&au&U
z%Lenm2<RDo%2|6i{R@-K`|gKnU6I@#86(FJ)~qt|6_*-bi@lyXz?iXKn*Hg|EWWO`
zW|P5SGtkYL(RFtl;ZSep4JCZ}_Bmo|{5#G=w~+9!7}EXE%Y2s)xRcpR*^5bqfwU(|
zrV4kua0T5_UAwuQ)LP%&?fhb0sC5{=(6sTONx?|Xt%Lf3>A0px<fPYr*Q7Wu<L;+T
zHAl|B*>XB;I^Kq7Ad8UEto2~RSwT08FvdUW6=!O6+%xVrAI(^~xG9x+Ja+rv+sq~-
z7lyBad+ZeX<!j&@H|D|&i|pz>68{C`E`8i(iM~e_s0o?ZRFm2^D})vFO^x^uD|mFj
zA<KH6yWg8w)+32=@|weJvwGjs8*LK8+HNp&%b(dT=0w)+j_0=uUAAO7@OIO>YQRYc
zJN<$y#mVr3R>ZqEK^>z9Jlyhsw{SkN(NsykdAp}lf$7c4vzxc`+>Gy*$$W}?oU<@O
z$@kqWBKhvY-vxay=HYbtqk7v}tH&<2Gc%{ibBCJ0)0?mo5HslB+x}AS;v<>${v;_~
zvogP?YkKh_G9raSDB34dFY%SE@Ls()dXvbdkK9~t%4meitbCX|ajP<(i^rSa%DCW7
zTD{}m&j$_{3N5HWmol!ArjaV_S#y8-{n3yff6SusA|mbL;!OG1j0+`&_NUtTx#*Uz
zAB|Y#^IaZpI3CWw8zh4X63Pxd!EA**&DI$b)*-yxH^==<w=Zy={Cs@BuB~gkely!o
zfe%pTz`fkSvswo$r{xPvD^Y1Zm4h3yg>K5=5>mm3cYWzgXWGD~)y+fE*ah8Oek^Cj
zqThaE=7-7#ArB4YJXA{9vW|Xb+e77jj`2tRlsDKUdu;<4XPxFWjqoYq+$e5Z?!&S1
zvmP2xvu+(&o=NBKdOF4|vb8V5X{y=dl<NEKijD-++&9T$4%*2-T=)gVirxM)ixj(s
zs3A|7&TUR?4jF3y;nJoVAhOoGG>QKgEy&Y7aecxiZDKQvs}aaJ?OS|ylfLV7rGoCg
zhZ<)Wt5ZD$e-!lLl_J;?TJQ}*3nJJE`#z`K#b=((IxElO1780Rw4m9g-Rq;X8w&jh
zPIGLWD>R(J5$}~&`}^F?bZ?fke|1l-eN4pmxSBnC+!}InW#7#KN7X%N$K_c)`wqnq
zb(TkF1?~wAQf}_>V@y;Fs;Wr0FPE>MrZ%!@E)V-EBp5B2C)&*I%T7NqVl;E__L5+-
z3g&TI{_l?8ulF=ZPQCao*NOMr82pCru9&azMUE|JzE!3-2c&g4O=nTOp8IgL{OS{I
zqK=faEvykJ(+j8ijN@<VNW;Uk8A>z63xE4BiT|Q`tG#HtAH^B=a%lx`E^qn!*H=;B
zgAJ6zMtybK@-DVThdwD5(uHe(<ja5e&Xpea*U=4J-%#)_^pQ>rmG`BeFF>z44mt~L
zIqg>)A9!oR-p)ylES0Nuf*7QxnQ9}<F|@z!o}dpWX&!lI??$gHgBvfd@Se-r033sS
zvS~pl$;{+NpFZHsX=-`n*j~<)<h!!MaCpxhFt5sBVpK)k;c5US!(FBz{`ZgAU=?Pa
z&ufY8aYgKmhD=7}yID`{w(BEcqJ|Fw$Sz?1_ZK>M+vN@m>$#|_<8`gpWEPGv(*lQ1
z%k=q7!zi+k5Mjm%Z6mdDd6=Dc)p)Zic>1VA(lq=;I=+tkqSR#vv$9h(3YsKk`*++c
zSeflVJQnXqEs2|M7pG^lnE~?izXF4+i_<qQ8~|YF_kRWkA0l`Cf1SC}J@{gvlhYNi
z3$AXLJXBmgJ$(Y*+`W!mQ2uYgpueiB?ElH!xSjXE-y1@uU*4Lz5vX(F(>AxYKtd~v
zNnhyr_OB<Fq;EgJ69DP9-ahU)9nt^sPvPUpQqv(MiDLMbQr|TnEj{*9<K)Hb+LwR7
zK4nm!6?uMmW%&D&(4)1*UcdEYMZ%93Qmld2>omsAi+6k<+aHL$b@OF@%#1S1MN==r
zF5BX_cs1ZaC+i8EG24vXGzfY6mwJ}1&DrS8i@=LxzpJX(8|+7afA5bVhpsNJtNCt=
z96oS6Jl%Cxx=v6~ZQ+=BT5$N4(`WDw+k&B2-3DH+uS_e4Tsfq^aX4^~{qaNQ$$FCd
zMc>3+UWFX6?O=YyqWM|kOKwd>W~Mb*%{X%lZ_iVB_Jt{4@4@Z5D&82?n--1PzCXIc
z2~&niJ>s{3O5TIrFS(8mUQ3)6{eJR6Dss`YrL#ADMBBsD79;dk_3wkbQ;!C+j&Vzh
z^q2GOo=kbEvEb;<7d5QUV<Rz%g0sI-<NYR*^{&dC8;(n3*|z|RKh#wC?56>btY88T
z^_=C>%T1FxcVVDZxPEU02$NUeOhl=Cxd<3N5o^DLt>z<MuK)RxRzlJDuqx7>uxr{I
z1wPNm-5O2xVWasCM4-Xj2-;-D*zpxe|Gz12@3R#H&A{!RgyXrR{o6-b7$+M}oKBL}
zZ=Twm-VcvBuFa`ESII3Xw6NEn>9_gecK^nrItyqT$*VpTA~)&J0$c_Mc;MXE$O+uj
zyjEqz3+`8wtg8pUT&DZ3^USoDpWA;>+iu?nT^GRrEk^RvG24lXwX|2yyrGwJ1vT*f
zqT#f)#_Y!DywACe05{C6b34b#P>8&3x(5nA2w!sa!#K>k-!G!BLlT308rQxry1cJl
zICe-eup&WsU79=3BrQ)u8d`ky1Dg2p{K(AIo~UR6QJu))t;0*Joj3F^N<0^hX5)d=
zO?PAD8bdT-oQ!Hq%jK-XlSw?GsbMTsB-2=4^l$V$soOtH9R5Bx2_YF9`^4mtQ}!Kw
zXs~Ov=Je>d@GPVAw{Mr&V3K82@{WUW_9l+oN9^u|=MTRQcA@+YyB~tm1+Kc!h2bH;
z`mb`GHro-#n8p`>>d^szkvDPKCIGur1|Z+vosTTy7Oo<Xr!mi67@&VoDmG8%g3<~z
zP*3dSC$%mf>qN~dMVGzU3Ofu+edy}-n@5RXIeDCmuy@(*dk_i(9S=HgjzIjG<L!|9
z8a#5Oz4WZmtI5|_>gTe|uN+VEHFqmK0ZMcJ<d$IMKFOnLX?LCvjt-i;D%@H+dful6
zI={qIXBS22d=w%`vcWhc`m!*}J-KMpmdL9S46NlKOV!;_T2~TKm$P24e}?UDxad;i
z=hl2a<bDWW4Cv?$gl;xo95bxfQ2rG!kh$Mp7WL^S)_7cIm|~SHSAb5796M$Fe}9P~
z-MjHN3tYbRuX|>r#>&IC^Yw43$=^uao0$h&W9HOP0NYbd+%$*gcOcX5`9<-e<)+1<
zz-+s&lj5~Ju+kzw7%jE^u3x+9cqqTMdTdvGbf(dtcOV5@uz;we)C<b_=W8@zUg1KT
zFV=AZ?3%aVDd-4sBXz~=&D|<@W@L=FKK6X4x*-}x8B8=?#0G!x3F8v=`?T|pClX|-
zCkXwpz{+j4r5>KFi4t_RzPn-<dG=xjL&^~a{(9eK2S;4#e=JHmatC`of9qEL2x!>#
zuuLhs@<#%A6Uqk1S(Gg14mwq@OLVC}&G?1hvJMey4+%;Wnhg)Jm2n(Fx7buO0y?|)
zJe9@^jDL0vs#+LZNvTEiFAE|sdm2Jgy&<0|=Jd*_FfoYuhtQlYzEKkHs(d};ZjNEt
z#$c$o7iQ$ttkGW_={J!a0)L6>1UM)id@Yi3o~wMl;jU{@!Kel`&h*X(KUGP*z{ZT6
z)&nj`<&Fpewp{-F=;jd*nNPz?+X)Nf2M^^58_U|=+YZ=$%%JRd-S|U=wt3Z%wZXqt
zL-wVRH#PCk_Dzr7xtVS^P_#_<@q{(FS-O@}B3p<U=X&|UiDaywX}VlU1bK6&Oixh^
z<u87m1UM6d>VA3BXG(~+s$af~f+ULsL`mJwxWCAsL$M&U)g;D{pa+Pzg6cS`85)>-
zP?@9#8|`l;8SE`3LeJc}2BBxJ^l?a!*g!Q0KQN5UUwDTToezVEXn)P!R{kY8vNUQA
zQ;lO-5%*x{P7ym=DG53vz)j(r6}Sq#ZB}X=(A3&=nL2@L4#ve8GB8gHlE=Hcs}4{M
z0Kcy|{+swtTR(A96OF*bg5AUhR+@kJ0`NYCq4Gk(6l<h=2a6w<aHT&de;c5%(9+rH
zfIojfXr(;0mOF%I6g4DrL+&TQLn_i<H~NAOLepLc`|x%ql_18aMHKdyhA(0FfuvjJ
zc52}A70y@1SUH)N5b*fJ!$YVZ2^D>Wb>t^6oNR68xo7(Y$$#WqhUB)z+cg9X!Ptz#
zngpH0^#@_c-6;QK*qDj8qiENA`88A4b9-RNW7f5d6QDg7D2f8*U3qB=vUNB7{z6i%
z6dqChvQmTHp?X}v5qlPz)vFS~c(J~iEzSPk07=SHDsAb%y#_xV)X@6ECB;eF;@Az<
z9shfHzv@CApTPd@(l0GDug;zw?ANcD?t5%BngsiSzRA~$DKU(+{GM`!xzFzx&RsR@
zn6rGB)g0C9dgUe5Q#ky$;pcQw$M#p#d9P~NVhUa219i`!D_%y>{)(4f)nq94FV{+I
z+PG?H^irDNMi9fVF^}I$u^%_J)!>4kF4SY-)W=HRbj@VGa)-J?tVO&o5Z3{F1&bRh
zWP_EF#|=Wav`{$X&Fz#S!U(vCN|sp#NWUPoPz+*$;S*8VQEk%!Oi%tIW@6-48xyhz
zIQ}gi3*Pdw9aX9zd9_rn=0dq(78eMIVf>Zyqi={3Z$dZ6P7uRmaWpeK4C%}{{Ar7+
zgLovrft9~DhROxi6~*eVV9Oo`fr;6@F=F^GMCCf5M9Rsr8n<%|!e8i!0UpG{5iL8@
z3mcGTB0jt=0qBV0PshrvrnzGrv@wkG_iae(yHq}_IgxrE*zpYV1i^XOg|iT1FFicK
z`9AQ!M_Wf(8W&s6JqPdR<01ZK1!)Pt%QA(HdR1aNV2$qofMh)lw6#1|dE;Gmh?yp)
z_%5b0F8r^z5~+EQS&#?gg1NpkCCk(`VlP!VoYa_txM34PG6`s?vLkKv!FPe4pTP(4
z_g?GVkI&Zu;+OZq8@oZ|*UeVSV6}r*^9c}rq42Sxvn}&MMWf>{x6kJJW#)^d-J@q8
zaXcE>-mADe=CGdck=!fC4~AxY8_PX*zk932;!trg|2(B(<AUUt)|Ce_rd@<FXL_<X
zG;LkhA@-W`Iw<rx*83G@=pcg~`hjscB?~@TKxGeWP!m~{k87~_>=9u4-BkW{LrD+w
zv)#qWyH85zo}@Y2C1J~i@G&*A!3SXF3dYg*yP;$*nDhUoj6QW(9ZM1e3A#w0B7<*&
zUCfANk6|2aF%0_qwrN&k=0PfSb4L$jCxCc`C@BBsN|%x7utWMWXI#)B@ZB2}oHz}R
zJUT4HFS<7zSrXq7A;bm8J;RY@Dj0P^Hf78tt2qjeR)?cS=O8-t7nQDHTtEc4Q=G3e
z-8%yjID`0jh?V?_iSbqc0N_kCx4U6e2K5|j*4(KGF%AsXBG_N-TKYM}6+U#Kt1}@g
zIki&FSO6FlLAc{A^sGP#gub}(y@gV#19o%4w>yfSo<MFM6~%KbZobU?9)}~N{B!1Y
zTYrDs<l_kr#Jh^X-+no&R4`;*M8tHNH;BUfn;z~+kD-e@{Io>Ix!$<dU3VNI>c|z0
zyIr-6ttEkaBvaOXgecKL$(;=WLBD^GFQsXc+Ck5ulUV%Eq)Nt?(oL;l2@Di01()&B
zT59i?LJYT!zp|QEj!%i1Xa+=V*iGx9TtTQ`Y_z{UGfgz-$99(DsYc}#^*hlYa^C-Z
zt2(H7YOBt4V<k~i=~Sbxrk(C#)<($0hi7#ouHuAlYxcYa7+HH8C=wK~@Zycc-=@hU
z9oJ>j?qI{N*Fq)k^b4aaze+E2DMUqHLJWq%p)qCpbuSoLfyR*RU%tILcDf{R9Y?D~
zk~Pj6SK@bcLl#5HrC0_2(<yD8>C7j@K+cFDc%#AvcTRjkwzO?fgrATOQa;i_3D5-J
zHzpD&ZlUCi^!|9ef5&SRAb!N{U#=QK94Ouoos1QxW}sSdw2Jr0Ri~`y%n?=a=>Xjm
zV6RYdT?=LNRWuL1d$y2hYlNZN2m6bzKG)!-os~@+9V;U4kz}#*=Xrk`L*PKmeZg?U
zMkl08G(bH|o7LRGe;I`BeMqjtfCaq%cR4#j4CttEIICE}z;eMD2cGxw)1QfKxBpu`
z<O+uh#@U>IUzQ;A>5#e#*T&a}p7j1I0kSUmX#Q=&(kZ<7k%?kXkW5;CCBt36g;G1I
zyqI(9#9>juLJM4b`I6U}{!}&?qT#OIu$JS5o?U1O=~X1aD_A*|d*eWln2GYgg{_<=
zb_7A6U~E&&aNbXr0BCV~;|O>a1ftt;&<}Rhr_ILAf{k<jO0!Up5hFW=Nj6x3Y!jN{
z#0<OKP3m~Ds>t5|13h8B#sNOF00mS}|B8#7w0HOeCZ*q~iAns|LKbmG=IjSbZ?B>y
zcw6zcCg=fEK+xG<MY-~%+N^dDenp3~j*9`Y3c-WX9=kirvAv2n2RA%+zmh!g^}?a~
z9hVcC_N8%Nmf;vdQ<7yE3i})2ElW6Kp}vqGE70Z#6XCKL>vD&OZuIA1N`ZvuoU4z)
zt{k_x@F2$1lbNQM5seSV!443nk(IU^Q?sh@YIbMT!OE%#)0kxH&QzKIU+leSR8-Hm
zEn2&qCN&vpf(Wey5lI3{mc|GOijsrSNY1DrAZgnQD5A6|3MkShq6CSO8&N<|f=CjC
zRzb;0f`Gs)e*bgcIp^JTKE6BdhdTxgMl<&As$I3J)>^ganiE<fu{#`jDSdh@o$vq*
z*WfDu%0hSIfB!Kv(Ho)4V_4NN?R(muA#!eYcXTImfhM6!oc^8g;ifG#oEfjWTbL$@
zp*zLEvK~d8F9J>ZJotTb85p41{{V4j1JxH^LPL>nVQGKQ{uIm$fcw0N`!Lefily!c
zv~{+4?5rr>^*pe&QYz}W3w#S1lIR=CH-NXtGQ#Em*nmS`fP#nn;3?A&Z%Z-P`G&!0
zqC_L54hK6YbLb8(jTQq~_kwFiKw>$&CG#k_X$`Zrhj3U57*oIoe?Y8;g}!Dpdmfy_
z^dnR$a7`IB-^x^ArQ66NL_?DniVsB!$dmuNgOJ&R=W(p0%3yi$%^h5Q$bR%QL`M`c
z7QsdrpiVK())0)qPtfG3f-;ay+Xz!i3}R*UpoFXsUVGP>@R3*%4sL1FQy8i|wy71N
zCUdSK!@|(3^LY97Pp9r1qJ(d^W?}3kR1xSJ_=XSOEIdDf^XaW&WFohKl=fwue?Dc+
zObQ%fvneB+#U2GA2T_+J;QL2z#3Vx+{E+pi6QV)qekseVZsTf963(mlBm%qjR|)i8
z0_F$YfcxFAg7oTGYyShNOr0S(+wV}y-~@;GNESS#QZ9(+JeEFTc&z0NKPXfI*AhVC
z3FJ>iB1-`${wIVdA>_08gWE`{d2IM;hx%~j8l=nFMpAfsWGhg$SRb6J+`^?vu_D)w
zg1Q%aQbz<i6;LH^GC#qt`|5A%N&pEaw;IjcY4eM@2qRD~SO?9+&ERH<5S&Iz?@@KD
zs|QSEV^Chy69NuB1QC@r>}Y7oM@pYEI&B<NFE8}yhXyQ!FmA<I9n)yyP|SkihjU7F
z^=7%&QHm$h5rFHwbobaJ*L#pzJl%+=>vo1uQo5FZhO*G6N_6@@D)^EFeT_=>)kAcn
zB3jGdnA#LqV=8#M?!1}>vgO9D0>oq=pN(lIg3q0*Msstj9IW(O-QD+BbzbxY?nb;_
zQlbrJxQu%*OX2TN#Z_v2!sL~bzuGw47E}cCdm-_K<n{9Nc!K9^?$M>Ey?p2+z=ZOU
zmLTI_^UUMd8U8qw+R5^WrCq+q9(XMvefFSbv{g|;4m<k0OA<W^qY`-TDFIrn{gEv~
zJ_5EN8W#iJXoBsp80;M>7^)WAec&7guBC%(G01DnP`Tcby|BKeNDh3xFoi3)hAT1#
z7X(R5toXsb)8@CiY0}K{4m_khd?-N4VE7b9sh)Cvgo$7$M2d*U72$yOeo)5(O(aYh
z^yvZR>N$=r8nS_$tMbA8sBifa2BL)BFGR-TW&{wJx7;|>LJ7<;RupF@RzkX=XQ8pU
z9xSzsg~tt&=i{ik%+zFmCh`t>>)B*bF(T_;Cw&tK9GOWc33f*WncJiFk)|9BD--e4
z4@k>~u(II~usErSV&Ga%0##gS#6*p?Jd^}}P{QZ}gd(ziGlh*LiSd_5$0ZOU7=fI{
zZ?phvzh-4VjvtlBy7LV}bI$gz`>R0UU<2iM?H|an5jEd%@S?73%Ba5^SbV~V=GyoZ
z&?(zl*MBXgA~1g(ytZ_%OOzK91s%MuFrDaUBkitM=)fZ0Uno;tZAD~3IzjHw*XoL(
zSMD~P*y~sYOs3T?@avu$$z^#;SMdnrpS{wz+!Y!2fR1g)Vt(5nC|Z2ue!eY$VfL{^
zme~%1ccuj1J|o_p`NUCvO>P*GLO0yXJR8F@T3rLj?H@CM)jgfaWbF*x$L)F1HY`ti
z-*>}f4~sh~D+&-tSeb@{Ws3bUdr6LnaB!#2Z-pIG{ijm*xor#eJzg#dDxMABWO7}*
zcR%FWu!^6Sq2lomjn9U!s=TQZ<8-*Ky!q?iiO0^a$6h=bbM717U?-KQCi6~>xGx6Z
z3)6U0^ZvmKynpJCl`86fBwYA-S0b}XPgb1Nau;}-%<?Fi`L>vp!)w14f`7&Uv!WHR
z4>I@t4#7L(kPrTVR!<@0gR~MpIqfyC&bHY5IX5v)1mMg>wlUU;{f*dlvS@RV^0`@s
zNLHM*G3>l3Xjwu|;R;TwV&F<By{@^k5AwBwfh=aZq^Ux<kG>H_-9wM!8_bUYO-~Hz
z*Dx>IvUM(F<1a$T$_XVV$f=(=iWGxX7RKvXnExCFL9(uO?#4$!vT+*bpW);#AeV}e
z0H*y;KSNI%_1=&AtAKBFV7iQ)!S>gSl@uY2cYW>6T|&l~OgkaY{mAEcO*pD94?T4r
z@qSM^|Ee3~j_5fSLGOf*mO+1ZK9dX12m>qi$gp%3p2&mZWu5E9lpYi@SkVdjq>n(T
z1Uiy`GG#je-3~u`T>r81PdPO#&9=Q7<drZ0sWMjXbqXsfiKYE{BMb$UOzz{vxrh!p
z@&}6i&MtW&B{Wh2E#TksLpwpCGI-+)5MIjTpCbqi#D1%C6Y+pakYq1JYQ6RTn7j~{
zbuVI9%rFOU__mUO&}iJuJq-1mOWXNh$hEu3a1;WCE{_3Y`IN$xTSBCULN;$+NU`Y4
zM4HB^`_+k%Dl4wx)<B^Y{wI~0I!5lL9PMKzz32v?KQapmJ=(z!JSpFSvN#Ejq!osm
zi)}ZnOY=SH*80BChRHu;35+6Tyrjj>)eJnb(3pcb#7#T`n5rTKP#N|Ii-pXjvLxA_
z3`9M&zy%qGkQiu6C%C$<y+F(yw*M4*dInIKdHke-o7^8(pz)=W0}T@+{Z>JUR{G}%
zaVN?;D9^wf8?ebrva}o6)x^~Pau#vc0N=lMBTcr<CevXKpc59jszIFPRZ9ZOgD82_
z6@d$BN}a9w2+srSjRJG`?x~&^fJ0$rF61j0afpei$V&X8%SPM_|5zgKIdUwdwTop6
z`wzr%(>hC(fo7l@H?g0IW*07vuF3VX%yPHuO|#6-gn^;_Q@1=sAerQG#9e<bFF^_w
z_2r_GXXqXx2e6|H-^Q^`p4d@qB{E2z`X0nivSqU@BkxlkuiU%M$9e^5I&^0NVljpo
z$%Gy{JBP@&SSi)+L?gF@;%drS!em3D@T+dQ;7@Cd@<PV$c+}k(5Y2GZAz_j}xbFFs
z7o=K?oGc*s6Xh{YC$O1%T7#7G`Y6s)4x)%FqKv@wk|n0L8@ZN_4BLXwJ4><G&p3#a
z8Y7>qs&ZmT+F!4@e{NUhtcdL@X8SInUX-8bqY{3F$;2-$+uUj(Eme7Eufk8)_PJz3
zxAfB{rn^QLH5G#@ST(Az%FT$UxauiB3kxthZLwdTlG3bqinA^$IRWGIpi}*N;9$*#
zX4d4G>}R?<;q?o);x`2?yNhIV^7xY*bauy_>;w++wO7~Br!KE@-VmrqZAo9nihD4t
zE4>72c{sg_FnchZ?mN0$Ahz@+ANbOFeh2W;SOQIRr4+)4lPm?12G$rwZd&fwW58Jo
zEO^p{&_6x)B``*Pg!}O<5E=Hty0Z<i()MUiLWV^8AsBhBf<u*1>Jp;V!?vR@G3bEn
z!ZvVM6Gxi%cEA#Q-o3~1Kt{S<sJbB=zVzKrkb`OB11T3vL`a$Ja9J-tbFo(P+d;A?
zkOCGUO7UDBjD3~SN%pPSJ^LuQ>nRFZZHIp$O^ygmE33b-617B0raTKj$RK=!jXovo
zQWww6^J(j#PX@G$p5I1t<=;wFIQt~H5GG9f)}&d_T1+wXY~{0+Vfdc|X8AwroO17B
zsan5kmCyr5_^qR`V_Px6K|6aPdXpbU2}8`T!+7$N91Otvalc!L`=vd2qHa4pmovyg
zoMCwV2^8jTZ5TUY<pL+MQW4F8^|U-GfGQ8%+2b_Nv>q<5fN^fL9C&g~ft9!vj{yyI
z>{vh}!s-KrL|asl1#>JZy%WL&H3oS|UUdrS9jBdOHx7s#>js&~JQDCelba|j*el0M
z-*vkAm~AncgSNJG0+53_gT+uW)sNOnNM<oYve-`Al#K#m0Ig}o^0*>L`oy@2Hxr}f
zUc0O2@_`GF*@(5esFC3O7-+Rs8p0A40ZjoPyw?n>13Kr(3z<tJquCtjBM5g()4G?d
z*{AsfZo1Q#IB4>7JCLv+JDVr03XV=Yf<j}UToo=x>Y=1MrQ)djS;(6cw=pJZFS}qc
zU7(HrX|e^g>l0pJ)TSWwst(wA2afcF9S1TRy@03%;C-gxdtAsfu;iH@t=ti(4MH>k
zENnQrhYySwWgrVru1KO)a9dJ?fjp}*hBXibNaoNnO_o^JMC9$tJr<sMMAiIh&V{SE
z<G>j~rH!Ju=2QShk<U`qd(hjs8OVqTAmK7EPd+3<^{Hcp$!V<oQ%yJItw1oW{@r8D
zLArS(PmY^(`}X2IAP7qhZ5NKzHqxN{Rh8A^KivB8PQQ8TH{PMH!awBWi4VX=)^9nd
zJ<7w^X9oTJK8F;EP5PzA$G$jz>%lWdi_4v!d$;7|4nLciaQdFEJucLBkeRfPPp3zs
z&lYs;`*CMEc`)zTfS`+t$A+^DZteVjimpok$LpJsvC5nb@oap!M$&oTqT}zmkq>c%
z)4iDS+9AeLLj!>--hsJbd$M!$jXce_Juo!E9SMBmW<yG6=P5<gWzVzpiACA#m!Pa9
z{^P$JPrnRruH@`o&JS8SJ&(m7Sd!GD+ofr`Ixwg=Re<LZ9lW^=Zhd`@IPXO7-<Ls+
z);(x(7;ri(36bNb(<!HoSwOZ3EZ8h{k-;ZBq@JGtg)kkxT4U;}I2rKpNt+5JOBARO
zCe?5d`>`~S_I;=}7qJsus9_?eu~2`k9|9$oz0ztp+R9pAKEdIb|2EJhhw@<CAG-;X
z1U`PzU{)%y5hVF$CgXT~*pRqE%syk*iVynO%;lR6h2TPUn)e?pK*Wu=!3sPK(iAAQ
zFVxUmYKDpW0(@Q^!!}Ls>8#z4iY|A9^$;@H$$rZx&kmI9h@551fps7xyTsSN{=y5d
ze1XXhX-wDy8zvK*f&<1(M3DU@1eBbRLOvV(05HqvC9wiCx5Rx|ey8z@`+7{I>j>*<
zusIyDhHRVIR6<MH@Q5nzHa4>*;e`dn`=xuj@RB~eDpf_uqxRz5*d`qyY?$FB5zmD@
zDs(*1V+^v-y+xdTcM=e2jlGARz*9+XjQ^)gz&PGI!xl%|#hqqYHTgPIA!+rN;kYV#
zPHzNO+#N3j^Q`E}wrz|1_<{1zZew_kho{}X7z$hjJoyqpHuuS!F$j|trd{>QlJ-8g
z6(yk2YT^*BxdUs4VIm%nBBwjYAgpCfCYOvpd$b>WuLF#6e;8wiN5K3?U?aBi9cZ2u
zfvg)$Dqvm`<zbm^n{=Pl%k>Atzd?4Raz%|2`o;V{P_5L#kp>F0B+mmq2Yy(q=L)*c
zh>(hRF%#u5?l$6wcTEBl90`268jm!MEc6MHNY-u0^&bO5B<mcz^&M@1b^b6L=$Nt*
zr(c8l(ie$dc3MBjM<i45_4oRL#ycVEM?VQ)11ZDaQfS2qGUmM5W*K54PTN>(W`a5P
z=XDia(sDEFOAOB?n~M-Y!dklp7o3b$M`imA!N(3oY~}-1QmjmLOVc9`?~hL#S|<HY
zp?DgX5VpOvl$ybe4D0{Q*Wo9fec=8u&-_(K_YY4zbLBZ5^kg$D>U|5h8(G+Uk(cDU
zSDBsG+R9?$ed6S=LW2x!(|Wy2#hfX4gF)@Oo|UulvY5aE@I(7RpC*{n=yrjn^^FIx
zM3jYQ^@^S3-C}gVg+)nSq72(Urj~hCh3jc0YP5O24V!tu>ZT2*{rOoonx@l5@a812
z2E^(6AFT=uvt*sQNEz91>w<?cyr3o10OSh(0rN&cuk8LsFwaA>9r7%~6PLk}7oAI)
zg+Cy9v-{_|dPBg;bOLDZy(--?wtg9WKltMAViyvyDW_q{)Kqcq1o)EOwH5=iiw?>k
z1F($I?A=ctwUUKj2<v%}%1=2kA)$}BPXIHlJ5n4ev>HsEZ~@nE4ItDI@cnQ@#cMcE
z7k*!sm*Inmb*(6q3&`-2^5Ny8zRMtliIo1}9MJ4e2S%cftTfIMY!e1>PCc5!@yr?~
zt0P27WI@WdF$XjHNT;jA)V#j^sckv4NN6ZGave1VDXS+yX0`ruYgG|rNZ>p&d=Q0I
z&+APAl_J-a#glYKxKO*9!~%x8k_gFd_nMn;4^w~Oll!nf^bIJqI$QoJgM0C=PV!Z?
z*Vf=wQMNzXmURb@`JEunCrZcMRlLh-`EPtKEM|O59MbdNfoki&S6aRw4d_D9%Zs7P
zw6wP)ZRLfe7plB`vP}*iK%!*wM7bfLZOGKzbP*x4kcu95>asl)xGndlKMt4)|M^Jy
zWf*Dyj8`=%;?!R0MEq;1cQJL82p!XKuDE)K0-aPx=SrKq^C!<XAB~FY%Qpn+ZP)+i
zs73ar-@RI;p{|T0_Hge09sC=*mbVxnT$a8a*RD70SJTxloIY`+@$*L;ZL@2Fu9ve<
z2M}zY2&H*`)J8ArrM}#bGx_^?Cv^<g-18(HS431@hlzAf|4TS~*T)kYWi_hkdu&4g
z-G@HyiH7NR{v}Nf>!5YAkc*y>jim*>aFje%i<s!vS!sHwi|-l}x(FIBAD(_%sU3Ml
zs#2@bGqn7a#%Dv2BHb!r8f0XoCdW?hEp<v;2tBbAJ(<Lc+TPCGhPwRCzHrYc=1U=N
z!pp!ZV)c_=wXAnOQ}A1+2f$ejWz$zhBQkS=ufgNbQb1e6NFLM;1oPk%_!jAhBhL}&
zQLlwQ9q|j#J%9-`$JWGUBdpi;ELWwG3a3KJivnz?O<(G>Ay(G=k+>mOiy#TtR__lK
z>xJJheMc?jk9xeJ=zh&vW4QAw-g4k>%gSP}aCA)3d@cuc^G|Jtgr6>cHnZzaUY;DN
z^zf&Di+Re6KKE%x3IuNrHAXXBfOqpQU#p~au01UDd?DdkFP)^?SUVL$g_11)&*-S~
zk2~L&=EHX)_|7x;nAs1*^Yio<GMw9@<^GH+!NzGycW(0Vc|5x?%IRBA)jux#n%8*O
z4q1r#_%~e9*!kvhzM96=p_BKjzf~w`eOR`9u7tZimYaT+L&BTw#WQEZsL!wT51Gz8
zUYJPPx}4os`>xe*n~UG;<(#V@l){&%YtLSCjGlfNVzi!r*KKcH!OnX(5-i_Ka}1jm
z-Z+z)aHr50U$fA9cGmIXYEQeKtI(alYaiv~w9^$NKCJb$6bT&b<!L_hKF66~Iw!&S
z-l0Tq0d1ka(lQx4w`Y@_%c1e7mFwNbo8;n{{Uej?acuwUltm%iUGw+ShEEJj*~K{h
zEY*5twCckvvZ8;#S;%i|H;%lW93@;KCVlrkyF{ynkfW1~>Z{<BQV+R2ETnR3vy@>g
zRiZ`KGv^)nT^wHTSvOO&c3gdR@o(y?VRF=!Z;J^!d2veLy`y*!L>B^A^FmL3mA%%8
zRc6AiLPWH(DS5Y-_6YVK@aK8=Uj9SncCD_nt^$Iv-af&6M!qOP0Ckb=lP$yTNY8%n
zO|5-4Ch&@Eoly0rNy(`MQe-42%Hi+YzW+jbLXwhjS=u?I{G&=?j5av8G91;hTSqbW
zW%Ga%PT>$8B-y^7hdd_<9a15eq?}yN9^F1$q|m%(Fq1d)`_13<;b&UTgkxo>wIlmL
z^uE)Dd#yM24_g$<86_JwG*`s;a(;hpIB-AAZRq+&&7jnD>}G}E<_<+o72hNAQ}tT*
zdu^xJ$7Mniz26vpIs4CGHZ%t(e9CdHR-7gO{M!8N^})5%1Agfi-7%j|EAQ<iFe}UU
z9ow@ZbNj!=qy?M}oLQNgU-{f{eT;UP#ZM$8MsiX3bCB$()fxidHIcCsGb-V8ztp@r
z4JtCCUHB@d3O<x(9WKLre%i6W`t8n|cVEH>J5PvS4fFePYjBAAGOoX}C!b|aes+32
zbaC2uowjtBF!1ond_YyiWz!>Ji+55;pPp~1H3=$JPJgX+s6C|{SM}cSa-=g~-OXMF
zdyMEp8NG74v$FDr8tz?0Hn)29i=K6Q!$Urfa|>6d)(t<&?=Lxmp{K1L`nYiU)ynva
z<QTnkX{^M4WzlP{VTQZvE2*kGYnQAbf&9gfFOtL=sV8Q{rwmTU8HFu$_P7t12}$ls
z4G)R%E}cApNDms@%uYlhe^2&*I5>ZmsP!u}@A>vUT*L?iE1Or$vraWXUT9KKFnKIy
z>O8&|Z)mJtUWA#wxbP&w#!QqRznbvwxiek}$dm=L(mi-^9URTUpD_tx@4&rVj}en4
zL;$T`WtTXDY;$OS1;+Egj|P8ckz82~{1KJS%}}yuL})D*ABuQlg1w#xWxX16?ri+t
zE|Jo&bk$qmSi6E<I%M_sdMO~CA38adX}XN;M@J75|5S#j+eQuboI?KGIjg(v)BsCZ
zXE^B-VJeufQ04;plV=wiB|`diIdLYxqhIMiKy3l{Hjtj_M?dT&Tv8z1^}nEGLpbj#
z+Q<U1_4_}gWNGlO|G!bP5Yy&*Vc$Nl;B&r?=R!Q)JRMcMF8ZBQKOgen&}wd>WdAR%
zCQAH24=20r$bV8e$2Y}cug0d2|J}I3o5rfPjSD$MWTpI%Kch<F4tG~)+%ESo=0C1Y
zQL{^%DOQajV1vgivC3>ZmO~Lj(QSWLsnd&Me{w?V7ej8Pefu5Gd9A8((d68^fAH-m
z$H)3_KG-;6Up2LQl4nfK?uTVw<S9QjFkr*2_rw*{4(Sz#e7!lUwsd*d$5n~-@*fs^
zZI0F~l=hsOSPg2t8~0lz(b@Bu!_Zd?uJ!8y_&>Y@)ecu9BrK}-tJViSIw-O`GUAkv
z^H43zSocg%zfBu5S@|S1yga_&!2SnO_X<>QA*<=_e)NF<=@3u3r{`<U8v5A~p1m1A
zUkP^0-EF<~+~0?b@gQS+$mX0=LQ}MWJaO3Y5e^?OnxQfjq<cPNNS|}&^kacY0n@6G
zNev%grz~W+Y3@M0id%var^M{lup32Wq@BLzUNw<1BxHO{4!K)kY{u4nP%+CKm?zYY
zD;{c>yO^*KQ89AkXx%RFTjYzELBhCWhmL|=$)Dp~Oa{V0SCo${KH{)hT6~&Re>i<^
zf4<-^@f<KNS%2IQ=-DvSvnJHy*2&epX*CtxwI=KLeSKOfTIC-@|1|x+6A}(+hVvnT
z^#K>+ipWiO5P!<_;*LqRLw@0Vr#qLI0!gp#D`ri!orBk%oNovu{V(%POX~?MVxuUW
zRvYq-p`DNvS6{VH<s7w?dW@ZW+<1+4vFnFgUVGH|?5KLc6HRRmuCtlEfAs{LmxlzI
zrc4Dk4n}O|8}@33c<tUh#pEHgH}H0bc<xYz1^#B?L0SF7TioSIwx);4S|MIC|9-`<
zqym|VXOx%6?i?P<yjiiTP<ye`K~6P5yYc_kF}LmtDy}g7E4ch!p*Eu4d~Q$|{C!8v
zS+yZ^ejgX9ZJCLawVWG_YypQJ$b{u7fP(MUk$^RX9c;T=GJnVKU~9JK@`f!l4<XEq
zYF^#o=Xd8o>fNf93H8+E-oNG*%iJJxUsLv~qVCuBkNvZ}Wh<2tnllBjUk1+9x_~DW
z!yN3pe<H#Bz769N%Y(XKbIHd6Ppn5xxn|YK8*OfSBS-!8pP9qRHJrGBvoSVJ<4_4&
z_ziDEXADNx0EQy7b>cWSwnc6zVwz`OO+4azi!Rsn`mY@L-6!524;^vaK5y}`0;`s(
z_EckGX8ji)Y{UswYO?Gr;ULPr_T&LcvcPITE4ZeR$jNAyuw4DSRDIxtsil`F2l%6M
z0mL1I_}0pGLcHBO#WIee4MA`XXUX{;y#Cvim~yGoA!ImvjSE28a&Fc)-r!lhokpiG
z_iv6MSNy^LrQwdS?~fd#ODHzXJlR=+U`4{R)u>Q>e`CfMN?WPCtK{7Y$jT$lLjNOS
zxm4U=IJKPv9f*5j-Lhv}Bp_M&e<b?ig~ErMA79b}{sDdnmTvk?o5+gK!><0*kQaWV
zX=4AmGd626Wd~62GKx2RDl=2ZskL}J-q0^T7x{K6LP)Ei4GFONH0Q0uW?GB;H(Z2j
zWb&)SLM}k4*=aEz$uBGc;^m(@eSgPS<2w=>$IOzPv`TJ-DNH5&Fu|a;d~Xr|Z+G_Y
zpDO*+TP=_=(=|7N4oQnO7W%QQcB;}T4^3ZUyU{{}^S&&aKMrh*in{%&69m8yx(^lE
zz3>D(m8O3_W9X$<XVaePK%M}sP+UL2`x?fxC<&Dz;J}MU>}dSffA;DFvR0!hjubh-
z40^4o8Q9TV{iL5BBIz6(-}0k$Imy_NR~v>I9_kgiYo22_!b#y;)FHLcu-%xFMN0|&
z!@d{KQg_=F)a;NElhhiv5Cty<hHn6SK0<RRzx<zs0+Yvpe4kubLZMTNn1B}!LEB%X
zAl@BU5r!fwaAhOd{i_dH5V>>9ECl3)D$Ib=i2{a=9=XmMvOrP*Y4l7T<;e*gC}P6r
z2`~{JNdc?9|M}wOV#bJPH10TTfCYhU0Z>?Yoa5QUU_&Er{DyGq={8%iI)RYyLx}8&
zMLWga@4y?%GAmHPSu>kJ!DEuu>=Sm@q9rj~op6$4o$fA>^xW{-aAb{8ic_}+!495a
z$n^?KMUGZJ+2E-L{(D%#!m;;)Dw^Rh$G$q&#jq15ZzT-XdO=xfKu+-FG|^ZZ#TuT4
zc-$blBz3U#HDklb;Gf&>^^1TNM&^#_(UFSJlx0lsZQ0wrQygdPd6s@+P=johQ`dug
zMrBqachAf)Iz~4?XD)XvhW(0+?DSl|2q$CFaov2oR9e`IOVT*uucZX*Dmt7TPI9~V
zw{3yYS;C(BEnwSLXCgo3LLq99o;4D~>+4aschOFMcMd2Nf5qT`gP}(e!EAPcTKfnT
z?xbI00(<fBN*CZ*hlfM{>lzNl>j8$jqaV@AKLwCocG$IzYl;KyopN&OgvWGB8#^92
zePaVv3X_}*LimI43lOqPDvtb!o(&!!f{2kflxN@GHHkv@m!{?eP?wYpggCkXk-*;J
zTW1aiDl>lI{-e>3*#brp?3H^kfD+i-SqYD%0Te<}GM2}(;%`UC;L-#L;8;DDKJjLd
zRKQS0=*<|^0~X?2`KxNn{drjcltjdUz2Fiv1(%WaNtN^NYR$>shg;9os>*roht-aM
zU1`;noURx52@lF|<ESp!rpL?-GPj9AQ`rQ$&aTnMpAEfHJMaFLas$h#+zm`v;r(1_
z{lrCp7BHelN5DZk<pw81oe#+1K&Kgweo9vqVaVg~Crt&waSi*02_K6R732E%k$hL4
zeg8cgCK5e1G`{Me5<PbDzN&Hklg85_DbZJQCRUPGJk9m2a%GLR<&v~JDXAVJuiII+
z!Dq@=HOA_R`&(ec>Hdt{F-u4rcPJL2t8VR`!8<Q&Y>A}*Gk>H1%pZ@Ox-lpy1mqOB
z-w~>Kb`Zi&_V#05n_PT==p&37nZ9wpXAsd%uB(L>oqivw%EBpHEJQ(paR}3p075so
zKt4w(wvN*IpKRdHD3pt4zVgqk-GEd_ShO*^`iepcx%{^$AuO5&`yazEd3gsknouSn
z(SbmX<A1l8{p{q+HGl|>C44v9I?e-^ml#6VUw~v8AlRsPdnOxx5bA6{hT`IWSx}RD
z_`J~86RPvA%i#wRMi;?5K4EAve^9JY6o}pB2bm*r2}9L`_5EVXBGByxSk210-3y!Z
z{cFJ*8VZM}OIXT*gTtLW9)~|Dy}N+yX6u$N`6)i|4P*z=4*>2y6QH;HVBniUTWCGz
zSbt6KtZhq!TjPymjLx#)56b*=(}X5%s`h!->G{o8F)7{is;emwppd%x5u~(bEWBUQ
zTvC^fPdIf@EV6)6|FoXsrtxfe`B_rdlS94zTej9Lvr>OT9&U@~FXABt`{EjUJO+o}
zfm797p!Q#<N|YHIwGaU)FtMPPQPo$tO7c9x^kCOF44MdS>$5V-UB-x8jl!jg{KrL0
zwmpge^&)7Nj0^~|<`Va-1O7Yz7y#dq**P$Hh8toPwS|BM0T`KXtwupgJ*ABe4+JUs
z*d{nJ!EVhT7?9O!Kj4Reotg}*dY~|~kB<`!c2auAr?%k-S!fRuwZYc+D)H?A_QIv%
zQtFlm&~1b;^WLREF7&iBD|jhNAc)?uXZg434FJI|y-RR8Yy&TIAj0}M5V}^m9Zl7;
zla&kB(icM`%>jp;Itx8ot~a^piA}E?Hc5q_0PLtLZilN2)ILZ2YG$I+DH0-od0P<1
zZOEQyCW#}+G5zz6+nIoLwhNe%vGRWk$Y)d8$vg-cf8mgtu9q_WxEMo!`zP!+Gm`Wu
z{fgr11SeXj%ISD{@%Yz;Yu?ZOAW~~T@Va(HT#0Wz-w^+&_#o|Z(G%a^?c=3{N&a9(
z{Dzpaas7@(GKjBx1$Rs_zq<GPFVk>-7$MiPozSS{K-`fY@JR(qm$B%wFm@z5*J*%O
zf>ARtyAeo{L7jKdWie=Apfu`;ngb6&?3};?YYw^utM}G6CApf0CE~khu(R>60dtVW
za7EzO*aji(c~xteQ9f2MBT*qpvNV^2P|k-LK6ox)g&CwE7LZ>-C_SLFSH$2tzk<i^
zb+(X{Y)x?c+mm-92Pg<__a!3A0S3+1kbp!SG0P3ULyeHLn)P7<H=z*~kWYnOy}C8z
zjkdFXnAa4SK#*+D4g7Mx5ULRJ0Ogn5b8DqNOj`|Q$zoqye7p(HfZ!v&Yc~E>>5qtV
z{Pav*C`bq=*s*U(Rp$YP{a3`$IcHE18}Wf+?30g-y5s2Yav#VgNn`arp&~9QFq<yg
zEsxPh$d6MB$kvlNgenM>g0&tHa-xPvCiI`fU%I#yjQ7Qnx~0*V1T+9ga*dq#f_QM_
zUr$;)gFFbL24zE(9TYx95*A~u9Z-CUf#2(Ycs~eeWqo<=7k1Pt8&5_v7Qd(GXTv?M
zi4v~(#i_0mEXb?l>9rW}k!#a)OM1PA6MZfZgb`G&ltELg@u|~77A~2-qa?@qA^K0Z
zbgbq9K4Lk4BbQL&Q70yb2df5ezWzB?=QpDWsFFZmjG3{vC^ncMZzr_YR!rs%c7n>h
z!Pjwa$e%I{v7Zy_w|Zkq<vykaIgzS4t>e7-@Th{)X@ux-R+uh@DMLPQ?#Al-GBb!G
zwaZlyb7cR_3_pk?kJi-%YVeZ<==<@5+(ZK`wfTfP1g;(DVE&V=6FkW>KjvjSyPrL;
ziGURnUd>=7UE)ON?xvp^N!Zn2qZfp6$hTa)OKp);XDVo-2#7z1)LSylSEP5_`is&}
z$oJw3CNfkK#^s41Zqk#DWEg>mOmZ<j50khY4SJbBN8=g~bf8fn;RrC`1UZ?_2G@sY
zo#J`FLT5Q<x>G4MC8``}ccLvr!=&Y$t>0xV7r7vnNhwY(yuoSK_}s*XBpNo3i@KH+
zedUaoPIAWi_BFv3zDF7>kC*+BKfgp{Vil2>x;}?HR5_PilCIj&ZLJE_bzb__-IRwW
zXKG7dvn?p+`MP*5Y^`l}tdZT(2ci3)<shxz1>?5ozivAh+@1US-a#@39rVp!L>8-)
z9LBNs{7W2C5Yme%RlN5ADfenQ8S)SoN@v2`Gb?%4y$5+VO8evUjsex=nqEpgHy+dn
zW+3i6TH7$ex5#y&P}~`ePB4RJS`QHV7;t6FVT$JQ6XdSiJJngF!^Nn^ME%N4YIwPO
z74BWSOpN^(5N8j9_rvGiV)#;t51^rR-{u3Gf<<EkgzCEuzQLsJ9>>1!m{0)Jmx%rs
z4E66W6si%3(qWmv+P`cOs>u?-b1u|^T^z1J2nQ=P2k);UlDeD>si(gAr+VfS_`pJ`
zR~ID+3r)P8KQJ^Lv_Jo&0rCqW$g9?+?k$$Ok%`07{T(cU{x1Nx9w`dkm8`n1BD4%6
zkY&IHOyNRbenl?C(*^M9l}J@LC7Ba0Rv{3*CX1nZGN6XME;B=_xsVYKF87ZhNq%*2
zF-mPv3O0uoT*jclWXynIwEpOkUmXmrGogZf4A2+BQZ2Ab2`w=4U<lX%e`_{)@0_Qb
z=KCyyH=5Gp2jBwA?mdb@^G@QZ1fUNodjKteyKTW?xX!I1<)=A_v+~zO1#Jsd3^#s-
z(%VJLaMVeJng^O}Fw{J(l|C81W{;`a{&?RJKLNZwX#Wbg%0gzwQ`}zL7bWsm(Kf{l
z$d(Ah?EJJ-Q3aM0c_6_7+rC3;DEPdi)p71u<P^`k9H3z3zYFysyyVW>iC>Bt-4VKg
zyyrtDx0A~D;Lu~O#F6>{=J_mL(@z4Lbjp5o+BFnF5I}~NQXh`?aL&jaL*>5xMaPkP
z0R-~{iD$!FSMNO-F&zIT-&;EunF7gKXV2ho8+CPU#pDKK@BC-G-Dgej<naFZ5qZHZ
z)Sk0DbAHKv0lv@EYV8&88VlA*xijkquJW#~ROps)bJ9e4)8exg=Z!zQttK^T&({oy
zcX_-kT)Zoh>QL<v?tSs{_{fchW50*iEPd{U&5z_meBgMgTg~lah85nbk&@Mg$?jS%
zBnQC&KSzsP(Y==m+=WT<c+zvtXT!Rq7NR#X!H2}#V~GtU`6;Z3(rwI^WO+Py=r+{8
zMDwZr-5^WA2D~kWK^`v0xelrtCgF-EfFw{lWeYyJBE=4w$1+9G4+eRc2$-gq?WdS$
zW%0K`?={@bs9Fhdk8|uK2+V`)!v{0!V<$|y1d&CsdQTZDYd2+E7i9nP!MnBqS*H@^
z0w&^K0G*X~7c+GjqrZf4-^Zvv0<myR3XqOxOO(7%5eXKA8zAwP)hsir%FGxl2MK`G
z>DxxIgB2zL0tl2zRaRRU0|uJtunF*x2lWj)FbxR4rwr@{AfigmP#S%L>kI$}0`RFm
zbh4uhBEUl!m4%=805i>Y$^%wA%q$syVDU8*(R|_%eh@=V$LL?eK!3oDCc@_~kb1=d
zzUEGG%39CvLK_Ii{vTUQU|^ag)zIVvBzeIYA9ShRoS{@)B}5XJ`P7{NHh;~E89emb
z{g91|YWj~nF%#`93VSaOs2idv%X@@6jcvDSWoiHT7HS!DUAYI}j9bp^+WOuX9Kbrv
zNjZ&o7~+_T9^2_Ea=}>AEB&|mf)d;LIpgZ%`(0DE3p~c%{R%#vB^b3J&XTw-k8KLf
zHpSVuG)^&e(`~>#k->*{H{6!kjf}eP;w4o$*0ErlB04Bu?>!1Jz(5ua&_%1>WW&XX
zWY$YT5=U;j4Z#i}wNQQ|1CZA7oh|chyen2c|LF)QEO*Y0`!#Nfn28?+k{MW;aj16q
zYlH_F2t$6Pf&w;gVY&@FB544kAGlQY!qm|RpMGx=(hlQ@B`P8~IL~L#eUS3!MlY9G
zGTu&LLqK8Qcfjy9Pf2$?Gi1r;l?BUdu=-dq)uNOG_)MQTUs}^47+u1?cBxy?-qK)q
zOJRP~C<7y2#JLhUAKaR7gS|lW2R8Qf<s7V)!G2Jz)(TY`JEc+SXL|`o7NGc<I6^Gv
zBL!VEJ5+Nv=s57$g$`;oE2Cz)XEE*M^G;wa5NJ9b`OUR6i<_K|3$4nvDR4k-36GeG
zw#AGvuz3b5xx%`b_Xp6oMdZCd%CnUXYl6d>(LoQf-@q9vyF=6;4y+3M^3u;svVf#L
z@nxKNE>Nt~U>mUFf3O!zyBoub-kStU?<w-YI3YxL1SIT50_6U5a^J!>JsOclB)5Z4
z&0zfO06*!Mq;r@-wQ(;#!-Fy6d#aPDdCoOC>+&t*C-fGJQ*LmdP<_RAKHZ0BCS&p5
z_?R%1KW>iF{eJS{?Cyz9qhG`fO`a8#IWzB9A9^}NDp)=0Tx|`aKTJHj6frWS74!v%
zrD-yA(wd$<`gtYgZ(j&++D#whkfgT4@$4_EoLI{q?yHEB+RNOkgR~)r0hn5ptj7Jl
z>Ej(~GRR`*i*%L$JSJ{Z7F1DNHh|f1DMjaN39IO|DyLnpRRK3K3n2$MtzDInw=(}7
zje}VHQr8t=?^!pf%K2Oh>^Sro%1`h4!baN#LyQYfaL0MLh2T3?Kt89Oc&<)U_a*^W
z1eOrO4q1U-5p<ypuGTJsQG5|Y<2(+i$OpHM=3DtchQLTj^~VHq6G6dKkwUWht))UN
zt@=XVRe5~6Ua<~n*kX*mDc}30^SAsTRq)XUxP#}Cy&vO|qzqB8I4%XMZ~X=V$^tCZ
zC{XAnm*kCwOTD#I7!(q1_JcqZ#REWFcQS-f#YS_gyYyNL1Xdiym)f5J+AWlzf5JpX
z^sV;!$ViafcZ-D>u8xKnZmG_Gk^;%q=M~VC=@$^~e#+wDE`pI$%zYW4E-*!aAb$a1
zUNR^`a;@M2vy$+Hkl4pWE%mFrTypTXIoJebqYR9@!b5MM&&6V5$^_!^mB;_FjLQSL
z$f&cdApJT{D+C(ddGG@g0h4!LKEsWpYPLwKx8-sYz4%Gz_;JA0oLnb{5|odF%su4|
zl+>yzY(YBi0UJ2LMl9OMXCWf!?##0w)hG|ioYyyCCEvhphY5M30Y-mn#0M-s#kA)Z
z96*W>^8hPd?;9|3$n-Rogkl5sQK{Y#j$Pqh_Yz_&@fIC0<6*&MdJQ*#PwQY+ew7^!
z5GJj90oNN4?`qwC5P0kWsdi@)trM7u@3AK0+OHaDJ5NJlb`sy#7`7(JU7C=4i=#>-
zO#?^sS0vv75%;DW;7beumiJuho=#3m7jTdc#Uh^{MiU+(3}3vf7qB516(LaTT@j;i
zd3%7x#KG9~p%@48ETHZyGI!cyF7C;8ER%&tYsUDqi3M6mswD)6&Q*%ofmD%9CYtS-
z0xJD(U<Xya7Zmc#Sw+qrkbBKUI+F)IW6-&}U9-->nu(Nse@_Y9#n``0;G;Ab`uWS_
z%ixS4DTRx;h5#6WI80Ml8f}zbC|rr_GbTD&=q2!wplomoNt~4U00*Xw+5^Ey^KE#N
z>#y2aoGoY2lkvC&MP}yWm_|(kX}R}B<rE9`B^XUzvcM@#YOca993-ftAKtPfW=9`z
z5N{!wHR+a^(OU^^UGXE1mM$fK6;K6#1a;;miC{8KlXZ>(v;E^3_Zn6WkZ=a<>Ek4S
zro6|XadKevo?iMm$C=iyKBaCJs^{(-m?mXJ(hIC=^9dU9Vf4AM?UBPZ(0Ny%<^!3R
zeqr@<&2ibxWVc&9;n#5aTS=G*8rjWzr1kU?qJ9cJ&xzLH;<+MYfXv!uH=v(_*;+GU
zz(WW0C4$SQff^epZVO2{Y<ngWW&gKNqV>0~PWD<@cFz5=uqlf;xl_M*r-V(PRkeIf
z7V#L2c=3C5?z8azp*Ryoyo18;^|_88BM~7btu4y(ZOom|Ch%4ZO95hfk$K)FwJSnq
zHi^5lj}K*x|9P2YHud1+KFK|inwuBPN2{9RKDua&$EY7P417H7zW)9D)sx46vUj-n
zkI1Y{zrPNY)Fz)U%uRbBH>!=M?y`hDCi@=zXndo8e##d~wzl^`e*KI~$~k&Mp62=8
z=Psu$sW1a)c3iX+ZRMSGN6ghPW}PTQyB}XLho__w+f??Ov3j+XlE<;`tVYaKGbXBy
zRxUzYyex_CA&6q!-`KO#bPP9?PMKX~Xz%3XGj#|>oWZOWs1~o2&Vh#m-XmCjMJ(02
zOV?p4Y44m7@Ce73zTVK-LcX0qsNERq<^1!&yvNb^`r_(EMD;qLOGXjA4I7x@>d?0X
zeO1*1Et=@(M*)*8?Tq;zF0@4M&jX~G?0-tr0(owsv@VU1O78jq^HF}}xfXDShv6#z
zMmlpL#{uNbDqqv!A$gAUin4=&Zo7c&Yu(^^5EJ!IC8jALQ?7)A=2e${QV=P=;e{ua
z`qs%IqzW!#*WZ`eB+oi;PWmlRyB;SX$#wn!I(%-+5jwM=zgN}>sH~?CFaX3*ZS=l7
zGitG3j4%>li5&Gaw!KeoJ8Av|xJ)};iV$B-Gy?ah)_w;7hy5~Wg5d@pJePHfhBD(=
zRLj|V_A8Lw2L$Dk8i2Ef2@75KJ61p7F#%D1mx(;rWC8vL4}om<%eFpWAnYMXDu==8
zZf^kDP)rj0G|}vXZA|`k6hTB1fpN$r6Ub`S1p}b{b0aL18}SBX2hhvn(tko=<i*_n
zicBaDcnd50K@%LfMWk5a_;eA&40Ou(9)ib3O?IYI7r$D8*6M)MsuSRoFv;5HAUeMP
zq=?E*E@}=)+2#fK?#kgw_c1i{^bnxD7}&LT`5=0)dC5Rb$K@c(e)!_6L*aZ_lSB(y
zR8~=enhd@WjEoA^QSUBF*Lj<b6mHr<x#oa<tyNjUwHSsGKJo89%WMgEplV);&=hia
z0b|ET#7xU_PXcg;WWBk*ge{@?tJH{>J{t!oL3`L9l|U)fx4ZA}Y##YTd&W?*3hy~&
zG*QNB^{qS$spaAn$22erGJ(w9flfbdl!~(MoVb|yWh-jdv{mY3ruIoaZ?VFt|7zUT
zZoke0j9ni*uf4oVDxNHj=L`QBZ-aZA$$waFUphZOrl}Ns4lH4!Y08L`3fYJbPKY~8
zij(csj50b7OFq%nhp?o?2%Fv9Zl7CAoB+&U6O4ASFbG$&9Uq>!dQ@`l3ZHh30if-v
zZvSx(oWaq4#4m#4Hhvv&qo^$m1b(~mjMhEA4zjCXA9cs7?{4qevHy;ReF}?zA}Pe^
z)qyro{0-#TIp>-u>1xlvd;BWd@_lE8wvp2{_U9HFLN4EPFA7A11kn$)Zy<B;7aa8i
z_>#k^1gShmFSG=;M(-JcRRX;D{q<1c+-wUc+bE^UMJl~tQXYQsR*!BvIru;hYBZLG
zUVittyr_zk_#2p+Wv<(N%p1&2jX+3&1r<9U9IpnnL@iF5uScd!o$Q*KpF)eXA{q%x
zlOE551+P8EF-WG!tIS^S{ClG}<?l#e<RtMSN=rtVuPn3;=}euYh^nxviB;wDR)OsM
zU1&P;0n=XWF}{}j`x}9VqiOcvyr;NNTM_x=X1L4YI5MiX$MAsvMd8VK5m*)xG@YpA
ziOtN}$;Egiu$@%B+m(0cP8xz*td<)T@Fy)CMD0zpA1bY6b@@oD?7T?2iSm#Vm>5;t
zkoK^-mlbn49SV;Q?SOJ0`)XsaCEa0?*+Fup%^}789eo{HEHtj?d`ZXNXUUG2#uN@}
z10S**X&Eyb@UuAe_k!7?Bj*`Uhm+P>gi|`|Kd_l6&s85oD`EtId*qzOcyx#(K0p-x
z&S`p<-<pLGsr*$of){_FTe_u31;;`!|8(S@4)|hy1MA+M(<$w>`~lnkG7zW^9aKw|
z+qQUX0TlnaC}*|*{=t1BZ7{~_$j*L6_&iTQlTEWivYBWqZdhJ|+>p|V@zLdoAOiAe
z$W)MCa4u_F^>l-GgX(+D`^!<6+MZA@bEE+7z2A%D3FwDYnRoYvcX`++XmwX(zhg3c
zY%(j~9{GAy`0}G2WqNi9wPM?YOsH1=h;x@W2dVTyl~mu5yWteGKO3p~#gO2I6q)gW
z{NddS=;xL&e<k*y-BD}Zn*A3vUJWw$6`a!FrM{9D+#fyB6RQ19?flNv2|=lBELq&B
zlkvK9phtn3stz<qylk|KjCO!zENy6cZf`@3<nTuwLYnR}M^xVoVf%fvw_F{0nl>|<
zQd#Wipnuj|#AJ_7rz5|gBR|r<MxT>=AT++S<W3n6J^1OZZMOGIa?tEQ_Ng*cR{rX4
z^*IfD&LpXElS0iIS7NU}s3u!Tg>N4Z`<8Pra7T;h?!D%eYZniQGBI3EixHkbc`1s8
zJFGDagd#LrDFJUSh(XX8mt>+WWig}QT!dIPP3xlESvAc!a@GF@h8X>2_DO0o-A8LT
z6gsa_yfwdK(PX$X7ohkmToQ_+3qVnHS=K#!>;;}1&K)zqaAx3!kJesz>2%lKLYc!u
zoM|;md!06+Ci=Jj7Ir*V^2n#thRv2NJ8|!FuA1!`d~K+JulZaWJ}Yfd?=@*)z3tBG
z?>+ck@fmI0pTb$J9UakY`kICYE8|3|f8CJzX1m0m?Kh2<q+ug|jlb^5$37jP$y~=M
zX*DS|vSObfIdeJ|HUPV{W2;L72U8QXBUJU~pH_$NyK~;)-nT`u(0@eHd%6Ej6x|Vh
ztDnARVNz3}Wpk$L_m(L7KeuK2elcTtAKP&EH=pbcWuvph+%pP^E-qo!&JXtLUe7F0
zBAt`OlJ!<vKe}7bwE~MhgGq*1<MrV}_J^L~k^(^VsB3fKr$y7o3dOxYo5B5iGXqc*
zeNdP#@@~7iqp9Zn{2s3)-Mceg1?1%Td7^1YsZ-t2k-bG{tg4zR2IuD*%)65(ota}R
z(trHTY^(hH*HJbxfmo=HziOt=wo`;&IG^~-Eb5(CYP{h64-~_b8H<9n;o&gG_^P8!
z?EFa9Zm5d>)Rqoa(G}`P|BEWRpxFhzSK?3={k3*qqCHeaubB7x4*Ax?(u-RE;yX<F
zJKo_XM-COoo;g#a$!h64H%>H<4bodFGm9<{6mRxx4=^5x-EQdjF5HscIT9K{W|*;s
ze#Be~vGHr{)&CVUHJw#s>!3Ju8uGw$X)Zml&(xxR4t*49{_16$mxNyCjhYdkKk<<@
zPM-Rs$s%P2qn(b{KBkQa@t&hMzMr~qJ*{wQ=C<zpea$gyniD&@-ZvN5M254Ri(nZH
z8tP&A9*FyW=@W%T$Nq7w+HB*|w{7AbOo#01gYI!VE`_TF<j;f(?H(NVs~%Fm!8rO-
z@Dy@;Jctp#DK_x&?K8@`%5v_ew9bjzw{L&29ovV|yIjk6`FZdON$|I|Hv1d5(8SQ=
ziv}z|CsvB8=hb?@zxtOZdPl3q_sKUHqu-|A)skcAD9hnPBBWN<UrvnL7k6}BsMi;M
z&aGtiDNisZExCT8I4EwXb30^|-SK1U6Nr#y*3ml;rdXn02<!zzt1<Q$k5jF{(%pKl
zOL%ow!$9rwIS$6!<l(3-{O0ms6@1=1f)X&vn~(=9GVD)<@6EMi4%M6k&BvhD!5XT9
z*8f#G#s>lM%8ej1BL3O;C)}(nt4p0XAbwLll@YPJ;v4nX{0XLA6P`mnYCRUc92A?W
zSRYrovun<uz!9=)^bdaX>&dg35A(6IAa??NJ2d%GQ6R#8NSIzWxoSQ4HjvKMgFM;h
zGQifiO;qSht^`>R%Q|Jbz9I5B`pUo0xTfCbyNW}MGM9{Ah{F6Y;LV;aN!b~whradu
zKZ7^#{ciwos_l0_pmEOE*Vpxe#^nntUK&9`PQEJ68t(4@4S4f{|3w9VU$+}3Cy#To
zi?GA)aT@3!IRgMZ^acon6$}4^;g;)$ANHFVnH}BS+=Tz3(P&$L=m4ObbePCbPt!@D
zsR`(LeA}cG0ZO8yn@VK#CIBQ9Y@(Zyo1b6E%EDVojCOdRh=_=aii)wZv8$_VWMpJ=
za&l2o5uHx|@ZrPA$Ovp=R#}-kP0j87Icq-4*xa1{O4%%}%b%X!>;bSf80~}2$Xz#g
zDcrRD=krZrVSm^a06xaFPJpd0Zi3d1&24u#BTZ&ebn_@!MK6rqzdZXhuDZ<Ybu@l)
zae(%JCScQ{kaM|S)8-#yQx_iLZMbbtT`ONxkA&|kPfO4v{?B+#RtimXAsmWrEf%gv
zG{ox;Ep;uW-Q;Ikuc`4-8_i#Devr1YpS&Ehm^S@8JkWAC_iA8x|5)1)ni{52*c<t-
zr8Xx4r*kx+VtO&dKB9KjlvP$flI_p(>h}$9&BK(6Q#m)QU8`6`BWmr3n9EQTj~h0#
zIWqxKfBaUf)+S;uE5+(%7NlqU4P6?4VLi%uEX=%+mZAU0xBqVb&yHsb7=imV-<MZ~
zz@_|S-bdJ21@3!>dI(C9H$4wJJzN+%nne+lF!<^w^V<l&aoAFnNss6M^D}HJq1E}&
zLVM<DWUlD1bO(~jp1>gsD59J;?H9JPygHGNh_B+91WbP?*561U`jJ$cB_x`*@JW%F
znWTB+F>}Gg=BnDBzZgoap|$_<v?uLrM%-4B_TuZ`zkJryRkUUsb5J~wSFaI{)m{Jo
z=DFS}Dk$)Xk!>`=U`V6R#^6%t^?5|oN-3aF8sOZq0ecgvf=s!x2<a>)PqltHlV|fx
zoG0IfUqW9^hWG#A?;cv}3~xAYU(eYQRMX10FWaCg)v2jZT64U#^80jHs?<5NyHtnR
z)0!KK?=q!#eiM2cHa4PlwqaE8_d}b!7Xg2lx!+~(-l-QJ>cqbN>(_jTIL~ygTxp?m
zF@RCNZ`?rN!~rXJx=qw8v0^Cl^InGsn>)a@ljalmytz=*m0ss$_%`a$eNnL4aL#0L
zZTs5dJ-r}MK<K%A9ap>R=S4m6*<hogws6QH=Y8i84z%4med-X!v(_o_u%O@93}H62
z^$kPg^yKPkKn$o6xyW|+r^~`+HhH)EP8}CcGJ&0G!)U_vsj9Jn+S*?4e-i@Nsi#z)
zKNx6^iKVpdK~!!BVbEU<TMv;HO3z9j>2KbC=<AGb#K1|PE^9*aYb@HHHGa8ctlMZP
zb^J=_`iANG%wyQ+cnIno=K|f|ZMa`CF8*8BWIN#F6?(Ze{XgA(2|ShC`tbAa!8~Uc
zc7u?i&1Rdk8;Hi8WL9SOHgDT3y=l;qN)n1{6DcIg)Fe(R(jbwN;zXqoX;SH&Z|yqw
z+&cH3d++c6{kz}q_wC)=5AXY~wVw4%YprM6SJ78-v#MiINt6icbAQVyi_BVk(#_>=
zfa~qOr;CQayl3s#q_e1^p~}M}&);U%%}jlW3rk-r^H`PB)w<QM<o!G1u294SN0#gs
zRUK}1?T8kHf{_V{Gav1q&Iztne--xNVwmCZI<(zmrc5oWxXfFF<yy5i*FUBUpFT7{
zK?aYmzZ>pa8QapuY}^^W-Wva0g~AUW(QK`RBU3%Z_dVzy))~WgK6g6$?!c+@Q;LGR
zFnF6I6N$PptV;FRdD7zTv8x`!(&BVNBSTmS3Opwy&lKL8T=!7f?FMzg{r0;F)!0;W
zpOLMG@GHqP2j-p$)!gRcDt<fVYQbDfpEAurdj+sGL3f44&M43SoL04Gq{8%}vq>#6
z*<iZpM`;ZC0zSkV%{_)obnB5<QIv1z-i)POF)3r^k=Itf$&8`Y=%8(m#>(Zvd0_|U
z6^)1;Z<ibvq9hpI>s<cfL)M{LXXU#;YKvBATq%%Y)@;@}?U|=xZM?~G)jEt3F1G5o
z9tl;_;v1QLby1o%u?MAG#^<%tY6L!*$Hi)iH`abgmz*|KVDU~-4JO@7B^o0cuCM2c
zdwK3!vmm3*#|2gz=#$5H4|dwy=uO`3bNz_|?H=<?eU4YmC<vdLYLxVS8A!yJ3>52k
z+4P;d;6L4Lb*+*>sZE3Mulicp+n~x@<Il#{o}cmY^CCW56)4K%Ytls_f63;9cjRJ+
z$I2HY4^5XfNkhxyb?<%RU6sHXTI(dq<9938&a_)0F9u_BM-FU3{*uWYy?eh^j(xe0
zftA(e+h>V*UCarY1#_#sAnvqc*X-FU_?u6#u%;!j38a>0p4@1X+_wbcg1hHR&kjx}
z!C{}Kt_^|Cg2zP|@6dA^H6py4+h3k_5P&sqg=63qT@f9fk#CUiU!*X07xHZv5*zdQ
zEUyDqjd@oILUNsWmgiF&WE+-Rx>f|AngMs8y5$I>!o7adbqWjt2$w~}C1KU^Mv`vr
zAErY=N)L%TbPJ?VBBc5gJs!goloB^8l)tn%XKCjTFNc=L@F_Z_hrbnKhK&+4)P%i4
zE285w%5)K#TH6{6|3qkKWhc+UnG1@s7Ub=FG!*u4JmRsbM`^|BHAqg-yU$wMT~Q1X
zWlRuEr_RVW2CSQR?x0iL)hRqspjCvTDv(h@V9x8ZnUyvR_Ybt&dW|KCzqW|c!xN5I
zu!^@yGp<W-a7Kr|x1T@^JCjowey7@{ba;gFM9+mgW+==X8Szhe7P(n5En%(3V!~v1
zhY;niu$hV7HbpjUQfE{^e)6d&?xli_ry5nT%MPA(Yb^0W!HjP3>YE1Vi{k{~{u4;<
z+2z%wK(gO0O+cqkRXx~9bHa?1*1BEMb%%wIzp5cHlW*R8Gb_7Kx%I$&mA-2m`tAhk
z<2kxrT|3!56^m%sAIj=ut-4rqprs?h(7@uwhZ|J(@ru>r%7x*_jKJo;ror;%_B{@s
zv$4g_y~h_UeMA(1&ao1!$r?DMdU4m-NGo)l#*kc+#FNO4)ym^qFlmQ1T9sa^dFk6E
z%@j%wA~PhQhP~<8QAkkSv&dc>D0Psf@zfXF@~#zY-{d!qQ3bQr@rIUjWZ1ZpF24lx
z8-|aw#_p;@dGq{mpQcw(B@SITt4ZxaiX=RCN2COPJt2II00o>haz-kkVzEn^$~dPZ
zP!him8ERxNy?62JMQhE>2)tv}fJp2Z#<(emqjEF~;v1JiD}iaV@_c3@2#t2c!<9E@
zLWJRwhd$9BI51Qy|EatqWg5)BzmFasuo^hzeieA6f8_(5RjqvvrCduALrZs+6-AYi
zMjF?a7u&jzMEQUW#zAH1&D$xnFpm*GVo;~{Oc<O(<)K9_kwb$AJRc=z1i*fE#;*)0
z;3dskm~+@b9e+`$(8vmGRyl!9%8G7Fnb>LnNR$!_esl07<Q)XLUli6SRN8hoagvU8
zdIl$S?hxkbe(-=O4^h7S69zp(EZFG)M;)Kq0}B^y1;3{%pVo!e_ET{`LQ8J0=oJAf
zQkW;62xdqSTQJ^|ntRVeQT}4aMe?m%zp<}5K@v)lMOak>`og+mlteY0X;+vcjq#oz
z2w^p$a+GEy7%LavCk`d&&LW>RA_EoTYBO>Du*{>hjJ5tw{;^#3@lJ}lEdjrl(kjTi
zZS}JTex2CAR=zyv1^eg+W?l!a=q};b2`pdO2%9|tTFWdioH2*D4xaM@*+Ga&O5X@+
z4_}JE?kL4TR=Y`qW@7Fl`(@E9_P(KqJ}*AY%W%T7nD?R7JavKMnopVP4AmvEa?jQv
zqCC>0HoPT&x*w}4k3RupYf-j0T!DV+I?#!sTb-Adk`Gy6TFTBOd*n*Plx%YFRI0hv
zM~6XnwOlObHy_Si8P%8X-95FhwqH}*0=E>S<czI=wL<Fn`T3x-Njdw)wRg1SbFV(p
z=Iru*`s`AwJYIErQAp0ot9lck6MLWQQPxB*fs*ctu{W*NTNG4sUSEs4aC}+x4I9t<
z0l983`&QNqrt7RLPh^w{IqsZuU4R)xxTE#*=t8|hlAp(l-oy`9ymh5zqa{xsS2{Y=
zM_-%Nk|}4P3h*hw&9bT-o!@r^$H<MQC1$)M)K8W5nekbHCCcdVoFfNuF;i|Mr{zWO
zeu~2o$*@U%9v7cPf`b_D>^gq`Rq&=~4WR59H7#8Lw-n+%U9*&^7_S$J1iWO&YS=05
zD8i5zMZIP2sul5)z#2=l2$XKsGkb4m6R4+O0%9Viv{PlvwS1do82YI`$3F_%hh)P|
z{S_>j-<*PZc^&TMr*e~kVdpF73Q2HAfzd#UP~(mXwwvBKAOCBAfxO4L+Jc`xKkg0G
z{cPc?83Xz5IcEs^g7{PcJnBo?IWNq3h6<FP65In-Q=ot6H7aL{@0g|m#{@i72^ngl
zUZdu1DP29bGoV$J*Sngi)n@@cs}dKZ>e)c`ybpe-fIa?nfP_zJ;Uu_}kd923EtlY$
z`B<-ZVQ!X17VtR~*2-dtMF;2Ly@U)Ov~?OknubxYo!>>U)5kxy)&u@RNSI<l;!gq>
z)%UXp;;VX$;(o}*wVX^jfoc76Ah;E%MegpEQ`v8w-%F@hqU2c6BCn}W<UI;mmv+3w
zCE_z|!wY+1LJzc2!YM-g++U#Ivs#$<FjdO5UkmS5Oq3&KNI+0@!@dYF#Myz^v29f&
z1g2)QBt;N^aP|T@uW!I20v}|HGo0iZ=XU)9Lqpo~`GSW=&%U_L^&><S{`_K?S}nng
z2t2ZSo-#wOWve&}FE+=2X;DHh)C_r2#z6@_2-EkxhoI^K*99m&rZS`JwKt)q*>np5
z)LM3XBIKXZjnmw8^VcPM_a<k``9FZ3#0Z1Sj#$fPNL%%e&|(Q6=cirEup;0K&{Tv&
z(3@SiBf(V!&2O6yD!jbs2sYR@M^PQ`B{Sa&mk}}yB=IPRdgTI}1u!aV+O!Gl@4<fB
z(+x(u#<8KxjxeFbsKBzOc^`j84#?@vmzDEcX$a|#0jQF9+kNX2vN|ziAuQb^%-bhh
zak#T64v5a@_smE{&L11rE<b4qEgsO92iG>eMK&lxOAerFVRxBZw5-UDmOY}BJjw0p
zBcFQ(kZ^rwzJ<(F*&7TtviB#D+0p_l5`(8qBqv^0<8N<D#>qC0K9s~-P!^}B5;SQW
zW0ACh*HHgj-fVAX_6v@t?TNVK6<m;Xp^CbV6BvgS7;0F5BG&)w+@51)x-Rp&o~#u2
zd^P>H4fe*?1CF)dhPlZhaE8#nz144qk~r^R5n|gz5W~sj#B!z%<h&3e)~84|Cm9EW
zp$g-}Zk4(SR4h`mOV3M+QFsAvmaH4R`F!bqjXqDcqDk`^!uPYpc;%+`7J|t04EB>L
zC|AZlixM3&BX(2K<7LsRH;*DeP>h#T;|UGNC7{m_Q*5a>_Pi$+C5>PG?QjJ#DA}u4
zX<n^7%99MyB}zZ-X&1o5$-Mpjo{+Zuf(8D}JtA$jBZ0CX40|9W9+MT+NhrhyW84p8
z{r*caYN<?S^l|;{%H>(+PDv(hPfn#5SJa>KkaN#ple6ySgqu&R?(kKtJ-q<(v#(WQ
zNy8T(Ck-?_b~$xE+cK``*@^jyZIwRf4z7$GiQB&4_GZr5tzYfel@7lN$eohc-BI*`
z*x*Dk9}PaVeaCJ&{Pn{;G7l|0mQ2K~+J}2=byAIJlgW5)67}@D2JfJ}!QweVO{rX0
zTDlu*VH+}W`l&(u0?-g&2KU8y1`TQMpqwKkknvdx@7pJL_F7D{|3yJR9q5o@WD7EW
zv*IbQV|+YGV)k7qM&<kP3AeEX$+*>1i=pJmEfO<bX&hQK77t<>sC=Y03`|t;ki?^-
zOx!%lCN#eqI6J6Ij56(9DAwYCc`@{5N%U{MK`ptm9^x_@%V1Ctn=Jw@SpU{n``JlW
zoDd0c6=JMHQmjJ)nvbY1kJ;REVJ-4_C%-BqMI>9cnEf&bpGFJ8C^W3|eZt(gd61U3
z*cvgFWGf02K&}+I@t7kj!PnI{9U6Adkyb!VQ+<Li!LWBFp}3Na-mwV>xG#@eilRg;
z&ba~^p+v2i&S$fbccL07o~U7OQ*W#fK?>~oz(R0aKUsKp;e63|e8{g8m<Ly2EiuF(
zX+hC<EE9as{Wx(P?d+D@UIX5<7xvEK*Q>7%daOp<C2{1qObuzeyCxH5!_|>5w~7`<
z%aI~oX!t1;n_4Sct8`9+(FF>Uyb!|~r>lYqcF41Z&~gDv*T@s8t5;#|_ntOhIe+>E
z>G2!_VnDR48^oCLdU?LvRnBOW=UOQ<GQmLvuNkTZ_Te%S266VLwKMT*jM7K;65l7`
z9t#o3T@A~>5<G`6S&L;A>0*BJcs098m)z*z9D_{NEyo1i$CnCg(sLlglSo+;%U%Zl
z4;Q|BV`w!QE**pXte+)~s(>MA)u=Fh^XyYavia+?!9g<9z4F!PB@i@X(H+o2Vjk2M
zXKV<OMPvCDY@g`pkSMDNND^_tg_<lN8t`$)3IgJhA}Ksv67R*BF_)LF*HCFR(Z1vf
z_4VUM@cBL_dbbq$O$%foVwi_l-Sj35c}x--pLE$E&cr|~E39e616Xs|{01T_l2I<h
z6U3mtU(}F$95eb@7@Y8QjfS}bHP&e+*GUoYR{FQm@U{di+MP-f-aeNo3+PQ#m*gdV
zIMmlRreT3ck<6%_g8hkV^x}618yx3g9$BesaAs+_={hXv(H`YUZ4t(&o+DUNHTk5>
z<PnhRz9c$<4au|hGuuKxii21yx&5A_5F;#G8wEG{HVJ~G`)&wwW}AS=Ygd;_=1lxN
z6+au}MKnE_CqX>6aM+MNjX}U|9&7RiVm6s^sSag6dLFk9`ULPP3LZZ2Py!TUQxScN
zU|OrS08w|*nNBV?U2?-b<<-!y3i&3H(->>>pFoBZWC~<hKnESajxoDFJz;fVMt!Q}
zO8GA2bvN!k>L$R*mShx?@fU1koGaAWyw4QeoR#+|t$i+mVkoXFkUG`@3*qcY0I~jj
z$=+E*_9G#LmO5-OSbljj=$XlnJeaZYqIc7ZPweJQV~eAK=TITogD^pWj>I{B(;72?
z=h&Bg_F`mJr{^@sqi*9iFkuCTQN5Q5j76!~l!gXox}x(zokhuz@h4SFm02)bkg=Ze
z`koR)o`?vPLIy_#X;I!83~W_(vECX7nFkofUesyI4~x)8etyk*7rmB9*^~iCg&}=M
zkhdkV%Im}>xa)IR&gIK_+k=|ri!k`SKF2jlABv3NgBb5+o+rT$QMd>%Z=!vpcClOk
zndyudU(exw@;DYiX57304pIy!V4%GY^0RPtA!Fw~-Iu0hLP$@+HG?c%fnbOHn_s?r
zy4#Rohr;2s(E+3NfwYSr^3(ZcYa{QVb=?jB0Xlv_^RwgV8*6-rnk2cMMA?mH6zax_
zHoA?xW{b-6#M?*RwC$6kZk8_ed7`#p=TuVRLN(fF)%m&E_Ip?D-+lO^zu?B8;zFAw
z-?vAezy9UM1Jd}YAag_$l9uu5;m)<ibHyic?GrDiPb6JG8@A#6-k9W35!=Aev&*xL
z>~rvQ2fVL0t-6vrfOL{>T|HZ6wN3U~!pgkeS-7kgrnGD>_V$V1GRB7ar``1DDahw@
zB_~6zAC`>1H(nf0u)B6-o&dA=^C*E?d{q?f>eV!`d#caV9!T~-ATU#m)-FN0k<Lg&
z$uj2rO2Ue$c$<pn5yi_^{SMD0ZF4`}O!v?y@FKUZg%61SNEyq)=0-E2y@G``@{ni#
z7@3)PT!As4SU+BG1s!wo(#7t4v6iOl3`Ru@&!mtQ($#@E{_|SzS+!R&yJBoG8KP$k
z^Iim@7(wuQ3lkJPOPz7r=M<Up9&4EiMxn!6INEBhavhh))5Y%9Le{#KXG^Tr__P#-
zAukVYd4@F`sCf=pXRMO|Ue)b`@#@vx!7d)Ml1>oqXgFHy9cR2nk*`L-PCZfjfSl=(
zf1NnvNsSFQD1cWJC|IK>0ly8(%YtXakW1yfZm*{M)e@B5q>L9B^B}HNl8-qCqU|KK
zpG*Tkl+0V?5?XgOcZ*R%QL<3FXIp(9+{|ILX;t>8VT01Jaw$ZZPf6jW_iYaDaz~<2
zu~?lLVe3U_Nv}U_dvL$w)+92c79#HNIBKGUmMHy?3%#2#Pa)pp;EzmWZar{5kFwBC
z59O$A>{@<;eCRMKLk#@)dg+0(!_+85G%TPNPA87%aD{O{VoNERIWh`%$<Rf&##cH)
zqYexr7vHT|krtc@MSD62p++syM@+PvUnMFpbz1;GKNGF4c@0G?U_XE3LA!iU;o@w(
zv}iw4s<|I67rR5+ntISbnR4q;DHv6>>-Pk><t$M1t4;P4;f00W6QzU_TDsKIEH|j_
z*`@{BY7BD%@0Io7sZ#OA=Lcu*>;Oj<ZDmFnc5LrRUH=meC77V%q7PEY>jfwe1bLQt
znGkYurr>FrRK5m%r{T)buTTa7t~stNgEV%ht_DFX2o*;_YFCn{Ey_?6=c$tAlQ>C7
zcZhx%U8VjKS@2xJbVD<N@tQJ?@e)HGq@^Sj?@<0OD+u2H*7&Sc9yEdj-nwM7XMi#C
zH(6~s2U<|ZaiUjy%6q7<KH<w3D0Q`7^Y~q!Qn&-`%z6Rlf#A3BvUNFMeputBM^8yI
z(gZSO=ahc5bT;IQFFEgY@h%wE=$@5ur*f6>{1Rdda<vbIVpdy6Myu*Vm{<%OJe#CE
z1$ik=kZ}tP-3Z4f-H}`q4+L!?$`L(ycG?~euB&c7w*vODPc^vtco6%=E-e5}w-mUU
zI3~a>mWD&J14}T+x_H|Ymn=)jlx8gG1r=|1=q4OHdWyNvaT=pRm{;1Q4_UvqIbnWE
z;L$Ju<GCF$mGu6mWXlv>+pRT?zhVfD#qv99P>Rq!nc?LHNjqX=HlYw-#~#wY&^tSa
zw~XY@cq@dTy<oGUL<c5}`5WScc4f<nc(YHDo+E9gz~>Jm`)4Jfi3ssggRWeJh!~{y
zpgwLG(2>bPl<4r-^_Z&;p8ELXlL8qk;<{O=sPrXi0p`)*CMmF7@zd$S_oFUPM_n}i
z<QPXAEPNwg2;hjiIN}sN%r6lWv)CodTU73#ch`AYx)D5hO4IK?>sws32sok)HzISq
z80TQJfz_CYVHUBmv7#pFRn28PVx@Yr$;r)N*cG@(j?tQ<e|r}(sHlf<{k8-Y6n7|;
zDuuky<@?f^L21T24-pl(#(p^$MHw7A^5$*Id%Z5><kMqysQ9fV%8BrR%+&KYJ`ted
zW7zfXeJz%>>M%>cFI?K+&3qZ*SkBJJPdV!geHvWMciiczTGKX~6t!_G-5Q-u+>Q+i
zXT|7s`Df#46|Hu$*?7SIBQX0yNq|GP?SNrKm~ef$cJ4|4wv1DupVitcqRO*!YkCvA
zWM&CB-YR?k>$)W>h5OImuS08KKyh<uO)=3L3eK{Ul<LlC&&YInbY#X$SwXEN@TB+d
zKO9vk1owM(Dx+Bql(cohGEN!7#8&d_0Tgd4df8Nov0|kdzIZ=O*D;HV&J}?mR`FEX
zlN~2Du8`rHLRFIQYH*l~8}(^8V4~Z0l?p(Y;2c~8o5pzh)2#QW=+vWS^~#Lbrd>dS
zdCqH5MS4c9c>jdheCTT%knNtK;WnQ3g<3mNT^A?~JB8|2i!$O-RO+lN(Xi`cAe<3K
zXCQ7B^=NHb=@pOGZ3Tq0B8&n{=qYi*+D%`n!DxWIR^D7J<Cy>oVLBTYNkXBTn-seV
zcB`S`$)Q(p&2vy)9apIpfm>;)ZuILziI`*JS&8$~Kc9<w)6lNwDZvY)9F2xn0V>xP
z;&j%Mc#k&gLLaAl1L7RDO0RGxzrnWz)3HG;qPR{D9?iX?3XbR0NbS?wa%6{O4odJm
zYnbR^66PV0wwy5}F9mlCc3`v9fazKp<(PkzXccxU&zj#%EGohPUd0A%$Vde4tYU0P
zdV0NprzFxAn#edLU)8^iZ+LU_$rnWj4>hxkvK0e~LrpD2-m3e0ilqxm2rUk<CE0;*
zE33oF3fm*i@t68A-fB<^8JAMj%T8l&MhI}YoQC-cV&%<xUQJ{lM?qf6=ECgr1f1-X
zFT(3vrw0W~w3QlbRX1L}E*W%d>I50o%N-%FTga<Z>^LU)NZ|L@_Xv5tf3XCPJl!rK
zhx2=p!KUadRL(hei=bTV@#RQ31hYugu!9+EVQ(h((3#a%BT=*yuAIo?DmJ?H668H7
zwmqB^R#>BG%9KO8ELevwvCuW$uB1EJv=pn{DE!$*uS-LO(U-Ym7M?RtW$WSB8y#|9
zys$M6?Y1$#L{e3hpBhwbwVJUaWRVeEmmkdW8N{eZb;3ezt$T^{ot}x?y5y}Cg85E=
z%*bjY?tX+9+^PdE6ojZP$u1yu*75JR$+!x!@b}v+sL1A2_FsLm7@X%Q5b)h=RiUEn
z_nDoEr}}ngIzuHR-2#L@S0YQ}akLNB3&TY9rHF7y1(`iMWd<ZrbtzpC@+`FgmmThn
zh;M*zR-7}V<}%-eh@u#gy-*hxMG>zY``R+9&aiX!iiPZ-_!c*Hd6X}s%N34V#yWm|
z-Bhx1z<~W%<NxF3Jpx{L8jhN+HhCtvSVwHoSq8shq|TmZuxKu9nOaI1f3jR$^}sB1
z;Xlx@(0JhF(VZyn7M_YtEHmiPnGvdfYNe2_;)KqI%!y64qx&*}GU)s<p=qPRvS^JJ
z3tYdB$BtCl7T%i-AOL)aP4y2CYWu4Rm0#&;b}dn)lb-WJ8K%o5e&}FM9v{|>K3;L=
z*aP;qCOwKQQw9&U)>Ei^C?zg>QyHOeww{xgbK400+~ba;O(!)FH*8XTCT5Eh7h%7f
z1;3Jw0RIHtSopZc6>TV#6A*bW3#a6#%XZkqoaSR+=^BvX@C&o_qBm2?D0vOCD+Nc2
z@)-@rdy#nzu}>^WeMC98ha3)KUhE}yU$HkJ25T%9{yxWMAU|K2yZ$eF|3?b?0|Su+
zTrop(YqSWy^%nNf<qs13`vZUAmv1fk!i$3f?FZGV7vzq9ojyN-cG{x3(-qxT2Y^-7
zVj?5RCLVjE*R@aLcRHIj4{wNG*nwT&bH(keN#3CCw1dO8L;Y?Q)4)mDH(Q}`@K}w9
zCX^dp(Y=~t2D(xtgN2;AGp5K3%C7M<*%B87USn<F##`eb+x)xR!tOOc>v_|r_vrde
z7r9&erF!~vyN2AS#;PyP=FiVa+mop%w^@ec)ZCJJdU)wES(7^jH+p>TMS8m}O}kyQ
z;yr8Ho!fPXi*`J3I5FALJ8*>fTv6Dp%(wkjewRVj;K(+a1LXBD+V94nTJ*3iTwD7}
z_3LMQvn3)8Mt`B)sGGL_Kw=V?qB?6vV08MHuWy{~z3pnTOLe31==1?*WjGDhPcP7&
zp{**?cw~XO($7|32X)%qcHzwzimsd(&zD2x2ic#@uI%yJIGTG$+u&^X`o3Mi(e`%S
zu2bC^wpYsUBN|sM`M_A;u4m;93M*P%KOELxa<igMb^7U5HzJC5MN;n7zs^M^)X)Ah
z{{!ujL2;2UW&Ev7tY_-x<!FFY6$~1FHOeWw(B4c3yPkQvY-ze_ub$?Hz|Qws5?<ED
zv-R>0#MGY)+dE;dgA1GKjP+%5oCvwI0=xGiySlG_v26R{rb$DWO1s5rtG81Y{p#e?
zq;00tu_ycVwG?f$K$9%4^Zo5xX7?7p<22q{e=W4)<Ks0x+bvNMbr0bg;$99n(>^-7
z-Bhl5bvgf`!@>)0zb!FcXFtXljKz*`E)Lw>jEbnYYw(Mx2Pmq}(hF?fxTQK@?s?0e
z)9y=yTthxRpSw3tJMZ$gp<8A4;ZncV9)3x4w3IYiEZMwx;8yyifS24C1gsW}a=MDp
z>~7v$*U`GLVcF<07JDddSmxa02A%!VDt66wt@q7Txu${76g9bjBcN}+U+UI8C=XY7
z=x8x(+vazA#<>xKG9QPZM9Fz?Sf^r9uRJ8GPMiPR>(Teywj{6lOcx$ac5!O!Y_K93
zzuBR@Bnm~7)o#3Ddf<ox(Nx)&lIrDu?@>d8>Wx(?bvNF3=}8VJ#OGJ`ue`Ot<Z<*s
z#-8WGcCwq=kG*`bBQiJi0r$r6r|!4J@W-q%>r-u)+p0GxlkSyiHa&QE(p`<dQ#OCs
z-uL)`-Gz6{qRvOACLh@1_1gxGH+z+r6$&?=OsWc)?o+OArLHkOu6O>fF}Yjbs}^m%
z=%;FXXK1C;>a*jdr&F_EskgdP`<vQli}$y*v@9{1ziO6Rpw#y2*W(`w?j5LG;dLNY
zSTy;<a<CqtZ%B_b*mLl8q`}aY31ZMLIeDjYn7SjG*s8L?5JCh~N3Y9N=4o}ky4)nw
zc=7Z+xzg3iC~fy<`6DSBJR<MjU1iv{S8I7QZ+ohYRMitAQ#L`F5h<yKjSTKhA0$U4
zm<I|lt@a*y{EM1Y)!We2v{G>|YsU!d6C)?2R>{wWoo<!Hex}OvUmF%JekgWlM~dUs
zMS6-=Z<Jm>m<}Z|7F|ru2PoI1tp(+N>gSy+wjS<wCQNFEeNK;CW8t+qh7q(|0wvlI
zkr1;fBk5{ELEMvz>n{Z<3jOZW#ryfApuUa#+h=bynaD@(JLf{P1P`A)l=_-~{k3!9
zHuTny&J3AA5BHDrW0@q-0@(p!?0DaZ_#i*C*ihf_c_CcyK>skVen@y=;!G|p)IW;r
z9U3vye5N7Q&_IuBrbjiT7?_wFqklAg13HzWLp3y~QfKPU4DpZg4?z#I!UDq4uc1+a
z=ogN6m|u7(CCcC5j}qe@675f6MVV6!=rpP^N~>%_Ll63ThlKcZ(6hgHJuf8O+mDO-
z)ej6eH#VEOLF9j9AhE2F5DF(cjKXhSkKa5cmc<RCtc~*LED8_fa>Dtepo9ldxbYGG
zlqgncbci>X732T!Mo2gK4@YS5k5lE(;e>Pkm@8XvRtTCVZa5{-pNpo96N3hXt|(S`
z*terV#q8&OMG~4I8qEmZ``VEC%z%H<ggIpiYSv?B5SJTaJ`c?@n)smbD6Y9Fm2T`Y
z)12bR@(!VJeIqCah9>${^fmZ$%bemH9v0^B%l+dAG#(1aKOj2F-|v48`*&pWH<VKl
zwQ;zp*?&V81~lrw>)F(t4~2>GKhFAhJ^xDrrBO}(-AMjDf&PaB`F}{DzmJgqk5l#k
zKY{)=?B9{e|BOJH%LIiICq4}=Bm?lTzn1!2{tHr{9T{b25)_}1zzT?G`vgRral!(_
zg2KZBgZNTEg7sDA|4EE<qh^{TF>g#aGc+|d)i*OSGohQ(zGqJ)k3zj!VPE96A!3-X
zqJII?{%=C;cdpi@gs`Hx{$Z@JK*|@977@<j&NMfoQmK3)|JOa6Q4uQ}8Pbr>`0w?M
z6rQ26v9YN>jgG_!{lD0;sj-<coo1kKXktpE(|;_;vECfMa`}p8!!JD>o9P=E8JU=U
zhvx5;j;X;PSoRH%4)LReg>#Wc@b=@YiodB+^kV=kkP^T_`kx!*kM2iCBenZQZvRtM
z^Ls~N8|#}Gn9-<aKX%6d0d6|Y&`95qPNNyqO}@ePe+zCSBdWfMsS%BCWcW?*U-<HW
zmAU>AZX**zeVVZ$-PGh;O8alYZAzn}8gV96s-f|J8E#V=O`mRLU}k1u^i9wIyKw)D
z1+=NT5l!F7<e#hxzf(N_ffW6A0sUuD{H=uLYa{Q>oCm!~6Y($RGK?S#vLJ-M{Lg4(
zM{Zv@35M$xK<vw3zWt9C%5O`b9TgrH^7l8tKC$!Zp~s(4$Q1u7{`MtMiXi>)-3*-;
z&5ra=pc`=gSTxgE-+<tRXtptmO$whEf!4Qy9RH}ukoD1FKH<?}e*S*zsq4LC0{@)s
z{?8y;Hy+n;q5$x({ojG~Z2yl3$%q~wX2gvRV{-$8X?{MT@g`<0p8!sf!C!*(dkEN{
z!H|fpqM|54;9mvbfk8U=<H7Jrphw3gnEJ5;{5Z6T&``FCnK3uoB-lUxuP_tj?;WAX
z3e!V-3w}h~pTS9=T&|Tr1Au=Oeg}?P|BnZU9Ukk;@(woU2Kf1N<BSZr^ayY7&_EhH
z_OHM}3m@O$e*w?^wjkOC#5DZt(0A~p5y(HBaRLHp@d-YDTq9Pz8H>Y;;uu5(C&Zft
z7{vaQ7(+hKAmOO@MWp>R+)Tb1PW44c8~ls+9W2vye>^N^rmP@?;7~fp$Ir|(-Y3k!
zIL;@)jK+!c{tH<CRP5r<l=f{IkMA+F*zw0h6BNgZ_VI}g_6-P(Vwnc8*`d*aLBVui
zlYa&czjVjH#LTx*t>0sYz46Dx@_$=~<j<J-_85&HiTn4D=J6j7&Hp4W_s<Y~yCviw
z_x=5|<@S$<;6FS3`}3H;T{!SJtAGC_bpQA<|0i2l<}$JXe^g@VdrJsa7<`1*IPiY}
DXloln

diff --git a/tests/fill_test_16bit_rgb.png b/tests/fill_test_16bit_rgb.png
deleted file mode 100644
index fdff8521ee7184d7aaf902e9523d6e8afd748930..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 1187
zcmeAS@N?(olHy`uVBq!ia0y~yV5|bN{|GPv$z^9$z5*$hbVpxD28NCO+<y{TfqaEz
zk04(LhAK4%hK3dfhF?ITh8GMBr3MTPuM!v-tY$DUh!@P+6=(yLU@Hmo3kK3akhhF|
zB9LNB@^*Lm4+fkO-|qlLI14-?iy0WWg+Z8+Vb&Z8pdfpRr>`sfQ#M8(R*gTE;{6N^
z%nhC{jv*Dd-d@|tdq9EVh{K70){{kp6ei5s&AG3-pAo2O06@KAKL3N3t$F$kHxjFK
z?JDy485nMO0==dAh>gKR(44`cYX>7k&=FpS2}*ek4I+ii3`;ts85CScm5hc9afx97
zQZ*JUHyq|R{lF}ATKoQgpsZ?%YeY#(Vo9o1a#1RfVlXl=GSoFN(={**F*LL?GP5!;
o(Kax!GB7x~#P=GChTQy=%(P0}8g~5rngz1o)78&qol`;+0I13O(EtDd

diff --git a/tests/fill_test_16bit_rgb_out.png b/tests/fill_test_16bit_rgb_out.png
deleted file mode 100644
index bb9741d53fe3a0276abce816ce948732c6a00577..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 1218
zcmeAS@N?(olHy`uVBq!ia0y~yV5|bN{|GPv$z^9$zA`Ydbb7ithE&XXbK_tqv!ejZ
z!I{Z_%XgmV(9N3Y5)p8I$-Lq;J_d&)_rEbPG?;fvGbp&;VPMdF#KzzuXwKl!wS$o%
z=m;;v1f@KN29ZK$h9w<CT*;};whj3+c9vH&A9((5?#+7#-hUq69v*&CIQV_^be{2M
rTPB7Fy7Pv3ZlO+4pQ;BINB{qCSjYLJsV!{_ki+2V>gTe~DWM4fiyuk8

diff --git a/tests/fill_test_16bit_rgba.png b/tests/fill_test_16bit_rgba.png
deleted file mode 100644
index 7f7165a8ef9345d15f9b41c71f205a1a0d6f648e..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 1523
zcmeAS@N?(olHy`uVBq!ia0y~yV5|bN{|K-FNzHYe7Xc}jbVpxD28NCO+<y{TfqaEz
zk04(LhAK4%hK3dfhF?ITh8GMBr3MTPuM!v-tY$DUh!@P+6=(yLU`z6Lcli$noDtve
z07W<pJR*x37`TN&n2}-D90{Nxdx@v7EBjM6Mjm$EeX5O3KuaHax;TbZ+<JR!qpxzH
zh{MH=Pv<CUG_rNP=x|!mVx-Y5#G%0ahWDS}kxkl)8|&9us#kV4i}xJ6?jI)xG;k1u
zf4Sz>j1kjPE$61?GaRtIttofzM&dW74?DkpeQnBfAbibprF7+UvlpZ{^X;F1`u1(Z
z_3Mt+)X(25$-tU@;Qrm-pC1gWm4Em(&EviG{`j7Ka-W~2eRE?FxqH7~^Mz&p@0;8Q
zp2s|4{L%He(5HUu!*qc!3=9HlFBlmVd@e9EILuhU&d^}s$j`u#*d)imaEQg0fuV&H
z80Q?qqY6iZhaQO{=SH4+H8Vq3P5p<>GHLn@@^k%??d<!1elmJ?`}Ui&3>p@4$7^cm
z?&bW$Uw3d5XZ9if*QrlG6`kqswy))4`1kH(;hE*?=GEtB9-r+y;T1!TIw&;{HE@7^
zKZEuxy+bA^CT9WNu3F+6QIe8al4_M)lnSI6j0}tnbq&mP4GcpJ4XupKtPD)F4GgRd
j3{Ecby@sM8H$NpatrE9}9Y4Q<Y+&$o^>bP0l+XkK&j(q2

diff --git a/tests/fill_test_16bit_rgba_out.png b/tests/fill_test_16bit_rgba_out.png
deleted file mode 100644
index 491bee1ce511e72a546b06d0a76c401a4940c297..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 1568
zcmeAS@N?(olHy`uVBq!ia0y~yV5|bN{|K-FNzHYe7cnrfKKFES45^s&=GI1EWk->Q
zhq0%Rh&XbZIJo$3aa5h+!mcub@!n)pi(TG)oc;fIzn{D&{q)Jx-@aFTJH09QF)IVZ
zl{abnK+|gGFJNbAFmU8&U`T9|V_-PMV#~nL!U?pFL--2=gMiu#Mg|3+3(O1-Ge(BO
z+vnpL{-xZ$RvK9rZ*S56p7BAx?0mJ`+jQCwzwv#b&RL~*isR?%)gNCzOgwY@wxPZK
z^ISHE<A#s=<>b@znVu`W*y*r*^3UD74d1_CzK+@9%H_*%cpu2zS@^ukaw7W!YrpUu
zKlQI4@<(Rij{17=W~7)6rE~W(GPur@{}cahvv|Y(+}ktOuTS2$xA*5q!+doHE53Ha
z`}aX<d_!M_6|2aZt+}sv>Fi!#-<OwnY|lQsTI+mchN^k<uYdjVrlNA@Ud}%%;8Nw?
j2r4|Nn!f)6%m4rXn|IiBbNLj4%4!BrS3j3^P6<r_=<}or

diff --git a/tests/fill_test_8bit_palette.png b/tests/fill_test_8bit_palette.png
deleted file mode 100644
index 1641fcf4ed2b22642eaaacfa14a653788df7a68d..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 724
zcmeAS@N?(olHy`uVBq!ia0y~yV5|bN|8Ot^Nxuj4F9Ru-bVpxD28NCO+<y{TfqaEz
zk04(LhAK4%hK3dfhF?ITh8GMBr3MTPuM!v-tY$DUh!@P+6=(yLU<>dGas3Yj3=FTM
zo=*mfFqQ=Q1v5B2yO9RsBze2LFm$lWdH^|`1s;*b3=G`DAk4@xYmNj^kiEpy*OmP#
z8zZ;2mW+KS(4mYgJzX3_DsH{Kz{uEOz`(Nb=Kd{)=gI{dfqF5)gT?dauaJK~H++5E
z--armzx%9${!SRBsTmHon4u05IlvpYXL?5N`V9>gK%Q!eYeY#(Vo9o1a#1RfVlXl=
zGSoFN(={**F*LL?GP5!;(Kax!GB7x~#P=GChTQy=%(P0}8g~5rngz1Z)78&qol`;+
E0L929#Q*>R

diff --git a/tests/fill_test_8bit_palette_out.png b/tests/fill_test_8bit_palette_out.png
deleted file mode 100644
index d865b78def8d9e8032667790fa9be5b849257ce8..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 140
zcmeAS@N?(olHy`uVBq!ia0y~yV5|bN|1dHGN#_rL7Xc}@0G|+7hW|jwaB;TRI-rQ7
zr;B4q#hf>%9Yq-wI9Ls&B@X_3o5R3a#~^pRmYsniZKvoTfq4oXO=t+HRp&Y*1H=FS
YGfw>YG3kiJ1)vCnr>mdKI;Vst05aSuQ~&?~

diff --git a/tests/fill_test_8bit_rgb.png b/tests/fill_test_8bit_rgb.png
deleted file mode 100644
index a3052ae3c2b2ae537ffa2f6e81e1ee0b1e2100c1..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 889
zcmeAS@N?(olHy`uVBq!ia0y~yV5|bN|8Ot?$!{?~wgD-YbVpxD28NCO+<y{TfqaEz
zk04(LhAK4%hK3dfhF?ITh8GMBr3MTPuM!v-tY$DUh!@P+6=(yLU@Hmo3kK3akhhF|
zB9LNB@^*J&_z!{$_AZ|c6yYrJh%9Dc;1&j9Muu5)B!GhKC7!;n>`&PkxuvBiEssCU
zz`zvd>EaktaqI1sje-pZ0!JL2|Jyoqrc@c<Tl-+r<tU&Ya>1LYv*ZjO%#=I8>9^<F
z^y(^x0<N8mN=3{rPuMz6@Cr<nR!}l`aLH@vxWgbgDluq+gxu&x(%106nvvgvNvNyp
zkv~vawZt`|BqgyV)hf9t6-Y4{85kMr8kp%C7={=cS{a#H8JK7r7+4t?oLu624Mjt4
aeoAIqC2kEnetyjYS?uZR=d#Wzp$Py>TIYiR

diff --git a/tests/fill_test_8bit_rgb_out.png b/tests/fill_test_8bit_rgb_out.png
deleted file mode 100644
index 499026d665ee0a33dac235b00193272a5cbc962b..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 896
zcmeAS@N?(olHy`uVBq!ia0y~yV5|bN|8Ot?$!{?~wlOd;yL-AghE&XXbIp<0MNx#s
z@y3JuMz0s$_g@iYu>9PdQgMd|=C%wKt#=p%cQPs!F}plr>o~zHFi~1T$=tyuuc2em
zNX&W3$oy_z+yUlqbK^eP-W!x|9GoFHpsspTx?G(h|HEKPNhF5HKSl<I|NpoCW&O3W
TeRUi#XEAuX`njxgN@xNAD_<pT

diff --git a/tests/fill_test_8bit_rgba.png b/tests/fill_test_8bit_rgba.png
deleted file mode 100644
index 01b8a79a1e0ac6e9c9fc5f4d3fa066d527e6a53d..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 1099
zcmeAS@N?(olHy`uVBq!ia0y~yV5|bN|8TGY$x6HYhd_!Y-O<;Pfnj4m_n$;oAYUQb
zBgmJ5p-PQ`p`nF=;TKS-;RORjsR0ASs{{rHs~HRo;stYd1=;{5*pj^6T^Rm@;DWu&
zCj&(|3p^r=85p>QL70(Y)*K0-AbW|YuPgggHb!oJne8tvr!z1xTY0)ThE&{odt+no
z6$S>Ei#IPn6LI7;ad2@LaZ;V)C^^M}L9)Qxp`nF^DRb++-{0esPF_5*X}@kh&^T%W
z|C29YFtScx%zi*v*=BpGU6sR`%y)@DW}mK+zB}ha{Q1h;w{zETtF^D<xwG)}w({F{
zGPX~43jTUsdE;Bv?b(al56D*AFWkSgeKGryACubctLNM|YZs_$uvp06Av{VA(IEKs
z+Dg`z;oXeqj}@LTW^akvR(tPT>h0}|j~|e&y7TSp3&Haf&EJT|)XDkXj?1h5_*&${
z?Ec$!oab|Q-V0yw>O*}CJ2jIiidp|I@=t9Of6EjjH3ulJTH+c}l9E`GYL#4+3Zxi}
z42%qQ4a{^63_}bJt&Gg93{12Q46F<cPA>7ihN2-iKP5A*61RpOKfh*yZ1!~Zb6Mw<
G&;$T@BvIS|

diff --git a/tests/fill_test_8bit_rgba_out.png b/tests/fill_test_8bit_rgba_out.png
deleted file mode 100644
index bd5c157f2a87f3f44cf6dace70a186c24cd3500f..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 1117
zcmeAS@N?(olHy`uVBq!ia0y~yV5|bN|8TGY$x6HYhYSoXDxNNmAr*7p+&H+ACs3m8
z;r^>z#aaYZ5>(YPJ6t@BHYB!Np1N{ZQ~U7Cs^67LKg>R#yZ=1%+8RcM*GJzmGW>~l
z;ulc=!caK$sP9{<9Zp)ktDkfHooqqU>xkmpwvVz}{yAPV)K7o*_spJ|Gv#-GKft+m
z=Fbh)M?^XQKK`@o+5K~8cHeb=aK!GNT!HJo7xJf7`RmK7_r3agzC}*K?*-$dQEI3L
z!M}}tcbOj?`D15RdCOKI<?Na1Gk;nc-!JcP6yA0A%=Wv=>t4(#<rk^Xl>NSb@pa?R
zuPlEZcyA}0ZTDWT&=i>ZpZ5;O6!0z`SW^7||L~f;o9i|U86bzj)78&qol`;+0Dc3)
AW&i*H

diff --git a/tests/fill_test_opaque.png b/tests/fill_test_opaque.png
deleted file mode 100644
index 9e2e05491b6e6f153b90a0eb3148fda39c90aae0..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 299
zcmeAS@N?(olHy`uVBq!ia0y~yV5|bN|1dHGN#_rL7Xc}jbVpxD28NCO+<y{TfqaEz
zk04(LhAK4%hK3dfhF?ITh8GMBr3MTPuM!v-tY$DUh!@P+6=(yLU<>dGasAK0@c;jR
zM_Cg=pa^4<x4R4De<s~~Kn{C}r>`sfQ#M8(KHdE1R;PhNN}eu`AsP4H9%SSN@(wNd
z?w`xgE&^o2z=s?I8wN(xZ2@b5BB~{>5hW>!C8<`)MX5lF!N|bKP}jgr*T68u(8$Wr
r#LC1}+rYrez~HpYq%0H-x%nxXX_dG&?2^>F2C~!B)z4*}Q$iB}7|u(@

diff --git a/tests/sample-doc.doc b/tests/sample-doc.doc
deleted file mode 100644
index 10e53e66863cd761d80ebc84e900774aed7ae550..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 9216
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

diff --git a/tests/slack-import-test-channels.json b/tests/slack-import-test-channels.json
index c8a2b5ec3..e2d3f9eb1 100644
--- a/tests/slack-import-test-channels.json
+++ b/tests/slack-import-test-channels.json
@@ -162,4 +162,4 @@
             "last_set": "0"
         }
     }
-]
\ No newline at end of file
+]
diff --git a/tests/slack-import-test-direct-messages.json b/tests/slack-import-test-direct-messages.json
index c13fe1b33..ec4bb0668 100644
--- a/tests/slack-import-test-direct-messages.json
+++ b/tests/slack-import-test-direct-messages.json
@@ -31,4 +31,4 @@
             "U1XVNP6DT"
         ]
     }
-]
\ No newline at end of file
+]
diff --git a/tests/slack-import-test-group-direct-messages.json b/tests/slack-import-test-group-direct-messages.json
index 4e00c78c8..42b88214b 100644
--- a/tests/slack-import-test-group-direct-messages.json
+++ b/tests/slack-import-test-group-direct-messages.json
@@ -66,4 +66,4 @@
             "last_set": "1471964085"
         }
     }
-]
\ No newline at end of file
+]
diff --git a/tests/slack-import-test-posts.json b/tests/slack-import-test-posts.json
index 07b8c65d5..c2a107f41 100644
--- a/tests/slack-import-test-posts.json
+++ b/tests/slack-import-test-posts.json
@@ -76,14 +76,14 @@
         "bot_id": "B13CH9S5V",
         "attachments": [
             {
-                "fallback": "<https:\/\/twitter.com\/m2pls|@m2pls>: M2 informatique PLS et EID2 on vous retrouve sur le <https:\/\/twitter.com\/mattermosthq|@mattermosthq> du master, les invitations partiront lundi (ou demander en MP).",
+                "fallback": "<https:\/\/twitter.com\/m2pls|@m2pls>: M2 informatique PLS et EID2 on vous retrouve sur le <https:\/\/twitter.com\/matterfosshq|@matterfosshq> du master, les invitations partiront lundi (ou demander en MP).",
                 "ts": 1474722287,
                 "author_name": "Master 2 PLS",
                 "author_link": "https:\/\/twitter.com\/m2pls\/status\/779667900600844288",
                 "author_icon": "https:\/\/pbs.twimg.com\/profile_images\/649829889890086912\/ULpVHs9S_normal.jpg",
                 "author_subname": "@m2pls",
                 "pretext": "<https:\/\/twitter.com\/m2pls\/status\/779667900600844288>",
-                "text": "M2 informatique PLS et EID2 on vous retrouve sur le <https:\/\/twitter.com\/mattermosthq|@mattermosthq> du master, les invitations partiront lundi (ou demander en MP).",
+                "text": "M2 informatique PLS et EID2 on vous retrouve sur le <https:\/\/twitter.com\/matterfosshq|@matterfosshq> du master, les invitations partiront lundi (ou demander en MP).",
                 "service_name": "twitter",
                 "service_url": "https:\/\/twitter.com\/",
                 "from_url": "https:\/\/twitter.com\/m2pls\/status\/779667900600844288",
diff --git a/tests/slack-import-test-private-channels.json b/tests/slack-import-test-private-channels.json
index 1e5adf991..5ff6d68b7 100644
--- a/tests/slack-import-test-private-channels.json
+++ b/tests/slack-import-test-private-channels.json
@@ -22,4 +22,4 @@
             "last_set": "1468972624"
         }
     }
-]
\ No newline at end of file
+]
diff --git a/tests/slack-import-test-users.json b/tests/slack-import-test-users.json
index 40b53a45b..5f2886c2b 100644
--- a/tests/slack-import-test-users.json
+++ b/tests/slack-import-test-users.json
@@ -360,4 +360,4 @@
         "is_ultra_restricted": false,
         "is_bot": false
     }
-]
\ No newline at end of file
+]
diff --git a/tests/test-attachments.md b/tests/test-attachments.md
index 52f56b0c4..3e2825387 100644
--- a/tests/test-attachments.md
+++ b/tests/test-attachments.md
@@ -2,7 +2,7 @@
 This test contains instructions for the core team to manually test common attachment types. All files for testing are stored in the [mm_file_testing](https://drive.google.com/drive/folders/0B9-SWBTtyOCBRlEyaW1IdkZ4X1k) Drive folder. Follow these instructions:
 
 1. Download the entire [mm_file_testing](https://drive.google.com/drive/folders/0B9-SWBTtyOCBRlEyaW1IdkZ4X1k) folder. 
-2. Drag and drop each file type into Mattermost to upload it (upload some as multiple attachments on the same post)
+2. Drag and drop each file type into Matterfoss to upload it (upload some as multiple attachments on the same post)
 3. Post the file attachment
 
 **Notes:**  
@@ -16,32 +16,32 @@ This test contains instructions for the core team to manually test common attach
 **JPG**  
 `Images/JPG.jpg`  
 Expected: Scaled thumbnail & preview window  
-[Permalink](https://pre-release.mattermost.com/core/pl/bgx3wcd9ppdo7fz9zqokofg7sc)
+[Permalink](https://pre-release.matterfoss.com/core/pl/bgx3wcd9ppdo7fz9zqokofg7sc)
 
 **PNG**  
 `Images/PNG.png`  
 Expected: Scaled thumbnail & preview window  
-[Permalink](https://pre-release.mattermost.com/core/pl/zra4yhm69j8ij81iy5hw7983qe)
+[Permalink](https://pre-release.matterfoss.com/core/pl/zra4yhm69j8ij81iy5hw7983qe)
 
 **BMP**  
 `Images/BMP.bmp`  
 Expected: Scaled thumbnail & preview window  
-[Permalink](https://pre-release.mattermost.com/core/pl/1hx7x7t1npn4jqyr5rb1qhbj3h)
+[Permalink](https://pre-release.matterfoss.com/core/pl/1hx7x7t1npn4jqyr5rb1qhbj3h)
 
 **GIF**  
 `Images/GIF.gif`  
 Expected: Scaled thumbnail & preview window. GIF should auto-play in the preview window.  
-[Permalink](https://pre-release.mattermost.com/core/pl/j49fowdkstr57g3ed9bgpfoo5w)
+[Permalink](https://pre-release.matterfoss.com/core/pl/j49fowdkstr57g3ed9bgpfoo5w)
 
 **TIFF**  
 `Images/TIFF.tiff`  
 Expected: Generic attachment thumbnail & preview window  
-[Permalink](https://pre-release.mattermost.com/core/pl/6yad4jydaidr3pc3tihp8n8bge)
+[Permalink](https://pre-release.matterfoss.com/core/pl/6yad4jydaidr3pc3tihp8n8bge)
 
 **PSD**  
 `Images/PSD.psd`  
 Expected: Generic attachment thumbnail & preview window  
-[Permalink](https://pre-release.mattermost.com/core/pl/4kitwk7pi78c9ck4i98f9xnzoe)
+[Permalink](https://pre-release.matterfoss.com/core/pl/4kitwk7pi78c9ck4i98f9xnzoe)
 
 
 ### Documents
@@ -49,100 +49,100 @@ Expected: Generic attachment thumbnail & preview window
 **PDF Files**  
 `Documents/PDF.pdf`  
 Expected: Generic PDF thumbnail. File previewer shows first 5 pages of the PDF.   
-[Permalink](https://pre-release.mattermost.com/core/pl/o1dg6menetdszrhyxmtoqjfi8h)
+[Permalink](https://pre-release.matterfoss.com/core/pl/o1dg6menetdszrhyxmtoqjfi8h)
 
 
 **Excel**  
 `Documents/Excel.xlsx`  
 Expected: Generic Excel thumbnail & preview window.  
-[Permalink](https://pre-release.mattermost.com/core/pl/71wwezy3f7drze6ipundscb17y)
+[Permalink](https://pre-release.matterfoss.com/core/pl/71wwezy3f7drze6ipundscb17y)
 
 
 **PPT**  
 `Documents/PPT.pptx`  
 Expected: Generic Powerpoint thumbnail & preview window.   
-[Permalink](https://pre-release.mattermost.com/core/pl/mx37h4znwb8f5ffuoajusqhiew)
+[Permalink](https://pre-release.matterfoss.com/core/pl/mx37h4znwb8f5ffuoajusqhiew)
 
 **Word**  
 `Documents/Word.docx`  
 Expected: Generic Word thumbnail & preview window.  
-[Permalink](https://pre-release.mattermost.com/core/pl/d7s76wp6kjdwfp4hgrwpijsnyy)
+[Permalink](https://pre-release.matterfoss.com/core/pl/d7s76wp6kjdwfp4hgrwpijsnyy)
 
 **Text**  
 `Documents/Text.txt`  
 Expected: Generic code thumbnail & file previewer.
-[Permalink](https://pre-release.mattermost.com/core/pl/cpw539wcxtdmzeh5ju71y73o4e)
+[Permalink](https://pre-release.matterfoss.com/core/pl/cpw539wcxtdmzeh5ju71y73o4e)
 
 ### Videos
 
 **MP4**  
 `Videos/MP4.mp4`  
 Expected: Generic video thumbnail, view Permalink for preview window behavior. Expected depends on the operating system, browser and plugins.    
-[Permalink](https://pre-release.mattermost.com/core/pl/5dx5qx9t9brqfnhohccxjynx7c)
+[Permalink](https://pre-release.matterfoss.com/core/pl/5dx5qx9t9brqfnhohccxjynx7c)
 
 **AVI**  
 `Videos/AVI.avi`  
 Expected: Generic video thumbnail, view Permalink for preview window behavior. Expected depends on the operating system, browser and plugins.  
-[Permalink](https://pre-release.mattermost.com/core/pl/qwn9eiy7j3rkjyruxhcugpogdw)
+[Permalink](https://pre-release.matterfoss.com/core/pl/qwn9eiy7j3rkjyruxhcugpogdw)
 
 **MKV**  
 `Videos/MKV.mkv`  
 Expected: Generic video thumbnail, view Permalink for preview window behavior. Expected depends on the operating system, browser and plugins.  
-[Permalink](https://pre-release.mattermost.com/core/pl/tszyjkr1cidhxjgiusa4mde3ja)
+[Permalink](https://pre-release.matterfoss.com/core/pl/tszyjkr1cidhxjgiusa4mde3ja)
 
 **MOV**  
 `Videos/MOV.mov`  
 Expected: Generic video thumbnail, view Permalink for preview window behavior. Expected depends on the operating system, browser and plugins.  
-[Permalink](https://pre-release.mattermost.com/core/pl/ienzppz5i3f7tbt5jiujn8uuir)
+[Permalink](https://pre-release.matterfoss.com/core/pl/ienzppz5i3f7tbt5jiujn8uuir)
 
 **MPG**  
 `Videos/MPG.mpg`  
 Expected: Generic video thumbnail, view Permalink for preview window behavior. Expected depends on the operating system, browser and plugins.  
-[Permalink](https://pre-release.mattermost.com/core/pl/skggdq1hfpritc6c88bi481p5a)
+[Permalink](https://pre-release.matterfoss.com/core/pl/skggdq1hfpritc6c88bi481p5a)
 
 **Webm**  
 `Videos/WEBM.webm`  
 Expected: Generic video thumbnail, view Permalink for preview window behavior. Expected depends on the operating system, browser and plugins.  
-[Permalink](https://pre-release.mattermost.com/core/pl/7h8tysuxgfgsxeht3sbn7e4h6y)
+[Permalink](https://pre-release.matterfoss.com/core/pl/7h8tysuxgfgsxeht3sbn7e4h6y)
 
 **WMV**  
 `Videos/WMV.wmv`  
 Expected: Generic video thumbnail, view Permalink for preview window behavior. Expected depends on the operating system, browser and plugins.  
-[Permalink](https://pre-release.mattermost.com/core/pl/kaom7j7uyjra7bzhrre6qwdrbw)
+[Permalink](https://pre-release.matterfoss.com/core/pl/kaom7j7uyjra7bzhrre6qwdrbw)
 
 ### Audio
 
 **MP3**  
 `Audio/MP3.mp3`  
 Expected: Generic audio thumbnail & playable preview window  
-[Permalink](https://pre-release.mattermost.com/core/pl/if4gn8dbrjgx8fmqmkukzefyme)
+[Permalink](https://pre-release.matterfoss.com/core/pl/if4gn8dbrjgx8fmqmkukzefyme)
 
 **M4A**  
 `Audio/M4a.m4a`  
 Expected: Generic audio thumbnail, view Permalink for preview window behavior. Expected depends on the operating system, browser and plugins.  
-[Permalink](https://pre-release.mattermost.com/core/pl/6c7qsw48ybd88bktgeykodsrrc)
+[Permalink](https://pre-release.matterfoss.com/core/pl/6c7qsw48ybd88bktgeykodsrrc)
 
 **AAC**  
 `Audio/AAC.aac`  
 Expected: Generic audio thumbnail, view Permalink for preview window behavior. Expected depends on the operating system, browser and plugins.  
-[Permalink](https://pre-release.mattermost.com/core/pl/3naoy5pr5tydbk1m6yo1ast9ny)
+[Permalink](https://pre-release.matterfoss.com/core/pl/3naoy5pr5tydbk1m6yo1ast9ny)
 
 **FLAC**  
 `Audio/FLAC.flac`  
 Expected: Generic audio thumbnail, view Permalink for preview window behavior. Expected depends on the operating system, browser and plugins.  
-[Permalink](https://pre-release.mattermost.com/core/pl/kf4cmy44dfya5efmse7rg43eih)
+[Permalink](https://pre-release.matterfoss.com/core/pl/kf4cmy44dfya5efmse7rg43eih)
 
 **OGG**  
 `Audio/OGG.ogg`  
 Expected: Generic audio thumbnail, view Permalink for preview window behavior. Expected depends on the operating system, browser and plugins.  
-[Permalink](https://pre-release.mattermost.com/core/pl/dezrcpbxapyexe77rjuzkrp63r)
+[Permalink](https://pre-release.matterfoss.com/core/pl/dezrcpbxapyexe77rjuzkrp63r)
 
 **WAV**  
 `Audio/WAV.wav`  
 Expected: Generic audio thumbnail, view Permalink for preview window behavior. Expected depends on the operating system, browser and plugins.  
-[Permalink](https://pre-release.mattermost.com/core/pl/pdkxx1udepdnbmi9j8kyas5xbh)
+[Permalink](https://pre-release.matterfoss.com/core/pl/pdkxx1udepdnbmi9j8kyas5xbh)
 
 **WMA**  
 `Audio/WMA.wma`  
 Expected: Generic audio thumbnail, view Permalink for preview window behavior. Expected depends on the operating system, browser and plugins.  
-[Permalink](https://pre-release.mattermost.com/core/pl/756wrmdd57dcig3m4emypp6i1h)
+[Permalink](https://pre-release.matterfoss.com/core/pl/756wrmdd57dcig3m4emypp6i1h)
diff --git a/tests/test-emoticons1.md b/tests/test-emoticons1.md
index d8fc7b376..a4576b722 100644
--- a/tests/test-emoticons1.md
+++ b/tests/test-emoticons1.md
@@ -1,7 +1,7 @@
 # Emoji Testing  
 Verify that all emoji and emoticons render. 
 
-:mattermost:
+:matterfoss:
 
 ### Emoticons - Punctuation  
 
diff --git a/tests/test-emoticons6.md b/tests/test-emoticons6.md
index f30e2699b..38ef55b2e 100644
--- a/tests/test-emoticons6.md
+++ b/tests/test-emoticons6.md
@@ -4,7 +4,7 @@
 
 ### Emoji - Special
 
-:bowtie: :feelsgood: :finnadie: :goberserk: :godmode: :hurtrealbad: :neckbeard: :octocat: :rage1: :rage2: :rage3: :rage4: :shipit: :squirrel: :suspect: :trollface: :mattermost: 
+:bowtie: :feelsgood: :finnadie: :goberserk: :godmode: :hurtrealbad: :neckbeard: :octocat: :rage1: :rage2: :rage3: :rage4: :shipit: :squirrel: :suspect: :trollface: :matterfoss: 
 
 ### Emoji - Without space separator
 
diff --git a/tests/test-hashtags.md b/tests/test-hashtags.md
index 0c26042ba..d9f6cc3af 100644
--- a/tests/test-hashtags.md
+++ b/tests/test-hashtags.md
@@ -1,6 +1,6 @@
 # Hashtag Testing
 
-Hashtags in Mattermosts should render as specified below. 
+Hashtags in Matterfosss should render as specified below. 
 
 #### These strings should auto-link:
 
diff --git a/tests/test-links.md b/tests/test-links.md
index c7404b04d..61fe7677f 100644
--- a/tests/test-links.md
+++ b/tests/test-links.md
@@ -1,6 +1,6 @@
 # Link Testing
  
-Links in Mattermosts should render as specified below.
+Links in Matterfosss should render as specified below.
 
 #### These strings should auto-link:
  
diff --git a/utils/api.go b/utils/api.go
index bd8a5f81e..8e4bbcf27 100644
--- a/utils/api.go
+++ b/utils/api.go
@@ -14,8 +14,8 @@ import (
 	"path"
 	"strings"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/i18n"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/i18n"
 )
 
 func CheckOrigin(r *http.Request, allowedOrigins string) bool {
diff --git a/utils/api_test.go b/utils/api_test.go
index d475ef506..27eb81ef5 100644
--- a/utils/api_test.go
+++ b/utils/api_test.go
@@ -19,7 +19,7 @@ import (
 	"github.com/stretchr/testify/assert"
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 func TestRenderWebError(t *testing.T) {
diff --git a/utils/archive_test.go b/utils/archive_test.go
index 37444311a..784962532 100644
--- a/utils/archive_test.go
+++ b/utils/archive_test.go
@@ -13,7 +13,7 @@ import (
 
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/utils/fileutils"
+	"github.com/cjdelisle/matterfoss-server/v6/utils/fileutils"
 )
 
 func TestSanitizePath(t *testing.T) {
diff --git a/utils/i18n.go b/utils/i18n.go
index acbcda7c5..a4e7fdb12 100644
--- a/utils/i18n.go
+++ b/utils/i18n.go
@@ -8,8 +8,8 @@ import (
 	"os"
 	"path/filepath"
 
-	"github.com/mattermost/mattermost-server/v6/shared/i18n"
-	"github.com/mattermost/mattermost-server/v6/utils/fileutils"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/i18n"
+	"github.com/cjdelisle/matterfoss-server/v6/utils/fileutils"
 )
 
 // this functions loads translations from filesystem if they are not
diff --git a/utils/imgutils/gif_test.go b/utils/imgutils/gif_test.go
index ed65a16f8..09e194aa2 100644
--- a/utils/imgutils/gif_test.go
+++ b/utils/imgutils/gif_test.go
@@ -10,7 +10,7 @@ import (
 	"github.com/stretchr/testify/assert"
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/utils/testutils"
+	"github.com/cjdelisle/matterfoss-server/v6/utils/testutils"
 )
 
 func TestCountFrames(t *testing.T) {
diff --git a/utils/jsonutils/json_test.go b/utils/jsonutils/json_test.go
index 352db92af..a7c353c75 100644
--- a/utils/jsonutils/json_test.go
+++ b/utils/jsonutils/json_test.go
@@ -11,7 +11,7 @@ import (
 	"github.com/pkg/errors"
 	"github.com/stretchr/testify/assert"
 
-	"github.com/mattermost/mattermost-server/v6/utils/jsonutils"
+	"github.com/cjdelisle/matterfoss-server/v6/utils/jsonutils"
 )
 
 func TestHumanizeJsonError(t *testing.T) {
diff --git a/utils/license.go b/utils/license.go
index 96a228ba8..b8a5023f4 100644
--- a/utils/license.go
+++ b/utils/license.go
@@ -17,9 +17,9 @@ import (
 	"path/filepath"
 	"strconv"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
-	"github.com/mattermost/mattermost-server/v6/utils/fileutils"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/utils/fileutils"
 )
 
 var publicKey []byte = []byte(`-----BEGIN PUBLIC KEY-----
diff --git a/utils/merge_test.go b/utils/merge_test.go
index 3acb5ee8e..4fb5db991 100644
--- a/utils/merge_test.go
+++ b/utils/merge_test.go
@@ -11,7 +11,7 @@ import (
 	"github.com/stretchr/testify/assert"
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/utils"
+	"github.com/cjdelisle/matterfoss-server/v6/utils"
 )
 
 // Test merging maps alone. This isolates the complexity of merging maps from merging maps recursively in
diff --git a/utils/mocks/LicenseValidatorIface.go b/utils/mocks/LicenseValidatorIface.go
index c444a0506..a9dbc39b2 100644
--- a/utils/mocks/LicenseValidatorIface.go
+++ b/utils/mocks/LicenseValidatorIface.go
@@ -5,7 +5,7 @@
 package mocks
 
 import (
-	model "github.com/mattermost/mattermost-server/v6/model"
+	model "github.com/cjdelisle/matterfoss-server/v6/model"
 	mock "github.com/stretchr/testify/mock"
 )
 
diff --git a/utils/subpath.go b/utils/subpath.go
index 078527244..ee4c712e5 100644
--- a/utils/subpath.go
+++ b/utils/subpath.go
@@ -17,9 +17,9 @@ import (
 
 	"github.com/pkg/errors"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
-	"github.com/mattermost/mattermost-server/v6/utils/fileutils"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/utils/fileutils"
 )
 
 // getSubpathScript renders the inline script that defines window.publicPath to change how webpack loads assets.
diff --git a/utils/subpath_test.go b/utils/subpath_test.go
index efc9c383e..2f84f0e09 100644
--- a/utils/subpath_test.go
+++ b/utils/subpath_test.go
@@ -13,8 +13,8 @@ import (
 
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/utils"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/utils"
 )
 
 func TestUpdateAssetsSubpathFromConfig(t *testing.T) {
diff --git a/utils/testutils/static_config_service.go b/utils/testutils/static_config_service.go
index 6a4d4d203..42c9ab757 100644
--- a/utils/testutils/static_config_service.go
+++ b/utils/testutils/static_config_service.go
@@ -6,7 +6,7 @@ package testutils
 import (
 	"crypto/ecdsa"
 
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 type StaticConfigService struct {
diff --git a/utils/testutils/testutils.go b/utils/testutils/testutils.go
index 4d9dd7ccc..39efae663 100644
--- a/utils/testutils/testutils.go
+++ b/utils/testutils/testutils.go
@@ -14,9 +14,9 @@ import (
 	"strconv"
 	"time"
 
-	"github.com/mattermost/mattermost-server/v6/utils"
+	"github.com/cjdelisle/matterfoss-server/v6/utils"
 
-	"github.com/mattermost/mattermost-server/v6/utils/fileutils"
+	"github.com/cjdelisle/matterfoss-server/v6/utils/fileutils"
 )
 
 func ReadTestFile(name string) ([]byte, error) {
diff --git a/utils/textgeneration.go b/utils/textgeneration.go
index db9e3af62..817003e00 100644
--- a/utils/textgeneration.go
+++ b/utils/textgeneration.go
@@ -30,8 +30,8 @@ multi-line code block
 emoji that should not render in code block: :ice_cream:
 ` + "```" + `
 ` + "`monospace`" + `
-[Link to Mattermost](www.mattermost.com)
-Inline Image with link, alt text, and hover text: ![Build Status](https://travis-ci.org/mattermost/mattermost-server.svg?branch=master)](https://travis-ci.org/mattermost/mattermost-server)
+[Link to Matterfoss](www.matterfoss.org)
+Inline Image with link, alt text, and hover text: ![Build Status](https://travis-ci.org/matterfoss/matterfoss-server.svg?branch=master)](https://travis-ci.org/matterfoss/matterfoss-server)
 
 Three types of lines:
 ***
diff --git a/utils/utils.go b/utils/utils.go
index 52cd3d2da..5d65ccfb7 100644
--- a/utils/utils.go
+++ b/utils/utils.go
@@ -12,7 +12,7 @@ import (
 
 	"github.com/pkg/errors"
 
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 func StringInSlice(a string, slice []string) bool {
diff --git a/vendor/github.com/blevesearch/bleve/v2/go.sum b/vendor/github.com/blevesearch/bleve/v2/go.sum
deleted file mode 100644
index c749be323..000000000
--- a/vendor/github.com/blevesearch/bleve/v2/go.sum
+++ /dev/null
@@ -1,119 +0,0 @@
-github.com/BurntSushi/toml v0.3.1/go.mod h1:xHWCNGjB5oqiDr8zfno3MHue2Ht5sIBksp03qcyfWMU=
-github.com/RoaringBitmap/roaring v0.9.4 h1:ckvZSX5gwCRaJYBNe7syNawCU5oruY9gQmjXlp4riwo=
-github.com/RoaringBitmap/roaring v0.9.4/go.mod h1:icnadbWcNyfEHlYdr+tDlOTih1Bf/h+rzPpv4sbomAA=
-github.com/armon/consul-api v0.0.0-20180202201655-eb2c6b5be1b6/go.mod h1:grANhF5doyWs3UAsr3K4I6qtAmlQcZDesFNEHPZAzj8=
-github.com/bits-and-blooms/bitset v1.2.0 h1:Kn4yilvwNtMACtf1eYDlG8H77R07mZSPbMjLyS07ChA=
-github.com/bits-and-blooms/bitset v1.2.0/go.mod h1:gIdJ4wp64HaoK2YrL1Q5/N7Y16edYb8uY+O0FJTyyDA=
-github.com/blevesearch/bleve_index_api v1.0.1 h1:nx9++0hnyiGOHJwQQYfsUGzpRdEVE5LsylmmngQvaFk=
-github.com/blevesearch/bleve_index_api v1.0.1/go.mod h1:fiwKS0xLEm+gBRgv5mumf0dhgFr2mDgZah1pqv1c1M4=
-github.com/blevesearch/go-porterstemmer v1.0.3 h1:GtmsqID0aZdCSNiY8SkuPJ12pD4jI+DdXTAn4YRcHCo=
-github.com/blevesearch/go-porterstemmer v1.0.3/go.mod h1:angGc5Ht+k2xhJdZi511LtmxuEf0OVpvUUNrwmM1P7M=
-github.com/blevesearch/mmap-go v1.0.2/go.mod h1:ol2qBqYaOUsGdm7aRMRrYGgPvnwLe6Y+7LMvAB5IbSA=
-github.com/blevesearch/mmap-go v1.0.3 h1:7QkALgFNooSq3a46AE+pWeKASAZc9SiNFJhDGF1NDx4=
-github.com/blevesearch/mmap-go v1.0.3/go.mod h1:pYvKl/grLQrBxuaRYgoTssa4rVujYYeenDp++2E+yvs=
-github.com/blevesearch/scorch_segment_api/v2 v2.1.0 h1:NFwteOpZEvJk5Vg0H6gD0hxupsG3JYocE4DBvsA2GZI=
-github.com/blevesearch/scorch_segment_api/v2 v2.1.0/go.mod h1:uch7xyyO/Alxkuxa+CGs79vw0QY8BENSBjg6Mw5L5DE=
-github.com/blevesearch/segment v0.9.0 h1:5lG7yBCx98or7gK2cHMKPukPZ/31Kag7nONpoBt22Ac=
-github.com/blevesearch/segment v0.9.0/go.mod h1:9PfHYUdQCgHktBgvtUOF4x+pc4/l8rdH0u5spnW85UQ=
-github.com/blevesearch/snowballstem v0.9.0 h1:lMQ189YspGP6sXvZQ4WZ+MLawfV8wOmPoD/iWeNXm8s=
-github.com/blevesearch/snowballstem v0.9.0/go.mod h1:PivSj3JMc8WuaFkTSRDW2SlrulNWPl4ABg1tC/hlgLs=
-github.com/blevesearch/upsidedown_store_api v1.0.1 h1:1SYRwyoFLwG3sj0ed89RLtM15amfX2pXlYbFOnF8zNU=
-github.com/blevesearch/upsidedown_store_api v1.0.1/go.mod h1:MQDVGpHZrpe3Uy26zJBf/a8h0FZY6xJbthIMm8myH2Q=
-github.com/blevesearch/vellum v1.0.7 h1:+vn8rfyCRHxKVRgDLeR0FAXej2+6mEb5Q15aQE/XESQ=
-github.com/blevesearch/vellum v1.0.7/go.mod h1:doBZpmRhwTsASB4QdUZANlJvqVAUdUyX0ZK7QJCTeBE=
-github.com/blevesearch/zapx/v11 v11.3.3 h1:8vQMO5hdA2qPCmicIMuKS+qcvUAEh6Vcb0uve4Nh8e4=
-github.com/blevesearch/zapx/v11 v11.3.3/go.mod h1:YzTfUm4kS3e8OmTXDHVV8OzC5MWPO/VPJZQgPNVb4Lc=
-github.com/blevesearch/zapx/v12 v12.3.3 h1:MQO5YNI8MqdPz12ALCoXiJw5cl9QQamYZSp285Z/+Mo=
-github.com/blevesearch/zapx/v12 v12.3.3/go.mod h1:RMl6lOZqF+sTxKvhQDJ5yK2LT3Mu7E2p/jGdjAaiRxs=
-github.com/blevesearch/zapx/v13 v13.3.3 h1:TS4xpMK1ARPYHq+1WwuEOKMOiwvKpTK3RuWOkKlI7BE=
-github.com/blevesearch/zapx/v13 v13.3.3/go.mod h1:eppobNM35U4C22yDvTuxV9xPqo10pwfP/jugL4INWG4=
-github.com/blevesearch/zapx/v14 v14.3.3 h1:dqqAzGphKl0yehHKKntDHKlEMhi9B/tJrD4OsWpY7YE=
-github.com/blevesearch/zapx/v14 v14.3.3/go.mod h1:zXNcVzukh0AvG57oUtT1T0ndi09H0kELNaNmekEy0jw=
-github.com/blevesearch/zapx/v15 v15.3.3 h1:60oE+qsJkveLenJmbc0eaH59GWYCbJJsPDV6Z5hEoYY=
-github.com/blevesearch/zapx/v15 v15.3.3/go.mod h1:C+f/97ZzTzK6vt/7sVlZdzZxKu+5+j4SrGCvr9dJzaY=
-github.com/coreos/etcd v3.3.10+incompatible/go.mod h1:uF7uidLiAD3TWHmW31ZFd/JWoc32PjwdhPthX9715RE=
-github.com/coreos/go-etcd v2.0.0+incompatible/go.mod h1:Jez6KQU2B/sWsbdaef3ED8NzMklzPG4d5KIOhIy30Tk=
-github.com/coreos/go-semver v0.2.0/go.mod h1:nnelYz7RCh+5ahJtPPxZlU+153eP4D4r3EedlOD2RNk=
-github.com/couchbase/ghistogram v0.1.0 h1:b95QcQTCzjTUocDXp/uMgSNQi8oj1tGwnJ4bODWZnps=
-github.com/couchbase/ghistogram v0.1.0/go.mod h1:s1Jhy76zqfEecpNWJfWUiKZookAFaiGOEoyzgHt9i7k=
-github.com/couchbase/moss v0.2.0 h1:VCYrMzFwEryyhRSeI+/b3tRBSeTpi/8gn5Kf6dxqn+o=
-github.com/couchbase/moss v0.2.0/go.mod h1:9MaHIaRuy9pvLPUJxB8sh8OrLfyDczECVL37grCIubs=
-github.com/cpuguy83/go-md2man v1.0.10/go.mod h1:SmD6nW6nTyfqj6ABTjUi3V3JVMnlJmwcJI5acqYI6dE=
-github.com/davecgh/go-spew v1.1.0/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=
-github.com/davecgh/go-spew v1.1.1 h1:vj9j/u1bqnvCEfJOwUhtlOARqs3+rkHYY13jYWTU97c=
-github.com/davecgh/go-spew v1.1.1/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=
-github.com/fsnotify/fsnotify v1.4.7 h1:IXs+QLmnXW2CcXuY+8Mzv/fWEsPGWxqefPtCP5CnV9I=
-github.com/fsnotify/fsnotify v1.4.7/go.mod h1:jwhsz4b93w/PPRr/qN1Yymfu8t87LnFCMoQvtojpjFo=
-github.com/golang/protobuf v1.2.0/go.mod h1:6lQm79b+lXiMfvg/cZm0SGofjICqVBUtrP5yJMmIC1U=
-github.com/golang/protobuf v1.3.2 h1:6nsPYzhq5kReh6QImI3k5qWzO4PEbvbIW2cwSfR/6xs=
-github.com/golang/protobuf v1.3.2/go.mod h1:6lQm79b+lXiMfvg/cZm0SGofjICqVBUtrP5yJMmIC1U=
-github.com/golang/snappy v0.0.0-20180518054509-2e65f85255db/go.mod h1:/XxbfmMg8lxefKM7IXC3fBNl/7bRcc72aCRzEWrmP2Q=
-github.com/golang/snappy v0.0.1 h1:Qgr9rKW7uDUkrbSmQeiDsGa8SjGyCOGtuasMWwvp2P4=
-github.com/golang/snappy v0.0.1/go.mod h1:/XxbfmMg8lxefKM7IXC3fBNl/7bRcc72aCRzEWrmP2Q=
-github.com/hashicorp/hcl v1.0.0/go.mod h1:E5yfLk+7swimpb2L/Alb/PJmXilQ/rhwaUYs4T20WEQ=
-github.com/hpcloud/tail v1.0.0 h1:nfCOvKYfkgYP8hkirhJocXT2+zOD8yUNjXaWfTlyFKI=
-github.com/hpcloud/tail v1.0.0/go.mod h1:ab1qPbhIpdTxEkNHXyeSf5vhxWSCs/tWer42PpOxQnU=
-github.com/inconshreveable/mousetrap v1.0.0 h1:Z8tu5sraLXCXIcARxBp/8cbvlwVa7Z1NHg9XEKhtSvM=
-github.com/inconshreveable/mousetrap v1.0.0/go.mod h1:PxqpIevigyE2G7u3NXJIT2ANytuPF1OarO4DADm73n8=
-github.com/kljensen/snowball v0.6.0 h1:6DZLCcZeL0cLfodx+Md4/OLC6b/bfurWUOUGs1ydfOU=
-github.com/kljensen/snowball v0.6.0/go.mod h1:27N7E8fVU5H68RlUmnWwZCfxgt4POBJfENGMvNRhldw=
-github.com/magiconair/properties v1.8.0/go.mod h1:PppfXfuXeibc/6YijjN8zIbojt8czPbwD3XqdrwzmxQ=
-github.com/mitchellh/go-homedir v1.1.0/go.mod h1:SfyaCUpYCn1Vlf4IUYiD9fPX4A5wJrkLzIz1N1q0pr0=
-github.com/mitchellh/mapstructure v1.1.2/go.mod h1:FVVH3fgwuzCH5S8UJGiWEs2h04kUh9fWfEaFds41c1Y=
-github.com/mschoch/smat v0.2.0 h1:8imxQsjDm8yFEAVBe7azKmKSgzSkZXDuKkSq9374khM=
-github.com/mschoch/smat v0.2.0/go.mod h1:kc9mz7DoBKqDyiRL7VZN8KvXQMWeTaVnttLRXOlotKw=
-github.com/onsi/ginkgo v1.6.0/go.mod h1:lLunBs/Ym6LB5Z9jYTR76FiuTmxDTDusOGeTQH+WWjE=
-github.com/onsi/ginkgo v1.7.0 h1:WSHQ+IS43OoUrWtD1/bbclrwK8TTH5hzp+umCiuxHgs=
-github.com/onsi/ginkgo v1.7.0/go.mod h1:lLunBs/Ym6LB5Z9jYTR76FiuTmxDTDusOGeTQH+WWjE=
-github.com/onsi/gomega v1.4.3 h1:RE1xgDvH7imwFD45h+u2SgIfERHlS2yNG4DObb5BSKU=
-github.com/onsi/gomega v1.4.3/go.mod h1:ex+gbHU/CVuBBDIJjb2X0qEXbFg53c61hWP/1CpauHY=
-github.com/pelletier/go-toml v1.2.0/go.mod h1:5z9KED0ma1S8pY6P1sdut58dfprrGBbd/94hg7ilaic=
-github.com/pmezard/go-difflib v1.0.0 h1:4DBwDE0NGyQoBHbLQYPwSUPoCMWR5BEzIk/f1lZbAQM=
-github.com/pmezard/go-difflib v1.0.0/go.mod h1:iKH77koFhYxTK1pcRnkKkqfTogsbg7gZNVY4sRDYZ/4=
-github.com/rcrowley/go-metrics v0.0.0-20190826022208-cac0b30c2563 h1:dY6ETXrvDG7Sa4vE8ZQG4yqWg6UnOcbqTAahkV813vQ=
-github.com/rcrowley/go-metrics v0.0.0-20190826022208-cac0b30c2563/go.mod h1:bCqnVzQkZxMG4s8nGwiZ5l3QUCyqpo9Y+/ZMZ9VjZe4=
-github.com/russross/blackfriday v1.5.2/go.mod h1:JO/DiYxRf+HjHt06OyowR9PTA263kcR/rfWxYHBV53g=
-github.com/spf13/afero v1.1.2/go.mod h1:j4pytiNVoe2o6bmDsKpLACNPDBIoEAkihy7loJ1B0CQ=
-github.com/spf13/cast v1.3.0/go.mod h1:Qx5cxh0v+4UWYiBimWS+eyWzqEqokIECu5etghLkUJE=
-github.com/spf13/cobra v0.0.5 h1:f0B+LkLX6DtmRH1isoNA9VTtNUK9K8xYd28JNNfOv/s=
-github.com/spf13/cobra v0.0.5/go.mod h1:3K3wKZymM7VvHMDS9+Akkh4K60UwM26emMESw8tLCHU=
-github.com/spf13/jwalterweatherman v1.0.0/go.mod h1:cQK4TGJAtQXfYWX+Ddv3mKDzgVb68N+wFjFa4jdeBTo=
-github.com/spf13/pflag v1.0.3 h1:zPAT6CGy6wXeQ7NtTnaTerfKOsV6V6F8agHXFiazDkg=
-github.com/spf13/pflag v1.0.3/go.mod h1:DYY7MBk1bdzusC3SYhjObp+wFpr4gzcvqqNjLnInEg4=
-github.com/spf13/viper v1.3.2/go.mod h1:ZiWeW+zYFKm7srdB9IoDzzZXaJaI5eL9QjNiN/DMA2s=
-github.com/steveyen/gtreap v0.1.0 h1:CjhzTa274PyJLJuMZwIzCO1PfC00oRa8d1Kc78bFXJM=
-github.com/steveyen/gtreap v0.1.0/go.mod h1:kl/5J7XbrOmlIbYIXdRHDDE5QxHqpk0cmkT7Z4dM9/Y=
-github.com/stretchr/objx v0.1.0/go.mod h1:HFkY916IF+rwdDfMAkV7OtwuqBVzrE8GR6GFx+wExME=
-github.com/stretchr/testify v1.2.2/go.mod h1:a8OnRcib4nhh0OaRAV+Yts87kKdq0PP7pXfy6kDkUVs=
-github.com/stretchr/testify v1.4.0 h1:2E4SXV/wtOkTonXsotYi4li6zVWxYlZuYNCXe9XRJyk=
-github.com/stretchr/testify v1.4.0/go.mod h1:j7eGeouHqKxXV5pUuKE4zz7dFj8WfuZ+81PSLYec5m4=
-github.com/syndtr/goleveldb v1.0.0 h1:fBdIW9lB4Iz0n9khmH8w27SJ3QEJ7+IgjPEwGSZiFdE=
-github.com/syndtr/goleveldb v1.0.0/go.mod h1:ZVVdQEZoIme9iO1Ch2Jdy24qqXrMMOU6lpPAyBWyWuQ=
-github.com/ugorji/go/codec v0.0.0-20181204163529-d75b2dcb6bc8/go.mod h1:VFNgLljTbGfSG7qAOspJ7OScBnGdDN/yBr0sguwnwf0=
-github.com/xordataexchange/crypt v0.0.3-0.20170626215501-b2862e3d0a77/go.mod h1:aYKd//L2LvnjZzWKhF00oedf4jCCReLcmhLdhm1A27Q=
-go.etcd.io/bbolt v1.3.5 h1:XAzx9gjCb0Rxj7EoqcClPD1d5ZBxZJk0jbuoPHenBt0=
-go.etcd.io/bbolt v1.3.5/go.mod h1:G5EMThwa9y8QZGBClrRx5EY+Yw9kAhnjy3bSjsnlVTQ=
-golang.org/x/crypto v0.0.0-20181203042331-505ab145d0a9/go.mod h1:6SG95UA2DQfeDnfUPMdvaQW0Q7yPrPDi9nlGo2tz2b4=
-golang.org/x/net v0.0.0-20180906233101-161cd47e91fd h1:nTDtHvHSdCn1m6ITfMRqtOd/9+7a3s8RBNOZ3eYZzJA=
-golang.org/x/net v0.0.0-20180906233101-161cd47e91fd/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=
-golang.org/x/sync v0.0.0-20180314180146-1d60e4601c6f/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=
-golang.org/x/sys v0.0.0-20180909124046-d0be0721c37e/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=
-golang.org/x/sys v0.0.0-20181205085412-a5c9d58dba9a/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=
-golang.org/x/sys v0.0.0-20181221143128-b4a75ba826a6/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=
-golang.org/x/sys v0.0.0-20190813064441-fde4db37ae7a/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=
-golang.org/x/sys v0.0.0-20200202164722-d101bd2416d5/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=
-golang.org/x/sys v0.0.0-20200323222414-85ca7c5b95cd h1:xhmwyvizuTgC2qz7ZlMluP20uW+C3Rm0FD/WLDX8884=
-golang.org/x/sys v0.0.0-20200323222414-85ca7c5b95cd/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=
-golang.org/x/text v0.3.0/go.mod h1:NqM8EUOU14njkJ3fqMW+pc6Ldnwhi/IjpwHt7yyuwOQ=
-golang.org/x/text v0.3.7 h1:olpwvP2KacW1ZWvsR7uQhoyTYvKAupfQrRGBFM352Gk=
-golang.org/x/text v0.3.7/go.mod h1:u+2+/6zg+i71rQMx5EYifcz6MCKuco9NR6JIITiCfzQ=
-golang.org/x/tools v0.0.0-20180917221912-90fa682c2a6e/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=
-gopkg.in/check.v1 v0.0.0-20161208181325-20d25e280405 h1:yhCVgyC4o1eVCa2tZl7eS0r+SDo693bJlVdllGtEeKM=
-gopkg.in/check.v1 v0.0.0-20161208181325-20d25e280405/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=
-gopkg.in/fsnotify.v1 v1.4.7 h1:xOHLXZwVvI9hhs+cLKq5+I5onOuwQLhQwiu63xxlHs4=
-gopkg.in/fsnotify.v1 v1.4.7/go.mod h1:Tz8NjZHkW78fSQdbUxIjBTcgA1z1m8ZHf0WmKUhAMys=
-gopkg.in/tomb.v1 v1.0.0-20141024135613-dd632973f1e7 h1:uRGJdciOHaEIrze2W8Q3AKkepLTh2hOroT7a+7czfdQ=
-gopkg.in/tomb.v1 v1.0.0-20141024135613-dd632973f1e7/go.mod h1:dt/ZhP58zS4L8KSrWDmTeBkI65Dw0HsyUHuEVlX15mw=
-gopkg.in/yaml.v2 v2.2.1/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=
-gopkg.in/yaml.v2 v2.2.2 h1:ZCJp+EgiOT7lHqUV2J862kp8Qj64Jo6az82+3Td9dZw=
-gopkg.in/yaml.v2 v2.2.2/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=
diff --git a/vendor/github.com/modern-go/concurrent/log.go b/vendor/github.com/modern-go/concurrent/log.go
index 9756fcc75..5e8f46a5d 100644
--- a/vendor/github.com/modern-go/concurrent/log.go
+++ b/vendor/github.com/modern-go/concurrent/log.go
@@ -10,4 +10,4 @@ import (
 var ErrorLogger = log.New(os.Stderr, "", 0)
 
 // InfoLogger is used to print informational message, default to off
-var InfoLogger = log.New(ioutil.Discard, "", 0)
\ No newline at end of file
+var InfoLogger = log.New(ioutil.Discard, "", 0)
diff --git a/vendor/github.com/prometheus/procfs/fixtures.ttar b/vendor/github.com/prometheus/procfs/fixtures.ttar
index 5e7eeef4a..1e76173da 100644
--- a/vendor/github.com/prometheus/procfs/fixtures.ttar
+++ b/vendor/github.com/prometheus/procfs/fixtures.ttar
@@ -644,11 +644,6 @@ Node 0, zone    DMA32    759    572    791    475    194     45     12      0
 Node 0, zone   Normal   4381   1093    185   1530    567    102      4      0      0      0      0
 Mode: 644
 # ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/proc/cmdline
-Lines: 1
-BOOT_IMAGE=/vmlinuz-5.11.0-22-generic root=UUID=456a0345-450d-4f7b-b7c9-43e3241d99ad ro quiet splash vt.handoff=7
-Mode: 444
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
 Path: fixtures/proc/cpuinfo
 Lines: 216
 processor	: 0
@@ -2209,23 +2204,6 @@ Lines: 1
 00015c73 00020e76 F0000769 00000000
 Mode: 644
 # ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Directory: fixtures/proc/net/stat
-Mode: 755
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/proc/net/stat/arp_cache
-Lines: 3
-entries  allocs destroys hash_grows  lookups hits  res_failed  rcv_probes_mcast rcv_probes_ucast  periodic_gc_runs forced_gc_runs unresolved_discards table_fulls
-00000014  00000001 00000002 00000003  00000004 00000005  00000006  00000007 00000008  00000009 0000000a 0000000b 0000000c
-00000014  0000000d 0000000e 0000000f  00000010 00000011  00000012  00000013 00000014  00000015 00000016 00000017 00000018
-Mode: 644
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/proc/net/stat/ndisc_cache
-Lines: 3
-entries  allocs destroys hash_grows  lookups hits  res_failed  rcv_probes_mcast rcv_probes_ucast  periodic_gc_runs forced_gc_runs unresolved_discards table_fulls
-00000024  000000f0 000000f1 000000f2  000000f3 000000f4  000000f5  000000f6 000000f7  000000f8 000000f9 000000fa 000000fb
-00000024  000000fc 000000fd 000000fe  000000ff 00000100  00000101  00000102 00000103  00000104 00000105 00000106 00000107
-Mode: 644
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
 Path: fixtures/proc/net/tcp
 Lines: 4
   sl  local_address rem_address   st tx_queue rx_queue tr tm->when retrnsmt   uid  timeout inode
@@ -3477,460 +3455,6 @@ Mode: 664
 Directory: fixtures/sys/class
 Mode: 775
 # ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Directory: fixtures/sys/class/drm
-Mode: 755
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Directory: fixtures/sys/class/drm/card0
-Mode: 755
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Directory: fixtures/sys/class/drm/card0/device
-Mode: 755
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/class/drm/card0/device/aer_dev_correctable
-Lines: 9
-RxErr 0
-BadTLP 0
-BadDLLP 0
-Rollover 0
-Timeout 0
-NonFatalErr 0
-CorrIntErr 0
-HeaderOF 0
-TOTAL_ERR_COR 0
-Mode: 444
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/class/drm/card0/device/aer_dev_fatal
-Lines: 19
-Undefined 0
-DLP 0
-SDES 0
-TLP 0
-FCP 0
-CmpltTO 0
-CmpltAbrt 0
-UnxCmplt 0
-RxOF 0
-MalfTLP 0
-ECRC 0
-UnsupReq 0
-ACSViol 0
-UncorrIntErr 0
-BlockedTLP 0
-AtomicOpBlocked 0
-TLPBlockedErr 0
-PoisonTLPBlocked 0
-TOTAL_ERR_FATAL 0
-Mode: 444
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/class/drm/card0/device/aer_dev_nonfatal
-Lines: 19
-Undefined 0
-DLP 0
-SDES 0
-TLP 0
-FCP 0
-CmpltTO 0
-CmpltAbrt 0
-UnxCmplt 0
-RxOF 0
-MalfTLP 0
-ECRC 0
-UnsupReq 0
-ACSViol 0
-UncorrIntErr 0
-BlockedTLP 0
-AtomicOpBlocked 0
-TLPBlockedErr 0
-PoisonTLPBlocked 0
-TOTAL_ERR_NONFATAL 0
-Mode: 444
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/class/drm/card0/device/ari_enabled
-Lines: 1
-0
-Mode: 444
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/class/drm/card0/device/boot_vga
-Lines: 1
-1
-Mode: 444
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/class/drm/card0/device/broken_parity_status
-Lines: 1
-0
-Mode: 644
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/class/drm/card0/device/class
-Lines: 1
-0x030000
-Mode: 444
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/class/drm/card0/device/consistent_dma_mask_bits
-Lines: 1
-44
-Mode: 444
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/class/drm/card0/device/current_link_speed
-Lines: 1
-8.0 GT/s PCIe
-Mode: 444
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/class/drm/card0/device/current_link_width
-Lines: 1
-16
-Mode: 444
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/class/drm/card0/device/d3cold_allowed
-Lines: 1
-1
-Mode: 644
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/class/drm/card0/device/device
-Lines: 1
-0x687f
-Mode: 444
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/class/drm/card0/device/dma_mask_bits
-Lines: 1
-44
-Mode: 444
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/class/drm/card0/device/driver_override
-Lines: 1
-(null)
-Mode: 644
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/class/drm/card0/device/enable
-Lines: 1
-1
-Mode: 644
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/class/drm/card0/device/gpu_busy_percent
-Lines: 1
-4
-Mode: 444
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/class/drm/card0/device/irq
-Lines: 1
-95
-Mode: 444
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/class/drm/card0/device/local_cpulist
-Lines: 1
-0-15
-Mode: 444
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/class/drm/card0/device/local_cpus
-Lines: 1
-0000ffff
-Mode: 444
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/class/drm/card0/device/max_link_speed
-Lines: 1
-8.0 GT/s PCIe
-Mode: 444
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/class/drm/card0/device/max_link_width
-Lines: 1
-16
-Mode: 444
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/class/drm/card0/device/mem_info_gtt_total
-Lines: 1
-8573157376
-Mode: 444
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/class/drm/card0/device/mem_info_gtt_used
-Lines: 1
-144560128
-Mode: 444
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/class/drm/card0/device/mem_info_vis_vram_total
-Lines: 1
-8573157376
-Mode: 444
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/class/drm/card0/device/mem_info_vis_vram_used
-Lines: 1
-1490378752
-Mode: 444
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/class/drm/card0/device/mem_info_vram_total
-Lines: 1
-8573157376
-Mode: 444
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/class/drm/card0/device/mem_info_vram_used
-Lines: 1
-1490378752
-Mode: 444
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/class/drm/card0/device/mem_info_vram_vendor
-Lines: 1
-samsung
-Mode: 444
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/class/drm/card0/device/modalias
-Lines: 1
-pci:v00001002d0000687Fsv00001043sd000004C4bc03sc00i00
-Mode: 444
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/class/drm/card0/device/msi_bus
-Lines: 1
-1
-Mode: 644
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/class/drm/card0/device/numa_node
-Lines: 1
--1
-Mode: 644
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/class/drm/card0/device/pcie_bw
-Lines: 1
-6641 815 256
-Mode: 444
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/class/drm/card0/device/pcie_replay_count
-Lines: 1
-0
-Mode: 444
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/class/drm/card0/device/power_dpm_force_performance_level
-Lines: 1
-manual
-Mode: 644
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/class/drm/card0/device/power_dpm_state
-Lines: 1
-performance
-Mode: 644
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/class/drm/card0/device/power_state
-Lines: 1
-D0
-Mode: 444
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/class/drm/card0/device/pp_cur_state
-Lines: 1
-1
-Mode: 444
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/class/drm/card0/device/pp_dpm_dcefclk
-Lines: 5
-0: 600Mhz *
-1: 720Mhz 
-2: 800Mhz 
-3: 847Mhz 
-4: 900Mhz 
-Mode: 644
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/class/drm/card0/device/pp_dpm_mclk
-Lines: 4
-0: 167Mhz *
-1: 500Mhz 
-2: 800Mhz 
-3: 945Mhz 
-Mode: 644
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/class/drm/card0/device/pp_dpm_pcie
-Lines: 2
-0: 8.0GT/s, x16 
-1: 8.0GT/s, x16 *
-Mode: 644
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/class/drm/card0/device/pp_dpm_sclk
-Lines: 8
-0: 852Mhz *
-1: 991Mhz 
-2: 1084Mhz 
-3: 1138Mhz 
-4: 1200Mhz 
-5: 1401Mhz 
-6: 1536Mhz 
-7: 1630Mhz 
-Mode: 644
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/class/drm/card0/device/pp_dpm_socclk
-Lines: 8
-0: 600Mhz 
-1: 720Mhz *
-2: 800Mhz 
-3: 847Mhz 
-4: 900Mhz 
-5: 960Mhz 
-6: 1028Mhz 
-7: 1107Mhz 
-Mode: 644
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/class/drm/card0/device/pp_features
-Lines: 32
-Current ppfeatures: 0x0000000019a1ff4f
-FEATURES            BITMASK                ENABLEMENT
-DPM_PREFETCHER      0x0000000000000001      Y
-GFXCLK_DPM          0x0000000000000002      Y
-UCLK_DPM            0x0000000000000004      Y
-SOCCLK_DPM          0x0000000000000008      Y
-UVD_DPM             0x0000000000000010      N
-VCE_DPM             0x0000000000000020      N
-ULV                 0x0000000000000040      Y
-MP0CLK_DPM          0x0000000000000080      N
-LINK_DPM            0x0000000000000100      Y
-DCEFCLK_DPM         0x0000000000000200      Y
-AVFS                0x0000000000000400      Y
-GFXCLK_DS           0x0000000000000800      Y
-SOCCLK_DS           0x0000000000001000      Y
-LCLK_DS             0x0000000000002000      Y
-PPT                 0x0000000000004000      Y
-TDC                 0x0000000000008000      Y
-THERMAL             0x0000000000010000      Y
-GFX_PER_CU_CG       0x0000000000020000      N
-RM                  0x0000000000040000      N
-DCEFCLK_DS          0x0000000000080000      N
-ACDC                0x0000000000100000      N
-VR0HOT              0x0000000000200000      Y
-VR1HOT              0x0000000000400000      N
-FW_CTF              0x0000000000800000      Y
-LED_DISPLAY         0x0000000001000000      Y
-FAN_CONTROL         0x0000000002000000      N
-FAST_PPT            0x0000000004000000      N
-DIDT                0x0000000008000000      Y
-ACG                 0x0000000010000000      Y
-PCC_LIMIT           0x0000000020000000      N
-Mode: 644
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/class/drm/card0/device/pp_force_state
-Lines: 1
-
-Mode: 644
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/class/drm/card0/device/pp_mclk_od
-Lines: 1
-0
-Mode: 644
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/class/drm/card0/device/pp_num_states
-Lines: 3
-states: 2
-0 boot
-1 performance
-Mode: 444
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/class/drm/card0/device/pp_od_clk_voltage
-Lines: 18
-OD_SCLK:
-0:        852Mhz        800mV
-1:        991Mhz        900mV
-2:       1084Mhz        950mV
-3:       1138Mhz       1000mV
-4:       1200Mhz       1050mV
-5:       1401Mhz       1100mV
-6:       1536Mhz       1150mV
-7:       1630Mhz       1200mV
-OD_MCLK:
-0:        167Mhz        800mV
-1:        500Mhz        800mV
-2:        800Mhz        950mV
-3:        945Mhz       1100mV
-OD_RANGE:
-SCLK:     852MHz       2400MHz
-MCLK:     167MHz       1500MHz
-VDDC:     800mV        1200mV
-Mode: 644
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/class/drm/card0/device/pp_power_profile_mode
-Lines: 8
-NUM        MODE_NAME BUSY_SET_POINT FPS USE_RLC_BUSY MIN_ACTIVE_LEVEL
-  0 BOOTUP_DEFAULT :             70  60          0              0
-  1 3D_FULL_SCREEN*:             70  60          1              3
-  2   POWER_SAVING :             90  60          0              0
-  3          VIDEO :             70  60          0              0
-  4             VR :             70  90          0              0
-  5        COMPUTE :             30  60          0              6
-  6         CUSTOM :              0   0          0              0
-Mode: 644
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/class/drm/card0/device/pp_sclk_od
-Lines: 1
-0
-Mode: 644
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/class/drm/card0/device/product_name
-Lines: 1
-
-Mode: 444
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/class/drm/card0/device/product_number
-Lines: 1
-
-Mode: 444
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/class/drm/card0/device/resource
-Lines: 13
-0x0000007c00000000 0x0000007dffffffff 0x000000000014220c
-0x0000000000000000 0x0000000000000000 0x0000000000000000
-0x0000007e00000000 0x0000007e0fffffff 0x000000000014220c
-0x0000000000000000 0x0000000000000000 0x0000000000000000
-0x000000000000d000 0x000000000000d0ff 0x0000000000040101
-0x00000000fcd00000 0x00000000fcd7ffff 0x0000000000040200
-0x00000000fcd80000 0x00000000fcd9ffff 0x0000000000046200
-0x0000000000000000 0x0000000000000000 0x0000000000000000
-0x0000000000000000 0x0000000000000000 0x0000000000000000
-0x0000000000000000 0x0000000000000000 0x0000000000000000
-0x0000000000000000 0x0000000000000000 0x0000000000000000
-0x0000000000000000 0x0000000000000000 0x0000000000000000
-0x0000000000000000 0x0000000000000000 0x0000000000000000
-Mode: 444
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/class/drm/card0/device/revision
-Lines: 1
-0xc1
-Mode: 444
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/class/drm/card0/device/serial_number
-Lines: 1
-
-Mode: 444
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/class/drm/card0/device/subsystem_device
-Lines: 1
-0x04c4
-Mode: 444
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/class/drm/card0/device/subsystem_vendor
-Lines: 1
-0x1043
-Mode: 444
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/class/drm/card0/device/thermal_throttling_logging
-Lines: 1
-0000:09:00.0: thermal throttling logging enabled, with interval 60 seconds
-Mode: 644
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/class/drm/card0/device/uevent
-Lines: 6
-DRIVER=amdgpu
-PCI_CLASS=30000
-PCI_ID=1002:687F
-PCI_SUBSYS_ID=1043:04C4
-PCI_SLOT_NAME=0000:09:00.0
-MODALIAS=pci:v00001002d0000687Fsv00001043sd000004C4bc03sc00i00
-Mode: 644
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/class/drm/card0/device/unique_id
-Lines: 1
-0123456789abcdef
-Mode: 444
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/class/drm/card0/device/vbios_version
-Lines: 1
-115-D050PIL-100
-Mode: 444
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/class/drm/card0/device/vendor
-Lines: 1
-0x1002
-Mode: 444
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
 Directory: fixtures/sys/class/fc_host
 Mode: 755
 # ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
@@ -4068,262 +3592,140 @@ Mode: 644
 Directory: fixtures/sys/class/infiniband
 Mode: 755
 # ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Directory: fixtures/sys/class/infiniband/hfi1_0
+Directory: fixtures/sys/class/infiniband/mlx4_0
 Mode: 755
 # ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/class/infiniband/hfi1_0/board_id
+Path: fixtures/sys/class/infiniband/mlx4_0/board_id
+Lines: 1
+SM_1141000001000
+Mode: 644
+# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
+Path: fixtures/sys/class/infiniband/mlx4_0/fw_ver
 Lines: 1
-HPE 100Gb 1-port OP101 QSFP28 x16 PCIe Gen3 with Intel Omni-Path Adapter
+2.31.5050
 Mode: 644
 # ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/class/infiniband/hfi1_0/fw_ver
+Path: fixtures/sys/class/infiniband/mlx4_0/hca_type
 Lines: 1
-1.27.0
+MT4099
 Mode: 644
 # ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Directory: fixtures/sys/class/infiniband/hfi1_0/ports
+Directory: fixtures/sys/class/infiniband/mlx4_0/ports
 Mode: 755
 # ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Directory: fixtures/sys/class/infiniband/hfi1_0/ports/1
+Directory: fixtures/sys/class/infiniband/mlx4_0/ports/1
 Mode: 755
 # ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Directory: fixtures/sys/class/infiniband/hfi1_0/ports/1/counters
+Directory: fixtures/sys/class/infiniband/mlx4_0/ports/1/counters
 Mode: 755
 # ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/class/infiniband/hfi1_0/ports/1/counters/VL15_dropped
+Path: fixtures/sys/class/infiniband/mlx4_0/ports/1/counters/VL15_dropped
 Lines: 1
 0
-Mode: 644
+Mode: 664
 # ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/class/infiniband/hfi1_0/ports/1/counters/excessive_buffer_overrun_errors
+Path: fixtures/sys/class/infiniband/mlx4_0/ports/1/counters/excessive_buffer_overrun_errors
 Lines: 1
 0
 Mode: 644
 # ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/class/infiniband/hfi1_0/ports/1/counters/link_downed
+Path: fixtures/sys/class/infiniband/mlx4_0/ports/1/counters/link_downed
 Lines: 1
 0
 Mode: 644
 # ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/class/infiniband/hfi1_0/ports/1/counters/link_error_recovery
+Path: fixtures/sys/class/infiniband/mlx4_0/ports/1/counters/link_error_recovery
 Lines: 1
 0
 Mode: 644
 # ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/class/infiniband/hfi1_0/ports/1/counters/local_link_integrity_errors
+Path: fixtures/sys/class/infiniband/mlx4_0/ports/1/counters/local_link_integrity_errors
 Lines: 1
 0
 Mode: 644
 # ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/class/infiniband/hfi1_0/ports/1/counters/port_rcv_constraint_errors
+Path: fixtures/sys/class/infiniband/mlx4_0/ports/1/counters/port_rcv_constraint_errors
 Lines: 1
 0
 Mode: 644
 # ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/class/infiniband/hfi1_0/ports/1/counters/port_rcv_data
+Path: fixtures/sys/class/infiniband/mlx4_0/ports/1/counters/port_rcv_data
 Lines: 1
-345091702026
+2221223609
 Mode: 644
 # ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/class/infiniband/hfi1_0/ports/1/counters/port_rcv_errors
+Path: fixtures/sys/class/infiniband/mlx4_0/ports/1/counters/port_rcv_errors
 Lines: 1
 0
 Mode: 644
 # ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/class/infiniband/hfi1_0/ports/1/counters/port_rcv_packets
+Path: fixtures/sys/class/infiniband/mlx4_0/ports/1/counters/port_rcv_packets
 Lines: 1
-638036947
+87169372
 Mode: 644
 # ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/class/infiniband/hfi1_0/ports/1/counters/port_rcv_remote_physical_errors
+Path: fixtures/sys/class/infiniband/mlx4_0/ports/1/counters/port_rcv_remote_physical_errors
 Lines: 1
 0
 Mode: 644
 # ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/class/infiniband/hfi1_0/ports/1/counters/port_rcv_switch_relay_errors
+Path: fixtures/sys/class/infiniband/mlx4_0/ports/1/counters/port_rcv_switch_relay_errors
 Lines: 1
 0
 Mode: 644
 # ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/class/infiniband/hfi1_0/ports/1/counters/port_xmit_constraint_errors
+Path: fixtures/sys/class/infiniband/mlx4_0/ports/1/counters/port_xmit_constraint_errors
 Lines: 1
 0
 Mode: 644
 # ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/class/infiniband/hfi1_0/ports/1/counters/port_xmit_data
+Path: fixtures/sys/class/infiniband/mlx4_0/ports/1/counters/port_xmit_data
 Lines: 1
-273558326543
+26509113295
 Mode: 644
 # ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/class/infiniband/hfi1_0/ports/1/counters/port_xmit_discards
+Path: fixtures/sys/class/infiniband/mlx4_0/ports/1/counters/port_xmit_discards
 Lines: 1
 0
 Mode: 644
 # ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/class/infiniband/hfi1_0/ports/1/counters/port_xmit_packets
+Path: fixtures/sys/class/infiniband/mlx4_0/ports/1/counters/port_xmit_packets
 Lines: 1
-568318856
+85734114
 Mode: 644
 # ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/class/infiniband/hfi1_0/ports/1/counters/port_xmit_wait
+Path: fixtures/sys/class/infiniband/mlx4_0/ports/1/counters/port_xmit_wait
 Lines: 1
-0
+3599
 Mode: 644
 # ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/class/infiniband/hfi1_0/ports/1/counters/symbol_error
+Path: fixtures/sys/class/infiniband/mlx4_0/ports/1/counters/symbol_error
 Lines: 1
 0
 Mode: 644
 # ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/class/infiniband/hfi1_0/ports/1/phys_state
+Path: fixtures/sys/class/infiniband/mlx4_0/ports/1/phys_state
 Lines: 1
 5: LinkUp
 Mode: 644
 # ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/class/infiniband/hfi1_0/ports/1/rate
+Path: fixtures/sys/class/infiniband/mlx4_0/ports/1/rate
 Lines: 1
-100 Gb/sec (4X EDR)
+40 Gb/sec (4X QDR)
 Mode: 644
 # ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/class/infiniband/hfi1_0/ports/1/state
+Path: fixtures/sys/class/infiniband/mlx4_0/ports/1/state
 Lines: 1
 4: ACTIVE
 Mode: 644
 # ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Directory: fixtures/sys/class/infiniband/mlx4_0
+Directory: fixtures/sys/class/infiniband/mlx4_0/ports/2
 Mode: 755
 # ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/class/infiniband/mlx4_0/board_id
-Lines: 1
-SM_1141000001000
-Mode: 644
+Directory: fixtures/sys/class/infiniband/mlx4_0/ports/2/counters
+Mode: 755
 # ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/class/infiniband/mlx4_0/fw_ver
-Lines: 1
-2.31.5050
-Mode: 644
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/class/infiniband/mlx4_0/hca_type
-Lines: 1
-MT4099
-Mode: 644
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Directory: fixtures/sys/class/infiniband/mlx4_0/ports
-Mode: 755
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Directory: fixtures/sys/class/infiniband/mlx4_0/ports/1
-Mode: 755
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Directory: fixtures/sys/class/infiniband/mlx4_0/ports/1/counters
-Mode: 755
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/class/infiniband/mlx4_0/ports/1/counters/VL15_dropped
-Lines: 1
-0
-Mode: 664
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/class/infiniband/mlx4_0/ports/1/counters/excessive_buffer_overrun_errors
-Lines: 1
-0
-Mode: 644
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/class/infiniband/mlx4_0/ports/1/counters/link_downed
-Lines: 1
-0
-Mode: 644
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/class/infiniband/mlx4_0/ports/1/counters/link_error_recovery
-Lines: 1
-0
-Mode: 644
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/class/infiniband/mlx4_0/ports/1/counters/local_link_integrity_errors
-Lines: 1
-0
-Mode: 644
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/class/infiniband/mlx4_0/ports/1/counters/port_rcv_constraint_errors
-Lines: 1
-0
-Mode: 644
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/class/infiniband/mlx4_0/ports/1/counters/port_rcv_data
-Lines: 1
-2221223609
-Mode: 644
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/class/infiniband/mlx4_0/ports/1/counters/port_rcv_errors
-Lines: 1
-0
-Mode: 644
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/class/infiniband/mlx4_0/ports/1/counters/port_rcv_packets
-Lines: 1
-87169372
-Mode: 644
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/class/infiniband/mlx4_0/ports/1/counters/port_rcv_remote_physical_errors
-Lines: 1
-0
-Mode: 644
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/class/infiniband/mlx4_0/ports/1/counters/port_rcv_switch_relay_errors
-Lines: 1
-0
-Mode: 644
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/class/infiniband/mlx4_0/ports/1/counters/port_xmit_constraint_errors
-Lines: 1
-0
-Mode: 644
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/class/infiniband/mlx4_0/ports/1/counters/port_xmit_data
-Lines: 1
-26509113295
-Mode: 644
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/class/infiniband/mlx4_0/ports/1/counters/port_xmit_discards
-Lines: 1
-0
-Mode: 644
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/class/infiniband/mlx4_0/ports/1/counters/port_xmit_packets
-Lines: 1
-85734114
-Mode: 644
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/class/infiniband/mlx4_0/ports/1/counters/port_xmit_wait
-Lines: 1
-3599
-Mode: 644
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/class/infiniband/mlx4_0/ports/1/counters/symbol_error
-Lines: 1
-0
-Mode: 644
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/class/infiniband/mlx4_0/ports/1/phys_state
-Lines: 1
-5: LinkUp
-Mode: 644
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/class/infiniband/mlx4_0/ports/1/rate
-Lines: 1
-40 Gb/sec (4X QDR)
-Mode: 644
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/class/infiniband/mlx4_0/ports/1/state
-Lines: 1
-4: ACTIVE
-Mode: 644
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Directory: fixtures/sys/class/infiniband/mlx4_0/ports/2
-Mode: 755
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Directory: fixtures/sys/class/infiniband/mlx4_0/ports/2/counters
-Mode: 755
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/class/infiniband/mlx4_0/ports/2/counters/VL15_dropped
+Path: fixtures/sys/class/infiniband/mlx4_0/ports/2/counters/VL15_dropped
 Lines: 1
 0
 Mode: 664
@@ -4558,32 +3960,6 @@ Lines: 1
 1
 Mode: 644
 # ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Directory: fixtures/sys/class/nvme
-Mode: 775
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Directory: fixtures/sys/class/nvme/nvme0
-Mode: 775
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/class/nvme/nvme0/firmware_rev
-Lines: 1
-1B2QEXP7
-Mode: 664
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/class/nvme/nvme0/model
-Lines: 1
-Samsung SSD 970 PRO 512GB               
-Mode: 664
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/class/nvme/nvme0/serial
-Lines: 1
-S680HF8N190894I
-Mode: 664
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/class/nvme/nvme0/state
-Lines: 1
-live
-Mode: 664
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
 Directory: fixtures/sys/class/power_supply
 Mode: 755
 # ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
@@ -4788,33 +4164,6 @@ Path: fixtures/sys/class/powercap/intel-rapl:a/uevent
 Lines: 0
 Mode: 644
 # ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Directory: fixtures/sys/class/scsi_tape
-Mode: 755
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/class/scsi_tape/nst0
-SymlinkTo: ../../devices/pci0000:00/0000:00:00.0/host0/port-0:0/end_device-0:0/target0:0:0/0:0:0:0/scsi_tape/nst0
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/class/scsi_tape/nst0a
-SymlinkTo: ../../devices/pci0000:00/0000:00:00.0/host0/port-0:0/end_device-0:0/target0:0:0/0:0:0:0/scsi_tape/nst0a
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/class/scsi_tape/nst0l
-SymlinkTo: ../../devices/pci0000:00/0000:00:00.0/host0/port-0:0/end_device-0:0/target0:0:0/0:0:0:0/scsi_tape/nst0l
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/class/scsi_tape/nst0m
-SymlinkTo: ../../devices/pci0000:00/0000:00:00.0/host0/port-0:0/end_device-0:0/target0:0:0/0:0:0:0/scsi_tape/nst0m
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/class/scsi_tape/st0
-SymlinkTo: ../../devices/pci0000:00/0000:00:00.0/host0/port-0:0/end_device-0:0/target0:0:0/0:0:0:0/scsi_tape/st0
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/class/scsi_tape/st0a
-SymlinkTo: ../../devices/pci0000:00/0000:00:00.0/host0/port-0:0/end_device-0:0/target0:0:0/0:0:0:0/scsi_tape/st0a
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/class/scsi_tape/st0l
-SymlinkTo: ../../devices/pci0000:00/0000:00:00.0/host0/port-0:0/end_device-0:0/target0:0:0/0:0:0:0/scsi_tape/st0l
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/class/scsi_tape/st0m
-SymlinkTo: ../../devices/pci0000:00/0000:00:00.0/host0/port-0:0/end_device-0:0/target0:0:0/0:0:0:0/scsi_tape/st0m
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
 Directory: fixtures/sys/class/thermal
 Mode: 775
 # ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
@@ -5226,475 +4575,6 @@ Mode: 444
 Directory: fixtures/sys/devices/pci0000:00
 Mode: 755
 # ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Directory: fixtures/sys/devices/pci0000:00/0000:00:00.0
-Mode: 755
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Directory: fixtures/sys/devices/pci0000:00/0000:00:00.0/host0
-Mode: 755
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Directory: fixtures/sys/devices/pci0000:00/0000:00:00.0/host0/port-0:0
-Mode: 755
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Directory: fixtures/sys/devices/pci0000:00/0000:00:00.0/host0/port-0:0/end_device-0:0
-Mode: 755
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Directory: fixtures/sys/devices/pci0000:00/0000:00:00.0/host0/port-0:0/end_device-0:0/target0:0:0
-Mode: 755
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Directory: fixtures/sys/devices/pci0000:00/0000:00:00.0/host0/port-0:0/end_device-0:0/target0:0:0/0:0:0:0
-Mode: 755
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Directory: fixtures/sys/devices/pci0000:00/0000:00:00.0/host0/port-0:0/end_device-0:0/target0:0:0/0:0:0:0/scsi_tape
-Mode: 755
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Directory: fixtures/sys/devices/pci0000:00/0000:00:00.0/host0/port-0:0/end_device-0:0/target0:0:0/0:0:0:0/scsi_tape/nst0
-Mode: 755
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Directory: fixtures/sys/devices/pci0000:00/0000:00:00.0/host0/port-0:0/end_device-0:0/target0:0:0/0:0:0:0/scsi_tape/nst0/stats
-Mode: 755
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/devices/pci0000:00/0000:00:00.0/host0/port-0:0/end_device-0:0/target0:0:0/0:0:0:0/scsi_tape/nst0/stats/in_flight
-Lines: 1
-1EOF
-Mode: 444
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/devices/pci0000:00/0000:00:00.0/host0/port-0:0/end_device-0:0/target0:0:0/0:0:0:0/scsi_tape/nst0/stats/io_ns
-Lines: 1
-9247011087720EOF
-Mode: 444
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/devices/pci0000:00/0000:00:00.0/host0/port-0:0/end_device-0:0/target0:0:0/0:0:0:0/scsi_tape/nst0/stats/other_cnt
-Lines: 1
-1409EOF
-Mode: 444
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/devices/pci0000:00/0000:00:00.0/host0/port-0:0/end_device-0:0/target0:0:0/0:0:0:0/scsi_tape/nst0/stats/read_byte_cnt
-Lines: 1
-979383912EOF
-Mode: 444
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/devices/pci0000:00/0000:00:00.0/host0/port-0:0/end_device-0:0/target0:0:0/0:0:0:0/scsi_tape/nst0/stats/read_cnt
-Lines: 1
-3741EOF
-Mode: 444
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/devices/pci0000:00/0000:00:00.0/host0/port-0:0/end_device-0:0/target0:0:0/0:0:0:0/scsi_tape/nst0/stats/read_ns
-Lines: 1
-33788355744EOF
-Mode: 444
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/devices/pci0000:00/0000:00:00.0/host0/port-0:0/end_device-0:0/target0:0:0/0:0:0:0/scsi_tape/nst0/stats/resid_cnt
-Lines: 1
-19EOF
-Mode: 444
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/devices/pci0000:00/0000:00:00.0/host0/port-0:0/end_device-0:0/target0:0:0/0:0:0:0/scsi_tape/nst0/stats/write_byte_cnt
-Lines: 1
-1496246784000EOF
-Mode: 444
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/devices/pci0000:00/0000:00:00.0/host0/port-0:0/end_device-0:0/target0:0:0/0:0:0:0/scsi_tape/nst0/stats/write_cnt
-Lines: 1
-53772916EOF
-Mode: 444
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/devices/pci0000:00/0000:00:00.0/host0/port-0:0/end_device-0:0/target0:0:0/0:0:0:0/scsi_tape/nst0/stats/write_ns
-Lines: 1
-5233597394395EOF
-Mode: 444
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Directory: fixtures/sys/devices/pci0000:00/0000:00:00.0/host0/port-0:0/end_device-0:0/target0:0:0/0:0:0:0/scsi_tape/nst0a
-Mode: 755
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Directory: fixtures/sys/devices/pci0000:00/0000:00:00.0/host0/port-0:0/end_device-0:0/target0:0:0/0:0:0:0/scsi_tape/nst0a/stats
-Mode: 755
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/devices/pci0000:00/0000:00:00.0/host0/port-0:0/end_device-0:0/target0:0:0/0:0:0:0/scsi_tape/nst0a/stats/in_flight
-Lines: 1
-1EOF
-Mode: 444
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/devices/pci0000:00/0000:00:00.0/host0/port-0:0/end_device-0:0/target0:0:0/0:0:0:0/scsi_tape/nst0a/stats/io_ns
-Lines: 1
-9247011087720EOF
-Mode: 444
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/devices/pci0000:00/0000:00:00.0/host0/port-0:0/end_device-0:0/target0:0:0/0:0:0:0/scsi_tape/nst0a/stats/other_cnt
-Lines: 1
-1409EOF
-Mode: 444
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/devices/pci0000:00/0000:00:00.0/host0/port-0:0/end_device-0:0/target0:0:0/0:0:0:0/scsi_tape/nst0a/stats/read_byte_cnt
-Lines: 1
-979383912EOF
-Mode: 444
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/devices/pci0000:00/0000:00:00.0/host0/port-0:0/end_device-0:0/target0:0:0/0:0:0:0/scsi_tape/nst0a/stats/read_cnt
-Lines: 1
-3741EOF
-Mode: 444
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/devices/pci0000:00/0000:00:00.0/host0/port-0:0/end_device-0:0/target0:0:0/0:0:0:0/scsi_tape/nst0a/stats/read_ns
-Lines: 1
-33788355744EOF
-Mode: 444
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/devices/pci0000:00/0000:00:00.0/host0/port-0:0/end_device-0:0/target0:0:0/0:0:0:0/scsi_tape/nst0a/stats/resid_cnt
-Lines: 1
-19EOF
-Mode: 444
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/devices/pci0000:00/0000:00:00.0/host0/port-0:0/end_device-0:0/target0:0:0/0:0:0:0/scsi_tape/nst0a/stats/write_byte_cnt
-Lines: 1
-1496246784000EOF
-Mode: 444
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/devices/pci0000:00/0000:00:00.0/host0/port-0:0/end_device-0:0/target0:0:0/0:0:0:0/scsi_tape/nst0a/stats/write_cnt
-Lines: 1
-53772916EOF
-Mode: 444
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/devices/pci0000:00/0000:00:00.0/host0/port-0:0/end_device-0:0/target0:0:0/0:0:0:0/scsi_tape/nst0a/stats/write_ns
-Lines: 1
-5233597394395EOF
-Mode: 444
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Directory: fixtures/sys/devices/pci0000:00/0000:00:00.0/host0/port-0:0/end_device-0:0/target0:0:0/0:0:0:0/scsi_tape/nst0l
-Mode: 755
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Directory: fixtures/sys/devices/pci0000:00/0000:00:00.0/host0/port-0:0/end_device-0:0/target0:0:0/0:0:0:0/scsi_tape/nst0l/stats
-Mode: 755
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/devices/pci0000:00/0000:00:00.0/host0/port-0:0/end_device-0:0/target0:0:0/0:0:0:0/scsi_tape/nst0l/stats/in_flight
-Lines: 1
-1EOF
-Mode: 444
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/devices/pci0000:00/0000:00:00.0/host0/port-0:0/end_device-0:0/target0:0:0/0:0:0:0/scsi_tape/nst0l/stats/io_ns
-Lines: 1
-9247011087720EOF
-Mode: 444
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/devices/pci0000:00/0000:00:00.0/host0/port-0:0/end_device-0:0/target0:0:0/0:0:0:0/scsi_tape/nst0l/stats/other_cnt
-Lines: 1
-1409EOF
-Mode: 444
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/devices/pci0000:00/0000:00:00.0/host0/port-0:0/end_device-0:0/target0:0:0/0:0:0:0/scsi_tape/nst0l/stats/read_byte_cnt
-Lines: 1
-979383912EOF
-Mode: 444
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/devices/pci0000:00/0000:00:00.0/host0/port-0:0/end_device-0:0/target0:0:0/0:0:0:0/scsi_tape/nst0l/stats/read_cnt
-Lines: 1
-3741EOF
-Mode: 444
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/devices/pci0000:00/0000:00:00.0/host0/port-0:0/end_device-0:0/target0:0:0/0:0:0:0/scsi_tape/nst0l/stats/read_ns
-Lines: 1
-33788355744EOF
-Mode: 444
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/devices/pci0000:00/0000:00:00.0/host0/port-0:0/end_device-0:0/target0:0:0/0:0:0:0/scsi_tape/nst0l/stats/resid_cnt
-Lines: 1
-19EOF
-Mode: 444
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/devices/pci0000:00/0000:00:00.0/host0/port-0:0/end_device-0:0/target0:0:0/0:0:0:0/scsi_tape/nst0l/stats/write_byte_cnt
-Lines: 1
-1496246784000EOF
-Mode: 444
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/devices/pci0000:00/0000:00:00.0/host0/port-0:0/end_device-0:0/target0:0:0/0:0:0:0/scsi_tape/nst0l/stats/write_cnt
-Lines: 1
-53772916EOF
-Mode: 444
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/devices/pci0000:00/0000:00:00.0/host0/port-0:0/end_device-0:0/target0:0:0/0:0:0:0/scsi_tape/nst0l/stats/write_ns
-Lines: 1
-5233597394395EOF
-Mode: 444
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Directory: fixtures/sys/devices/pci0000:00/0000:00:00.0/host0/port-0:0/end_device-0:0/target0:0:0/0:0:0:0/scsi_tape/nst0m
-Mode: 755
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Directory: fixtures/sys/devices/pci0000:00/0000:00:00.0/host0/port-0:0/end_device-0:0/target0:0:0/0:0:0:0/scsi_tape/nst0m/stats
-Mode: 755
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/devices/pci0000:00/0000:00:00.0/host0/port-0:0/end_device-0:0/target0:0:0/0:0:0:0/scsi_tape/nst0m/stats/in_flight
-Lines: 1
-1EOF
-Mode: 444
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/devices/pci0000:00/0000:00:00.0/host0/port-0:0/end_device-0:0/target0:0:0/0:0:0:0/scsi_tape/nst0m/stats/io_ns
-Lines: 1
-9247011087720EOF
-Mode: 444
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/devices/pci0000:00/0000:00:00.0/host0/port-0:0/end_device-0:0/target0:0:0/0:0:0:0/scsi_tape/nst0m/stats/other_cnt
-Lines: 1
-1409EOF
-Mode: 444
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/devices/pci0000:00/0000:00:00.0/host0/port-0:0/end_device-0:0/target0:0:0/0:0:0:0/scsi_tape/nst0m/stats/read_byte_cnt
-Lines: 1
-979383912EOF
-Mode: 444
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/devices/pci0000:00/0000:00:00.0/host0/port-0:0/end_device-0:0/target0:0:0/0:0:0:0/scsi_tape/nst0m/stats/read_cnt
-Lines: 1
-3741EOF
-Mode: 444
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/devices/pci0000:00/0000:00:00.0/host0/port-0:0/end_device-0:0/target0:0:0/0:0:0:0/scsi_tape/nst0m/stats/read_ns
-Lines: 1
-33788355744EOF
-Mode: 444
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/devices/pci0000:00/0000:00:00.0/host0/port-0:0/end_device-0:0/target0:0:0/0:0:0:0/scsi_tape/nst0m/stats/resid_cnt
-Lines: 1
-19EOF
-Mode: 444
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/devices/pci0000:00/0000:00:00.0/host0/port-0:0/end_device-0:0/target0:0:0/0:0:0:0/scsi_tape/nst0m/stats/write_byte_cnt
-Lines: 1
-1496246784000EOF
-Mode: 444
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/devices/pci0000:00/0000:00:00.0/host0/port-0:0/end_device-0:0/target0:0:0/0:0:0:0/scsi_tape/nst0m/stats/write_cnt
-Lines: 1
-53772916EOF
-Mode: 444
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/devices/pci0000:00/0000:00:00.0/host0/port-0:0/end_device-0:0/target0:0:0/0:0:0:0/scsi_tape/nst0m/stats/write_ns
-Lines: 1
-5233597394395EOF
-Mode: 444
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Directory: fixtures/sys/devices/pci0000:00/0000:00:00.0/host0/port-0:0/end_device-0:0/target0:0:0/0:0:0:0/scsi_tape/st0
-Mode: 755
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Directory: fixtures/sys/devices/pci0000:00/0000:00:00.0/host0/port-0:0/end_device-0:0/target0:0:0/0:0:0:0/scsi_tape/st0/stats
-Mode: 755
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/devices/pci0000:00/0000:00:00.0/host0/port-0:0/end_device-0:0/target0:0:0/0:0:0:0/scsi_tape/st0/stats/in_flight
-Lines: 1
-1EOF
-Mode: 444
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/devices/pci0000:00/0000:00:00.0/host0/port-0:0/end_device-0:0/target0:0:0/0:0:0:0/scsi_tape/st0/stats/io_ns
-Lines: 1
-9247011087720EOF
-Mode: 444
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/devices/pci0000:00/0000:00:00.0/host0/port-0:0/end_device-0:0/target0:0:0/0:0:0:0/scsi_tape/st0/stats/other_cnt
-Lines: 1
-1409EOF
-Mode: 444
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/devices/pci0000:00/0000:00:00.0/host0/port-0:0/end_device-0:0/target0:0:0/0:0:0:0/scsi_tape/st0/stats/read_byte_cnt
-Lines: 1
-979383912EOF
-Mode: 444
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/devices/pci0000:00/0000:00:00.0/host0/port-0:0/end_device-0:0/target0:0:0/0:0:0:0/scsi_tape/st0/stats/read_cnt
-Lines: 1
-3741EOF
-Mode: 444
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/devices/pci0000:00/0000:00:00.0/host0/port-0:0/end_device-0:0/target0:0:0/0:0:0:0/scsi_tape/st0/stats/read_ns
-Lines: 1
-33788355744EOF
-Mode: 444
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/devices/pci0000:00/0000:00:00.0/host0/port-0:0/end_device-0:0/target0:0:0/0:0:0:0/scsi_tape/st0/stats/resid_cnt
-Lines: 1
-19EOF
-Mode: 444
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/devices/pci0000:00/0000:00:00.0/host0/port-0:0/end_device-0:0/target0:0:0/0:0:0:0/scsi_tape/st0/stats/write_byte_cnt
-Lines: 1
-1496246784000EOF
-Mode: 444
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/devices/pci0000:00/0000:00:00.0/host0/port-0:0/end_device-0:0/target0:0:0/0:0:0:0/scsi_tape/st0/stats/write_cnt
-Lines: 1
-53772916EOF
-Mode: 444
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/devices/pci0000:00/0000:00:00.0/host0/port-0:0/end_device-0:0/target0:0:0/0:0:0:0/scsi_tape/st0/stats/write_ns
-Lines: 1
-5233597394395EOF
-Mode: 444
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Directory: fixtures/sys/devices/pci0000:00/0000:00:00.0/host0/port-0:0/end_device-0:0/target0:0:0/0:0:0:0/scsi_tape/st0a
-Mode: 755
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Directory: fixtures/sys/devices/pci0000:00/0000:00:00.0/host0/port-0:0/end_device-0:0/target0:0:0/0:0:0:0/scsi_tape/st0a/stats
-Mode: 755
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/devices/pci0000:00/0000:00:00.0/host0/port-0:0/end_device-0:0/target0:0:0/0:0:0:0/scsi_tape/st0a/stats/in_flight
-Lines: 1
-1EOF
-Mode: 444
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/devices/pci0000:00/0000:00:00.0/host0/port-0:0/end_device-0:0/target0:0:0/0:0:0:0/scsi_tape/st0a/stats/io_ns
-Lines: 1
-9247011087720EOF
-Mode: 444
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/devices/pci0000:00/0000:00:00.0/host0/port-0:0/end_device-0:0/target0:0:0/0:0:0:0/scsi_tape/st0a/stats/other_cnt
-Lines: 1
-1409EOF
-Mode: 444
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/devices/pci0000:00/0000:00:00.0/host0/port-0:0/end_device-0:0/target0:0:0/0:0:0:0/scsi_tape/st0a/stats/read_byte_cnt
-Lines: 1
-979383912EOF
-Mode: 444
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/devices/pci0000:00/0000:00:00.0/host0/port-0:0/end_device-0:0/target0:0:0/0:0:0:0/scsi_tape/st0a/stats/read_cnt
-Lines: 1
-3741EOF
-Mode: 444
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/devices/pci0000:00/0000:00:00.0/host0/port-0:0/end_device-0:0/target0:0:0/0:0:0:0/scsi_tape/st0a/stats/read_ns
-Lines: 1
-33788355744EOF
-Mode: 444
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/devices/pci0000:00/0000:00:00.0/host0/port-0:0/end_device-0:0/target0:0:0/0:0:0:0/scsi_tape/st0a/stats/resid_cnt
-Lines: 1
-19EOF
-Mode: 444
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/devices/pci0000:00/0000:00:00.0/host0/port-0:0/end_device-0:0/target0:0:0/0:0:0:0/scsi_tape/st0a/stats/write_byte_cnt
-Lines: 1
-1496246784000EOF
-Mode: 444
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/devices/pci0000:00/0000:00:00.0/host0/port-0:0/end_device-0:0/target0:0:0/0:0:0:0/scsi_tape/st0a/stats/write_cnt
-Lines: 1
-53772916EOF
-Mode: 444
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/devices/pci0000:00/0000:00:00.0/host0/port-0:0/end_device-0:0/target0:0:0/0:0:0:0/scsi_tape/st0a/stats/write_ns
-Lines: 1
-5233597394395EOF
-Mode: 444
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Directory: fixtures/sys/devices/pci0000:00/0000:00:00.0/host0/port-0:0/end_device-0:0/target0:0:0/0:0:0:0/scsi_tape/st0l
-Mode: 755
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Directory: fixtures/sys/devices/pci0000:00/0000:00:00.0/host0/port-0:0/end_device-0:0/target0:0:0/0:0:0:0/scsi_tape/st0l/stats
-Mode: 755
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/devices/pci0000:00/0000:00:00.0/host0/port-0:0/end_device-0:0/target0:0:0/0:0:0:0/scsi_tape/st0l/stats/in_flight
-Lines: 1
-1EOF
-Mode: 444
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/devices/pci0000:00/0000:00:00.0/host0/port-0:0/end_device-0:0/target0:0:0/0:0:0:0/scsi_tape/st0l/stats/io_ns
-Lines: 1
-9247011087720EOF
-Mode: 444
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/devices/pci0000:00/0000:00:00.0/host0/port-0:0/end_device-0:0/target0:0:0/0:0:0:0/scsi_tape/st0l/stats/other_cnt
-Lines: 1
-1409EOF
-Mode: 444
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/devices/pci0000:00/0000:00:00.0/host0/port-0:0/end_device-0:0/target0:0:0/0:0:0:0/scsi_tape/st0l/stats/read_byte_cnt
-Lines: 1
-979383912EOF
-Mode: 444
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/devices/pci0000:00/0000:00:00.0/host0/port-0:0/end_device-0:0/target0:0:0/0:0:0:0/scsi_tape/st0l/stats/read_cnt
-Lines: 1
-3741EOF
-Mode: 444
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/devices/pci0000:00/0000:00:00.0/host0/port-0:0/end_device-0:0/target0:0:0/0:0:0:0/scsi_tape/st0l/stats/read_ns
-Lines: 1
-33788355744EOF
-Mode: 444
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/devices/pci0000:00/0000:00:00.0/host0/port-0:0/end_device-0:0/target0:0:0/0:0:0:0/scsi_tape/st0l/stats/resid_cnt
-Lines: 1
-19EOF
-Mode: 444
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/devices/pci0000:00/0000:00:00.0/host0/port-0:0/end_device-0:0/target0:0:0/0:0:0:0/scsi_tape/st0l/stats/write_byte_cnt
-Lines: 1
-1496246784000EOF
-Mode: 444
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/devices/pci0000:00/0000:00:00.0/host0/port-0:0/end_device-0:0/target0:0:0/0:0:0:0/scsi_tape/st0l/stats/write_cnt
-Lines: 1
-53772916EOF
-Mode: 444
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/devices/pci0000:00/0000:00:00.0/host0/port-0:0/end_device-0:0/target0:0:0/0:0:0:0/scsi_tape/st0l/stats/write_ns
-Lines: 1
-5233597394395EOF
-Mode: 444
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Directory: fixtures/sys/devices/pci0000:00/0000:00:00.0/host0/port-0:0/end_device-0:0/target0:0:0/0:0:0:0/scsi_tape/st0m
-Mode: 755
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Directory: fixtures/sys/devices/pci0000:00/0000:00:00.0/host0/port-0:0/end_device-0:0/target0:0:0/0:0:0:0/scsi_tape/st0m/stats
-Mode: 755
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/devices/pci0000:00/0000:00:00.0/host0/port-0:0/end_device-0:0/target0:0:0/0:0:0:0/scsi_tape/st0m/stats/in_flight
-Lines: 1
-1EOF
-Mode: 444
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/devices/pci0000:00/0000:00:00.0/host0/port-0:0/end_device-0:0/target0:0:0/0:0:0:0/scsi_tape/st0m/stats/io_ns
-Lines: 1
-9247011087720EOF
-Mode: 444
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/devices/pci0000:00/0000:00:00.0/host0/port-0:0/end_device-0:0/target0:0:0/0:0:0:0/scsi_tape/st0m/stats/other_cnt
-Lines: 1
-1409EOF
-Mode: 444
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/devices/pci0000:00/0000:00:00.0/host0/port-0:0/end_device-0:0/target0:0:0/0:0:0:0/scsi_tape/st0m/stats/read_byte_cnt
-Lines: 1
-979383912EOF
-Mode: 444
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/devices/pci0000:00/0000:00:00.0/host0/port-0:0/end_device-0:0/target0:0:0/0:0:0:0/scsi_tape/st0m/stats/read_cnt
-Lines: 1
-3741EOF
-Mode: 444
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/devices/pci0000:00/0000:00:00.0/host0/port-0:0/end_device-0:0/target0:0:0/0:0:0:0/scsi_tape/st0m/stats/read_ns
-Lines: 1
-33788355744EOF
-Mode: 444
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/devices/pci0000:00/0000:00:00.0/host0/port-0:0/end_device-0:0/target0:0:0/0:0:0:0/scsi_tape/st0m/stats/resid_cnt
-Lines: 1
-19EOF
-Mode: 444
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/devices/pci0000:00/0000:00:00.0/host0/port-0:0/end_device-0:0/target0:0:0/0:0:0:0/scsi_tape/st0m/stats/write_byte_cnt
-Lines: 1
-1496246784000EOF
-Mode: 444
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/devices/pci0000:00/0000:00:00.0/host0/port-0:0/end_device-0:0/target0:0:0/0:0:0:0/scsi_tape/st0m/stats/write_cnt
-Lines: 1
-53772916EOF
-Mode: 444
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/devices/pci0000:00/0000:00:00.0/host0/port-0:0/end_device-0:0/target0:0:0/0:0:0:0/scsi_tape/st0m/stats/write_ns
-Lines: 1
-5233597394395EOF
-Mode: 444
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
 Directory: fixtures/sys/devices/pci0000:00/0000:00:0d.0
 Mode: 755
 # ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
@@ -6098,6 +4978,35 @@ Mode: 644
 Directory: fixtures/sys/devices/system
 Mode: 775
 # ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
+Directory: fixtures/sys/devices/system/node
+Mode: 775
+# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
+Directory: fixtures/sys/devices/system/node/node1
+Mode: 755
+# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
+Path: fixtures/sys/devices/system/node/node1/vmstat
+Lines: 6
+nr_free_pages 1
+nr_zone_inactive_anon 2
+nr_zone_active_anon 3
+nr_zone_inactive_file 4
+nr_zone_active_file 5
+nr_zone_unevictable 6
+Mode: 644
+# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
+Directory: fixtures/sys/devices/system/node/node2
+Mode: 755
+# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
+Path: fixtures/sys/devices/system/node/node2/vmstat
+Lines: 6
+nr_free_pages 7
+nr_zone_inactive_anon 8
+nr_zone_active_anon 9
+nr_zone_inactive_file 10
+nr_zone_active_file 11
+nr_zone_unevictable 12
+Mode: 644
+# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
 Directory: fixtures/sys/devices/system/clocksource
 Mode: 775
 # ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
@@ -6345,35 +5254,6 @@ Mode: 644
 Directory: fixtures/sys/devices/system/cpu/cpufreq/policy1
 Mode: 755
 # ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Directory: fixtures/sys/devices/system/node
-Mode: 775
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Directory: fixtures/sys/devices/system/node/node1
-Mode: 755
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/devices/system/node/node1/vmstat
-Lines: 6
-nr_free_pages 1
-nr_zone_inactive_anon 2
-nr_zone_active_anon 3
-nr_zone_inactive_file 4
-nr_zone_active_file 5
-nr_zone_unevictable 6
-Mode: 644
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Directory: fixtures/sys/devices/system/node/node2
-Mode: 755
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-Path: fixtures/sys/devices/system/node/node2/vmstat
-Lines: 6
-nr_free_pages 7
-nr_zone_inactive_anon 8
-nr_zone_active_anon 9
-nr_zone_inactive_file 10
-nr_zone_active_file 11
-nr_zone_unevictable 12
-Mode: 644
-# ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
 Directory: fixtures/sys/fs
 Mode: 755
 # ttar - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
diff --git a/vendor/github.com/richardlehane/mscfb/.travis.yml b/vendor/github.com/richardlehane/mscfb/.travis.yml
index e0c814a85..c189ccf88 100644
--- a/vendor/github.com/richardlehane/mscfb/.travis.yml
+++ b/vendor/github.com/richardlehane/mscfb/.travis.yml
@@ -1,4 +1,4 @@
-language: go
-go:
-  - stable
+language: go
+go:
+  - stable
   - tip
\ No newline at end of file
diff --git a/vendor/github.com/richardlehane/mscfb/README.md b/vendor/github.com/richardlehane/mscfb/README.md
index 098c7699d..724db9d6d 100644
--- a/vendor/github.com/richardlehane/mscfb/README.md
+++ b/vendor/github.com/richardlehane/mscfb/README.md
@@ -1,24 +1,24 @@
-A reader for Microsoft's Compound File Binary File Format.
-
-Example usage:
-
-    file, _ := os.Open("test/test.doc")
-    defer file.Close()
-    doc, err := mscfb.New(file)
-    if err != nil {
-      log.Fatal(err)
-    }
-    for entry, err := doc.Next(); err == nil; entry, err = doc.Next() {
-      buf := make([]byte, 512)
-      i, _ := doc.Read(buf)
-      if i > 0 {
-        fmt.Println(buf[:i])
-      }
-      fmt.Println(entry.Name)
-    }
-
-The Compound File Binary File Format is also known as the Object Linking and Embedding (OLE) or Component Object Model (COM) format and was used by early MS software such as MS Office. See [http://msdn.microsoft.com/en-us/library/dd942138.aspx](http://msdn.microsoft.com/en-us/library/dd942138.aspx) for more details
-
-Install with `go get github.com/richardlehane/mscfb`
-
+A reader for Microsoft's Compound File Binary File Format.
+
+Example usage:
+
+    file, _ := os.Open("test/test.doc")
+    defer file.Close()
+    doc, err := mscfb.New(file)
+    if err != nil {
+      log.Fatal(err)
+    }
+    for entry, err := doc.Next(); err == nil; entry, err = doc.Next() {
+      buf := make([]byte, 512)
+      i, _ := doc.Read(buf)
+      if i > 0 {
+        fmt.Println(buf[:i])
+      }
+      fmt.Println(entry.Name)
+    }
+
+The Compound File Binary File Format is also known as the Object Linking and Embedding (OLE) or Component Object Model (COM) format and was used by early MS software such as MS Office. See [http://msdn.microsoft.com/en-us/library/dd942138.aspx](http://msdn.microsoft.com/en-us/library/dd942138.aspx) for more details
+
+Install with `go get github.com/richardlehane/mscfb`
+
 [![Build Status](https://travis-ci.org/richardlehane/mscfb.png?branch=master)](https://travis-ci.org/richardlehane/mscfb)
\ No newline at end of file
diff --git a/vendor/github.com/richardlehane/mscfb/fuzz.go b/vendor/github.com/richardlehane/mscfb/fuzz.go
index 50b8b4c50..334b5173c 100644
--- a/vendor/github.com/richardlehane/mscfb/fuzz.go
+++ b/vendor/github.com/richardlehane/mscfb/fuzz.go
@@ -1,33 +1,33 @@
-// +build gofuzz
-
-// fuzzing with https://github.com/dvyukov/go-fuzz
-package mscfb
-
-import (
-	"bytes"
-	"io"
-)
-
-func Fuzz(data []byte) int {
-	doc, err := New(bytes.NewReader(data))
-	if err != nil {
-		if doc != nil {
-			panic("doc != nil on error " + err.Error())
-		}
-		return 0
-	}
-	buf := &bytes.Buffer{}
-	for entry, err := doc.Next(); ; entry, err = doc.Next() {
-		if err != nil {
-			if err == io.EOF {
-				return 1
-			}
-			if entry != nil {
-				panic("entry != nil on error " + err.Error())
-			}
-		}
-		buf.Reset()
-		buf.ReadFrom(entry)
-	}
-	return 1
-}
+// +build gofuzz
+
+// fuzzing with https://github.com/dvyukov/go-fuzz
+package mscfb
+
+import (
+	"bytes"
+	"io"
+)
+
+func Fuzz(data []byte) int {
+	doc, err := New(bytes.NewReader(data))
+	if err != nil {
+		if doc != nil {
+			panic("doc != nil on error " + err.Error())
+		}
+		return 0
+	}
+	buf := &bytes.Buffer{}
+	for entry, err := doc.Next(); ; entry, err = doc.Next() {
+		if err != nil {
+			if err == io.EOF {
+				return 1
+			}
+			if entry != nil {
+				panic("entry != nil on error " + err.Error())
+			}
+		}
+		buf.Reset()
+		buf.ReadFrom(entry)
+	}
+	return 1
+}
diff --git a/vendor/github.com/richardlehane/mscfb/mscfb.go b/vendor/github.com/richardlehane/mscfb/mscfb.go
index a054e7cea..09e77b036 100644
--- a/vendor/github.com/richardlehane/mscfb/mscfb.go
+++ b/vendor/github.com/richardlehane/mscfb/mscfb.go
@@ -1,396 +1,396 @@
-// Copyright 2013 Richard Lehane. All rights reserved.
-//
-// Licensed under the Apache License, Version 2.0 (the "License");
-// you may not use this file except in compliance with the License.
-// You may obtain a copy of the License at
-//
-//     http://www.apache.org/licenses/LICENSE-2.0
-//
-// Unless required by applicable law or agreed to in writing, software
-// distributed under the License is distributed on an "AS IS" BASIS,
-// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-// See the License for the specific language governing permissions and
-// limitations under the License.
-
-// Package mscfb implements a reader for Microsoft's Compound File Binary File Format (http://msdn.microsoft.com/en-us/library/dd942138.aspx).
-//
-// The Compound File Binary File Format is also known as the Object Linking and Embedding (OLE) or Component Object Model (COM) format and was used by many
-// early MS software such as MS Office.
-//
-// Example:
-//   file, _ := os.Open("test/test.doc")
-//   defer file.Close()
-//   doc, err := mscfb.New(file)
-//   if err != nil {
-//     log.Fatal(err)
-//   }
-//   for entry, err := doc.Next(); err == nil; entry, err = doc.Next() {
-//     buf := make([]byte, 512)
-//     i, _ := entry.Read(buf)
-//     if i > 0 {
-//       fmt.Println(buf[:i])
-//     }
-//     fmt.Println(entry.Name)
-//   }
-package mscfb
-
-import (
-	"encoding/binary"
-	"io"
-	"strconv"
-	"time"
-)
-
-func fileOffset(ss, sn uint32) int64 {
-	return int64((sn + 1) * ss)
-}
-
-const (
-	signature            uint64 = 0xE11AB1A1E011CFD0
-	miniStreamSectorSize uint32 = 64
-	miniStreamCutoffSize int64  = 4096
-	dirEntrySize         uint32 = 128 //128 bytes
-)
-
-const (
-	maxRegSect     uint32 = 0xFFFFFFFA // Maximum regular sector number
-	difatSect      uint32 = 0xFFFFFFFC //Specifies a DIFAT sector in the FAT
-	fatSect        uint32 = 0xFFFFFFFD // Specifies a FAT sector in the FAT
-	endOfChain     uint32 = 0xFFFFFFFE // End of linked chain of sectors
-	freeSect       uint32 = 0xFFFFFFFF // Speficies unallocated sector in the FAT, Mini FAT or DIFAT
-	maxRegStreamID uint32 = 0xFFFFFFFA // maximum regular stream ID
-	noStream       uint32 = 0xFFFFFFFF // empty pointer
-)
-
-const lenHeader int = 8 + 16 + 10 + 6 + 12 + 8 + 16 + 109*4
-
-type headerFields struct {
-	signature           uint64
-	_                   [16]byte    //CLSID - ignore, must be null
-	minorVersion        uint16      //Version number for non-breaking changes. This field SHOULD be set to 0x003E if the major version field is either 0x0003 or 0x0004.
-	majorVersion        uint16      //Version number for breaking changes. This field MUST be set to either 0x0003 (version 3) or 0x0004 (version 4).
-	_                   [2]byte     //byte order - ignore, must be little endian
-	sectorSize          uint16      //This field MUST be set to 0x0009, or 0x000c, depending on the Major Version field. This field specifies the sector size of the compound file as a power of 2. If Major Version is 3, then the Sector Shift MUST be 0x0009, specifying a sector size of 512 bytes. If Major Version is 4, then the Sector Shift MUST be 0x000C, specifying a sector size of 4096 bytes.
-	_                   [2]byte     // ministream sector size - ignore, must be 64 bytes
-	_                   [6]byte     // reserved - ignore, not used
-	numDirectorySectors uint32      //This integer field contains the count of the number of directory sectors in the compound file. If Major Version is 3, then the Number of Directory Sectors MUST be zero. This field is not supported for version 3 compound files.
-	numFatSectors       uint32      //This integer field contains the count of the number of FAT sectors in the compound file.
-	directorySectorLoc  uint32      //This integer field contains the starting sector number for the directory stream.
-	_                   [4]byte     // transaction - ignore, not used
-	_                   [4]byte     // mini stream size cutooff - ignore, must be 4096 bytes
-	miniFatSectorLoc    uint32      //This integer field contains the starting sector number for the mini FAT.
-	numMiniFatSectors   uint32      //This integer field contains the count of the number of mini FAT sectors in the compound file.
-	difatSectorLoc      uint32      //This integer field contains the starting sector number for the DIFAT.
-	numDifatSectors     uint32      //This integer field contains the count of the number of DIFAT sectors in the compound file.
-	initialDifats       [109]uint32 //The first 109 difat sectors are included in the header
-}
-
-func makeHeader(b []byte) *headerFields {
-	h := &headerFields{}
-	h.signature = binary.LittleEndian.Uint64(b[:8])
-	h.minorVersion = binary.LittleEndian.Uint16(b[24:26])
-	h.majorVersion = binary.LittleEndian.Uint16(b[26:28])
-	h.sectorSize = binary.LittleEndian.Uint16(b[30:32])
-	h.numDirectorySectors = binary.LittleEndian.Uint32(b[40:44])
-	h.numFatSectors = binary.LittleEndian.Uint32(b[44:48])
-	h.directorySectorLoc = binary.LittleEndian.Uint32(b[48:52])
-	h.miniFatSectorLoc = binary.LittleEndian.Uint32(b[60:64])
-	h.numMiniFatSectors = binary.LittleEndian.Uint32(b[64:68])
-	h.difatSectorLoc = binary.LittleEndian.Uint32(b[68:72])
-	h.numDifatSectors = binary.LittleEndian.Uint32(b[72:76])
-	var idx int
-	for i := 76; i < 512; i = i + 4 {
-		h.initialDifats[idx] = binary.LittleEndian.Uint32(b[i : i+4])
-		idx++
-	}
-	return h
-}
-
-type header struct {
-	*headerFields
-	difats         []uint32
-	miniFatLocs    []uint32
-	miniStreamLocs []uint32 // chain of sectors containing the ministream
-}
-
-func (r *Reader) setHeader() error {
-	buf, err := r.readAt(0, lenHeader)
-	if err != nil {
-		return err
-	}
-	r.header = &header{headerFields: makeHeader(buf)}
-	// sanity check - check signature
-	if r.header.signature != signature {
-		return Error{ErrFormat, "bad signature", int64(r.header.signature)}
-	}
-	// check for legal sector size
-	if r.header.sectorSize == 0x0009 || r.header.sectorSize == 0x000c {
-		r.sectorSize = uint32(1 << r.header.sectorSize)
-	} else {
-		return Error{ErrFormat, "illegal sector size", int64(r.header.sectorSize)}
-	}
-	// check for DIFAT overflow
-	if r.header.numDifatSectors > 0 {
-		sz := (r.sectorSize / 4) - 1
-		if int(r.header.numDifatSectors*sz+109) < 0 {
-			return Error{ErrFormat, "DIFAT int overflow", int64(r.header.numDifatSectors)}
-		}
-		if r.header.numDifatSectors*sz+109 > r.header.numFatSectors+sz {
-			return Error{ErrFormat, "num DIFATs exceeds FAT sectors", int64(r.header.numDifatSectors)}
-		}
-	}
-	// check for mini FAT overflow
-	if r.header.numMiniFatSectors > 0 {
-		if int(r.sectorSize/4*r.header.numMiniFatSectors) < 0 {
-			return Error{ErrFormat, "mini FAT int overflow", int64(r.header.numMiniFatSectors)}
-		}
-		if r.header.numMiniFatSectors > r.header.numFatSectors*(r.sectorSize/miniStreamSectorSize) {
-			return Error{ErrFormat, "num mini FATs exceeds FAT sectors", int64(r.header.numFatSectors)}
-		}
-	}
-	return nil
-}
-
-func (r *Reader) setDifats() error {
-	r.header.difats = r.header.initialDifats[:]
-	// return early if no extra DIFAT sectors
-	if r.header.numDifatSectors == 0 {
-		return nil
-	}
-	sz := (r.sectorSize / 4) - 1
-	n := make([]uint32, 109, r.header.numDifatSectors*sz+109)
-	copy(n, r.header.difats)
-	r.header.difats = n
-	off := r.header.difatSectorLoc
-	for i := 0; i < int(r.header.numDifatSectors); i++ {
-		buf, err := r.readAt(fileOffset(r.sectorSize, off), int(r.sectorSize))
-		if err != nil {
-			return Error{ErrFormat, "error setting DIFAT(" + err.Error() + ")", int64(off)}
-		}
-		for j := 0; j < int(sz); j++ {
-			r.header.difats = append(r.header.difats, binary.LittleEndian.Uint32(buf[j*4:j*4+4]))
-		}
-		off = binary.LittleEndian.Uint32(buf[len(buf)-4:])
-	}
-	return nil
-}
-
-// set the ministream FAT and sector slices in the header
-func (r *Reader) setMiniStream() error {
-	// do nothing if there is no ministream
-	if r.direntries[0].startingSectorLoc == endOfChain || r.header.miniFatSectorLoc == endOfChain || r.header.numMiniFatSectors == 0 {
-		return nil
-	}
-	// build a slice of minifat sectors (akin to the DIFAT slice)
-	c := int(r.header.numMiniFatSectors)
-	r.header.miniFatLocs = make([]uint32, c)
-	r.header.miniFatLocs[0] = r.header.miniFatSectorLoc
-	for i := 1; i < c; i++ {
-		loc, err := r.findNext(r.header.miniFatLocs[i-1], false)
-		if err != nil {
-			return Error{ErrFormat, "setting mini stream (" + err.Error() + ")", int64(r.header.miniFatLocs[i-1])}
-		}
-		r.header.miniFatLocs[i] = loc
-	}
-	// build a slice of ministream sectors
-	c = int(r.sectorSize / 4 * r.header.numMiniFatSectors)
-	r.header.miniStreamLocs = make([]uint32, 0, c)
-	cycles := make(map[uint32]bool)
-	sn := r.direntries[0].startingSectorLoc
-	for sn != endOfChain {
-		r.header.miniStreamLocs = append(r.header.miniStreamLocs, sn)
-		nsn, err := r.findNext(sn, false)
-		if err != nil {
-			return Error{ErrFormat, "setting mini stream (" + err.Error() + ")", int64(sn)}
-		}
-		if nsn <= sn {
-			if nsn == sn || cycles[nsn] {
-				return Error{ErrRead, "cycle detected in mini stream", int64(nsn)}
-			}
-			cycles[nsn] = true
-		}
-		sn = nsn
-	}
-	return nil
-}
-
-func (r *Reader) readAt(offset int64, length int) ([]byte, error) {
-	if r.slicer {
-		b, err := r.ra.(slicer).Slice(offset, length)
-		if err != nil {
-			return nil, Error{ErrRead, "slicer read error (" + err.Error() + ")", offset}
-		}
-		return b, nil
-	}
-	if length > len(r.buf) {
-		return nil, Error{ErrRead, "read length greater than read buffer", int64(length)}
-	}
-	if _, err := r.ra.ReadAt(r.buf[:length], offset); err != nil {
-		return nil, Error{ErrRead, err.Error(), offset}
-	}
-	return r.buf[:length], nil
-}
-
-func (r *Reader) getOffset(sn uint32, mini bool) (int64, error) {
-	if mini {
-		num := r.sectorSize / 64
-		sec := int(sn / num)
-		if sec >= len(r.header.miniStreamLocs) {
-			return 0, Error{ErrRead, "minisector number is outside minisector range", int64(sec)}
-		}
-		dif := sn % num
-		return int64((r.header.miniStreamLocs[sec]+1)*r.sectorSize + dif*64), nil
-	}
-	return fileOffset(r.sectorSize, sn), nil
-}
-
-// check the FAT sector for the next sector in a chain
-func (r *Reader) findNext(sn uint32, mini bool) (uint32, error) {
-	entries := r.sectorSize / 4
-	index := int(sn / entries) // find position in DIFAT or minifat array
-	var sect uint32
-	if mini {
-		if index < 0 || index >= len(r.header.miniFatLocs) {
-			return 0, Error{ErrRead, "minisector index is outside miniFAT range", int64(index)}
-		}
-		sect = r.header.miniFatLocs[index]
-	} else {
-		if index < 0 || index >= len(r.header.difats) {
-			return 0, Error{ErrRead, "FAT index is outside DIFAT range", int64(index)}
-		}
-		sect = r.header.difats[index]
-	}
-	fatIndex := sn % entries // find position within FAT or MiniFAT sector
-	offset := fileOffset(r.sectorSize, sect) + int64(fatIndex*4)
-	buf, err := r.readAt(offset, 4)
-	if err != nil {
-		return 0, Error{ErrRead, "bad read finding next sector (" + err.Error() + ")", offset}
-	}
-	return binary.LittleEndian.Uint32(buf), nil
-}
-
-// Reader provides sequential access to the contents of a MS compound file (MSCFB)
-type Reader struct {
-	slicer     bool
-	sectorSize uint32
-	buf        []byte
-	header     *header
-	File       []*File // File is an ordered slice of final directory entries.
-	direntries []*File // unordered raw directory entries
-	entry      int
-
-	ra io.ReaderAt
-	wa io.WriterAt
-}
-
-// New returns a MSCFB reader
-func New(ra io.ReaderAt) (*Reader, error) {
-	r := &Reader{ra: ra}
-	if _, ok := ra.(slicer); ok {
-		r.slicer = true
-	} else {
-		r.buf = make([]byte, lenHeader)
-	}
-	if err := r.setHeader(); err != nil {
-		return nil, err
-	}
-	// resize the buffer to 4096 if sector size isn't 512
-	if !r.slicer && int(r.sectorSize) > len(r.buf) {
-		r.buf = make([]byte, r.sectorSize)
-	}
-	if err := r.setDifats(); err != nil {
-		return nil, err
-	}
-	if err := r.setDirEntries(); err != nil {
-		return nil, err
-	}
-	if err := r.setMiniStream(); err != nil {
-		return nil, err
-	}
-	if err := r.traverse(); err != nil {
-		return nil, err
-	}
-	return r, nil
-}
-
-// ID returns the CLSID (class ID) field from the root directory entry
-func (r *Reader) ID() string {
-	return r.File[0].ID()
-}
-
-// Created returns the created field from the root directory entry
-func (r *Reader) Created() time.Time {
-	return r.File[0].Created()
-}
-
-// Modified returns the last modified field from the root directory entry
-func (r *Reader) Modified() time.Time {
-	return r.File[0].Modified()
-}
-
-// Next iterates to the next directory entry.
-// This isn't necessarily an adjacent *File within the File slice, but is based on the Left Sibling, Right Sibling and Child information in directory entries.
-func (r *Reader) Next() (*File, error) {
-	r.entry++
-	if r.entry >= len(r.File) {
-		return nil, io.EOF
-	}
-	return r.File[r.entry], nil
-}
-
-// Read the current directory entry
-func (r *Reader) Read(b []byte) (n int, err error) {
-	if r.entry >= len(r.File) {
-		return 0, io.EOF
-	}
-	return r.File[r.entry].Read(b)
-}
-
-// Debug provides granular information from an mscfb file to assist with debugging
-func (r *Reader) Debug() map[string][]uint32 {
-	ret := map[string][]uint32{
-		"sector size":            []uint32{r.sectorSize},
-		"mini fat locs":          r.header.miniFatLocs,
-		"mini stream locs":       r.header.miniStreamLocs,
-		"directory sector":       []uint32{r.header.directorySectorLoc},
-		"mini stream start/size": []uint32{r.File[0].startingSectorLoc, binary.LittleEndian.Uint32(r.File[0].streamSize[:])},
-	}
-	for f, err := r.Next(); err == nil; f, err = r.Next() {
-		ret[f.Name+" start/size"] = []uint32{f.startingSectorLoc, binary.LittleEndian.Uint32(f.streamSize[:])}
-	}
-	return ret
-}
-
-const (
-	// ErrFormat reports issues with the MSCFB's header structures
-	ErrFormat = iota
-	// ErrRead reports issues attempting to read MSCFB streams
-	ErrRead
-	// ErrSeek reports seek issues
-	ErrSeek
-	// ErrWrite reports write issues
-	ErrWrite
-	// ErrTraverse reports issues attempting to traverse the child-parent-sibling relations
-	// between MSCFB storage objects
-	ErrTraverse
-)
-
-type Error struct {
-	typ int
-	msg string
-	val int64
-}
-
-func (e Error) Error() string {
-	return "mscfb: " + e.msg + "; " + strconv.FormatInt(e.val, 10)
-}
-
-// Typ gives the type of MSCFB error
-func (e Error) Typ() int {
-	return e.typ
-}
-
-// Slicer interface avoids a copy by obtaining a byte slice directly from the underlying reader
-type slicer interface {
-	Slice(offset int64, length int) ([]byte, error)
-}
+// Copyright 2013 Richard Lehane. All rights reserved.
+//
+// Licensed under the Apache License, Version 2.0 (the "License");
+// you may not use this file except in compliance with the License.
+// You may obtain a copy of the License at
+//
+//     http://www.apache.org/licenses/LICENSE-2.0
+//
+// Unless required by applicable law or agreed to in writing, software
+// distributed under the License is distributed on an "AS IS" BASIS,
+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+// See the License for the specific language governing permissions and
+// limitations under the License.
+
+// Package mscfb implements a reader for Microsoft's Compound File Binary File Format (http://msdn.microsoft.com/en-us/library/dd942138.aspx).
+//
+// The Compound File Binary File Format is also known as the Object Linking and Embedding (OLE) or Component Object Model (COM) format and was used by many
+// early MS software such as MS Office.
+//
+// Example:
+//   file, _ := os.Open("test/test.doc")
+//   defer file.Close()
+//   doc, err := mscfb.New(file)
+//   if err != nil {
+//     log.Fatal(err)
+//   }
+//   for entry, err := doc.Next(); err == nil; entry, err = doc.Next() {
+//     buf := make([]byte, 512)
+//     i, _ := entry.Read(buf)
+//     if i > 0 {
+//       fmt.Println(buf[:i])
+//     }
+//     fmt.Println(entry.Name)
+//   }
+package mscfb
+
+import (
+	"encoding/binary"
+	"io"
+	"strconv"
+	"time"
+)
+
+func fileOffset(ss, sn uint32) int64 {
+	return int64((sn + 1) * ss)
+}
+
+const (
+	signature            uint64 = 0xE11AB1A1E011CFD0
+	miniStreamSectorSize uint32 = 64
+	miniStreamCutoffSize int64  = 4096
+	dirEntrySize         uint32 = 128 //128 bytes
+)
+
+const (
+	maxRegSect     uint32 = 0xFFFFFFFA // Maximum regular sector number
+	difatSect      uint32 = 0xFFFFFFFC //Specifies a DIFAT sector in the FAT
+	fatSect        uint32 = 0xFFFFFFFD // Specifies a FAT sector in the FAT
+	endOfChain     uint32 = 0xFFFFFFFE // End of linked chain of sectors
+	freeSect       uint32 = 0xFFFFFFFF // Speficies unallocated sector in the FAT, Mini FAT or DIFAT
+	maxRegStreamID uint32 = 0xFFFFFFFA // maximum regular stream ID
+	noStream       uint32 = 0xFFFFFFFF // empty pointer
+)
+
+const lenHeader int = 8 + 16 + 10 + 6 + 12 + 8 + 16 + 109*4
+
+type headerFields struct {
+	signature           uint64
+	_                   [16]byte    //CLSID - ignore, must be null
+	minorVersion        uint16      //Version number for non-breaking changes. This field SHOULD be set to 0x003E if the major version field is either 0x0003 or 0x0004.
+	majorVersion        uint16      //Version number for breaking changes. This field MUST be set to either 0x0003 (version 3) or 0x0004 (version 4).
+	_                   [2]byte     //byte order - ignore, must be little endian
+	sectorSize          uint16      //This field MUST be set to 0x0009, or 0x000c, depending on the Major Version field. This field specifies the sector size of the compound file as a power of 2. If Major Version is 3, then the Sector Shift MUST be 0x0009, specifying a sector size of 512 bytes. If Major Version is 4, then the Sector Shift MUST be 0x000C, specifying a sector size of 4096 bytes.
+	_                   [2]byte     // ministream sector size - ignore, must be 64 bytes
+	_                   [6]byte     // reserved - ignore, not used
+	numDirectorySectors uint32      //This integer field contains the count of the number of directory sectors in the compound file. If Major Version is 3, then the Number of Directory Sectors MUST be zero. This field is not supported for version 3 compound files.
+	numFatSectors       uint32      //This integer field contains the count of the number of FAT sectors in the compound file.
+	directorySectorLoc  uint32      //This integer field contains the starting sector number for the directory stream.
+	_                   [4]byte     // transaction - ignore, not used
+	_                   [4]byte     // mini stream size cutooff - ignore, must be 4096 bytes
+	miniFatSectorLoc    uint32      //This integer field contains the starting sector number for the mini FAT.
+	numMiniFatSectors   uint32      //This integer field contains the count of the number of mini FAT sectors in the compound file.
+	difatSectorLoc      uint32      //This integer field contains the starting sector number for the DIFAT.
+	numDifatSectors     uint32      //This integer field contains the count of the number of DIFAT sectors in the compound file.
+	initialDifats       [109]uint32 //The first 109 difat sectors are included in the header
+}
+
+func makeHeader(b []byte) *headerFields {
+	h := &headerFields{}
+	h.signature = binary.LittleEndian.Uint64(b[:8])
+	h.minorVersion = binary.LittleEndian.Uint16(b[24:26])
+	h.majorVersion = binary.LittleEndian.Uint16(b[26:28])
+	h.sectorSize = binary.LittleEndian.Uint16(b[30:32])
+	h.numDirectorySectors = binary.LittleEndian.Uint32(b[40:44])
+	h.numFatSectors = binary.LittleEndian.Uint32(b[44:48])
+	h.directorySectorLoc = binary.LittleEndian.Uint32(b[48:52])
+	h.miniFatSectorLoc = binary.LittleEndian.Uint32(b[60:64])
+	h.numMiniFatSectors = binary.LittleEndian.Uint32(b[64:68])
+	h.difatSectorLoc = binary.LittleEndian.Uint32(b[68:72])
+	h.numDifatSectors = binary.LittleEndian.Uint32(b[72:76])
+	var idx int
+	for i := 76; i < 512; i = i + 4 {
+		h.initialDifats[idx] = binary.LittleEndian.Uint32(b[i : i+4])
+		idx++
+	}
+	return h
+}
+
+type header struct {
+	*headerFields
+	difats         []uint32
+	miniFatLocs    []uint32
+	miniStreamLocs []uint32 // chain of sectors containing the ministream
+}
+
+func (r *Reader) setHeader() error {
+	buf, err := r.readAt(0, lenHeader)
+	if err != nil {
+		return err
+	}
+	r.header = &header{headerFields: makeHeader(buf)}
+	// sanity check - check signature
+	if r.header.signature != signature {
+		return Error{ErrFormat, "bad signature", int64(r.header.signature)}
+	}
+	// check for legal sector size
+	if r.header.sectorSize == 0x0009 || r.header.sectorSize == 0x000c {
+		r.sectorSize = uint32(1 << r.header.sectorSize)
+	} else {
+		return Error{ErrFormat, "illegal sector size", int64(r.header.sectorSize)}
+	}
+	// check for DIFAT overflow
+	if r.header.numDifatSectors > 0 {
+		sz := (r.sectorSize / 4) - 1
+		if int(r.header.numDifatSectors*sz+109) < 0 {
+			return Error{ErrFormat, "DIFAT int overflow", int64(r.header.numDifatSectors)}
+		}
+		if r.header.numDifatSectors*sz+109 > r.header.numFatSectors+sz {
+			return Error{ErrFormat, "num DIFATs exceeds FAT sectors", int64(r.header.numDifatSectors)}
+		}
+	}
+	// check for mini FAT overflow
+	if r.header.numMiniFatSectors > 0 {
+		if int(r.sectorSize/4*r.header.numMiniFatSectors) < 0 {
+			return Error{ErrFormat, "mini FAT int overflow", int64(r.header.numMiniFatSectors)}
+		}
+		if r.header.numMiniFatSectors > r.header.numFatSectors*(r.sectorSize/miniStreamSectorSize) {
+			return Error{ErrFormat, "num mini FATs exceeds FAT sectors", int64(r.header.numFatSectors)}
+		}
+	}
+	return nil
+}
+
+func (r *Reader) setDifats() error {
+	r.header.difats = r.header.initialDifats[:]
+	// return early if no extra DIFAT sectors
+	if r.header.numDifatSectors == 0 {
+		return nil
+	}
+	sz := (r.sectorSize / 4) - 1
+	n := make([]uint32, 109, r.header.numDifatSectors*sz+109)
+	copy(n, r.header.difats)
+	r.header.difats = n
+	off := r.header.difatSectorLoc
+	for i := 0; i < int(r.header.numDifatSectors); i++ {
+		buf, err := r.readAt(fileOffset(r.sectorSize, off), int(r.sectorSize))
+		if err != nil {
+			return Error{ErrFormat, "error setting DIFAT(" + err.Error() + ")", int64(off)}
+		}
+		for j := 0; j < int(sz); j++ {
+			r.header.difats = append(r.header.difats, binary.LittleEndian.Uint32(buf[j*4:j*4+4]))
+		}
+		off = binary.LittleEndian.Uint32(buf[len(buf)-4:])
+	}
+	return nil
+}
+
+// set the ministream FAT and sector slices in the header
+func (r *Reader) setMiniStream() error {
+	// do nothing if there is no ministream
+	if r.direntries[0].startingSectorLoc == endOfChain || r.header.miniFatSectorLoc == endOfChain || r.header.numMiniFatSectors == 0 {
+		return nil
+	}
+	// build a slice of minifat sectors (akin to the DIFAT slice)
+	c := int(r.header.numMiniFatSectors)
+	r.header.miniFatLocs = make([]uint32, c)
+	r.header.miniFatLocs[0] = r.header.miniFatSectorLoc
+	for i := 1; i < c; i++ {
+		loc, err := r.findNext(r.header.miniFatLocs[i-1], false)
+		if err != nil {
+			return Error{ErrFormat, "setting mini stream (" + err.Error() + ")", int64(r.header.miniFatLocs[i-1])}
+		}
+		r.header.miniFatLocs[i] = loc
+	}
+	// build a slice of ministream sectors
+	c = int(r.sectorSize / 4 * r.header.numMiniFatSectors)
+	r.header.miniStreamLocs = make([]uint32, 0, c)
+	cycles := make(map[uint32]bool)
+	sn := r.direntries[0].startingSectorLoc
+	for sn != endOfChain {
+		r.header.miniStreamLocs = append(r.header.miniStreamLocs, sn)
+		nsn, err := r.findNext(sn, false)
+		if err != nil {
+			return Error{ErrFormat, "setting mini stream (" + err.Error() + ")", int64(sn)}
+		}
+		if nsn <= sn {
+			if nsn == sn || cycles[nsn] {
+				return Error{ErrRead, "cycle detected in mini stream", int64(nsn)}
+			}
+			cycles[nsn] = true
+		}
+		sn = nsn
+	}
+	return nil
+}
+
+func (r *Reader) readAt(offset int64, length int) ([]byte, error) {
+	if r.slicer {
+		b, err := r.ra.(slicer).Slice(offset, length)
+		if err != nil {
+			return nil, Error{ErrRead, "slicer read error (" + err.Error() + ")", offset}
+		}
+		return b, nil
+	}
+	if length > len(r.buf) {
+		return nil, Error{ErrRead, "read length greater than read buffer", int64(length)}
+	}
+	if _, err := r.ra.ReadAt(r.buf[:length], offset); err != nil {
+		return nil, Error{ErrRead, err.Error(), offset}
+	}
+	return r.buf[:length], nil
+}
+
+func (r *Reader) getOffset(sn uint32, mini bool) (int64, error) {
+	if mini {
+		num := r.sectorSize / 64
+		sec := int(sn / num)
+		if sec >= len(r.header.miniStreamLocs) {
+			return 0, Error{ErrRead, "minisector number is outside minisector range", int64(sec)}
+		}
+		dif := sn % num
+		return int64((r.header.miniStreamLocs[sec]+1)*r.sectorSize + dif*64), nil
+	}
+	return fileOffset(r.sectorSize, sn), nil
+}
+
+// check the FAT sector for the next sector in a chain
+func (r *Reader) findNext(sn uint32, mini bool) (uint32, error) {
+	entries := r.sectorSize / 4
+	index := int(sn / entries) // find position in DIFAT or minifat array
+	var sect uint32
+	if mini {
+		if index < 0 || index >= len(r.header.miniFatLocs) {
+			return 0, Error{ErrRead, "minisector index is outside miniFAT range", int64(index)}
+		}
+		sect = r.header.miniFatLocs[index]
+	} else {
+		if index < 0 || index >= len(r.header.difats) {
+			return 0, Error{ErrRead, "FAT index is outside DIFAT range", int64(index)}
+		}
+		sect = r.header.difats[index]
+	}
+	fatIndex := sn % entries // find position within FAT or MiniFAT sector
+	offset := fileOffset(r.sectorSize, sect) + int64(fatIndex*4)
+	buf, err := r.readAt(offset, 4)
+	if err != nil {
+		return 0, Error{ErrRead, "bad read finding next sector (" + err.Error() + ")", offset}
+	}
+	return binary.LittleEndian.Uint32(buf), nil
+}
+
+// Reader provides sequential access to the contents of a MS compound file (MSCFB)
+type Reader struct {
+	slicer     bool
+	sectorSize uint32
+	buf        []byte
+	header     *header
+	File       []*File // File is an ordered slice of final directory entries.
+	direntries []*File // unordered raw directory entries
+	entry      int
+
+	ra io.ReaderAt
+	wa io.WriterAt
+}
+
+// New returns a MSCFB reader
+func New(ra io.ReaderAt) (*Reader, error) {
+	r := &Reader{ra: ra}
+	if _, ok := ra.(slicer); ok {
+		r.slicer = true
+	} else {
+		r.buf = make([]byte, lenHeader)
+	}
+	if err := r.setHeader(); err != nil {
+		return nil, err
+	}
+	// resize the buffer to 4096 if sector size isn't 512
+	if !r.slicer && int(r.sectorSize) > len(r.buf) {
+		r.buf = make([]byte, r.sectorSize)
+	}
+	if err := r.setDifats(); err != nil {
+		return nil, err
+	}
+	if err := r.setDirEntries(); err != nil {
+		return nil, err
+	}
+	if err := r.setMiniStream(); err != nil {
+		return nil, err
+	}
+	if err := r.traverse(); err != nil {
+		return nil, err
+	}
+	return r, nil
+}
+
+// ID returns the CLSID (class ID) field from the root directory entry
+func (r *Reader) ID() string {
+	return r.File[0].ID()
+}
+
+// Created returns the created field from the root directory entry
+func (r *Reader) Created() time.Time {
+	return r.File[0].Created()
+}
+
+// Modified returns the last modified field from the root directory entry
+func (r *Reader) Modified() time.Time {
+	return r.File[0].Modified()
+}
+
+// Next iterates to the next directory entry.
+// This isn't necessarily an adjacent *File within the File slice, but is based on the Left Sibling, Right Sibling and Child information in directory entries.
+func (r *Reader) Next() (*File, error) {
+	r.entry++
+	if r.entry >= len(r.File) {
+		return nil, io.EOF
+	}
+	return r.File[r.entry], nil
+}
+
+// Read the current directory entry
+func (r *Reader) Read(b []byte) (n int, err error) {
+	if r.entry >= len(r.File) {
+		return 0, io.EOF
+	}
+	return r.File[r.entry].Read(b)
+}
+
+// Debug provides granular information from an mscfb file to assist with debugging
+func (r *Reader) Debug() map[string][]uint32 {
+	ret := map[string][]uint32{
+		"sector size":            []uint32{r.sectorSize},
+		"mini fat locs":          r.header.miniFatLocs,
+		"mini stream locs":       r.header.miniStreamLocs,
+		"directory sector":       []uint32{r.header.directorySectorLoc},
+		"mini stream start/size": []uint32{r.File[0].startingSectorLoc, binary.LittleEndian.Uint32(r.File[0].streamSize[:])},
+	}
+	for f, err := r.Next(); err == nil; f, err = r.Next() {
+		ret[f.Name+" start/size"] = []uint32{f.startingSectorLoc, binary.LittleEndian.Uint32(f.streamSize[:])}
+	}
+	return ret
+}
+
+const (
+	// ErrFormat reports issues with the MSCFB's header structures
+	ErrFormat = iota
+	// ErrRead reports issues attempting to read MSCFB streams
+	ErrRead
+	// ErrSeek reports seek issues
+	ErrSeek
+	// ErrWrite reports write issues
+	ErrWrite
+	// ErrTraverse reports issues attempting to traverse the child-parent-sibling relations
+	// between MSCFB storage objects
+	ErrTraverse
+)
+
+type Error struct {
+	typ int
+	msg string
+	val int64
+}
+
+func (e Error) Error() string {
+	return "mscfb: " + e.msg + "; " + strconv.FormatInt(e.val, 10)
+}
+
+// Typ gives the type of MSCFB error
+func (e Error) Typ() int {
+	return e.typ
+}
+
+// Slicer interface avoids a copy by obtaining a byte slice directly from the underlying reader
+type slicer interface {
+	Slice(offset int64, length int) ([]byte, error)
+}
diff --git a/vendor/github.com/richardlehane/msoleps/.travis.yml b/vendor/github.com/richardlehane/msoleps/.travis.yml
index 9296dfb6a..c049ffde2 100644
--- a/vendor/github.com/richardlehane/msoleps/.travis.yml
+++ b/vendor/github.com/richardlehane/msoleps/.travis.yml
@@ -1,6 +1,6 @@
-language: go
-go:
-  - 1.1
-  - 1.2
-  - 1.3
+language: go
+go:
+  - 1.1
+  - 1.2
+  - 1.3
   - tip
\ No newline at end of file
diff --git a/vendor/github.com/richardlehane/msoleps/README.md b/vendor/github.com/richardlehane/msoleps/README.md
index f49eba53e..5629174e7 100644
--- a/vendor/github.com/richardlehane/msoleps/README.md
+++ b/vendor/github.com/richardlehane/msoleps/README.md
@@ -1,27 +1,27 @@
-A reader for Microsoft's [OLE Property Set Format](http://msdn.microsoft.com/en-au/library/dd942421.aspx).
-
-Example usage:
-
-    file, _ := os.Open("test/test.doc")
-    defer file.Close()
-    doc, err := mscfb.NewReader(file)
-    if err != nil {
-      log.Fatal(err)
-    }
-    props := msoleps.New()
-    for entry, err := doc.Next(); err == nil; entry, err = doc.Next() {
-      if msoleps.IsMSOLEPS(entry.Initial) {
-        if oerr := props.Reset(doc); oerr != nil {
-          log.Fatal(oerr)
-        }
-        for _, prop := range props.Property {
-          fmt.Printf("Name: %s; Type: %s; Value: %v", prop.Name, prop.Type(), prop)
-        }
-      }
-    }
-
-Install with `go get github.com/richardlehane/msoleps`
-
-*Status: currently works for simple property sets like SummaryInformation. Not all types implemented yet (e.g. Array). Property set bags not implemented yet*
-
+A reader for Microsoft's [OLE Property Set Format](http://msdn.microsoft.com/en-au/library/dd942421.aspx).
+
+Example usage:
+
+    file, _ := os.Open("test/test.doc")
+    defer file.Close()
+    doc, err := mscfb.NewReader(file)
+    if err != nil {
+      log.Fatal(err)
+    }
+    props := msoleps.New()
+    for entry, err := doc.Next(); err == nil; entry, err = doc.Next() {
+      if msoleps.IsMSOLEPS(entry.Initial) {
+        if oerr := props.Reset(doc); oerr != nil {
+          log.Fatal(oerr)
+        }
+        for _, prop := range props.Property {
+          fmt.Printf("Name: %s; Type: %s; Value: %v", prop.Name, prop.Type(), prop)
+        }
+      }
+    }
+
+Install with `go get github.com/richardlehane/msoleps`
+
+*Status: currently works for simple property sets like SummaryInformation. Not all types implemented yet (e.g. Array). Property set bags not implemented yet*
+
 [![Build Status](https://travis-ci.org/richardlehane/msoleps.png?branch=master)](https://travis-ci.org/richardlehane/msoleps)
\ No newline at end of file
diff --git a/vendor/github.com/richardlehane/msoleps/msoleps.go b/vendor/github.com/richardlehane/msoleps/msoleps.go
index 0eafd67d5..9665f93e0 100644
--- a/vendor/github.com/richardlehane/msoleps/msoleps.go
+++ b/vendor/github.com/richardlehane/msoleps/msoleps.go
@@ -1,245 +1,245 @@
-// Copyright 2014 Richard Lehane. All rights reserved.
-//
-// Licensed under the Apache License, Version 2.0 (the "License");
-// you may not use this file except in compliance with the License.
-// You may obtain a copy of the License at
-//
-//     http://www.apache.org/licenses/LICENSE-2.0
-//
-// Unless required by applicable law or agreed to in writing, software
-// distributed under the License is distributed on an "AS IS" BASIS,
-// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-// See the License for the specific language governing permissions and
-// limitations under the License.
-
-// Package msoleps implements a reader for Microsoft OLE Property Set Data structures,
-// (http://msdn.microsoft.com/en-au/library/dd942421.aspx) a generic persistence format
-// for simple typed metadata
-
-// Example:
-//   file, _ := os.Open("test/test.doc")
-//   defer file.Close()
-//   doc, err := mscfb.NewReader(file)
-//   if err != nil {
-//    log.Fatal(err)
-//   }
-//   props := msoleps.New()
-//   for entry, err := doc.Next(); err == nil; entry, err = doc.Next() {
-//     if msoleps.IsMSOLEPS(entry.Initial) {
-//       if oerr := props.Reset(doc); oerr != nil {
-//         log.Fatal(oerr)
-//       }
-//       for prop := range props.Property {
-//         fmt.Printf("Name: %s; Type: %s; Value: %v", prop.Name, prop.Type(), prop)
-//       }
-//     }
-//   }
-package msoleps
-
-import (
-	"bytes"
-	"encoding/binary"
-	"errors"
-	"io"
-
-	"github.com/richardlehane/msoleps/types"
-)
-
-var (
-	ErrFormat = errors.New("msoleps: not a valid msoleps stream")
-	ErrRead   = errors.New("msoleps: error reading msoleps stream")
-	ErrSeek   = errors.New("msoleps: can't seek backwards")
-)
-
-// IsMSOLEPS checks the first uint16 character of an mscfb name to test if it is a MSOLEPS stream
-func IsMSOLEPS(i uint16) bool {
-	if i == 0x0005 {
-		return true
-	}
-	return false
-}
-
-// Reader is a reader for MS OLE Property Set Data structures
-type Reader struct {
-	Property []*Property
-	b        *bytes.Buffer
-	buf      []byte
-	*propertySetStream
-	pSets [2]*propertySet
-}
-
-func New() *Reader {
-	r := &Reader{}
-	r.b = &bytes.Buffer{}
-	return r
-}
-
-func (r *Reader) Reset(rdr io.Reader) error {
-	r.b.Reset()
-	return r.start(rdr)
-}
-
-func NewFrom(rdr io.Reader) (*Reader, error) {
-	r := &Reader{}
-	r.b = &bytes.Buffer{}
-	return r, r.start(rdr)
-}
-
-func (r *Reader) start(rdr io.Reader) error {
-	if _, err := r.b.ReadFrom(rdr); err != nil {
-		return ErrRead
-	}
-	r.buf = r.b.Bytes()
-	// read the header (property stream details)
-	pss, err := makePropertySetStream(r.buf)
-	if err != nil {
-		return err
-	}
-	// sanity checks to find obvious errors
-	switch {
-	case pss.byteOrder != 0xFFFE, pss.version > 0x0001, pss.numPropertySets > 0x00000002:
-		return ErrFormat
-	}
-	r.propertySetStream = pss
-	// identify the property identifiers and offsets
-	ps, err := r.getPropertySet(pss.offsetA)
-	if err != nil {
-		return err
-	}
-	plen := len(ps.idsOffs)
-	r.pSets[0] = ps
-	var psb *propertySet
-	if pss.numPropertySets == 2 {
-		psb, err = r.getPropertySet(pss.offsetB)
-		if err != nil {
-			return err
-		}
-		r.pSets[1] = psb
-		plen += len(psb.idsOffs)
-	}
-	r.Property = make([]*Property, plen)
-	dict, ok := propertySets[pss.fmtidA]
-	if !ok {
-		dict = ps.dict
-		if dict == nil {
-			dict = make(map[uint32]string)
-		}
-	}
-	dict = addDefaults(dict)
-	for i, v := range ps.idsOffs {
-		r.Property[i] = &Property{}
-		r.Property[i].Name = dict[v.id]
-		// don't try to evaluate dictionary property
-		if v.id == 0x00000000 {
-			r.Property[i].T = types.Null{}
-			continue
-		}
-		t, _ := types.Evaluate(r.buf[int(v.offset+pss.offsetA):])
-		if t.Type() == "CodeString" {
-			cs := t.(*types.CodeString)
-			cs.SetId(ps.code)
-			t = types.Type(cs)
-		}
-		r.Property[i].T = t
-	}
-	if pss.numPropertySets != 2 {
-		return nil
-	}
-	dict, ok = propertySets[pss.fmtidB]
-	if !ok {
-		dict = psb.dict
-		if dict == nil {
-			dict = make(map[uint32]string)
-		}
-	}
-	dict = addDefaults(dict)
-	for i, v := range psb.idsOffs {
-		i += len(ps.idsOffs)
-		r.Property[i] = &Property{}
-		r.Property[i].Name = dict[v.id]
-		// don't try to evaluate dictionary property
-		if v.id == 0x00000000 {
-			r.Property[i].T = types.Null{}
-			continue
-		}
-		t, _ := types.Evaluate(r.buf[int(v.offset+pss.offsetB):])
-		if t.Type() == "CodeString" {
-			cs := t.(*types.CodeString)
-			cs.SetId(psb.code)
-			t = types.Type(cs)
-		}
-		r.Property[i].T = t
-	}
-	return nil
-}
-
-func (r *Reader) getPropertySet(o uint32) (*propertySet, error) {
-	pSet := &propertySet{}
-	pSet.size = binary.LittleEndian.Uint32(r.buf[int(o) : int(o)+4])
-	pSet.numProperties = binary.LittleEndian.Uint32(r.buf[int(o)+4 : int(o)+8])
-	pSet.idsOffs = make([]propertyIDandOffset, int(pSet.numProperties))
-	var dictOff uint32
-	for i := range pSet.idsOffs {
-		this := i*8 + 8 + int(o)
-		pSet.idsOffs[i].id = binary.LittleEndian.Uint32(r.buf[this : this+4])
-		pSet.idsOffs[i].offset = binary.LittleEndian.Uint32(r.buf[this+4 : this+8])
-		switch pSet.idsOffs[i].id {
-		case 0x00000000:
-			dictOff = pSet.idsOffs[i].offset
-		case 0x00000001:
-			off := int(pSet.idsOffs[i].offset + o)
-			pSet.code = types.CodePageID(binary.LittleEndian.Uint16(r.buf[off+4 : off+6]))
-		}
-	}
-	if dictOff > 0 {
-		var err error
-		pSet.dict, err = r.getDictionary(dictOff+o, pSet.code)
-		if err != nil {
-			return nil, err
-		}
-	}
-	return pSet, nil
-}
-
-func (r *Reader) getDictionary(o uint32, code types.CodePageID) (map[uint32]string, error) {
-	b := r.buf[int(o):]
-	e := 4
-	if len(b) < e {
-		return nil, ErrFormat
-	}
-	num := int(binary.LittleEndian.Uint32(b[:e]))
-	if num == 0 {
-		return nil, nil
-	}
-	dict := make(map[uint32]string)
-	for i := 0; i < num; i++ {
-		if len(b[e:]) < 8 {
-			return nil, ErrFormat
-		}
-		id, l := binary.LittleEndian.Uint32(b[e:e+4]), binary.LittleEndian.Uint32(b[e+4:e+8])
-		var s types.Type
-		var err error
-		if code == 0x04B0 {
-			var pad int
-			if l%2 != 0 {
-				pad = 2
-			}
-			s, err = types.MakeUnicode(b[e+4:])
-			if err != nil {
-				return nil, ErrFormat
-			}
-			e = e + 8 + pad + int(l)*2
-		} else {
-			s, err = types.MakeCodeString(b[e+4:])
-			if err != nil {
-				return nil, ErrFormat
-			}
-			cs := s.(*types.CodeString)
-			cs.SetId((code))
-			s = cs
-			e = e + 8 + int(l)
-		}
-		dict[id] = s.String()
-	}
-	return dict, nil
-}
+// Copyright 2014 Richard Lehane. All rights reserved.
+//
+// Licensed under the Apache License, Version 2.0 (the "License");
+// you may not use this file except in compliance with the License.
+// You may obtain a copy of the License at
+//
+//     http://www.apache.org/licenses/LICENSE-2.0
+//
+// Unless required by applicable law or agreed to in writing, software
+// distributed under the License is distributed on an "AS IS" BASIS,
+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+// See the License for the specific language governing permissions and
+// limitations under the License.
+
+// Package msoleps implements a reader for Microsoft OLE Property Set Data structures,
+// (http://msdn.microsoft.com/en-au/library/dd942421.aspx) a generic persistence format
+// for simple typed metadata
+
+// Example:
+//   file, _ := os.Open("test/test.doc")
+//   defer file.Close()
+//   doc, err := mscfb.NewReader(file)
+//   if err != nil {
+//    log.Fatal(err)
+//   }
+//   props := msoleps.New()
+//   for entry, err := doc.Next(); err == nil; entry, err = doc.Next() {
+//     if msoleps.IsMSOLEPS(entry.Initial) {
+//       if oerr := props.Reset(doc); oerr != nil {
+//         log.Fatal(oerr)
+//       }
+//       for prop := range props.Property {
+//         fmt.Printf("Name: %s; Type: %s; Value: %v", prop.Name, prop.Type(), prop)
+//       }
+//     }
+//   }
+package msoleps
+
+import (
+	"bytes"
+	"encoding/binary"
+	"errors"
+	"io"
+
+	"github.com/richardlehane/msoleps/types"
+)
+
+var (
+	ErrFormat = errors.New("msoleps: not a valid msoleps stream")
+	ErrRead   = errors.New("msoleps: error reading msoleps stream")
+	ErrSeek   = errors.New("msoleps: can't seek backwards")
+)
+
+// IsMSOLEPS checks the first uint16 character of an mscfb name to test if it is a MSOLEPS stream
+func IsMSOLEPS(i uint16) bool {
+	if i == 0x0005 {
+		return true
+	}
+	return false
+}
+
+// Reader is a reader for MS OLE Property Set Data structures
+type Reader struct {
+	Property []*Property
+	b        *bytes.Buffer
+	buf      []byte
+	*propertySetStream
+	pSets [2]*propertySet
+}
+
+func New() *Reader {
+	r := &Reader{}
+	r.b = &bytes.Buffer{}
+	return r
+}
+
+func (r *Reader) Reset(rdr io.Reader) error {
+	r.b.Reset()
+	return r.start(rdr)
+}
+
+func NewFrom(rdr io.Reader) (*Reader, error) {
+	r := &Reader{}
+	r.b = &bytes.Buffer{}
+	return r, r.start(rdr)
+}
+
+func (r *Reader) start(rdr io.Reader) error {
+	if _, err := r.b.ReadFrom(rdr); err != nil {
+		return ErrRead
+	}
+	r.buf = r.b.Bytes()
+	// read the header (property stream details)
+	pss, err := makePropertySetStream(r.buf)
+	if err != nil {
+		return err
+	}
+	// sanity checks to find obvious errors
+	switch {
+	case pss.byteOrder != 0xFFFE, pss.version > 0x0001, pss.numPropertySets > 0x00000002:
+		return ErrFormat
+	}
+	r.propertySetStream = pss
+	// identify the property identifiers and offsets
+	ps, err := r.getPropertySet(pss.offsetA)
+	if err != nil {
+		return err
+	}
+	plen := len(ps.idsOffs)
+	r.pSets[0] = ps
+	var psb *propertySet
+	if pss.numPropertySets == 2 {
+		psb, err = r.getPropertySet(pss.offsetB)
+		if err != nil {
+			return err
+		}
+		r.pSets[1] = psb
+		plen += len(psb.idsOffs)
+	}
+	r.Property = make([]*Property, plen)
+	dict, ok := propertySets[pss.fmtidA]
+	if !ok {
+		dict = ps.dict
+		if dict == nil {
+			dict = make(map[uint32]string)
+		}
+	}
+	dict = addDefaults(dict)
+	for i, v := range ps.idsOffs {
+		r.Property[i] = &Property{}
+		r.Property[i].Name = dict[v.id]
+		// don't try to evaluate dictionary property
+		if v.id == 0x00000000 {
+			r.Property[i].T = types.Null{}
+			continue
+		}
+		t, _ := types.Evaluate(r.buf[int(v.offset+pss.offsetA):])
+		if t.Type() == "CodeString" {
+			cs := t.(*types.CodeString)
+			cs.SetId(ps.code)
+			t = types.Type(cs)
+		}
+		r.Property[i].T = t
+	}
+	if pss.numPropertySets != 2 {
+		return nil
+	}
+	dict, ok = propertySets[pss.fmtidB]
+	if !ok {
+		dict = psb.dict
+		if dict == nil {
+			dict = make(map[uint32]string)
+		}
+	}
+	dict = addDefaults(dict)
+	for i, v := range psb.idsOffs {
+		i += len(ps.idsOffs)
+		r.Property[i] = &Property{}
+		r.Property[i].Name = dict[v.id]
+		// don't try to evaluate dictionary property
+		if v.id == 0x00000000 {
+			r.Property[i].T = types.Null{}
+			continue
+		}
+		t, _ := types.Evaluate(r.buf[int(v.offset+pss.offsetB):])
+		if t.Type() == "CodeString" {
+			cs := t.(*types.CodeString)
+			cs.SetId(psb.code)
+			t = types.Type(cs)
+		}
+		r.Property[i].T = t
+	}
+	return nil
+}
+
+func (r *Reader) getPropertySet(o uint32) (*propertySet, error) {
+	pSet := &propertySet{}
+	pSet.size = binary.LittleEndian.Uint32(r.buf[int(o) : int(o)+4])
+	pSet.numProperties = binary.LittleEndian.Uint32(r.buf[int(o)+4 : int(o)+8])
+	pSet.idsOffs = make([]propertyIDandOffset, int(pSet.numProperties))
+	var dictOff uint32
+	for i := range pSet.idsOffs {
+		this := i*8 + 8 + int(o)
+		pSet.idsOffs[i].id = binary.LittleEndian.Uint32(r.buf[this : this+4])
+		pSet.idsOffs[i].offset = binary.LittleEndian.Uint32(r.buf[this+4 : this+8])
+		switch pSet.idsOffs[i].id {
+		case 0x00000000:
+			dictOff = pSet.idsOffs[i].offset
+		case 0x00000001:
+			off := int(pSet.idsOffs[i].offset + o)
+			pSet.code = types.CodePageID(binary.LittleEndian.Uint16(r.buf[off+4 : off+6]))
+		}
+	}
+	if dictOff > 0 {
+		var err error
+		pSet.dict, err = r.getDictionary(dictOff+o, pSet.code)
+		if err != nil {
+			return nil, err
+		}
+	}
+	return pSet, nil
+}
+
+func (r *Reader) getDictionary(o uint32, code types.CodePageID) (map[uint32]string, error) {
+	b := r.buf[int(o):]
+	e := 4
+	if len(b) < e {
+		return nil, ErrFormat
+	}
+	num := int(binary.LittleEndian.Uint32(b[:e]))
+	if num == 0 {
+		return nil, nil
+	}
+	dict := make(map[uint32]string)
+	for i := 0; i < num; i++ {
+		if len(b[e:]) < 8 {
+			return nil, ErrFormat
+		}
+		id, l := binary.LittleEndian.Uint32(b[e:e+4]), binary.LittleEndian.Uint32(b[e+4:e+8])
+		var s types.Type
+		var err error
+		if code == 0x04B0 {
+			var pad int
+			if l%2 != 0 {
+				pad = 2
+			}
+			s, err = types.MakeUnicode(b[e+4:])
+			if err != nil {
+				return nil, ErrFormat
+			}
+			e = e + 8 + pad + int(l)*2
+		} else {
+			s, err = types.MakeCodeString(b[e+4:])
+			if err != nil {
+				return nil, ErrFormat
+			}
+			cs := s.(*types.CodeString)
+			cs.SetId((code))
+			s = cs
+			e = e + 8 + int(l)
+		}
+		dict[id] = s.String()
+	}
+	return dict, nil
+}
diff --git a/vendor/github.com/richardlehane/msoleps/property.go b/vendor/github.com/richardlehane/msoleps/property.go
index c1be96122..a351ef65d 100644
--- a/vendor/github.com/richardlehane/msoleps/property.go
+++ b/vendor/github.com/richardlehane/msoleps/property.go
@@ -1,84 +1,84 @@
-// Copyright 2014 Richard Lehane. All rights reserved.
-//
-// Licensed under the Apache License, Version 2.0 (the "License");
-// you may not use this file except in compliance with the License.
-// You may obtain a copy of the License at
-//
-//     http://www.apache.org/licenses/LICENSE-2.0
-//
-// Unless required by applicable law or agreed to in writing, software
-// distributed under the License is distributed on an "AS IS" BASIS,
-// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-// See the License for the specific language governing permissions and
-// limitations under the License.
-
-package msoleps
-
-import (
-	"encoding/binary"
-	"github.com/richardlehane/msoleps/types"
-)
-
-type Property struct {
-	Name string
-	T    types.Type
-}
-
-func (p *Property) String() string {
-	return p.T.String()
-}
-
-func (p *Property) Type() string {
-	return p.T.Type()
-}
-
-type propertySetStream struct {
-	byteOrder       uint16
-	version         uint16
-	SystemID        uint32
-	CLSID           types.Guid
-	numPropertySets uint32
-	fmtidA          types.Guid
-	offsetA         uint32
-	fmtidB          types.Guid // This can be absent (i.e. not null)
-	offsetB         uint32
-}
-
-func makePropertySetStream(b []byte) (*propertySetStream, error) {
-	if len(b) < 48 {
-		return nil, ErrFormat
-	}
-	ps := &propertySetStream{}
-	ps.byteOrder = binary.LittleEndian.Uint16(b[:2])
-	ps.version = binary.LittleEndian.Uint16(b[2:4])
-	ps.SystemID = binary.LittleEndian.Uint32(b[4:8])
-	g, _ := types.MakeGuid(b[8:])
-	ps.CLSID = g.(types.Guid)
-	ps.numPropertySets = binary.LittleEndian.Uint32(b[24:28])
-	g, _ = types.MakeGuid(b[28:])
-	ps.fmtidA, _ = g.(types.Guid)
-	ps.offsetA = binary.LittleEndian.Uint32(b[44:48])
-	if ps.numPropertySets != 2 {
-		return ps, nil
-	}
-	if len(b) < 68 {
-		return nil, ErrFormat
-	}
-	g, _ = types.MakeGuid(b[48:])
-	ps.fmtidB = g.(types.Guid)
-	ps.offsetB = binary.LittleEndian.Uint32(b[64:68])
-	return ps, nil
-}
-
-type propertySet struct {
-	size          uint32
-	numProperties uint32
-	idsOffs       []propertyIDandOffset
-	dict          map[uint32]string
-	code          types.CodePageID
-}
-
-type propertyIDandOffset struct {
-	id     uint32
-	offset uint32
-}
+// Copyright 2014 Richard Lehane. All rights reserved.
+//
+// Licensed under the Apache License, Version 2.0 (the "License");
+// you may not use this file except in compliance with the License.
+// You may obtain a copy of the License at
+//
+//     http://www.apache.org/licenses/LICENSE-2.0
+//
+// Unless required by applicable law or agreed to in writing, software
+// distributed under the License is distributed on an "AS IS" BASIS,
+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+// See the License for the specific language governing permissions and
+// limitations under the License.
+
+package msoleps
+
+import (
+	"encoding/binary"
+	"github.com/richardlehane/msoleps/types"
+)
+
+type Property struct {
+	Name string
+	T    types.Type
+}
+
+func (p *Property) String() string {
+	return p.T.String()
+}
+
+func (p *Property) Type() string {
+	return p.T.Type()
+}
+
+type propertySetStream struct {
+	byteOrder       uint16
+	version         uint16
+	SystemID        uint32
+	CLSID           types.Guid
+	numPropertySets uint32
+	fmtidA          types.Guid
+	offsetA         uint32
+	fmtidB          types.Guid // This can be absent (i.e. not null)
+	offsetB         uint32
+}
+
+func makePropertySetStream(b []byte) (*propertySetStream, error) {
+	if len(b) < 48 {
+		return nil, ErrFormat
+	}
+	ps := &propertySetStream{}
+	ps.byteOrder = binary.LittleEndian.Uint16(b[:2])
+	ps.version = binary.LittleEndian.Uint16(b[2:4])
+	ps.SystemID = binary.LittleEndian.Uint32(b[4:8])
+	g, _ := types.MakeGuid(b[8:])
+	ps.CLSID = g.(types.Guid)
+	ps.numPropertySets = binary.LittleEndian.Uint32(b[24:28])
+	g, _ = types.MakeGuid(b[28:])
+	ps.fmtidA, _ = g.(types.Guid)
+	ps.offsetA = binary.LittleEndian.Uint32(b[44:48])
+	if ps.numPropertySets != 2 {
+		return ps, nil
+	}
+	if len(b) < 68 {
+		return nil, ErrFormat
+	}
+	g, _ = types.MakeGuid(b[48:])
+	ps.fmtidB = g.(types.Guid)
+	ps.offsetB = binary.LittleEndian.Uint32(b[64:68])
+	return ps, nil
+}
+
+type propertySet struct {
+	size          uint32
+	numProperties uint32
+	idsOffs       []propertyIDandOffset
+	dict          map[uint32]string
+	code          types.CodePageID
+}
+
+type propertyIDandOffset struct {
+	id     uint32
+	offset uint32
+}
diff --git a/vendor/github.com/richardlehane/msoleps/types/currency.go b/vendor/github.com/richardlehane/msoleps/types/currency.go
index 6eb53cf63..01b9c89e5 100644
--- a/vendor/github.com/richardlehane/msoleps/types/currency.go
+++ b/vendor/github.com/richardlehane/msoleps/types/currency.go
@@ -1,43 +1,43 @@
-// Copyright 2014 Richard Lehane. All rights reserved.
-//
-// Licensed under the Apache License, Version 2.0 (the "License");
-// you may not use this file except in compliance with the License.
-// You may obtain a copy of the License at
-//
-//     http://www.apache.org/licenses/LICENSE-2.0
-//
-// Unless required by applicable law or agreed to in writing, software
-// distributed under the License is distributed on an "AS IS" BASIS,
-// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-// See the License for the specific language governing permissions and
-// limitations under the License.
-
-package types
-
-import (
-	"encoding/binary"
-	"strconv"
-)
-
-//The CURRENCY type specifies currency information. It is represented as an 8-byte integer, scaled by 10,000, to give a fixed-point number with 15 digits to the left of the decimal point, and four digits to the right. This representation provides a range of 922337203685477.5807 to –922337203685477.5808. For example, $5.25 is stored as the value 52500.
-
-type Currency int64
-
-func (c Currency) String() string {
-	return "$" + strconv.FormatFloat(float64(c)/10000, 'f', -1, 64)
-}
-
-func (c Currency) Type() string {
-	return "Currency"
-}
-
-func (c Currency) Length() int {
-	return 8
-}
-
-func MakeCurrency(b []byte) (Type, error) {
-	if len(b) < 8 {
-		return Currency(0), ErrType
-	}
-	return Currency(binary.LittleEndian.Uint64(b[:8])), nil
-}
+// Copyright 2014 Richard Lehane. All rights reserved.
+//
+// Licensed under the Apache License, Version 2.0 (the "License");
+// you may not use this file except in compliance with the License.
+// You may obtain a copy of the License at
+//
+//     http://www.apache.org/licenses/LICENSE-2.0
+//
+// Unless required by applicable law or agreed to in writing, software
+// distributed under the License is distributed on an "AS IS" BASIS,
+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+// See the License for the specific language governing permissions and
+// limitations under the License.
+
+package types
+
+import (
+	"encoding/binary"
+	"strconv"
+)
+
+//The CURRENCY type specifies currency information. It is represented as an 8-byte integer, scaled by 10,000, to give a fixed-point number with 15 digits to the left of the decimal point, and four digits to the right. This representation provides a range of 922337203685477.5807 to –922337203685477.5808. For example, $5.25 is stored as the value 52500.
+
+type Currency int64
+
+func (c Currency) String() string {
+	return "$" + strconv.FormatFloat(float64(c)/10000, 'f', -1, 64)
+}
+
+func (c Currency) Type() string {
+	return "Currency"
+}
+
+func (c Currency) Length() int {
+	return 8
+}
+
+func MakeCurrency(b []byte) (Type, error) {
+	if len(b) < 8 {
+		return Currency(0), ErrType
+	}
+	return Currency(binary.LittleEndian.Uint64(b[:8])), nil
+}
diff --git a/vendor/github.com/richardlehane/msoleps/types/date.go b/vendor/github.com/richardlehane/msoleps/types/date.go
index 97ee978ee..364e551a3 100644
--- a/vendor/github.com/richardlehane/msoleps/types/date.go
+++ b/vendor/github.com/richardlehane/msoleps/types/date.go
@@ -1,49 +1,49 @@
-// Copyright 2014 Richard Lehane. All rights reserved.
-//
-// Licensed under the Apache License, Version 2.0 (the "License");
-// you may not use this file except in compliance with the License.
-// You may obtain a copy of the License at
-//
-//     http://www.apache.org/licenses/LICENSE-2.0
-//
-// Unless required by applicable law or agreed to in writing, software
-// distributed under the License is distributed on an "AS IS" BASIS,
-// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-// See the License for the specific language governing permissions and
-// limitations under the License.
-
-package types
-
-import (
-	"encoding/binary"
-	"time"
-)
-
-// http://msdn.microsoft.com/en-us/library/cc237601.aspx
-type Date float64
-
-func (d Date) Time() time.Time {
-	start := time.Date(1899, 12, 30, 0, 0, 0, 0, time.UTC)
-	day := float64(time.Hour * 24)
-	dur := time.Duration(day * float64(d))
-	return start.Add(dur)
-}
-
-func (d Date) String() string {
-	return d.Time().String()
-}
-
-func (d Date) Type() string {
-	return "Date"
-}
-
-func (d Date) Length() int {
-	return 8
-}
-
-func MakeDate(b []byte) (Type, error) {
-	if len(b) < 8 {
-		return Date(0), ErrType
-	}
-	return Date(binary.LittleEndian.Uint64(b[:8])), nil
-}
+// Copyright 2014 Richard Lehane. All rights reserved.
+//
+// Licensed under the Apache License, Version 2.0 (the "License");
+// you may not use this file except in compliance with the License.
+// You may obtain a copy of the License at
+//
+//     http://www.apache.org/licenses/LICENSE-2.0
+//
+// Unless required by applicable law or agreed to in writing, software
+// distributed under the License is distributed on an "AS IS" BASIS,
+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+// See the License for the specific language governing permissions and
+// limitations under the License.
+
+package types
+
+import (
+	"encoding/binary"
+	"time"
+)
+
+// http://msdn.microsoft.com/en-us/library/cc237601.aspx
+type Date float64
+
+func (d Date) Time() time.Time {
+	start := time.Date(1899, 12, 30, 0, 0, 0, 0, time.UTC)
+	day := float64(time.Hour * 24)
+	dur := time.Duration(day * float64(d))
+	return start.Add(dur)
+}
+
+func (d Date) String() string {
+	return d.Time().String()
+}
+
+func (d Date) Type() string {
+	return "Date"
+}
+
+func (d Date) Length() int {
+	return 8
+}
+
+func MakeDate(b []byte) (Type, error) {
+	if len(b) < 8 {
+		return Date(0), ErrType
+	}
+	return Date(binary.LittleEndian.Uint64(b[:8])), nil
+}
diff --git a/vendor/github.com/richardlehane/msoleps/types/decimal.go b/vendor/github.com/richardlehane/msoleps/types/decimal.go
index 7ea55b97d..090e5ffa1 100644
--- a/vendor/github.com/richardlehane/msoleps/types/decimal.go
+++ b/vendor/github.com/richardlehane/msoleps/types/decimal.go
@@ -1,65 +1,65 @@
-// Copyright 2014 Richard Lehane. All rights reserved.
-//
-// Licensed under the Apache License, Version 2.0 (the "License");
-// you may not use this file except in compliance with the License.
-// You may obtain a copy of the License at
-//
-//     http://www.apache.org/licenses/LICENSE-2.0
-//
-// Unless required by applicable law or agreed to in writing, software
-// distributed under the License is distributed on an "AS IS" BASIS,
-// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-// See the License for the specific language governing permissions and
-// limitations under the License.
-
-package types
-
-import (
-	"encoding/binary"
-	"math"
-	"math/big"
-)
-
-// http://msdn.microsoft.com/en-us/library/cc237603.aspx
-type Decimal struct {
-	res    [2]byte
-	scale  byte
-	sign   byte
-	high32 uint32
-	low64  uint64
-}
-
-func (d Decimal) Type() string {
-	return "Decimal"
-}
-
-func (d Decimal) Length() int {
-	return 16
-}
-
-func (d Decimal) String() string {
-	h, l, b := new(big.Int), new(big.Int), new(big.Int)
-	l.SetUint64(d.low64)
-	h.Lsh(big.NewInt(int64(d.high32)), 64)
-	b.Add(h, l)
-	q, f, r := new(big.Rat), new(big.Rat), new(big.Rat)
-	q.SetFloat64(math.Pow10(int(d.scale)))
-	r.Quo(f.SetInt(b), q)
-	if d.sign == 0x80 {
-		r.Neg(r)
-	}
-	return r.FloatString(20)
-}
-
-func MakeDecimal(b []byte) (Type, error) {
-	if len(b) < 16 {
-		return Decimal{}, ErrType
-	}
-	return Decimal{
-		res:    [2]byte{b[0], b[1]},
-		scale:  b[2],
-		sign:   b[3],
-		high32: binary.LittleEndian.Uint32(b[4:8]),
-		low64:  binary.LittleEndian.Uint64(b[8:16]),
-	}, nil
-}
+// Copyright 2014 Richard Lehane. All rights reserved.
+//
+// Licensed under the Apache License, Version 2.0 (the "License");
+// you may not use this file except in compliance with the License.
+// You may obtain a copy of the License at
+//
+//     http://www.apache.org/licenses/LICENSE-2.0
+//
+// Unless required by applicable law or agreed to in writing, software
+// distributed under the License is distributed on an "AS IS" BASIS,
+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+// See the License for the specific language governing permissions and
+// limitations under the License.
+
+package types
+
+import (
+	"encoding/binary"
+	"math"
+	"math/big"
+)
+
+// http://msdn.microsoft.com/en-us/library/cc237603.aspx
+type Decimal struct {
+	res    [2]byte
+	scale  byte
+	sign   byte
+	high32 uint32
+	low64  uint64
+}
+
+func (d Decimal) Type() string {
+	return "Decimal"
+}
+
+func (d Decimal) Length() int {
+	return 16
+}
+
+func (d Decimal) String() string {
+	h, l, b := new(big.Int), new(big.Int), new(big.Int)
+	l.SetUint64(d.low64)
+	h.Lsh(big.NewInt(int64(d.high32)), 64)
+	b.Add(h, l)
+	q, f, r := new(big.Rat), new(big.Rat), new(big.Rat)
+	q.SetFloat64(math.Pow10(int(d.scale)))
+	r.Quo(f.SetInt(b), q)
+	if d.sign == 0x80 {
+		r.Neg(r)
+	}
+	return r.FloatString(20)
+}
+
+func MakeDecimal(b []byte) (Type, error) {
+	if len(b) < 16 {
+		return Decimal{}, ErrType
+	}
+	return Decimal{
+		res:    [2]byte{b[0], b[1]},
+		scale:  b[2],
+		sign:   b[3],
+		high32: binary.LittleEndian.Uint32(b[4:8]),
+		low64:  binary.LittleEndian.Uint64(b[8:16]),
+	}, nil
+}
diff --git a/vendor/github.com/richardlehane/msoleps/types/filetime.go b/vendor/github.com/richardlehane/msoleps/types/filetime.go
index 8280d2c2e..c1060ee96 100644
--- a/vendor/github.com/richardlehane/msoleps/types/filetime.go
+++ b/vendor/github.com/richardlehane/msoleps/types/filetime.go
@@ -1,70 +1,70 @@
-// Copyright 2014 Richard Lehane. All rights reserved.
-//
-// Licensed under the Apache License, Version 2.0 (the "License");
-// you may not use this file except in compliance with the License.
-// You may obtain a copy of the License at
-//
-//     http://www.apache.org/licenses/LICENSE-2.0
-//
-// Unless required by applicable law or agreed to in writing, software
-// distributed under the License is distributed on an "AS IS" BASIS,
-// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-// See the License for the specific language governing permissions and
-// limitations under the License.
-
-package types
-
-import (
-	"encoding/binary"
-	"time"
-)
-
-// Win FILETIME type
-// http://msdn.microsoft.com/en-us/library/cc230324.aspx
-type FileTime struct {
-	Low  uint32 // Windows FILETIME structure
-	High uint32 // Windows FILETIME structure
-}
-
-const (
-	tick       uint64 = 10000000
-	gregToUnix uint64 = 11644473600
-)
-
-func winToUnix(low, high uint32) int64 {
-	gregTime := ((uint64(high) << 32) + uint64(low)) / tick
-	if gregTime < gregToUnix {
-		return 0
-	}
-	return int64(gregTime - gregToUnix)
-}
-
-func (f FileTime) Time() time.Time {
-	return time.Unix(winToUnix(f.Low, f.High), 0)
-}
-
-func (f FileTime) String() string {
-	return f.Time().String()
-}
-
-func (f FileTime) Type() string {
-	return "FileTime"
-}
-
-func (f FileTime) Length() int {
-	return 8
-}
-
-func MakeFileTime(b []byte) (Type, error) {
-	if len(b) < 8 {
-		return FileTime{}, ErrType
-	}
-	return MustFileTime(b), nil
-}
-
-func MustFileTime(b []byte) FileTime {
-	return FileTime{
-		Low:  binary.LittleEndian.Uint32(b[:4]),
-		High: binary.LittleEndian.Uint32(b[4:8]),
-	}
-}
+// Copyright 2014 Richard Lehane. All rights reserved.
+//
+// Licensed under the Apache License, Version 2.0 (the "License");
+// you may not use this file except in compliance with the License.
+// You may obtain a copy of the License at
+//
+//     http://www.apache.org/licenses/LICENSE-2.0
+//
+// Unless required by applicable law or agreed to in writing, software
+// distributed under the License is distributed on an "AS IS" BASIS,
+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+// See the License for the specific language governing permissions and
+// limitations under the License.
+
+package types
+
+import (
+	"encoding/binary"
+	"time"
+)
+
+// Win FILETIME type
+// http://msdn.microsoft.com/en-us/library/cc230324.aspx
+type FileTime struct {
+	Low  uint32 // Windows FILETIME structure
+	High uint32 // Windows FILETIME structure
+}
+
+const (
+	tick       uint64 = 10000000
+	gregToUnix uint64 = 11644473600
+)
+
+func winToUnix(low, high uint32) int64 {
+	gregTime := ((uint64(high) << 32) + uint64(low)) / tick
+	if gregTime < gregToUnix {
+		return 0
+	}
+	return int64(gregTime - gregToUnix)
+}
+
+func (f FileTime) Time() time.Time {
+	return time.Unix(winToUnix(f.Low, f.High), 0)
+}
+
+func (f FileTime) String() string {
+	return f.Time().String()
+}
+
+func (f FileTime) Type() string {
+	return "FileTime"
+}
+
+func (f FileTime) Length() int {
+	return 8
+}
+
+func MakeFileTime(b []byte) (Type, error) {
+	if len(b) < 8 {
+		return FileTime{}, ErrType
+	}
+	return MustFileTime(b), nil
+}
+
+func MustFileTime(b []byte) FileTime {
+	return FileTime{
+		Low:  binary.LittleEndian.Uint32(b[:4]),
+		High: binary.LittleEndian.Uint32(b[4:8]),
+	}
+}
diff --git a/vendor/github.com/richardlehane/msoleps/types/guid.go b/vendor/github.com/richardlehane/msoleps/types/guid.go
index 3d1560fc4..86bb64491 100644
--- a/vendor/github.com/richardlehane/msoleps/types/guid.go
+++ b/vendor/github.com/richardlehane/msoleps/types/guid.go
@@ -1,209 +1,209 @@
-// Copyright 2014 Richard Lehane. All rights reserved.
-//
-// Licensed under the Apache License, Version 2.0 (the "License");
-// you may not use this file except in compliance with the License.
-// You may obtain a copy of the License at
-//
-//     http://www.apache.org/licenses/LICENSE-2.0
-//
-// Unless required by applicable law or agreed to in writing, software
-// distributed under the License is distributed on an "AS IS" BASIS,
-// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-// See the License for the specific language governing permissions and
-// limitations under the License.
-
-package types
-
-import (
-	"encoding/binary"
-	"encoding/hex"
-	"errors"
-	"strings"
-)
-
-// Win GUID and UUID type
-// http://msdn.microsoft.com/en-us/library/cc230326.aspx
-type Guid struct {
-	DataA uint32
-	DataB uint16
-	DataC uint16
-	DataD [8]byte
-}
-
-func (g Guid) String() string {
-	buf := make([]byte, 8)
-	binary.BigEndian.PutUint32(buf[:4], g.DataA)
-	binary.BigEndian.PutUint16(buf[4:6], g.DataB)
-	binary.BigEndian.PutUint16(buf[6:], g.DataC)
-	return strings.ToUpper("{" +
-		hex.EncodeToString(buf[:4]) +
-		"-" +
-		hex.EncodeToString(buf[4:6]) +
-		"-" +
-		hex.EncodeToString(buf[6:]) +
-		"-" +
-		hex.EncodeToString(g.DataD[:2]) +
-		"-" +
-		hex.EncodeToString(g.DataD[2:]) +
-		"}")
-}
-
-func (g Guid) Type() string {
-	return "Guid"
-}
-
-func (g Guid) Length() int {
-	return 16
-}
-
-func GuidFromString(str string) (Guid, error) {
-	gerr := "Invalid GUID: expecting in format {F29F85E0-4FF9-1068-AB91-08002B27B3D9}, got " + str
-	if len(str) != 38 {
-		return Guid{}, errors.New(gerr + "; bad length, should be 38 chars")
-	}
-	trimmed := strings.Trim(str, "{}")
-	parts := strings.Split(trimmed, "-")
-	if len(parts) != 5 {
-		return Guid{}, errors.New(gerr + "; expecting should five '-' separators")
-	}
-	buf, err := hex.DecodeString(strings.Join(parts, ""))
-	if err != nil {
-		return Guid{}, errors.New(gerr + "; error decoding hex: " + err.Error())
-	}
-	return makeGuid(buf, binary.BigEndian), nil
-}
-
-func MakeGuid(b []byte) (Type, error) {
-	if len(b) < 16 {
-		return Guid{}, ErrType
-	}
-	return makeGuid(b, binary.LittleEndian), nil
-}
-
-func makeGuid(b []byte, order binary.ByteOrder) Guid {
-	g := Guid{
-		DataA: order.Uint32(b[:4]),
-		DataB: order.Uint16(b[4:6]),
-		DataC: order.Uint16(b[6:8]),
-		DataD: [8]byte{},
-	}
-	copy(g.DataD[:], b[8:])
-	return g
-}
-
-func MustGuidFromString(str string) Guid {
-	g, err := GuidFromString(str)
-	if err != nil {
-		panic(err)
-	}
-	return g
-}
-
-func MustGuid(b []byte) Guid {
-	return makeGuid(b, binary.LittleEndian)
-}
-
-func GuidFromName(n string) (Guid, error) {
-	n = strings.ToLower(n)
-	buf, err := charConvert([]byte(n))
-	if err != nil {
-		return Guid{}, err
-	}
-	return makeGuid(buf, binary.LittleEndian), nil
-}
-
-func charConvert(in []byte) ([]byte, error) {
-	if len(in) != 26 {
-		return nil, errors.New("invalid GUID: expecting 26 characters")
-	}
-	out := make([]byte, 16)
-	var idx, shift uint
-	var b byte
-	for _, v := range in {
-		this, ok := characterMapping[v]
-		if !ok {
-			return nil, errors.New("invalid Guid: invalid character")
-		}
-		b = b | this<<shift
-		if shift >= 3 {
-			out[idx] = b
-			idx++
-			b = this >> (8 - shift) // write any remainder back to b, or 0 if shift is 3
-		}
-		shift = shift + 5
-		if shift > 7 {
-			shift = shift - 8
-		}
-	}
-	return out, nil
-}
-
-const (
-	charA byte = iota
-	charB
-	charC
-	charD
-	charE
-	charF
-	charG
-	charH
-	charI
-	charJ
-	charK
-	charL
-	charM
-	charN
-	charO
-	charP
-	charQ
-	charR
-	charS
-	charT
-	charU
-	charV
-	charW
-	charX
-	charY
-	charZ
-	char0
-	char1
-	char2
-	char3
-	char4
-	char5
-)
-
-var characterMapping = map[byte]byte{
-	'a': charA,
-	'b': charB,
-	'c': charC,
-	'd': charD,
-	'e': charE,
-	'f': charF,
-	'g': charG,
-	'h': charH,
-	'i': charI,
-	'j': charJ,
-	'k': charK,
-	'l': charL,
-	'm': charM,
-	'n': charN,
-	'o': charO,
-	'p': charP,
-	'q': charQ,
-	'r': charR,
-	's': charS,
-	't': charT,
-	'u': charU,
-	'v': charV,
-	'w': charW,
-	'x': charX,
-	'y': charY,
-	'z': charZ,
-	'0': char0,
-	'1': char1,
-	'2': char2,
-	'3': char3,
-	'4': char4,
-	'5': char5,
-}
+// Copyright 2014 Richard Lehane. All rights reserved.
+//
+// Licensed under the Apache License, Version 2.0 (the "License");
+// you may not use this file except in compliance with the License.
+// You may obtain a copy of the License at
+//
+//     http://www.apache.org/licenses/LICENSE-2.0
+//
+// Unless required by applicable law or agreed to in writing, software
+// distributed under the License is distributed on an "AS IS" BASIS,
+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+// See the License for the specific language governing permissions and
+// limitations under the License.
+
+package types
+
+import (
+	"encoding/binary"
+	"encoding/hex"
+	"errors"
+	"strings"
+)
+
+// Win GUID and UUID type
+// http://msdn.microsoft.com/en-us/library/cc230326.aspx
+type Guid struct {
+	DataA uint32
+	DataB uint16
+	DataC uint16
+	DataD [8]byte
+}
+
+func (g Guid) String() string {
+	buf := make([]byte, 8)
+	binary.BigEndian.PutUint32(buf[:4], g.DataA)
+	binary.BigEndian.PutUint16(buf[4:6], g.DataB)
+	binary.BigEndian.PutUint16(buf[6:], g.DataC)
+	return strings.ToUpper("{" +
+		hex.EncodeToString(buf[:4]) +
+		"-" +
+		hex.EncodeToString(buf[4:6]) +
+		"-" +
+		hex.EncodeToString(buf[6:]) +
+		"-" +
+		hex.EncodeToString(g.DataD[:2]) +
+		"-" +
+		hex.EncodeToString(g.DataD[2:]) +
+		"}")
+}
+
+func (g Guid) Type() string {
+	return "Guid"
+}
+
+func (g Guid) Length() int {
+	return 16
+}
+
+func GuidFromString(str string) (Guid, error) {
+	gerr := "Invalid GUID: expecting in format {F29F85E0-4FF9-1068-AB91-08002B27B3D9}, got " + str
+	if len(str) != 38 {
+		return Guid{}, errors.New(gerr + "; bad length, should be 38 chars")
+	}
+	trimmed := strings.Trim(str, "{}")
+	parts := strings.Split(trimmed, "-")
+	if len(parts) != 5 {
+		return Guid{}, errors.New(gerr + "; expecting should five '-' separators")
+	}
+	buf, err := hex.DecodeString(strings.Join(parts, ""))
+	if err != nil {
+		return Guid{}, errors.New(gerr + "; error decoding hex: " + err.Error())
+	}
+	return makeGuid(buf, binary.BigEndian), nil
+}
+
+func MakeGuid(b []byte) (Type, error) {
+	if len(b) < 16 {
+		return Guid{}, ErrType
+	}
+	return makeGuid(b, binary.LittleEndian), nil
+}
+
+func makeGuid(b []byte, order binary.ByteOrder) Guid {
+	g := Guid{
+		DataA: order.Uint32(b[:4]),
+		DataB: order.Uint16(b[4:6]),
+		DataC: order.Uint16(b[6:8]),
+		DataD: [8]byte{},
+	}
+	copy(g.DataD[:], b[8:])
+	return g
+}
+
+func MustGuidFromString(str string) Guid {
+	g, err := GuidFromString(str)
+	if err != nil {
+		panic(err)
+	}
+	return g
+}
+
+func MustGuid(b []byte) Guid {
+	return makeGuid(b, binary.LittleEndian)
+}
+
+func GuidFromName(n string) (Guid, error) {
+	n = strings.ToLower(n)
+	buf, err := charConvert([]byte(n))
+	if err != nil {
+		return Guid{}, err
+	}
+	return makeGuid(buf, binary.LittleEndian), nil
+}
+
+func charConvert(in []byte) ([]byte, error) {
+	if len(in) != 26 {
+		return nil, errors.New("invalid GUID: expecting 26 characters")
+	}
+	out := make([]byte, 16)
+	var idx, shift uint
+	var b byte
+	for _, v := range in {
+		this, ok := characterMapping[v]
+		if !ok {
+			return nil, errors.New("invalid Guid: invalid character")
+		}
+		b = b | this<<shift
+		if shift >= 3 {
+			out[idx] = b
+			idx++
+			b = this >> (8 - shift) // write any remainder back to b, or 0 if shift is 3
+		}
+		shift = shift + 5
+		if shift > 7 {
+			shift = shift - 8
+		}
+	}
+	return out, nil
+}
+
+const (
+	charA byte = iota
+	charB
+	charC
+	charD
+	charE
+	charF
+	charG
+	charH
+	charI
+	charJ
+	charK
+	charL
+	charM
+	charN
+	charO
+	charP
+	charQ
+	charR
+	charS
+	charT
+	charU
+	charV
+	charW
+	charX
+	charY
+	charZ
+	char0
+	char1
+	char2
+	char3
+	char4
+	char5
+)
+
+var characterMapping = map[byte]byte{
+	'a': charA,
+	'b': charB,
+	'c': charC,
+	'd': charD,
+	'e': charE,
+	'f': charF,
+	'g': charG,
+	'h': charH,
+	'i': charI,
+	'j': charJ,
+	'k': charK,
+	'l': charL,
+	'm': charM,
+	'n': charN,
+	'o': charO,
+	'p': charP,
+	'q': charQ,
+	'r': charR,
+	's': charS,
+	't': charT,
+	'u': charU,
+	'v': charV,
+	'w': charW,
+	'x': charX,
+	'y': charY,
+	'z': charZ,
+	'0': char0,
+	'1': char1,
+	'2': char2,
+	'3': char3,
+	'4': char4,
+	'5': char5,
+}
diff --git a/vendor/github.com/richardlehane/msoleps/types/strings.go b/vendor/github.com/richardlehane/msoleps/types/strings.go
index 8b9f461f4..20ec7c01b 100644
--- a/vendor/github.com/richardlehane/msoleps/types/strings.go
+++ b/vendor/github.com/richardlehane/msoleps/types/strings.go
@@ -1,270 +1,270 @@
-// Copyright 2014 Richard Lehane. All rights reserved.
-//
-// Licensed under the Apache License, Version 2.0 (the "License");
-// you may not use this file except in compliance with the License.
-// You may obtain a copy of the License at
-//
-//     http://www.apache.org/licenses/LICENSE-2.0
-//
-// Unless required by applicable law or agreed to in writing, software
-// distributed under the License is distributed on an "AS IS" BASIS,
-// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-// See the License for the specific language governing permissions and
-// limitations under the License.
-
-package types
-
-import (
-	"encoding/binary"
-	"strings"
-	"unicode/utf16"
-)
-
-func nullTerminated(s string) string {
-	return s[:strings.Index(s, "\x00")]
-}
-
-type UnicodeString []uint16
-
-func (s UnicodeString) Type() string {
-	return "UnicodeString"
-}
-
-func (s UnicodeString) Length() int {
-	return 4 + len(s)*2
-}
-
-func (s UnicodeString) String() string {
-	if len(s) == 0 {
-		return ""
-	}
-	return nullTerminated(string(utf16.Decode(s)))
-}
-
-func MakeUnicode(b []byte) (Type, error) {
-	if len(b) < 4 {
-		return UnicodeString{}, ErrType
-	}
-	l := int(binary.LittleEndian.Uint32(b[:4]))
-	if l == 0 {
-		return UnicodeString{}, nil
-	}
-	if len(b) < l*2+4 {
-		return UnicodeString{}, ErrType
-	}
-	s := make(UnicodeString, l)
-	for i := range s {
-		start := i*2 + 4
-		s[i] = binary.LittleEndian.Uint16(b[start : start+2])
-	}
-	return s, nil
-}
-
-type CodeString struct {
-	id    CodePageID
-	Chars []byte
-}
-
-func (s *CodeString) SetId(i CodePageID) {
-	s.id = i
-}
-
-func (s *CodeString) Encoding() string {
-	return CodePageIDs[s.id]
-}
-
-func (s *CodeString) Type() string {
-	return "CodeString"
-}
-
-func (s *CodeString) Length() int {
-	return 4 + len(s.Chars)
-}
-
-func (s *CodeString) String() string {
-	if len(s.Chars) == 0 {
-		return ""
-	}
-	if s.id == 1200 {
-		chars := make([]uint16, len(s.Chars)/2)
-		for i := range chars {
-			chars[i] = binary.LittleEndian.Uint16(s.Chars[i*2 : i*2+2])
-		}
-		return nullTerminated(string(utf16.Decode(chars)))
-	}
-	return nullTerminated(string(s.Chars))
-}
-
-func MakeCodeString(b []byte) (Type, error) {
-	if len(b) < 4 {
-		return &CodeString{}, ErrType
-	}
-	s := &CodeString{}
-	l := int(binary.LittleEndian.Uint32(b[:4]))
-	if l == 0 {
-		return s, nil
-	}
-	if len(b) < l+4 {
-		return s, ErrType
-	}
-	s.Chars = make([]byte, l)
-	copy(s.Chars, b[4:l+4])
-	return s, nil
-}
-
-type CodePageID uint16
-
-var CodePageIDs map[CodePageID]string = map[CodePageID]string{
-	37:    "IBM037 - IBM EBCDIC US-Canada",
-	437:   "IBM437 - OEM United States",
-	500:   "IBM500 - IBM EBCDIC International",
-	708:   "ASMO-708 - Arabic (ASMO 708)",
-	709:   "Arabic (ASMO-449+, BCON V4)",
-	710:   "Arabic - Transparent Arabic",
-	720:   "DOS-720 - Arabic (Transparent ASMO); Arabic (DOS)",
-	737:   "ibm737 - OEM Greek (formerly 437G); Greek (DOS)",
-	775:   "ibm775 - OEM Baltic; Baltic (DOS)",
-	850:   "ibm850 - OEM Multilingual Latin 1; Western European (DOS)",
-	852:   "ibm852 - OEM Latin 2; Central European (DOS)",
-	855:   "IBM855 - OEM Cyrillic (primarily Russian)",
-	857:   "ibm857 - OEM Turkish; Turkish (DOS)",
-	858:   "IBM00858 - OEM Multilingual Latin 1 + Euro symbol",
-	860:   "IBM860 - OEM Portuguese; Portuguese (DOS)",
-	861:   "ibm861 - OEM Icelandic; Icelandic (DOS)",
-	862:   "DOS-862 - OEM Hebrew; Hebrew (DOS)",
-	863:   "IBM863 - OEM French Canadian; French Canadian (DOS)",
-	864:   "IBM864 - OEM Arabic; Arabic (864)",
-	865:   "IBM865 - OEM Nordic; Nordic (DOS)",
-	866:   "cp866 - OEM Russian; Cyrillic (DOS)",
-	869:   "ibm869 - OEM Modern Greek; Greek, Modern (DOS)",
-	870:   "IBM870 - IBM EBCDIC Multilingual/ROECE (Latin 2); IBM EBCDIC Multilingual Latin 2",
-	874:   "windows-874 - ANSI/OEM Thai (ISO 8859-11); Thai (Windows)",
-	875:   "cp875 - IBM EBCDIC Greek Modern",
-	932:   "shift_jis - ANSI/OEM Japanese; Japanese (Shift-JIS)",
-	936:   "gb2312 - ANSI/OEM Simplified Chinese (PRC, Singapore); Chinese Simplified (GB2312)",
-	949:   "ks_c_5601-1987 - ANSI/OEM Korean (Unified Hangul Code)",
-	950:   "big5 - ANSI/OEM Traditional Chinese (Taiwan; Hong Kong SAR, PRC); Chinese Traditional (Big5)",
-	1026:  "IBM1026 - IBM EBCDIC Turkish (Latin 5)",
-	1047:  "IBM01047 - BM EBCDIC Latin 1/Open System",
-	1140:  "IBM01140 - IBM EBCDIC US-Canada (037 + Euro symbol); IBM EBCDIC (US-Canada-Euro)",
-	1141:  "IBM01141 - IBM EBCDIC Germany (20273 + Euro symbol); IBM EBCDIC (Germany-Euro)",
-	1142:  "IBM01142 - IBM EBCDIC Denmark-Norway (20277 + Euro symbol); IBM EBCDIC (Denmark-Norway-Euro)",
-	1143:  "IBM01143 - IBM EBCDIC Finland-Sweden (20278 + Euro symbol); IBM EBCDIC (Finland-Sweden-Euro)",
-	1144:  "IBM01144 - IBM EBCDIC Italy (20280 + Euro symbol); IBM EBCDIC (Italy-Euro)",
-	1145:  "IBM01145 - IBM EBCDIC Latin America-Spain (20284 + Euro symbol); IBM EBCDIC (Spain-Euro)",
-	1146:  "IBM01146 - IBM EBCDIC United Kingdom (20285 + Euro symbol); IBM EBCDIC (UK-Euro)",
-	1147:  "IBM01147 - IBM EBCDIC France (20297 + Euro symbol); IBM EBCDIC (France-Euro)",
-	1148:  "IBM01148 - IBM EBCDIC International (500 + Euro symbol); IBM EBCDIC (International-Euro)",
-	1149:  "IBM01149 - IBM EBCDIC Icelandic (20871 + Euro symbol); IBM EBCDIC (Icelandic-Euro)",
-	1200:  "utf-16 - Unicode UTF-16, little endian byte order (BMP of ISO 10646); available only to managed applications",
-	1201:  "unicodeFFFE - Unicode UTF-16, big endian byte order; available only to managed applications",
-	1250:  "windows-1250 - ANSI Central European; Central European (Windows)",
-	1251:  "windows-1251 - ANSI Cyrillic; Cyrillic (Windows)",
-	1252:  "windows-1252 - ANSI Latin 1; Western European (Windows)",
-	1253:  "windows-1253 - ANSI Greek; Greek (Windows)",
-	1254:  "windows-1254 - ANSI Turkish; Turkish (Windows)",
-	1255:  "windows-1255 - ANSI Hebrew; Hebrew (Windows)",
-	1256:  "windows-1256 - ANSI Arabic; Arabic (Windows)",
-	1257:  "windows-1257 - ANSI Baltic; Baltic (Windows)",
-	1258:  "windows-1258 - ANSI/OEM Vietnamese; Vietnamese (Windows)",
-	1361:  "Johab - Korean (Johab)",
-	10000: "macintosh - MAC Roman; Western European (Mac)",
-	10001: "x-mac-japanese - Japanese (Mac)",
-	10002: "x-mac-chinesetrad - MAC Traditional Chinese (Big5); Chinese Traditional (Mac)",
-	10003: "x-mac-korean - Korean (Mac)",
-	10004: "x-mac-arabic - Arabic (Mac)",
-	10005: "x-mac-hebrew - Hebrew (Mac)",
-	10006: "x-mac-greek - Greek (Mac)",
-	10007: "x-mac-cyrillic - Cyrillic (Mac)",
-	10008: "x-mac-chinesesimp - MAC Simplified Chinese (GB 2312); Chinese Simplified (Mac)",
-	10010: "x-mac-romanian - Romanian (Mac)",
-	10017: "x-mac-ukrainian - Ukrainian (Mac)",
-	10021: "x-mac-thai - Thai (Mac)",
-	10029: "x-mac-ce - MAC Latin 2; Central European (Mac)",
-	10079: "x-mac-icelandic - Icelandic (Mac)",
-	10081: "x-mac-turkish - Turkish (Mac)",
-	10082: "x-mac-croatian - Croatian (Mac)",
-	12000: "utf-32 - Unicode UTF-32, little endian byte order; available only to managed applications",
-	12001: "utf-32BE - Unicode UTF-32, big endian byte order; available only to managed applications",
-	20000: "x-Chinese_CNS - CNS Taiwan; Chinese Traditional (CNS)",
-	20001: "x-cp20001 - TCA Taiwan",
-	20002: "x_Chinese-Eten - Eten Taiwan; Chinese Traditional (Eten)",
-	20003: "x-cp20003 - IBM5550 Taiwan",
-	20004: "x-cp20004 - TeleText Taiwan",
-	20005: "x-cp20005 - Wang Taiwan",
-	20105: "x-IA5 - IA5 (IRV International Alphabet No. 5, 7-bit); Western European (IA5)",
-	20106: "x-IA5-German - IA5 German (7-bit)",
-	20107: "x-IA5-Swedish - IA5 Swedish (7-bit)",
-	20108: "x-IA5-Norwegian - IA5 Norwegian (7-bit)",
-	20127: "us-ascii - US-ASCII (7-bit)",
-	20261: "x-cp20261 - T.61",
-	20269: "x-cp20269 - ISO 6937 Non-Spacing Accent",
-	20273: "IBM273 - IBM EBCDIC Germany",
-	20277: "IBM277 - IBM EBCDIC Denmark-Norway",
-	20278: "IBM278 - IBM EBCDIC Finland-Sweden",
-	20280: "IBM280 - IBM EBCDIC Italy",
-	20284: "IBM284 - IBM EBCDIC Latin America-Spain",
-	20285: "IBM285 - IBM EBCDIC United Kingdom",
-	20290: "IBM290 - IBM EBCDIC Japanese Katakana Extended",
-	20297: "IBM297 - IBM EBCDIC France",
-	20420: "IBM420 - IBM EBCDIC Arabic",
-	20423: "IBM423 - IBM EBCDIC Greek",
-	20424: "IBM424 - IBM EBCDIC Hebrew",
-	20833: "x-EBCDIC-KoreanExtended - IBM EBCDIC Korean Extended",
-	20838: "IBM-Thai - IBM EBCDIC Thai",
-	20866: "koi8-r - Russian (KOI8-R); Cyrillic (KOI8-R)",
-	20871: "IBM871 - IBM EBCDIC Icelandic",
-	20880: "IBM880 - IBM EBCDIC Cyrillic Russian",
-	20905: "IBM905 - IBM EBCDIC Turkish",
-	20924: "IBM00924 - IBM EBCDIC Latin 1/Open System (1047 + Euro symbol)",
-	20932: "EUC-JP - Japanese (JIS 0208-1990 and 0212-1990)",
-	20936: "x-cp20936 - Simplified Chinese (GB2312); Chinese Simplified (GB2312-80)",
-	20949: "x-cp20949 - Korean Wansung",
-	21025: "cp1025 - IBM EBCDIC Cyrillic Serbian-Bulgarian",
-	21027: "(deprecated)",
-	21866: "koi8-u - Ukrainian (KOI8-U); Cyrillic (KOI8-U)",
-	28591: "iso-8859-1 - ISO 8859-1 Latin 1; Western European (ISO)",
-	28592: "iso-8859-2 - ISO 8859-2 Central European; Central European (ISO)",
-	28593: "iso-8859-3 - ISO 8859-3 Latin 3",
-	28594: "iso-8859-4 - ISO 8859-4 Baltic",
-	28595: "iso-8859-5 - ISO 8859-5 Cyrillic",
-	28596: "iso-8859-6 - ISO 8859-6 Arabic",
-	28597: "iso-8859-7 - ISO 8859-7 Greek",
-	28598: "iso-8859-8 - ISO 8859-8 Hebrew; Hebrew (ISO-Visual)",
-	28599: "iso-8859-9 - ISO 8859-9 Turkish",
-	28603: "iso-8859-13 - ISO 8859-13 Estonian",
-	28605: "iso-8859-15 - ISO 8859-15 Latin 9",
-	29001: "x-Europa - Europa 3",
-	38598: "iso-8859-8-i - ISO 8859-8 Hebrew; Hebrew (ISO-Logical)",
-	50220: "iso-2022-jp - ISO 2022 Japanese with no halfwidth Katakana; Japanese (JIS)",
-	50221: "csISO2022JP - ISO 2022 Japanese with halfwidth Katakana; Japanese (JIS-Allow 1 byte Kana)",
-	50222: "iso-2022-jp - ISO 2022 Japanese JIS X 0201-1989; Japanese (JIS-Allow 1 byte Kana - SO/SI)",
-	50225: "iso-2022-kr - ISO 2022 Korean",
-	50227: "x-cp50227 - ISO 2022 Simplified Chinese; Chinese Simplified (ISO 2022)",
-	50229: "ISO 2022 - Traditional Chinese",
-	50930: "EBCDIC - Japanese (Katakana) Extended",
-	50931: "EBCDIC - US-Canada and Japanese",
-	50933: "EBCDIC - Korean Extended and Korean",
-	50935: "EBCDIC - Simplified Chinese Extended and Simplified Chinese",
-	50936: "EBCDIC - Simplified Chinese",
-	50937: "EBCDIC - US-Canada and Traditional Chinese",
-	50939: "EBCDIC - Japanese (Latin) Extended and Japanese",
-	51932: "euc-jp - EUC Japanese",
-	51936: "EUC-CN - EUC Simplified Chinese; Chinese Simplified (EUC)",
-	51949: "euc-kr - EUC Korean",
-	51950: "EUC - Traditional Chinese",
-	52936: "hz-gb-2312 - HZ-GB2312 Simplified Chinese; Chinese Simplified (HZ)",
-	54936: "GB18030 - Windows XP and later: GB18030 Simplified Chinese (4 byte); Chinese Simplified (GB18030)",
-	57002: "x-iscii-de - ISCII Devanagari",
-	57003: "x-iscii-be - ISCII Bengali",
-	57004: "x-iscii-ta - ISCII Tamil",
-	57005: "x-iscii-te - ISCII Telugu",
-	57006: "x-iscii-as - ISCII Assamese",
-	57007: "x-iscii-or - ISCII Oriya",
-	57008: "x-iscii-ka - ISCII Kannada",
-	57009: "x-iscii-ma - ISCII Malayalam",
-	57010: "x-iscii-gu - ISCII Gujarati",
-	57011: "x-iscii-pa - ISCII Punjabi",
-	65000: "utf-7 - Unicode (UTF-7)",
-	65001: "utf-8 - Unicode (UTF-8)",
-}
+// Copyright 2014 Richard Lehane. All rights reserved.
+//
+// Licensed under the Apache License, Version 2.0 (the "License");
+// you may not use this file except in compliance with the License.
+// You may obtain a copy of the License at
+//
+//     http://www.apache.org/licenses/LICENSE-2.0
+//
+// Unless required by applicable law or agreed to in writing, software
+// distributed under the License is distributed on an "AS IS" BASIS,
+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+// See the License for the specific language governing permissions and
+// limitations under the License.
+
+package types
+
+import (
+	"encoding/binary"
+	"strings"
+	"unicode/utf16"
+)
+
+func nullTerminated(s string) string {
+	return s[:strings.Index(s, "\x00")]
+}
+
+type UnicodeString []uint16
+
+func (s UnicodeString) Type() string {
+	return "UnicodeString"
+}
+
+func (s UnicodeString) Length() int {
+	return 4 + len(s)*2
+}
+
+func (s UnicodeString) String() string {
+	if len(s) == 0 {
+		return ""
+	}
+	return nullTerminated(string(utf16.Decode(s)))
+}
+
+func MakeUnicode(b []byte) (Type, error) {
+	if len(b) < 4 {
+		return UnicodeString{}, ErrType
+	}
+	l := int(binary.LittleEndian.Uint32(b[:4]))
+	if l == 0 {
+		return UnicodeString{}, nil
+	}
+	if len(b) < l*2+4 {
+		return UnicodeString{}, ErrType
+	}
+	s := make(UnicodeString, l)
+	for i := range s {
+		start := i*2 + 4
+		s[i] = binary.LittleEndian.Uint16(b[start : start+2])
+	}
+	return s, nil
+}
+
+type CodeString struct {
+	id    CodePageID
+	Chars []byte
+}
+
+func (s *CodeString) SetId(i CodePageID) {
+	s.id = i
+}
+
+func (s *CodeString) Encoding() string {
+	return CodePageIDs[s.id]
+}
+
+func (s *CodeString) Type() string {
+	return "CodeString"
+}
+
+func (s *CodeString) Length() int {
+	return 4 + len(s.Chars)
+}
+
+func (s *CodeString) String() string {
+	if len(s.Chars) == 0 {
+		return ""
+	}
+	if s.id == 1200 {
+		chars := make([]uint16, len(s.Chars)/2)
+		for i := range chars {
+			chars[i] = binary.LittleEndian.Uint16(s.Chars[i*2 : i*2+2])
+		}
+		return nullTerminated(string(utf16.Decode(chars)))
+	}
+	return nullTerminated(string(s.Chars))
+}
+
+func MakeCodeString(b []byte) (Type, error) {
+	if len(b) < 4 {
+		return &CodeString{}, ErrType
+	}
+	s := &CodeString{}
+	l := int(binary.LittleEndian.Uint32(b[:4]))
+	if l == 0 {
+		return s, nil
+	}
+	if len(b) < l+4 {
+		return s, ErrType
+	}
+	s.Chars = make([]byte, l)
+	copy(s.Chars, b[4:l+4])
+	return s, nil
+}
+
+type CodePageID uint16
+
+var CodePageIDs map[CodePageID]string = map[CodePageID]string{
+	37:    "IBM037 - IBM EBCDIC US-Canada",
+	437:   "IBM437 - OEM United States",
+	500:   "IBM500 - IBM EBCDIC International",
+	708:   "ASMO-708 - Arabic (ASMO 708)",
+	709:   "Arabic (ASMO-449+, BCON V4)",
+	710:   "Arabic - Transparent Arabic",
+	720:   "DOS-720 - Arabic (Transparent ASMO); Arabic (DOS)",
+	737:   "ibm737 - OEM Greek (formerly 437G); Greek (DOS)",
+	775:   "ibm775 - OEM Baltic; Baltic (DOS)",
+	850:   "ibm850 - OEM Multilingual Latin 1; Western European (DOS)",
+	852:   "ibm852 - OEM Latin 2; Central European (DOS)",
+	855:   "IBM855 - OEM Cyrillic (primarily Russian)",
+	857:   "ibm857 - OEM Turkish; Turkish (DOS)",
+	858:   "IBM00858 - OEM Multilingual Latin 1 + Euro symbol",
+	860:   "IBM860 - OEM Portuguese; Portuguese (DOS)",
+	861:   "ibm861 - OEM Icelandic; Icelandic (DOS)",
+	862:   "DOS-862 - OEM Hebrew; Hebrew (DOS)",
+	863:   "IBM863 - OEM French Canadian; French Canadian (DOS)",
+	864:   "IBM864 - OEM Arabic; Arabic (864)",
+	865:   "IBM865 - OEM Nordic; Nordic (DOS)",
+	866:   "cp866 - OEM Russian; Cyrillic (DOS)",
+	869:   "ibm869 - OEM Modern Greek; Greek, Modern (DOS)",
+	870:   "IBM870 - IBM EBCDIC Multilingual/ROECE (Latin 2); IBM EBCDIC Multilingual Latin 2",
+	874:   "windows-874 - ANSI/OEM Thai (ISO 8859-11); Thai (Windows)",
+	875:   "cp875 - IBM EBCDIC Greek Modern",
+	932:   "shift_jis - ANSI/OEM Japanese; Japanese (Shift-JIS)",
+	936:   "gb2312 - ANSI/OEM Simplified Chinese (PRC, Singapore); Chinese Simplified (GB2312)",
+	949:   "ks_c_5601-1987 - ANSI/OEM Korean (Unified Hangul Code)",
+	950:   "big5 - ANSI/OEM Traditional Chinese (Taiwan; Hong Kong SAR, PRC); Chinese Traditional (Big5)",
+	1026:  "IBM1026 - IBM EBCDIC Turkish (Latin 5)",
+	1047:  "IBM01047 - BM EBCDIC Latin 1/Open System",
+	1140:  "IBM01140 - IBM EBCDIC US-Canada (037 + Euro symbol); IBM EBCDIC (US-Canada-Euro)",
+	1141:  "IBM01141 - IBM EBCDIC Germany (20273 + Euro symbol); IBM EBCDIC (Germany-Euro)",
+	1142:  "IBM01142 - IBM EBCDIC Denmark-Norway (20277 + Euro symbol); IBM EBCDIC (Denmark-Norway-Euro)",
+	1143:  "IBM01143 - IBM EBCDIC Finland-Sweden (20278 + Euro symbol); IBM EBCDIC (Finland-Sweden-Euro)",
+	1144:  "IBM01144 - IBM EBCDIC Italy (20280 + Euro symbol); IBM EBCDIC (Italy-Euro)",
+	1145:  "IBM01145 - IBM EBCDIC Latin America-Spain (20284 + Euro symbol); IBM EBCDIC (Spain-Euro)",
+	1146:  "IBM01146 - IBM EBCDIC United Kingdom (20285 + Euro symbol); IBM EBCDIC (UK-Euro)",
+	1147:  "IBM01147 - IBM EBCDIC France (20297 + Euro symbol); IBM EBCDIC (France-Euro)",
+	1148:  "IBM01148 - IBM EBCDIC International (500 + Euro symbol); IBM EBCDIC (International-Euro)",
+	1149:  "IBM01149 - IBM EBCDIC Icelandic (20871 + Euro symbol); IBM EBCDIC (Icelandic-Euro)",
+	1200:  "utf-16 - Unicode UTF-16, little endian byte order (BMP of ISO 10646); available only to managed applications",
+	1201:  "unicodeFFFE - Unicode UTF-16, big endian byte order; available only to managed applications",
+	1250:  "windows-1250 - ANSI Central European; Central European (Windows)",
+	1251:  "windows-1251 - ANSI Cyrillic; Cyrillic (Windows)",
+	1252:  "windows-1252 - ANSI Latin 1; Western European (Windows)",
+	1253:  "windows-1253 - ANSI Greek; Greek (Windows)",
+	1254:  "windows-1254 - ANSI Turkish; Turkish (Windows)",
+	1255:  "windows-1255 - ANSI Hebrew; Hebrew (Windows)",
+	1256:  "windows-1256 - ANSI Arabic; Arabic (Windows)",
+	1257:  "windows-1257 - ANSI Baltic; Baltic (Windows)",
+	1258:  "windows-1258 - ANSI/OEM Vietnamese; Vietnamese (Windows)",
+	1361:  "Johab - Korean (Johab)",
+	10000: "macintosh - MAC Roman; Western European (Mac)",
+	10001: "x-mac-japanese - Japanese (Mac)",
+	10002: "x-mac-chinesetrad - MAC Traditional Chinese (Big5); Chinese Traditional (Mac)",
+	10003: "x-mac-korean - Korean (Mac)",
+	10004: "x-mac-arabic - Arabic (Mac)",
+	10005: "x-mac-hebrew - Hebrew (Mac)",
+	10006: "x-mac-greek - Greek (Mac)",
+	10007: "x-mac-cyrillic - Cyrillic (Mac)",
+	10008: "x-mac-chinesesimp - MAC Simplified Chinese (GB 2312); Chinese Simplified (Mac)",
+	10010: "x-mac-romanian - Romanian (Mac)",
+	10017: "x-mac-ukrainian - Ukrainian (Mac)",
+	10021: "x-mac-thai - Thai (Mac)",
+	10029: "x-mac-ce - MAC Latin 2; Central European (Mac)",
+	10079: "x-mac-icelandic - Icelandic (Mac)",
+	10081: "x-mac-turkish - Turkish (Mac)",
+	10082: "x-mac-croatian - Croatian (Mac)",
+	12000: "utf-32 - Unicode UTF-32, little endian byte order; available only to managed applications",
+	12001: "utf-32BE - Unicode UTF-32, big endian byte order; available only to managed applications",
+	20000: "x-Chinese_CNS - CNS Taiwan; Chinese Traditional (CNS)",
+	20001: "x-cp20001 - TCA Taiwan",
+	20002: "x_Chinese-Eten - Eten Taiwan; Chinese Traditional (Eten)",
+	20003: "x-cp20003 - IBM5550 Taiwan",
+	20004: "x-cp20004 - TeleText Taiwan",
+	20005: "x-cp20005 - Wang Taiwan",
+	20105: "x-IA5 - IA5 (IRV International Alphabet No. 5, 7-bit); Western European (IA5)",
+	20106: "x-IA5-German - IA5 German (7-bit)",
+	20107: "x-IA5-Swedish - IA5 Swedish (7-bit)",
+	20108: "x-IA5-Norwegian - IA5 Norwegian (7-bit)",
+	20127: "us-ascii - US-ASCII (7-bit)",
+	20261: "x-cp20261 - T.61",
+	20269: "x-cp20269 - ISO 6937 Non-Spacing Accent",
+	20273: "IBM273 - IBM EBCDIC Germany",
+	20277: "IBM277 - IBM EBCDIC Denmark-Norway",
+	20278: "IBM278 - IBM EBCDIC Finland-Sweden",
+	20280: "IBM280 - IBM EBCDIC Italy",
+	20284: "IBM284 - IBM EBCDIC Latin America-Spain",
+	20285: "IBM285 - IBM EBCDIC United Kingdom",
+	20290: "IBM290 - IBM EBCDIC Japanese Katakana Extended",
+	20297: "IBM297 - IBM EBCDIC France",
+	20420: "IBM420 - IBM EBCDIC Arabic",
+	20423: "IBM423 - IBM EBCDIC Greek",
+	20424: "IBM424 - IBM EBCDIC Hebrew",
+	20833: "x-EBCDIC-KoreanExtended - IBM EBCDIC Korean Extended",
+	20838: "IBM-Thai - IBM EBCDIC Thai",
+	20866: "koi8-r - Russian (KOI8-R); Cyrillic (KOI8-R)",
+	20871: "IBM871 - IBM EBCDIC Icelandic",
+	20880: "IBM880 - IBM EBCDIC Cyrillic Russian",
+	20905: "IBM905 - IBM EBCDIC Turkish",
+	20924: "IBM00924 - IBM EBCDIC Latin 1/Open System (1047 + Euro symbol)",
+	20932: "EUC-JP - Japanese (JIS 0208-1990 and 0212-1990)",
+	20936: "x-cp20936 - Simplified Chinese (GB2312); Chinese Simplified (GB2312-80)",
+	20949: "x-cp20949 - Korean Wansung",
+	21025: "cp1025 - IBM EBCDIC Cyrillic Serbian-Bulgarian",
+	21027: "(deprecated)",
+	21866: "koi8-u - Ukrainian (KOI8-U); Cyrillic (KOI8-U)",
+	28591: "iso-8859-1 - ISO 8859-1 Latin 1; Western European (ISO)",
+	28592: "iso-8859-2 - ISO 8859-2 Central European; Central European (ISO)",
+	28593: "iso-8859-3 - ISO 8859-3 Latin 3",
+	28594: "iso-8859-4 - ISO 8859-4 Baltic",
+	28595: "iso-8859-5 - ISO 8859-5 Cyrillic",
+	28596: "iso-8859-6 - ISO 8859-6 Arabic",
+	28597: "iso-8859-7 - ISO 8859-7 Greek",
+	28598: "iso-8859-8 - ISO 8859-8 Hebrew; Hebrew (ISO-Visual)",
+	28599: "iso-8859-9 - ISO 8859-9 Turkish",
+	28603: "iso-8859-13 - ISO 8859-13 Estonian",
+	28605: "iso-8859-15 - ISO 8859-15 Latin 9",
+	29001: "x-Europa - Europa 3",
+	38598: "iso-8859-8-i - ISO 8859-8 Hebrew; Hebrew (ISO-Logical)",
+	50220: "iso-2022-jp - ISO 2022 Japanese with no halfwidth Katakana; Japanese (JIS)",
+	50221: "csISO2022JP - ISO 2022 Japanese with halfwidth Katakana; Japanese (JIS-Allow 1 byte Kana)",
+	50222: "iso-2022-jp - ISO 2022 Japanese JIS X 0201-1989; Japanese (JIS-Allow 1 byte Kana - SO/SI)",
+	50225: "iso-2022-kr - ISO 2022 Korean",
+	50227: "x-cp50227 - ISO 2022 Simplified Chinese; Chinese Simplified (ISO 2022)",
+	50229: "ISO 2022 - Traditional Chinese",
+	50930: "EBCDIC - Japanese (Katakana) Extended",
+	50931: "EBCDIC - US-Canada and Japanese",
+	50933: "EBCDIC - Korean Extended and Korean",
+	50935: "EBCDIC - Simplified Chinese Extended and Simplified Chinese",
+	50936: "EBCDIC - Simplified Chinese",
+	50937: "EBCDIC - US-Canada and Traditional Chinese",
+	50939: "EBCDIC - Japanese (Latin) Extended and Japanese",
+	51932: "euc-jp - EUC Japanese",
+	51936: "EUC-CN - EUC Simplified Chinese; Chinese Simplified (EUC)",
+	51949: "euc-kr - EUC Korean",
+	51950: "EUC - Traditional Chinese",
+	52936: "hz-gb-2312 - HZ-GB2312 Simplified Chinese; Chinese Simplified (HZ)",
+	54936: "GB18030 - Windows XP and later: GB18030 Simplified Chinese (4 byte); Chinese Simplified (GB18030)",
+	57002: "x-iscii-de - ISCII Devanagari",
+	57003: "x-iscii-be - ISCII Bengali",
+	57004: "x-iscii-ta - ISCII Tamil",
+	57005: "x-iscii-te - ISCII Telugu",
+	57006: "x-iscii-as - ISCII Assamese",
+	57007: "x-iscii-or - ISCII Oriya",
+	57008: "x-iscii-ka - ISCII Kannada",
+	57009: "x-iscii-ma - ISCII Malayalam",
+	57010: "x-iscii-gu - ISCII Gujarati",
+	57011: "x-iscii-pa - ISCII Punjabi",
+	65000: "utf-7 - Unicode (UTF-7)",
+	65001: "utf-8 - Unicode (UTF-8)",
+}
diff --git a/vendor/github.com/richardlehane/msoleps/types/types.go b/vendor/github.com/richardlehane/msoleps/types/types.go
index 62f68ee21..d509be454 100644
--- a/vendor/github.com/richardlehane/msoleps/types/types.go
+++ b/vendor/github.com/richardlehane/msoleps/types/types.go
@@ -1,125 +1,125 @@
-// Copyright 2014 Richard Lehane. All rights reserved.
-//
-// Licensed under the Apache License, Version 2.0 (the "License");
-// you may not use this file except in compliance with the License.
-// You may obtain a copy of the License at
-//
-//     http://www.apache.org/licenses/LICENSE-2.0
-//
-// Unless required by applicable law or agreed to in writing, software
-// distributed under the License is distributed on an "AS IS" BASIS,
-// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-// See the License for the specific language governing permissions and
-// limitations under the License.
-
-package types
-
-import (
-	"encoding/binary"
-	"errors"
-)
-
-// MakeVariant is defined in vectorArray.go. It calls Evaluate, which refers to the MakeTypes map, so must add at runtime
-func init() { MakeTypes[VT_VARIANT] = MakeVariant }
-
-var (
-	ErrType        = errors.New("msoleps: error coercing byte stream to type")
-	ErrUnknownType = errors.New("msoleps: unknown type error")
-)
-
-type Type interface {
-	String() string
-	Type() string
-	Length() int
-}
-
-const (
-	vector uint16 = iota + 1
-	array
-)
-
-func Evaluate(b []byte) (Type, error) {
-	if len(b) < 4 {
-		return I1(0), ErrType
-	}
-	id := TypeID(binary.LittleEndian.Uint16(b[:2]))
-	f, ok := MakeTypes[id]
-	if !ok {
-		return I1(0), ErrUnknownType
-	}
-	switch binary.LittleEndian.Uint16(b[2:4]) {
-	case vector:
-		return MakeVector(f, b[4:])
-	case array:
-		return MakeArray(f, b[4:])
-	}
-	return f(b[4:])
-}
-
-type TypeID uint16
-
-const (
-	VT_EMPTY TypeID = iota // 0x00
-	VT_NULL
-	VT_I2
-	VT_I4
-	VT_R4
-	VT_R8
-	VT_CY
-	VT_DATE
-	VT_BSTR
-	_
-	VT_ERROR
-	VT_BOOL
-	VT_VARIANT
-	_
-	VT_DECIMAL
-	_
-	VT_I1
-	VT_U1
-	VT_UI2
-	VT_UI4
-	VT_I8
-	VT_UI8
-	VT_INT
-	VT_UINT  //0x17
-	_        = iota + 5
-	VT_LPSTR //0x1E
-	VT_LPWSTR
-	VT_FILETIME = iota + 0x25 // 0x40
-	VT_BLOB
-	VT_STREAM
-	VT_STORAGE
-	VT_STREAMED_OBJECT
-	VT_STORED_OBJECT
-	VT_BLOB_OBJECT
-	VT_CF
-	VT_CLSID
-	VT_VERSIONED_STREAM // 0x49
-)
-
-type MakeType func([]byte) (Type, error)
-
-var MakeTypes map[TypeID]MakeType = map[TypeID]MakeType{
-	VT_I2:       MakeI2,
-	VT_I4:       MakeI4,
-	VT_R4:       MakeR4,
-	VT_R8:       MakeR8,
-	VT_CY:       MakeCurrency,
-	VT_DATE:     MakeDate,
-	VT_BSTR:     MakeCodeString,
-	VT_BOOL:     MakeBool,
-	VT_DECIMAL:  MakeDecimal,
-	VT_I1:       MakeI1,
-	VT_U1:       MakeUI1,
-	VT_UI2:      MakeUI2,
-	VT_UI4:      MakeUI4,
-	VT_I8:       MakeI8,
-	VT_UI8:      MakeUI8,
-	VT_INT:      MakeI4,
-	VT_UINT:     MakeUI4,
-	VT_LPSTR:    MakeCodeString,
-	VT_LPWSTR:   MakeUnicode,
-	VT_FILETIME: MakeFileTime,
-	VT_CLSID:    MakeGuid,
-}
+// Copyright 2014 Richard Lehane. All rights reserved.
+//
+// Licensed under the Apache License, Version 2.0 (the "License");
+// you may not use this file except in compliance with the License.
+// You may obtain a copy of the License at
+//
+//     http://www.apache.org/licenses/LICENSE-2.0
+//
+// Unless required by applicable law or agreed to in writing, software
+// distributed under the License is distributed on an "AS IS" BASIS,
+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+// See the License for the specific language governing permissions and
+// limitations under the License.
+
+package types
+
+import (
+	"encoding/binary"
+	"errors"
+)
+
+// MakeVariant is defined in vectorArray.go. It calls Evaluate, which refers to the MakeTypes map, so must add at runtime
+func init() { MakeTypes[VT_VARIANT] = MakeVariant }
+
+var (
+	ErrType        = errors.New("msoleps: error coercing byte stream to type")
+	ErrUnknownType = errors.New("msoleps: unknown type error")
+)
+
+type Type interface {
+	String() string
+	Type() string
+	Length() int
+}
+
+const (
+	vector uint16 = iota + 1
+	array
+)
+
+func Evaluate(b []byte) (Type, error) {
+	if len(b) < 4 {
+		return I1(0), ErrType
+	}
+	id := TypeID(binary.LittleEndian.Uint16(b[:2]))
+	f, ok := MakeTypes[id]
+	if !ok {
+		return I1(0), ErrUnknownType
+	}
+	switch binary.LittleEndian.Uint16(b[2:4]) {
+	case vector:
+		return MakeVector(f, b[4:])
+	case array:
+		return MakeArray(f, b[4:])
+	}
+	return f(b[4:])
+}
+
+type TypeID uint16
+
+const (
+	VT_EMPTY TypeID = iota // 0x00
+	VT_NULL
+	VT_I2
+	VT_I4
+	VT_R4
+	VT_R8
+	VT_CY
+	VT_DATE
+	VT_BSTR
+	_
+	VT_ERROR
+	VT_BOOL
+	VT_VARIANT
+	_
+	VT_DECIMAL
+	_
+	VT_I1
+	VT_U1
+	VT_UI2
+	VT_UI4
+	VT_I8
+	VT_UI8
+	VT_INT
+	VT_UINT  //0x17
+	_        = iota + 5
+	VT_LPSTR //0x1E
+	VT_LPWSTR
+	VT_FILETIME = iota + 0x25 // 0x40
+	VT_BLOB
+	VT_STREAM
+	VT_STORAGE
+	VT_STREAMED_OBJECT
+	VT_STORED_OBJECT
+	VT_BLOB_OBJECT
+	VT_CF
+	VT_CLSID
+	VT_VERSIONED_STREAM // 0x49
+)
+
+type MakeType func([]byte) (Type, error)
+
+var MakeTypes map[TypeID]MakeType = map[TypeID]MakeType{
+	VT_I2:       MakeI2,
+	VT_I4:       MakeI4,
+	VT_R4:       MakeR4,
+	VT_R8:       MakeR8,
+	VT_CY:       MakeCurrency,
+	VT_DATE:     MakeDate,
+	VT_BSTR:     MakeCodeString,
+	VT_BOOL:     MakeBool,
+	VT_DECIMAL:  MakeDecimal,
+	VT_I1:       MakeI1,
+	VT_U1:       MakeUI1,
+	VT_UI2:      MakeUI2,
+	VT_UI4:      MakeUI4,
+	VT_I8:       MakeI8,
+	VT_UI8:      MakeUI8,
+	VT_INT:      MakeI4,
+	VT_UINT:     MakeUI4,
+	VT_LPSTR:    MakeCodeString,
+	VT_LPWSTR:   MakeUnicode,
+	VT_FILETIME: MakeFileTime,
+	VT_CLSID:    MakeGuid,
+}
diff --git a/vendor/github.com/richardlehane/msoleps/types/vectorArray.go b/vendor/github.com/richardlehane/msoleps/types/vectorArray.go
index a2224510e..1c7c2037c 100644
--- a/vendor/github.com/richardlehane/msoleps/types/vectorArray.go
+++ b/vendor/github.com/richardlehane/msoleps/types/vectorArray.go
@@ -1,103 +1,103 @@
-// Copyright 2015 Richard Lehane. All rights reserved.
-//
-// Licensed under the Apache License, Version 2.0 (the "License");
-// you may not use this file except in compliance with the License.
-// You may obtain a copy of the License at
-//
-//     http://www.apache.org/licenses/LICENSE-2.0
-//
-// Unless required by applicable law or agreed to in writing, software
-// distributed under the License is distributed on an "AS IS" BASIS,
-// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-// See the License for the specific language governing permissions and
-// limitations under the License.
-
-package types
-
-import (
-	"encoding/binary"
-)
-
-type Vector []Type
-
-func (v Vector) String() string {
-	return ""
-}
-
-func (v Vector) Type() string {
-	if len(v) > 0 {
-		return "Vector of " + v[0].Type()
-	}
-	return "Vector (empty)"
-}
-
-func (v Vector) Length() int {
-	ret := 4
-	for _, t := range v {
-		ret += t.Length()
-	}
-	return ret
-}
-
-func MakeVector(f MakeType, b []byte) (Type, error) {
-	if len(b) < 4 {
-		return Vector{}, ErrType
-	}
-	l := int(binary.LittleEndian.Uint32(b[:4]))
-	v := make(Vector, l)
-	place := 4
-	for i := 0; i < l; i++ {
-		t, err := f(b[place:])
-		if err != nil {
-			return Vector{}, ErrType
-		}
-		v[i] = t
-		place += t.Length()
-	}
-	return v, nil
-}
-
-type Array [][]Type
-
-func (a Array) String() string {
-	return ""
-}
-
-func (a Array) Type() string {
-	if len(a) > 0 && len(a[0]) > 0 {
-		return "Array of " + a[0][0].Type()
-	}
-	return "Array (empty)"
-}
-
-func (a Array) Length() int {
-	return 0
-}
-
-func MakeArray(f MakeType, b []byte) (Type, error) {
-	return Array{}, nil
-}
-
-type Variant struct {
-	t Type
-}
-
-func (v Variant) String() string {
-	return "Typed Property Value containing " + v.t.String()
-}
-
-func (v Variant) Type() string {
-	return "Typed Property Value containing " + v.t.Type()
-}
-
-func (v Variant) Length() int {
-	return 4 + v.t.Length()
-}
-
-func MakeVariant(b []byte) (Type, error) {
-	t, err := Evaluate(b)
-	if err != nil {
-		return Variant{}, err
-	}
-	return Variant{t}, nil
-}
+// Copyright 2015 Richard Lehane. All rights reserved.
+//
+// Licensed under the Apache License, Version 2.0 (the "License");
+// you may not use this file except in compliance with the License.
+// You may obtain a copy of the License at
+//
+//     http://www.apache.org/licenses/LICENSE-2.0
+//
+// Unless required by applicable law or agreed to in writing, software
+// distributed under the License is distributed on an "AS IS" BASIS,
+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+// See the License for the specific language governing permissions and
+// limitations under the License.
+
+package types
+
+import (
+	"encoding/binary"
+)
+
+type Vector []Type
+
+func (v Vector) String() string {
+	return ""
+}
+
+func (v Vector) Type() string {
+	if len(v) > 0 {
+		return "Vector of " + v[0].Type()
+	}
+	return "Vector (empty)"
+}
+
+func (v Vector) Length() int {
+	ret := 4
+	for _, t := range v {
+		ret += t.Length()
+	}
+	return ret
+}
+
+func MakeVector(f MakeType, b []byte) (Type, error) {
+	if len(b) < 4 {
+		return Vector{}, ErrType
+	}
+	l := int(binary.LittleEndian.Uint32(b[:4]))
+	v := make(Vector, l)
+	place := 4
+	for i := 0; i < l; i++ {
+		t, err := f(b[place:])
+		if err != nil {
+			return Vector{}, ErrType
+		}
+		v[i] = t
+		place += t.Length()
+	}
+	return v, nil
+}
+
+type Array [][]Type
+
+func (a Array) String() string {
+	return ""
+}
+
+func (a Array) Type() string {
+	if len(a) > 0 && len(a[0]) > 0 {
+		return "Array of " + a[0][0].Type()
+	}
+	return "Array (empty)"
+}
+
+func (a Array) Length() int {
+	return 0
+}
+
+func MakeArray(f MakeType, b []byte) (Type, error) {
+	return Array{}, nil
+}
+
+type Variant struct {
+	t Type
+}
+
+func (v Variant) String() string {
+	return "Typed Property Value containing " + v.t.String()
+}
+
+func (v Variant) Type() string {
+	return "Typed Property Value containing " + v.t.Type()
+}
+
+func (v Variant) Length() int {
+	return 4 + v.t.Length()
+}
+
+func MakeVariant(b []byte) (Type, error) {
+	t, err := Evaluate(b)
+	if err != nil {
+		return Variant{}, err
+	}
+	return Variant{t}, nil
+}
diff --git a/vendor/github.com/spf13/cobra/projects_using_cobra.md b/vendor/github.com/spf13/cobra/projects_using_cobra.md
index 8410c9938..d98a71e36 100644
--- a/vendor/github.com/spf13/cobra/projects_using_cobra.md
+++ b/vendor/github.com/spf13/cobra/projects_using_cobra.md
@@ -4,7 +4,6 @@
 - [Bleve](http://www.blevesearch.com/)
 - [CockroachDB](http://www.cockroachlabs.com/)
 - [Cosmos SDK](https://github.com/cosmos/cosmos-sdk)
-- [Datree](https://github.com/datreeio/datree)
 - [Delve](https://github.com/derekparker/delve)
 - [Docker (distribution)](https://github.com/docker/distribution)
 - [Etcd](https://etcd.io/)
@@ -15,36 +14,25 @@
 - [GitHub Labeler](https://github.com/erdaltsksn/gh-label)
 - [Golangci-lint](https://golangci-lint.run)
 - [GopherJS](http://www.gopherjs.org/)
-- [GoReleaser](https://goreleaser.com)
 - [Helm](https://helm.sh)
 - [Hugo](https://gohugo.io)
-- [Infracost](https://github.com/infracost/infracost)
 - [Istio](https://istio.io)
 - [Kool](https://github.com/kool-dev/kool)
 - [Kubernetes](http://kubernetes.io/)
 - [Linkerd](https://linkerd.io/)
 - [Mattermost-server](https://github.com/mattermost/mattermost-server)
-- [Mercure](https://mercure.rocks/)
-- [Meroxa CLI](https://github.com/meroxa/cli)
 - [Metal Stack CLI](https://github.com/metal-stack/metalctl)
 - [Moby (former Docker)](https://github.com/moby/moby)
-- [Moldy](https://github.com/Moldy-Community/moldy)
-- [Multi-gitter](https://github.com/lindell/multi-gitter)
 - [Nanobox](https://github.com/nanobox-io/nanobox)/[Nanopack](https://github.com/nanopack)
-- [nFPM](https://nfpm.goreleaser.com)
 - [OpenShift](https://www.openshift.com/)
 - [Ory Hydra](https://github.com/ory/hydra)
 - [Ory Kratos](https://github.com/ory/kratos)
 - [Pouch](https://github.com/alibaba/pouch)
 - [ProjectAtomic (enterprise)](http://www.projectatomic.io/)
 - [Prototool](https://github.com/uber/prototool)
-- [QRcp](https://github.com/claudiodangelis/qrcp)
 - [Random](https://github.com/erdaltsksn/random)
 - [Rclone](https://rclone.org/)
-- [Scaleway CLI](https://github.com/scaleway/scaleway-cli)
 - [Skaffold](https://skaffold.dev/)
 - [Tendermint](https://github.com/tendermint/tendermint)
 - [Twitch CLI](https://github.com/twitchdev/twitch-cli)
-- [UpCloud CLI (`upctl`)](https://github.com/UpCloudLtd/upcloud-cli)
-- VMware's [Tanzu Community Edition](https://github.com/vmware-tanzu/community-edition) & [Tanzu Framework](https://github.com/vmware-tanzu/tanzu-framework)
 - [Werf](https://werf.io/)
diff --git a/web/context.go b/web/context.go
index 4adc4f95d..e5fbae49a 100644
--- a/web/context.go
+++ b/web/context.go
@@ -9,13 +9,13 @@ import (
 	"regexp"
 	"strings"
 
-	"github.com/mattermost/mattermost-server/v6/app"
-	"github.com/mattermost/mattermost-server/v6/app/request"
-	"github.com/mattermost/mattermost-server/v6/audit"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/i18n"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
-	"github.com/mattermost/mattermost-server/v6/utils"
+	"github.com/cjdelisle/matterfoss-server/v6/app"
+	"github.com/cjdelisle/matterfoss-server/v6/app/request"
+	"github.com/cjdelisle/matterfoss-server/v6/audit"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/i18n"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/utils"
 )
 
 type Context struct {
diff --git a/web/context_test.go b/web/context_test.go
index 9cb71cf0b..f1bcb8214 100644
--- a/web/context_test.go
+++ b/web/context_test.go
@@ -11,10 +11,10 @@ import (
 	"github.com/stretchr/testify/assert"
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/app/request"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/plugin/plugintest/mock"
-	"github.com/mattermost/mattermost-server/v6/store/storetest/mocks"
+	"github.com/cjdelisle/matterfoss-server/v6/app/request"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/plugin/plugintest/mock"
+	"github.com/cjdelisle/matterfoss-server/v6/store/storetest/mocks"
 )
 
 func TestRequireHookId(t *testing.T) {
diff --git a/web/handlers.go b/web/handlers.go
index 8602bf9d3..31df90a1a 100644
--- a/web/handlers.go
+++ b/web/handlers.go
@@ -19,15 +19,15 @@ import (
 	"github.com/opentracing/opentracing-go/ext"
 	spanlog "github.com/opentracing/opentracing-go/log"
 
-	"github.com/mattermost/mattermost-server/v6/app"
-	app_opentracing "github.com/mattermost/mattermost-server/v6/app/opentracing"
-	"github.com/mattermost/mattermost-server/v6/app/request"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/services/tracing"
-	"github.com/mattermost/mattermost-server/v6/shared/i18n"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
-	"github.com/mattermost/mattermost-server/v6/store/opentracinglayer"
-	"github.com/mattermost/mattermost-server/v6/utils"
+	"github.com/cjdelisle/matterfoss-server/v6/app"
+	app_opentracing "github.com/cjdelisle/matterfoss-server/v6/app/opentracing"
+	"github.com/cjdelisle/matterfoss-server/v6/app/request"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/services/tracing"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/i18n"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/store/opentracinglayer"
+	"github.com/cjdelisle/matterfoss-server/v6/utils"
 )
 
 func GetHandlerName(h func(*Context, http.ResponseWriter, *http.Request)) string {
diff --git a/web/handlers_test.go b/web/handlers_test.go
index 5ae26292c..9fe8af0e7 100644
--- a/web/handlers_test.go
+++ b/web/handlers_test.go
@@ -11,11 +11,11 @@ import (
 	"github.com/stretchr/testify/assert"
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/app"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/plugin/plugintest/mock"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
-	"github.com/mattermost/mattermost-server/v6/store/storetest/mocks"
+	"github.com/cjdelisle/matterfoss-server/v6/app"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/plugin/plugintest/mock"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/store/storetest/mocks"
 )
 
 func handlerForHTTPErrors(c *Context, w http.ResponseWriter, r *http.Request) {
diff --git a/web/main_test.go b/web/main_test.go
index 1099e210a..ce04abb6d 100644
--- a/web/main_test.go
+++ b/web/main_test.go
@@ -6,7 +6,7 @@ package web
 import (
 	"testing"
 
-	"github.com/mattermost/mattermost-server/v6/testlib"
+	"github.com/cjdelisle/matterfoss-server/v6/testlib"
 )
 
 var mainHelper *testlib.MainHelper
diff --git a/web/oauth.go b/web/oauth.go
index bee17266b..b2f2b0c66 100644
--- a/web/oauth.go
+++ b/web/oauth.go
@@ -11,13 +11,13 @@ import (
 	"path/filepath"
 	"strings"
 
-	"github.com/mattermost/mattermost-server/v6/app"
-	"github.com/mattermost/mattermost-server/v6/audit"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/i18n"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
-	"github.com/mattermost/mattermost-server/v6/utils"
-	"github.com/mattermost/mattermost-server/v6/utils/fileutils"
+	"github.com/cjdelisle/matterfoss-server/v6/app"
+	"github.com/cjdelisle/matterfoss-server/v6/audit"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/i18n"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/utils"
+	"github.com/cjdelisle/matterfoss-server/v6/utils/fileutils"
 )
 
 func (w *Web) InitOAuth() {
diff --git a/web/oauth_test.go b/web/oauth_test.go
index d3cacf438..b60b0e330 100644
--- a/web/oauth_test.go
+++ b/web/oauth_test.go
@@ -18,12 +18,12 @@ import (
 	"github.com/stretchr/testify/assert"
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/app/request"
-	"github.com/mattermost/mattermost-server/v6/einterfaces"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/i18n"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
-	"github.com/mattermost/mattermost-server/v6/utils"
+	"github.com/cjdelisle/matterfoss-server/v6/app/request"
+	"github.com/cjdelisle/matterfoss-server/v6/einterfaces"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/i18n"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/utils"
 )
 
 func TestOAuthComplete_AccessDenied(t *testing.T) {
diff --git a/web/params.go b/web/params.go
index c67b02e98..83d8a9cae 100644
--- a/web/params.go
+++ b/web/params.go
@@ -11,7 +11,7 @@ import (
 
 	"github.com/gorilla/mux"
 
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 const (
diff --git a/web/saml.go b/web/saml.go
index ba4d11634..e628f517c 100644
--- a/web/saml.go
+++ b/web/saml.go
@@ -10,10 +10,10 @@ import (
 	"strconv"
 	"strings"
 
-	"github.com/mattermost/mattermost-server/v6/audit"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
-	"github.com/mattermost/mattermost-server/v6/utils"
+	"github.com/cjdelisle/matterfoss-server/v6/audit"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/utils"
 )
 
 const maxSAMLResponseSize = 2 * 1024 * 1024 // 2MB
diff --git a/web/static.go b/web/static.go
index d35496221..a352d194d 100644
--- a/web/static.go
+++ b/web/static.go
@@ -11,11 +11,11 @@ import (
 
 	"github.com/mattermost/gziphandler"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
-	"github.com/mattermost/mattermost-server/v6/shared/templates"
-	"github.com/mattermost/mattermost-server/v6/utils"
-	"github.com/mattermost/mattermost-server/v6/utils/fileutils"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/templates"
+	"github.com/cjdelisle/matterfoss-server/v6/utils"
+	"github.com/cjdelisle/matterfoss-server/v6/utils/fileutils"
 )
 
 var robotsTxt = []byte("User-agent: *\nDisallow: /\n")
diff --git a/web/unsupported_browser.go b/web/unsupported_browser.go
index c0a7f4104..24d5a6560 100644
--- a/web/unsupported_browser.go
+++ b/web/unsupported_browser.go
@@ -8,8 +8,8 @@ import (
 
 	"github.com/avct/uasurfer"
 
-	"github.com/mattermost/mattermost-server/v6/app/request"
-	"github.com/mattermost/mattermost-server/v6/shared/templates"
+	"github.com/cjdelisle/matterfoss-server/v6/app/request"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/templates"
 )
 
 // MattermostApp describes downloads for the Mattermost App
diff --git a/web/web.go b/web/web.go
index d58bf0abe..3139a596b 100644
--- a/web/web.go
+++ b/web/web.go
@@ -11,10 +11,10 @@ import (
 	"github.com/avct/uasurfer"
 	"github.com/gorilla/mux"
 
-	"github.com/mattermost/mattermost-server/v6/app"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
-	"github.com/mattermost/mattermost-server/v6/utils"
+	"github.com/cjdelisle/matterfoss-server/v6/app"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/utils"
 )
 
 type Web struct {
diff --git a/web/web_test.go b/web/web_test.go
index 87cc3ec51..e720943f8 100644
--- a/web/web_test.go
+++ b/web/web_test.go
@@ -16,15 +16,15 @@ import (
 	"github.com/stretchr/testify/assert"
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/app"
-	"github.com/mattermost/mattermost-server/v6/app/request"
-	"github.com/mattermost/mattermost-server/v6/config"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/plugin"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
-	"github.com/mattermost/mattermost-server/v6/store/localcachelayer"
-	"github.com/mattermost/mattermost-server/v6/store/storetest/mocks"
-	"github.com/mattermost/mattermost-server/v6/utils"
+	"github.com/cjdelisle/matterfoss-server/v6/app"
+	"github.com/cjdelisle/matterfoss-server/v6/app/request"
+	"github.com/cjdelisle/matterfoss-server/v6/config"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/plugin"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/store/localcachelayer"
+	"github.com/cjdelisle/matterfoss-server/v6/store/storetest/mocks"
+	"github.com/cjdelisle/matterfoss-server/v6/utils"
 )
 
 var apiClient *model.Client4
@@ -202,7 +202,7 @@ func TestStaticFilesRequest(t *testing.T) {
 	package main
 
 	import (
-		"github.com/mattermost/mattermost-server/v6/plugin"
+		"github.com/cjdelisle/matterfoss-server/v6/plugin"
 	)
 
 	type MyPlugin struct {
@@ -289,7 +289,7 @@ func TestPublicFilesRequest(t *testing.T) {
 	package main
 
 	import (
-		"github.com/mattermost/mattermost-server/v6/plugin"
+		"github.com/cjdelisle/matterfoss-server/v6/plugin"
 	)
 
 	type MyPlugin struct {
diff --git a/web/webhook.go b/web/webhook.go
index be3822e7f..bbb3b528f 100644
--- a/web/webhook.go
+++ b/web/webhook.go
@@ -13,8 +13,8 @@ import (
 	"github.com/gorilla/mux"
 	"github.com/gorilla/schema"
 
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
 )
 
 func (w *Web) InitWebhooks() {
diff --git a/web/webhook_test.go b/web/webhook_test.go
index e0cd792c1..a573187c2 100644
--- a/web/webhook_test.go
+++ b/web/webhook_test.go
@@ -13,7 +13,7 @@ import (
 	"github.com/stretchr/testify/assert"
 	"github.com/stretchr/testify/require"
 
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 func TestIncomingWebhook(t *testing.T) {
diff --git a/wsapi/api.go b/wsapi/api.go
index 98efd8484..f86800660 100644
--- a/wsapi/api.go
+++ b/wsapi/api.go
@@ -4,7 +4,7 @@
 package wsapi
 
 import (
-	"github.com/mattermost/mattermost-server/v6/app"
+	"github.com/cjdelisle/matterfoss-server/v6/app"
 )
 
 type API struct {
diff --git a/wsapi/status.go b/wsapi/status.go
index 49c9fa887..c565aed36 100644
--- a/wsapi/status.go
+++ b/wsapi/status.go
@@ -4,8 +4,8 @@
 package wsapi
 
 import (
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
 )
 
 func (api *API) InitStatus() {
diff --git a/wsapi/system.go b/wsapi/system.go
index 274836ed3..75e929a51 100644
--- a/wsapi/system.go
+++ b/wsapi/system.go
@@ -4,7 +4,7 @@
 package wsapi
 
 import (
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 func (api *API) InitSystem() {
diff --git a/wsapi/user.go b/wsapi/user.go
index 245f8bef3..65577e1e1 100644
--- a/wsapi/user.go
+++ b/wsapi/user.go
@@ -4,7 +4,7 @@
 package wsapi
 
 import (
-	"github.com/mattermost/mattermost-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
 )
 
 func (api *API) InitUser() {
diff --git a/wsapi/websocket_handler.go b/wsapi/websocket_handler.go
index 9f25325f0..981908423 100644
--- a/wsapi/websocket_handler.go
+++ b/wsapi/websocket_handler.go
@@ -6,10 +6,10 @@ package wsapi
 import (
 	"net/http"
 
-	"github.com/mattermost/mattermost-server/v6/app"
-	"github.com/mattermost/mattermost-server/v6/model"
-	"github.com/mattermost/mattermost-server/v6/shared/i18n"
-	"github.com/mattermost/mattermost-server/v6/shared/mlog"
+	"github.com/cjdelisle/matterfoss-server/v6/app"
+	"github.com/cjdelisle/matterfoss-server/v6/model"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/i18n"
+	"github.com/cjdelisle/matterfoss-server/v6/shared/mlog"
 )
 
 func (api *API) APIWebSocketHandler(wh func(*model.WebSocketRequest) (map[string]interface{}, *model.AppError)) webSocketHandler {
